[{"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\index.js":"1","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\App.js":"2","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\reportWebVitals.js":"3","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\store.js":"5","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\History.js":"6","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Routing.js":"7","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\TemplateFunctions.js":"8","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\GuestListFunctions.js":"9","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js":"10","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\ReducerCombiner.js":"11","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Home\\Home.js":"12","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddEventSucess.js":"13","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddEvent.js":"14","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Feed.js":"15","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Comments\\Coments.js":"16","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowSchedule.js":"17","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowStory.js":"18","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\hoxinvitation.js":"19","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowAlbum.js":"20","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\RSVP\\Rsvp.js":"21","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\jitsi\\Jitsivc.js":"22","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Location Offline\\LocationOffline.js":"23","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Guest\\Guest.js":"24","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Guest\\ManageGuest.js":"25","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Sidebar\\SidebarMore.js":"26","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Sidebar\\AdminSidebar.js":"27","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Admin\\EventAdmin.js":"28","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\EditEvent\\EditEvent.js":"29","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Gift\\Gift.js":"30","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\EventCreateAndUpdate\\CreateOrUpdate.js":"31","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\Chat.js":"32","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitaionviewToggler.js":"33","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\HomePage.js":"34","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js":"35","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js":"36","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Config.js":"37","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js":"38","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\postfunctions.js":"39","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js":"40","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\CreateEventFormReducer.js":"41","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\NotificatonReducer.js":"42","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\ChatReducer.js":"43","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\CodeEventReducer.js":"44","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\GuestListReducer.js":"45","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\TemplatesReducer.js":"46","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\AuthReducer.js":"47","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\EventReducer.js":"48","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\Invitation.js":"49","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\GuestActions.js":"50","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\EventActions.js":"51","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\TemplateActions.js":"52","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Gift\\GiftBanner.js":"53","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\FileUpload_Download.js":"54","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Events\\Eventlist.js":"55","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\ChatWidget.js":"56","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\CompanySlide.js":"57","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js":"58","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\AboutBanner.js":"59","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\FootMenu\\FootMenu.js":"60","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Header\\Header.js":"61","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\NavMobile\\NavMobile.js":"62","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Places.js":"63","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Additionals.js":"64","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Features.js":"65","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Testimonials.js":"66","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\MainBanner.js":"67","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Footer.js":"68","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\ContactUs.js":"69","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js":"70","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js":"71","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\Chatbox.js":"72","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\List.js":"73","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\NotificationAction.js":"74","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\CodeAction.js":"75","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\PostActions.js":"76","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\ChatActions.js":"77","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\UserPorfile\\UserProfile.js":"78","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Notifications\\Notification.js":"79","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\DateFormatter\\Dateformatter.js":"80","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Popups\\Popup.js":"81","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\MobileHeader\\MobileHeader.js":"82","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Headings.js":"83","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Firebase.js":"84","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Auth\\LoginSignup.js":"85","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js":"86","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js":"87","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\SelectParticipant.js":"88","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\timer\\timer.js":"89","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Login.js":"90","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\AuthActions.js":"91","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\Addtoalbum.js":"92","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\AddStory.js":"93","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\AddPost.js":"94","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Posts.js":"95","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\AddTags.js":"96","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Media.js":"97","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Schedule.js":"98","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js":"99","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Plan\\Plan.js":"100","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js":"101","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js":"102","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js":"103","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Stepper\\Stepper.js":"104","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserData.js":"105","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\FeedComments.js":"106","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js":"107","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js":"108","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js":"109","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Maps.js":"110","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js":"111","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CanvasEditor.js":"112"},{"size":914,"mtime":1632801381845,"results":"113","hashOfConfig":"114"},{"size":8819,"mtime":1632803545213,"results":"115","hashOfConfig":"114"},{"size":377,"mtime":1632801381847,"results":"116","hashOfConfig":"114"},{"size":5201,"mtime":1632801381848,"results":"117","hashOfConfig":"114"},{"size":368,"mtime":1632801381840,"results":"118","hashOfConfig":"114"},{"size":87,"mtime":1632801381842,"results":"119","hashOfConfig":"114"},{"size":1662,"mtime":1632801381844,"results":"120","hashOfConfig":"114"},{"size":672,"mtime":1632801466067,"results":"121","hashOfConfig":"114"},{"size":706,"mtime":1632801466067,"results":"122","hashOfConfig":"114"},{"size":9299,"mtime":1632801381835,"results":"123","hashOfConfig":"114"},{"size":681,"mtime":1632801466067,"results":"124","hashOfConfig":"114"},{"size":2127,"mtime":1632801466065,"results":"125","hashOfConfig":"114"},{"size":7539,"mtime":1632809728221,"results":"126","hashOfConfig":"114"},{"size":9845,"mtime":1632801466030,"results":"127","hashOfConfig":"114"},{"size":12134,"mtime":1632801466046,"results":"128","hashOfConfig":"114"},{"size":7665,"mtime":1632839518783,"results":"129","hashOfConfig":"114"},{"size":2828,"mtime":1632801466067,"results":"130","hashOfConfig":"114"},{"size":4040,"mtime":1632801466067,"results":"131","hashOfConfig":"114"},{"size":10530,"mtime":1632801466067,"results":"132","hashOfConfig":"114"},{"size":8570,"mtime":1632801466067,"results":"133","hashOfConfig":"114"},{"size":6277,"mtime":1632801466067,"results":"134","hashOfConfig":"114"},{"size":647,"mtime":1632801466067,"results":"135","hashOfConfig":"114"},{"size":9358,"mtime":1632837782789,"results":"136","hashOfConfig":"114"},{"size":13510,"mtime":1632801466046,"results":"137","hashOfConfig":"114"},{"size":13195,"mtime":1632801466046,"results":"138","hashOfConfig":"114"},{"size":8821,"mtime":1632801466067,"results":"139","hashOfConfig":"114"},{"size":2227,"mtime":1632801466067,"results":"140","hashOfConfig":"114"},{"size":8532,"mtime":1632801466046,"results":"141","hashOfConfig":"114"},{"size":26881,"mtime":1632801466046,"results":"142","hashOfConfig":"114"},{"size":6078,"mtime":1632802453915,"results":"143","hashOfConfig":"114"},{"size":337,"mtime":1632801466046,"results":"144","hashOfConfig":"114"},{"size":6755,"mtime":1632801381374,"results":"145","hashOfConfig":"114"},{"size":2998,"mtime":1632801381405,"results":"146","hashOfConfig":"114"},{"size":778,"mtime":1632801381389,"results":"147","hashOfConfig":"114"},{"size":4246,"mtime":1632801381833,"results":"148","hashOfConfig":"114"},{"size":428,"mtime":1632801381835,"results":"149","hashOfConfig":"114"},{"size":506,"mtime":1632801466067,"results":"150","hashOfConfig":"114"},{"size":478,"mtime":1632801381834,"results":"151","hashOfConfig":"114"},{"size":2628,"mtime":1632801381836,"results":"152","hashOfConfig":"114"},{"size":1149,"mtime":1632801381833,"results":"153","hashOfConfig":"114"},{"size":509,"mtime":1632801381837,"results":"154","hashOfConfig":"114"},{"size":270,"mtime":1632801381838,"results":"155","hashOfConfig":"114"},{"size":698,"mtime":1632801381837,"results":"156","hashOfConfig":"114"},{"size":403,"mtime":1632801381837,"results":"157","hashOfConfig":"114"},{"size":689,"mtime":1632801466067,"results":"158","hashOfConfig":"114"},{"size":692,"mtime":1632801466067,"results":"159","hashOfConfig":"114"},{"size":2246,"mtime":1632801381836,"results":"160","hashOfConfig":"114"},{"size":2901,"mtime":1632801381838,"results":"161","hashOfConfig":"114"},{"size":5139,"mtime":1632801466067,"results":"162","hashOfConfig":"114"},{"size":35,"mtime":1632801466067,"results":"163","hashOfConfig":"114"},{"size":348,"mtime":1632801381831,"results":"164","hashOfConfig":"114"},{"size":41,"mtime":1632801466067,"results":"165","hashOfConfig":"114"},{"size":1031,"mtime":1632801986594,"results":"166","hashOfConfig":"114"},{"size":1761,"mtime":1632801381841,"results":"167","hashOfConfig":"114"},{"size":3307,"mtime":1632801466046,"results":"168","hashOfConfig":"114"},{"size":402,"mtime":1632801381389,"results":"169","hashOfConfig":"114"},{"size":1925,"mtime":1632801381389,"results":"170","hashOfConfig":"114"},{"size":1194,"mtime":1632801466030,"results":"171","hashOfConfig":"114"},{"size":2595,"mtime":1632801381389,"results":"172","hashOfConfig":"114"},{"size":2986,"mtime":1632801466046,"results":"173","hashOfConfig":"114"},{"size":7046,"mtime":1632801466046,"results":"174","hashOfConfig":"114"},{"size":4048,"mtime":1632801466062,"results":"175","hashOfConfig":"114"},{"size":2638,"mtime":1632801381389,"results":"176","hashOfConfig":"114"},{"size":5220,"mtime":1632801381389,"results":"177","hashOfConfig":"114"},{"size":2748,"mtime":1632801381389,"results":"178","hashOfConfig":"114"},{"size":6086,"mtime":1632801381389,"results":"179","hashOfConfig":"114"},{"size":7818,"mtime":1632801466065,"results":"180","hashOfConfig":"114"},{"size":1738,"mtime":1632801381389,"results":"181","hashOfConfig":"114"},{"size":3273,"mtime":1632801381389,"results":"182","hashOfConfig":"114"},{"size":3469,"mtime":1632801466067,"results":"183","hashOfConfig":"114"},{"size":15357,"mtime":1632838873141,"results":"184","hashOfConfig":"114"},{"size":9014,"mtime":1632801381374,"results":"185","hashOfConfig":"114"},{"size":6786,"mtime":1632801381374,"results":"186","hashOfConfig":"114"},{"size":53,"mtime":1632801381832,"results":"187","hashOfConfig":"114"},{"size":98,"mtime":1632801381831,"results":"188","hashOfConfig":"114"},{"size":35,"mtime":1632801381833,"results":"189","hashOfConfig":"114"},{"size":116,"mtime":1632801381831,"results":"190","hashOfConfig":"114"},{"size":5567,"mtime":1632837890888,"results":"191","hashOfConfig":"114"},{"size":1826,"mtime":1632801466067,"results":"192","hashOfConfig":"114"},{"size":1038,"mtime":1632801381374,"results":"193","hashOfConfig":"114"},{"size":1291,"mtime":1632801381389,"results":"194","hashOfConfig":"114"},{"size":1092,"mtime":1632801466061,"results":"195","hashOfConfig":"114"},{"size":698,"mtime":1632801381842,"results":"196","hashOfConfig":"114"},{"size":430,"mtime":1632801381389,"results":"197","hashOfConfig":"114"},{"size":5127,"mtime":1632801381358,"results":"198","hashOfConfig":"114"},{"size":5003,"mtime":1632801466046,"results":"199","hashOfConfig":"114"},{"size":1636,"mtime":1632839723786,"results":"200","hashOfConfig":"114"},{"size":6812,"mtime":1632801381374,"results":"201","hashOfConfig":"114"},{"size":560,"mtime":1632801466064,"results":"202","hashOfConfig":"114"},{"size":316,"mtime":1632801381843,"results":"203","hashOfConfig":"114"},{"size":271,"mtime":1632801381830,"results":"204","hashOfConfig":"114"},{"size":6289,"mtime":1632801466067,"results":"205","hashOfConfig":"114"},{"size":16352,"mtime":1632839945769,"results":"206","hashOfConfig":"114"},{"size":5632,"mtime":1632801466046,"results":"207","hashOfConfig":"114"},{"size":8806,"mtime":1632801466046,"results":"208","hashOfConfig":"114"},{"size":2821,"mtime":1632801466046,"results":"209","hashOfConfig":"114"},{"size":3473,"mtime":1632801466046,"results":"210","hashOfConfig":"114"},{"size":16073,"mtime":1632839993496,"results":"211","hashOfConfig":"114"},{"size":5494,"mtime":1632801466030,"results":"212","hashOfConfig":"114"},{"size":4542,"mtime":1632811652447,"results":"213","hashOfConfig":"114"},{"size":12793,"mtime":1632838654125,"results":"214","hashOfConfig":"114"},{"size":1172,"mtime":1632801381374,"results":"215","hashOfConfig":"114"},{"size":1050,"mtime":1632801381374,"results":"216","hashOfConfig":"114"},{"size":1702,"mtime":1632801381358,"results":"217","hashOfConfig":"114"},{"size":1510,"mtime":1632801466063,"results":"218","hashOfConfig":"114"},{"size":3060,"mtime":1632801466046,"results":"219","hashOfConfig":"114"},{"size":23819,"mtime":1632838799903,"results":"220","hashOfConfig":"114"},{"size":7130,"mtime":1632801466030,"results":"221","hashOfConfig":"114"},{"size":3535,"mtime":1632801466030,"results":"222","hashOfConfig":"114"},{"size":9437,"mtime":1632801466046,"results":"223","hashOfConfig":"114"},{"size":5418,"mtime":1632801466030,"results":"224","hashOfConfig":"114"},{"size":3466,"mtime":1632801466030,"results":"225","hashOfConfig":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},"93xf0z",{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"228"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"228"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"228"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"228"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"228"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"228"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"228"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"228"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"228"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"228"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"228"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"228"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"228"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"228"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"228"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"228"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"228"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"228"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"228"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"228"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"228"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"228"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"228"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"228"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"228"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"228"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"228"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"228"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"228"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"228"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"228"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"228"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"228"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"228"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"228"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"228"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"228"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"228"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"228"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"228"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"228"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"228"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"228"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"228"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"228"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"228"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"228"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"228"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"228"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"228"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"228"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"228"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"228"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"228"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"228"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"228"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"228"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"228"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"228"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"228"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"228"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"228"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"228"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"486","messages":"487","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"228"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"228"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"228"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"228"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"228"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"228"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"228"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"228"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"228"},"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\index.js",[],["523","524"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\App.js",["525","526"],"import \"./App.css\";\r\nimport \"./Colors.css\";\r\nimport \"./Responsive.css\";\r\nimport \"./Scrollbar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"react-modal-video/css/modal-video.min.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactGa from \"react-ga\"\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport Redirector from \"./Utils/Routing\";\r\nimport history from \"./Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport AddEvent from \"./Components/AddEvent/AddEvent\";\r\nimport Rsvp from \"./Components/Invitations/RSVP/Rsvp\";\r\nimport AddEventSucess from \"./Components/AddEvent/AddEventSucess\";\r\nimport Chat from \"./Components/Chat/Chat\";\r\nimport Feed from \"./Components/Feed/Feed\";\r\nimport Comment from \"./Components/Comments/Coments\";\r\nimport ShowSchedule from \"./Components/Invitations/ShowSchedule\";\r\nimport InvitaionviewToggler from \"./Components/Invitations/InvitaionviewToggler\";\r\nimport Locationofline from \"./Components/Location Offline/LocationOffline\";\r\nimport Jitsi from \"./Components/jitsi/Jitsivc\";\r\nimport GuestList from \"./Components/Guest/Guest\";\r\nimport Hoxinvitation from \"./Components/Invitations/hoxinvitation\";\r\nimport SidebarMore from \"./Components/Sidebar/SidebarMore\";\r\nimport AdminSidebar from \"./Components/Sidebar/AdminSidebar\";\r\nimport EventAdmin from \"./Components/Admin/EventAdmin\";\r\nimport ManageGuest from \"./Components/Guest/ManageGuest\";\r\nimport EditEvent from \"./Components/EditEvent/EditEvent\";\r\nimport HomePage from \"./Components/HomePage/HomePage\";\r\nimport ShowStory from './Components/Invitations/ShowStory';\r\nimport ShowAlbum from './Components/Invitations/ShowAlbum';\r\nimport Gift from './Components/Gift/Gift';\r\nimport { GetEvents, GetInvitations } from './Redux/DispatchFuncitons/Eventfunctions';\r\nimport { gettemplate } from './Redux/DispatchFuncitons/TemplateFunctions'\r\nimport CreateOrUpdate from './Components/EventCreateAndUpdate/CreateOrUpdate';\r\nimport { getlist } from './Redux/DispatchFuncitons/GuestListFunctions'\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [loop, setloop] = useState()\r\n\r\n\r\n  const Auth = useSelector((state) => state.Auth);\r\n  useEffect(() => {\r\n   \r\n    ReactGa.initialize('UA-201872924-1')\r\n    ReactGa.pageview(window.location.pathname + window.location.search)\r\n  }, []);\r\n  let interval;\r\n  useEffect(async () => {\r\n    dispatch(gettemplate())\r\n    if (Auth.isLoggedIn === true) {\r\n      dispatch(gettemplate())\r\n      interval = setInterval(() => {\r\n\r\n        dispatch(GetEvents());\r\n        dispatch(GetInvitations());\r\n        dispatch(getlist())\r\n      }, 10000);\r\n      await setloop(interval)\r\n    } else {\r\n\r\n      await clearInterval(loop);\r\n      await setloop()\r\n    }\r\n\r\n\r\n  }, [Auth.isLoggedIn]);\r\n\r\n\r\n  if (Auth.isLoggedIn === false) {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode/:Code\"\r\n              component={Hoxinvitation}\r\n            />\r\n\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/*\" component={Redirector} />\r\n\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  } else {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            {/* <Route\r\n              exact\r\n              path=\"/Profile\"\r\n              component={UserProfile}\r\n            /> */}\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode/:Code\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route exact path=\"/MyEvents/eventpage/chat/:id\" component={Chat} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/GuestList/:id/:invno\"\r\n              component={GuestList}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Manage-GuestList/:id/:invno\"\r\n              component={ManageGuest}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Manage-Event/:id/:invno\"\r\n              component={EditEvent}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Admin/:id/:eid\"\r\n              component={EventAdmin}\r\n            />\r\n            <Route exact path=\"/MyEvents/Admin/:id\" component={AdminSidebar} />\r\n            <Route exact path=\"/MyEvents/More/:id\" component={SidebarMore} />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Location/:id/:event\"\r\n              component={Locationofline}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/schedule/:id/:event\"\r\n              component={ShowSchedule}\r\n            />\r\n            <Route exact path=\"/MyEvents/rsvp/:id\" component={Rsvp} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/eventpage/:id\"\r\n              component={InvitaionviewToggler}\r\n            />\r\n\r\n            <Route exact path=\"/MyEvents/eventpage/gift/:id/:MainCode\" component={Gift} />\r\n            <Route exact path=\"/MyEvents/eventpage/feed/:id/:MainCode\" component={Feed} />\r\n            <Route exact path=\"/MyEvents/comments/:id/:_id\" component={Comment} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/albums/:id\"\r\n              component={ShowAlbum}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/story/:id\"\r\n              component={ShowStory}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/albums/:id\"\r\n              component={ShowAlbum}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/story/:id\"\r\n              component={ShowStory}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Manage-Event/:id/:invno\"\r\n              component={EditEvent}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Admin/:id/:eid\"\r\n              component={EventAdmin}\r\n            />\r\n            {/* <Route\r\n              exact\r\n              path=\"/inv/Admin/:id/\"\r\n              component={AdminSidebar}\r\n            /> */}\r\n            <Route exact path=\"/inv/More/:id\" component={SidebarMore} />\r\n            <Route exact path=\"/inv/comments/:id/:_id\" component={Comment} />\r\n            <Route exact path=\"/inv/eventpage/gift/:id/:MainCode\" component={Gift} />\r\n            <Route exact path=\"/inv/eventpage/feed/:id/:MainCode\" component={Feed} />\r\n            <Route exact path=\"/inv/videoconf/:id/\" component={Jitsi} />\r\n            <Route exact path=\"/inv/eventpage/chat/:id\" component={Chat} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Location/:id/:event\"\r\n              component={Locationofline}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/schedule/:id/:event\"\r\n              component={ShowSchedule}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/GuestList/:id/:invno\"\r\n              component={GuestList}\r\n            />\r\n\r\n            {/* <Route exact path=\"/inv/info/:id\" component={Invitationlist} /> */}\r\n            <Route exact path=\"/inv/rsvp/:id\" component={Rsvp} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/eventpage/:id\"\r\n              component={InvitaionviewToggler}\r\n            />\r\n            <Route exact path=\"/MyEvents\" component={Home} />\r\n            <Route exact path=\"/MyInvitations\" component={Home} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/event-create-success/:id\"\r\n              component={AddEventSucess}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/event-create-success/:id/:Share\"\r\n              component={AddEventSucess}\r\n            />\r\n            <Route exact path=\"/MyEvents/edit/:id\" component={CreateOrUpdate} />\r\n            <Route exact path=\"/add-event\" component={AddEvent} />\r\n            <Route exact path=\"/user-profile\" component={AddEvent} />\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/*\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\reportWebVitals.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\store.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\History.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Routing.js",["527","528","529","530","531","532"],"import React, { useEffect } from \"react\";\r\nimport history from \"./History\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { loginuser } from \"../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getposts } from \"../Redux/DispatchFuncitons/postfunctions\";\r\nimport { getNotification } from \"../Redux/DispatchFuncitons/NotificationFunctions\";\r\nimport { getChats } from \"../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nexport default function Redirector() {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => {\r\n    let ischeck = await reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = await reactLocalStorage.get(\"Phone\");\r\n    let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === \"false\" || ischeck === undefined || ischeck === \"\") {\r\n      console.log(\"logout\");\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"loginuser\");\r\n      await dispatch(loginuser(Phone));\r\n    }\r\n  }, [])\r\n  useEffect(async () => {\r\n    if (Auth.isLoggedIn === true) {\r\n\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n      await dispatch(getNotification());\r\n      await dispatch(getposts());\r\n      // await dispatch(getChats());\r\n      //  await history.goBack();\r\n    }\r\n  }, [Auth.isLoggedIn])\r\n  return <div><CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} /></div>;\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\TemplateFunctions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\GuestListFunctions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js",["533","534"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport {\r\n  EVENTSAVED,\r\n  EVENTSAVEFAIL,\r\n  GOTMYEVENTS,\r\n  GETMYINVITAITONS, DELETEALBUM, DELETESTORY\r\n} from \"../Actions/EventActions\";\r\nimport { deleteEvent } from './CodeFunctions';\r\nimport history from \"../../Utils/History\";\r\nexport function saveEvent(edata) {\r\n  return (dispatch) => {\r\n    console.log(edata);\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    edata.date = dateTime;\r\n    axios.post(url + \"event/create\", edata).then(async (res) => {\r\n      console.log(res);\r\n      await dispatch({\r\n        type: DELETEALBUM\r\n      })\r\n      await dispatch({\r\n        type: DELETESTORY\r\n      })\r\n      history.push(\"/MyEvents/event-create-success/\" + res.data.MainCode);\r\n    });\r\n  };\r\n}\r\nexport function addme(code, maincode) {\r\n  return (dispatch) => {\r\n    if (code === 'All') {\r\n      axios\r\n        .post(url + \"event/addmetoall\", { maincode: maincode })\r\n        .then(async (res) => {\r\n\r\n          if (res.data.status === 'success') {\r\n            await dispatch(deleteEvent());\r\n            await dispatch(GetEvents());\r\n            await dispatch(GetInvitations());\r\n\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          return 0;\r\n        });\r\n    } else {\r\n      axios\r\n        .post(url + \"event/addme\", { code: code, maincode: maincode })\r\n        .then(async (res) => {\r\n\r\n          if (res.data.status === 'success') {\r\n            await dispatch(deleteEvent());\r\n            await dispatch(GetEvents());\r\n            await dispatch(GetInvitations());\r\n\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          return 0;\r\n        });\r\n    }\r\n\r\n  };\r\n}\r\nexport function GetEvents() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"event/getmyEvents\").then((res) => {\r\n      dispatch({\r\n        type: GOTMYEVENTS,\r\n        payload: res.data.MyEvents,\r\n      });\r\n      return true\r\n    });\r\n  };\r\n}\r\n\r\nexport function GetInvitations() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"event/getmyInvitaion\").then((res) => {\r\n      dispatch({\r\n        type: GETMYINVITAITONS,\r\n        payload: res.data.Invitations,\r\n      });\r\n      console.log(res);\r\n      return true\r\n    });\r\n  };\r\n}\r\nexport function rsvp_event(id, status, Phone) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/rsvp\", { id: id, status: status, Phone: Phone, date: dateTime })\r\n      .then((res) => {\r\n        // dispatch(GetInvitations());\r\n        // dispatch(GetEvents());\r\n        console.log(res);\r\n        return 1\r\n      });\r\n  };\r\n}\r\nexport function like_event(id) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"event/like\", { id: id, dateTime: dateTime }).then((res) => {\r\n      dispatch(GetInvitations());\r\n      dispatch(GetEvents());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function comment_event(id, comment) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/comment\", { id: id, comment: comment, date: dateTime })\r\n      .then(async (res) => {\r\n\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n        return 1;\r\n      });\r\n  };\r\n}\r\nexport function change_event(id, type, data) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateevents\", { id: id, type: type, data: data, date: dateTime })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function add_participants(id, data) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/add_participants\", { id: id, data: data, date: dateTime })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function update_participants(id, data) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/UpdateParticipants\", { id: id, data: data, date: dateTime })\r\n      .then(async (res) => {\r\n        await dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function update_events(Type, Eventdata, maincode) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateevents\", {\r\n        Type: Type,\r\n        Eventdata: Eventdata,\r\n        maincode: maincode,\r\n        date: dateTime\r\n      })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function uploadfiletoalbum(Album, MainCode) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/addalbum\", {\r\n        Album: Album, _id: MainCode, date: dateTime\r\n      })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function deleteInvite(MainCode) {\r\n\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/delete\", {\r\n        maincode: MainCode,\r\n      })\r\n      .then(async (res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        history.push('/inv')\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function UpdateSchedules(eid, Schedule) {\r\n\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateSchedule\", {\r\n        eid: eid, Schedule: Schedule,\r\n      })\r\n      .then(async (res) => {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n      });\r\n  };\r\n}\r\nexport function UpdateAlbum(eid, Schedule) {\r\n\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateAlbum\", {\r\n        eid: eid, Schedule: Schedule,\r\n      })\r\n      .then(async (res) => {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n      });\r\n  };\r\n}\r\nexport function UpdateStory(id, story) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateStory\", {\r\n        id: id, story: story,\r\n      })\r\n      .then(async (res) => {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n      });\r\n  };\r\n}\r\nexport function addCohost(eid, newHost) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/addHost\", {\r\n        _id: eid, newHost: newHost, date: dateTime\r\n      })\r\n      .then(async (res) => {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function removeCohost(eid, newHost) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/removeHost\", {\r\n        _id: eid, newHost: newHost, date: dateTime\r\n      })\r\n      .then(async (res) => {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n      });\r\n  };\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\ReducerCombiner.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Home\\Home.js",["535","536","537","538"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport FootMenu from \"../Helpers/FootMenu/FootMenu\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Invitation from \"../Invitations/Invitation\";\r\nimport EventList from \"../Events/Eventlist\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getNotification } from \"../../Redux/DispatchFuncitons/NotificationFunctions\";\r\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport { addme } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Home(props) {\r\n  const dispatch = useDispatch();\r\n  const [Menu, setMenu] = useState(0);\r\n  const CodeEvent = useSelector(state => state.CodeEvent)\r\n  const EventState = useSelector((state) => state.Eventdata);\r\n  useEffect(async () => {\r\n    if (CodeEvent.Code !== \"\") {\r\n      await dispatch(addme(CodeEvent.Code, CodeEvent.Maincode));\r\n    }\r\n\r\n    dispatch(GetEvents());\r\n    dispatch(GetInvitations());\r\n    dispatch(getNotification());\r\n    // dispatch(getChats());\r\n\r\n    if (\r\n      props.location.pathname === \"/inv\" ||\r\n      props.location.pathname === \"/\" ||\r\n      props.location.pathname === \"/home\"\r\n    ) {\r\n      await setMenu(0);\r\n    } else {\r\n      setMenu(1);\r\n    }\r\n\r\n\r\n  }, []);\r\n  useEffect(async () => {\r\n    dispatch(GetEvents());\r\n    dispatch(GetInvitations());\r\n    dispatch(getNotification());\r\n    dispatch(getChats());\r\n  }, []);\r\n\r\n  return (\r\n    <><div className=\"w-100\" >\r\n      <Header url={props.location.pathname} />\r\n    </div>\r\n      {/* <MobileHeader /> */}\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} sm={12} md={12}>\r\n          {Menu === 0 ? (\r\n            <Invitation data={EventState.myInvitations} className=\"w-100\" />\r\n          ) : (\r\n            <EventList data={EventState.myEvents} className=\"w-100\" />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FootMenu menu={Menu} setMenu={setMenu} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddEventSucess.js",["539","540","541","542","543"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport check from \"../../Assets/check-circle.1.png\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { WhatsappShareButton } from \"react-share\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport WhatsIcon from \"../../Assets/WhatsIcon.png\";\r\n\r\n\r\n\r\nexport default function AddEventSucess(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [maincode, setmaincode] = useState(props.match.params.id);\r\n  const [allevents, setallevents] = useState([]);\r\n  const [mode, setmode] = useState();\r\n  const [sharelink, setcodesharelink] = useState(\"\");\r\n  const [Watsapp, setWatsapp] = useState(\"\");\r\n  const [SelectedCode, setSelectedCode] = useState(\"\");\r\n  useEffect(() => {\r\n    axios\r\n      .post(url + \"event/viewinvitation\", {\r\n        MainCode: props.match.params.id,\r\n      })\r\n      .then(async (res) => {\r\n        await setallevents(res.data.Events);\r\n        if (res.data.Events[0].EntryWay === \"Code\") {\r\n          setSelectedCode(\r\n            res.data.Events[0].Name + \" code: \" + res.data.Events[0].code\r\n          );\r\n\r\n          setcodesharelink(\r\n            \" https://mobillyinvite.com/MyInvitations/\" +\r\n            maincode +\r\n            \"/\" +\r\n            res.data.Events[0].code\r\n          );\r\n          await setWatsapp(\r\n            \"Hi there ! You have been invited by \" +\r\n            Auth.Name +\r\n            \" to \" +\r\n            res.data.Events[0].Name +\r\n            \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n            \" https://mobillyinvite.com/MyInvitations/\" +\r\n            maincode +\r\n            \"/\" +\r\n            res.data.Events[0].code\r\n          );\r\n        } else {\r\n          setcodesharelink(\r\n            \" https://mobillyinvite.com/MyInvitations/\" +\r\n            maincode +\r\n            \"/\" +\r\n            res.data.Events[0].code\r\n          );\r\n          await setWatsapp(\r\n            \"Hi there ! You have been invited by \" +\r\n            Auth.Name +\r\n            \" to \" +\r\n            res.data.Events[0].Name +\r\n            \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n            \" https://mobillyinvite.com/MyInvitations/\" +\r\n            maincode\r\n          );\r\n        }\r\n\r\n        await setmode(res.data.Events[0].EntryWay);\r\n      });\r\n  }, []);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = async (data, Name) => {\r\n    await setSelectedCode(Name)\r\n    await setcodesharelink(\r\n      \" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + data\r\n    );\r\n    await setWatsapp(\r\n      \"Hi there ! You have been invited by \" +\r\n      Auth.Name +\r\n      \" to \" +\r\n      allevents[0].Name +\r\n      \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n      \" https://mobillyinvite.com/MyInvitations/\" +\r\n      maincode +\r\n      \"/\" +\r\n      allevents[0].code\r\n    );\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <Header />\r\n      </Grid>\r\n      <Grid item xs={false} sm={3} md={3} />\r\n      <Grid item xs={12} sm={6} md={6}>\r\n        <Grid container spacing={0} className=\"p-10px\">\r\n          <Grid item xs={12}>\r\n            <center>\r\n              <img src={check} className=\"p-10px \" />\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h2 className=\"tac theme-font\">\r\n              Your Invitation has been sucessfully created.\r\n            </h2>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <p className=\"w-100 tac\"> Click on the Link to copy</p>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            className=\"tac m-b-25px clipboard\"\r\n            onClick={() => {\r\n              navigator.clipboard.writeText(\r\n                \"https://mobillyinvite.com/MyInvitations/\" + maincode\r\n              );\r\n            }}\r\n          >\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={10} md={11} className=\"link p-t-5\">\r\n                {\"https://mobillyinvite.com/xxxxx\"}\r\n              </Grid>\r\n              <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                <FileCopyIcon className=\"v-t\" />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {allevents &&\r\n            allevents.length > 0 &&\r\n            allevents[0].EntryWay === \"Code\" ? (\r\n            <>\r\n              <Grid item xs={12} className=\"tac m-b-25px clipboard grey\">\r\n                <Grid container spacing={0}>\r\n                  <Grid\r\n                    item\r\n                    xs={10}\r\n                    md={11}\r\n                    className=\"link p-t-5\"\r\n                    onClick={(e) => {\r\n                      handleClick(e);\r\n                    }}\r\n                  >\r\n                    {SelectedCode}\r\n                  </Grid>\r\n                  <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                    <FileCopyIcon\r\n                      className=\"v-t\"\r\n                      onClick={() => {\r\n                        navigator.clipboard.writeText(sharelink);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <>\r\n\r\n            </>\r\n          )}\r\n          <Grid item xs={12} className=\"w-100 tac\">\r\n            Share on\r\n          </Grid>\r\n          <Grid item xs={12} className=\"tac m-b-25px\" style={{ zIndex: '33333' }}>\r\n            <center>\r\n              <WhatsappShareButton\r\n                url={\" \"}\r\n                title={Watsapp}\r\n\r\n                separator=\" \"\r\n                className=\"Demo__some-network__share-button\"\r\n              >\r\n                <img src={WhatsIcon} className=\"\" style={{ height: '30px', width: '30px' }} />\r\n              </WhatsappShareButton>\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"tac\">\r\n            Note: Only those who have invite can access\r\n          </Grid>\r\n          <Grid item xs={12} className=\"down-float\">\r\n            <button\r\n              className=\"btn save-event mt-10px\"\r\n              style={{position:'fixed', bottom: '0', right: '0'}}\r\n              onClick={() => {\r\n                if (props.match.params.Share === undefined) {\r\n                  history.push(\"/\");\r\n                } else {\r\n                  history.goBack();\r\n                }\r\n\r\n              }}\r\n            >\r\n              {props.match.params.Share === undefined ? 'Done' : 'Back'}\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n      >\r\n        {allevents &&\r\n          allevents.map((eve) => (\r\n            <MenuItem\r\n              onClick={() =>\r\n                handleClose(eve.code, eve.Name + \"Code :\" + eve.code)\r\n              }\r\n            >\r\n              {eve.Name + \"Code :\" + eve.code}\r\n            </MenuItem>\r\n          ))}\r\n      </Menu>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddEvent.js",["544","545","546","547","548","549","550"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport HorizontalLinearStepper from \"./Stepper/Stepper\";\r\nimport CreateEvent from \"./CreateEvent/CreateEvent\";\r\nimport AddParticipants from \"../AddEvent/AddParticipants/NewAddParticipants\";\r\nimport Toggler from \"../Helpers/EventInvitoggler/Toggler\";\r\nimport BackNavBar from \"../Helpers/BackNavbar/BackNavBar\";\r\nimport Back from \"../../Assets/Back.svg\";\r\nimport history from \"../../Utils/History\";\r\nimport Plan from \"../Plan/Plan\";\r\nexport default function AddEvent(props) {\r\n  const [Type, setType] = useState(\"Wedding\");\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [Events, setEvents] = useState([]);\r\n\r\n  let events = {\r\n    Name: \"\",\r\n    Participants: [],\r\n    file: \"\",\r\n    filetype: \"\",\r\n    Date: \"\",\r\n    Time: \"\",\r\n    VenueType: \"Online\",\r\n    Location: \"\",\r\n    Link: \"\",\r\n    Description: \"\",\r\n    GuestInvite: false,\r\n    Host: \"\",\r\n    Co_Host: [],\r\n    Schedule: [],\r\n  };\r\n  const [SelectedEvent, SelectEvent] = useState(0);\r\n  const [Story, setStory] = useState([]);\r\n  const [albumdata, setalbumdata] = useState([]);\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const addAnEvent = async () => {\r\n    if (Events.length < 4) {\r\n      setEvents([...Events, events]);\r\n    }\r\n  };\r\n  const removeAnEvent = async () => {\r\n    let events = [...Events];\r\n    if (events.length > 1) {\r\n      events = events.slice(0, -1);\r\n      await setEvents(events);\r\n    }\r\n\r\n    if (SelectedEvent > events.length - 1) {\r\n      console.log(SelectedEvent - 1);\r\n      SelectEvent(SelectedEvent - 1);\r\n      console.log(SelectedEvent, events.length - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const checkIfEventEmpty = async (eventscpy, Type, seterroring, index) => {\r\n    if (Type === \"\") {\r\n      seterroring(true);\r\n      return { status: false, index: 0, component: \"Type\" };\r\n    }\r\n    console.log(Events);\r\n    let Eventcpy = [...Events];\r\n    let result = true;\r\n    let incompleteeventnumber = null;\r\n    //check for event first\r\n    Eventcpy = { ...Events[index] };\r\n    if (Eventcpy.Name === \"\") {\r\n      console.log({ status: false, index: index, component: \"Name\" });\r\n      return { status: false, index: index, component: \"Name\" };\r\n    } else if (Eventcpy.Date === \"\") {\r\n      console.log({ status: false, index: index, component: \"Date\" });\r\n      return { status: false, index: index, component: \"Date\" };\r\n    } else if (Eventcpy.Time === \"\") {\r\n      console.log({ status: false, index: index, component: \"Time\" });\r\n      return { status: false, index: index, component: \"Time\" };\r\n    } else if (Eventcpy.Description === \"\") {\r\n      console.log({ status: false, index: index, component: \"Description\" });\r\n      return { status: false, index: index, component: \"Description\" };\r\n    } else if (Eventcpy.VenueType === \"\") {\r\n      console.log({ status: false, index: index, component: \"VenueType\" });\r\n      return { status: false, index: index, component: \"VenueType\" };\r\n    } else if (\r\n      Eventcpy.VenueType === \"Both\" &&\r\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n    ) {\r\n      console.log({\r\n        status: false,\r\n        index: index,\r\n        component: \"Both Location Link\",\r\n      });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n      console.log({ status: false, index: index, component: \"Link\" });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n      console.log({ status: false, index: index, component: \"Link\" });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.file === \"\") {\r\n      console.log({ status: false, index: index, component: \"file\" });\r\n      return { status: false, index: index, component: \"file\" };\r\n    } else if (Eventcpy.filetype === \"\") {\r\n      console.log({ status: false, index: index, component: \"filetype\" });\r\n      return { status: false, index: index, component: \"filetype\" };\r\n    }\r\n\r\n    for (let i = 0; i < Events.length; i++) {\r\n      incompleteeventnumber = i;\r\n      Eventcpy = { ...Events[i] };\r\n      if (Eventcpy.Name === \"\") {\r\n        console.log({ status: false, index: i, component: \"Name\" });\r\n        return { status: false, index: i, component: \"Name\" };\r\n      } else if (Eventcpy.Date === \"\") {\r\n        console.log({ status: false, index: i, component: \"Date\" });\r\n        return { status: false, index: i, component: \"Date\" };\r\n      } else if (Eventcpy.Time === \"\") {\r\n        console.log({ status: false, index: i, component: \"Time\" });\r\n        return { status: false, index: i, component: \"Time\" };\r\n      } else if (Eventcpy.Description === \"\") {\r\n        console.log({ status: false, index: i, component: \"Description\" });\r\n        return { status: false, index: i, component: \"Description\" };\r\n      } else if (Eventcpy.VenueType === \"\") {\r\n        console.log({ status: false, index: i, component: \"VenueType\" });\r\n        return { status: false, index: i, component: \"VenueType\" };\r\n      } else if (\r\n        Eventcpy.VenueType === \"Both\" &&\r\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n      ) {\r\n        console.log({\r\n          status: false,\r\n          index: i,\r\n          component: \"Both Location Link\",\r\n        });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n        console.log({ status: false, index: i, component: \"Link\" });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n        console.log({ status: false, index: i, component: \"Link\" });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.file === \"\") {\r\n        console.log({ status: false, index: i, component: \"file\" });\r\n        return { status: false, index: i, component: \"file\" };\r\n      } else if (Eventcpy.filetype === \"\") {\r\n        console.log({ status: false, index: i, component: \"filetype\" });\r\n        return { status: false, index: i, component: \"filetype\" };\r\n      }\r\n    }\r\n\r\n    console.log({ status: true, index: null, component: \"\" });\r\n    return { status: true, index: null, component: \"\" };\r\n  };\r\n\r\n  const addfinalDetails = () => {\r\n    let EventsCopy = [...Events];\r\n    EventsCopy.map((eve, index) => {\r\n      if (index === 0) {\r\n        eve.MainCode = \"ME\" + 313213132313;\r\n        eve.eventCode = \"ME\" + 313213132313;\r\n        eve.Link = \"dsd/as3213\";\r\n        //mainevent will give acces to all\r\n      } else {\r\n        eve.MainCode = \"ME\" + 313213132313;\r\n        eve.eventCode = \"E\" + \"randomcode\";\r\n        eve.Link = \"dsd/as3213/sdse\";\r\n        //single event access link\r\n      }\r\n    });\r\n    setEvents(EventsCopy);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    addAnEvent();\r\n  }, []);\r\n\r\n  function StepRender(step) {\r\n    return (\r\n      <>{step.activeStep === 0 ?\r\n        <CreateEvent\r\n          setType={setType}\r\n          Type={Type}\r\n          Events={Events}\r\n          setEvents={setEvents}\r\n          addAnEvent={addAnEvent}\r\n          checkIfEventEmpty={checkIfEventEmpty}\r\n          handleChange={handleChange}\r\n          removeAnEvent={removeAnEvent}\r\n          SelectEvent={SelectEvent}\r\n          SelectedEvent={SelectedEvent}\r\n          handleNext={handleNext}\r\n          handleBack={handleBack}\r\n          addfinalDetails={addfinalDetails}\r\n          albumdata={albumdata}\r\n          setalbumdata={setalbumdata}\r\n          Story={Story}\r\n          setStory={setStory}\r\n          template={events}\r\n          className=\"p-15px\"\r\n        /> :\r\n        step.activeStep === 1 ? <Plan handleNext={handleNext} handleBack={handleBack} /> :\r\n          step.activeStep === 2 ? <AddParticipants\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            Events={Events}\r\n            setEvents={setEvents}\r\n            SelectEvent={SelectEvent}\r\n            SelectedEvent={SelectedEvent}\r\n            addAnEvent={addAnEvent}\r\n            removeAnEvent={removeAnEvent}\r\n            addfinalDetails={addfinalDetails}\r\n            Type={Type}\r\n            Story={Story}\r\n          /> : <></>}</>\r\n    )\r\n    // switch (step.activeStep) {\r\n    //   case 0:\r\n    //     return (\r\n\r\n    //     );\r\n    //   case 1000:\r\n    //     return <Plan handleNext={handleNext} handleBack={handleBack} />;\r\n    //   case 1:\r\n    //     return (\r\n\r\n    //     );\r\n    //   case 3:\r\n    //     return <div></div>;\r\n    //   default:\r\n    //     return <div></div>;\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header url={props.location.pathname} ismobile=\"desktop-only\" />\r\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\r\n      <BackNavBar\r\n        logo={<img src={Back} />}\r\n        Name={\"Create Event\"}\r\n        functionality={() => {\r\n          history.push(\"/MyEvents\");\r\n        }}\r\n      />\r\n      <Grid container spacing={0} className=\" pt-0\">\r\n        <Grid item xs={false} sm={2} md={2} />\r\n\r\n        <Grid item xs={12} sm={8} md={8} className=\" pt-0\">\r\n          <HorizontalLinearStepper\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n          />\r\n          <StepRender activeStep={activeStep} />\r\n        </Grid>\r\n\r\n        <Grid item xs={false} sm={2} md={2} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Feed.js",["551","552","553","554","555","556","557","558","559"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zoomicon from \"../../Assets/zoomicon.png\";\r\nimport axios from \"axios\";\r\nimport { addpost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport history from \"../../Utils/History\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Media from \"./Media\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport AddTags from \"./AddTags\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Postrender from './Posts'\r\nimport AddPost from \"./AddPost\";\r\n\r\nexport default function Feed(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const dispatch = useDispatch();\r\n  const [isSubmit, setisSubmit] = useState(false);\r\n  const [isloaded, toggleisloaded] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [ShowTagQuery, setShowTagQuery] = useState(false);\r\n  const [showcommment, setshowcommment] = useState(false);\r\n  const [currentPosts, setcurrentPosts] = useState([]);\r\n  const [currentfilteredPosts, setcurrentfilteredPosts] = useState([]);\r\n  const [participant, setparticipant] = useState([]);\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [admins, setadmins] = useState([]);\r\n  const [Tags, setTags] = useState([]);\r\n  const [base, setbase] = useState(\"\");\r\n  const [filter, setfilter] = useState(\"All\");\r\n  const [caption, setcaption] = useState(\"\");\r\n  const [imageurl, setimageurl] = useState(\"\");\r\n  const [type, settype] = useState(\"\");\r\n  const [popuptype, setpopuptype] = useState(\"\");\r\n  const [showcommmentforpost, setshowcommmentforpost] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    await getposts()\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      await setfilter('All')\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/feed/\" + props.match.params.id + \"/\" + props.match.params.MainCode &&\r\n        MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n\r\n        await setbase(\"MyEvents\");\r\n        await setadmins(MyEvents[props.match.params.id][0].Host);\r\n        await guestlist([...MyEvents[props.match.params.id][0].Participants, ...MyEvents[props.match.params.id][0].Host]);\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/feed/\" + props.match.params.id + \"/\" + props.match.params.MainCode &&\r\n        myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n\r\n        await setbase(\"inv\");\r\n        await setadmins(myInvitations[props.match.params.id][0].Host);\r\n        await guestlist([...myInvitations[props.match.params.id][0].Participants, ...myInvitations[props.match.params.id][0].Host]);\r\n      }\r\n\r\n    }\r\n  }, [MyEvents, myInvitations]);\r\n\r\n  const submit = async () => {\r\n    await setisSubmit(true);\r\n    var d = new Date();\r\n    let unique = d.getTime();\r\n    let url = Eventdata[0].MainCode + unique + \".\" + type;\r\n    console.log(url);\r\n    let newurl = \"\";\r\n    if (imageurl !== \"\") {\r\n      newurl = await uploadString(imageurl, url);\r\n    }\r\n    await dispatch(\r\n      addpost(Eventdata[0].MainCode, Auth.Phone, newurl, type, Tags, caption)\r\n    );\r\n    await setcaption(\"\");\r\n    await setimageurl(\"\");\r\n    await settype(\"\");\r\n    await setTags([]);\r\n    await setisSubmit(false);\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n    let url = \"\";\r\n    let ftype = acceptedFiles[0].type.split(\"/\");\r\n    settype(ftype[0]);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      url = reader.result;\r\n      setimageurl(url);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n\r\n  const getposts = async () => {\r\n    if (props.match.params.id !== undefined && props.match.params.id !== \"\") {\r\n      axios\r\n        .post(url + \"post/getposts\", { maincode: props.match.params.MainCode })\r\n        .then(async function (response) {\r\n          toggleisloaded(true);\r\n          if (response.data.Posts.length !== 0) {\r\n            await setcurrentPosts(response.data.Posts);\r\n            await filterposts(response.data.Posts, Eventdata[0].Host)\r\n          }\r\n\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n          // always executed\r\n        });\r\n    }\r\n  };\r\n  const filterposts = async (Posts, admins) => {\r\n    let Postscpy = [];\r\n    for (let i = 0; i < Posts.length; i++) {\r\n      if (admins.includes(Posts[i].by) === true) {\r\n        Postscpy.push(Posts[i]);\r\n      }\r\n    }\r\n    await setcurrentfilteredPosts(Postscpy)\r\n  };\r\n\r\n\r\n\r\n  const guestlist = async (Participants) => {\r\n    var ParticipantsCPY = [];\r\n    for (let i = 0; i < Participants.length; i++) {\r\n      var Phone = \"\";\r\n      if (Participants[i] !== Auth.Phone) {\r\n        if (typeof Participants[i] === \"string\") {\r\n          Phone = Participants[i].includes(\"+\")\r\n            ? Participants[i]\r\n            : \"+91\" + Participants[i];\r\n        } else {\r\n          Phone = Participants[i].toString().includes(\"+\")\r\n            ? Participants[i]\r\n            : \"+91\" + Participants[i];\r\n        }\r\n\r\n        // await axios\r\n        //   .post(url + \"auth/getuserdetails\", {\r\n        //     Phone: Phone,\r\n        //   })\r\n        //   .then(async (res) => {\r\n        //     if (res.data.user) {\r\n        //       await ParticipantsCPY.push({\r\n        //         name: res.data.user.Name,\r\n        //         id: Participants[i],\r\n        //       });\r\n        //     } else {\r\n        //       await ParticipantsCPY.push({\r\n        //         name: Participants[i],\r\n        //         id: Participants[i],\r\n        //       });\r\n        //     }\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //     return { err: \"error 404\" };\r\n        //   });\r\n      }\r\n    }\r\n    console.log(Participants);\r\n    await setparticipant(Participants);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getposts();\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [Eventdata]);\r\n\r\n  useEffect(() => {\r\n    console.log(admins)\r\n    console.log(admins.includes('+917447525123'))\r\n  }, [filter])\r\n\r\n  return (\r\n    <>\r\n      <NavMobile base={base} id={props.match.params.id} />\r\n      <Popup\r\n        component={AddTags}\r\n        toggleShowPopup={setShowTagQuery}\r\n        showPopup={ShowTagQuery}\r\n        MainCode={[...participant]}\r\n        showall={setTags}\r\n        url={Tags}\r\n      />\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"f-s-modal\"\r\n        open={showPopup}\r\n        onClose={() => {\r\n          toggleShowPopup(false);\r\n        }}\r\n      >\r\n        <Container fluid className=\"p-0 m-0\">\r\n          <div className=\"f-s-modal-card \">\r\n            <Media\r\n              toggleShowPopup={toggleShowPopup}\r\n              currentPosts={currentPosts}\r\n              popuptype={popuptype}\r\n            />\r\n          </div>\r\n        </Container>\r\n      </Modal>\r\n      <Container className=\"guestlist-box\" fluid>\r\n        <div className=\"back-navigation desktop-only\">\r\n          <Row style={{ marginTop: 5, marginRight: 3, marginLeft: 3 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              style={{ color: \"black\" }}\r\n              onClick={() => history.goBack()}\r\n            />\r\n            <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n              Feed\r\n            </h3>\r\n          </Row>\r\n        </div>\r\n        {Eventdata && Eventdata.length > 0 ? (\r\n          <>\r\n            {Eventdata[0].filetype === \"png\" ||\r\n              Eventdata[0].filetype === \"jpg\" ||\r\n              Eventdata[0].filetype === \"jpeg\" ? (\r\n              <Image src={Eventdata[0].file} fluid style={{ height: \"30vh\" }} />\r\n            ) : (\r\n              <video\r\n                muted\r\n                type=\"video/mp4\"\r\n                autoPlay={true}\r\n                src={Eventdata[0].file}\r\n                preload=\"none\"\r\n                className=\"w-100\"\r\n                style={{ height: \"30vh\" }}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Image src={zoomicon} className=\"profile-avatar\" />\r\n        <h3 className=\"event-headings\">\r\n          {Eventdata[0] ? Eventdata[0].Name : \"\"}\r\n        </h3>\r\n\r\n        <div className=\"select-list\">\r\n          <Row className=\"p-0 m-0\">\r\n            <Col>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                style={{ width: \"30vw\", borderRadius: 20 }}\r\n                onClick={async () => {\r\n                  await setpopuptype(\"Photo\");\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Photos\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                onClick={async () => {\r\n                  await setpopuptype(\"Videos\");\r\n                  toggleShowPopup(true);\r\n                }}\r\n                style={{ width: \"30vw\", borderRadius: 20, marginLeft: 20 }}\r\n              >\r\n                Videos\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"select-list mt-10px\">\r\n          <Row className=\"filterbox\">\r\n            <Col\r\n              onClick={async () => {\r\n                await setfilter(\"All\");\r\n                // await filterposts(currentPosts);\r\n              }}\r\n              className={filter === \"All\" ? \"filter-type\" : \"\"}\r\n            >\r\n              <span style={{ width: \"30vw\", borderRadius: 20 }}>All</span>\r\n            </Col>\r\n            <Col\r\n              onClick={async () => {\r\n                await setfilter(\"Update\");\r\n\r\n                // await filterposts(currentPosts);\r\n              }}\r\n              className={filter === \"Update\" ? \"filter-type\" : \"\"}\r\n            >\r\n              <span style={{ width: \"30vw\", borderRadius: 20 }}> Update</span>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n      <AddPost settype={settype} setimageurl={setimageurl} setcaption={setcaption}\r\n        caption={caption} submit={submit} setShowTagQuery={setShowTagQuery} imageurl={imageurl} isSubmit={isSubmit} />\r\n\r\n      {isloaded === false ? (\r\n        <center>\r\n          <CircularProgress style={{ color: \"black\" }} />\r\n        </center>\r\n      ) : (\r\n        <Postrender data={currentPosts} filter={filter} filterdata={currentfilteredPosts} getposts={getposts}\r\n          Eventdata={Eventdata} showcommmentforpost={showcommmentforpost} showcommment={showcommment} Maincode={props.match.params.Maincode}\r\n          setshowcommmentforpost={setshowcommmentforpost}\r\n          setshowcommment={setshowcommment} />\r\n      )}\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Comments\\Coments.js",["560","561","562","563","564","565","566"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowSchedule.js",["567","568","569"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"./Invitations.css\"\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport history from \"../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport AddSchedule from '../AddEvent/Extras/Schedule';\r\n\r\nexport default function ShowSchedule(props) {\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([])\r\n  const [base, setbase] = useState(\"\")\r\n  const [Id, setId] = useState(\"\")\r\n  const [isadmin, setisadmin] = useState(false)\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/schedule/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.event\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id][props.match.params.event].Schedule);\r\n        await setbase(\"MyEvents\");\r\n        await setId(MyEvents[props.match.params.id][props.match.params.event]._id)\r\n        await setisadmin(true)\r\n      } else {\r\n        await setEventdata(myInvitations[props.match.params.id][props.match.params.event].Schedule);\r\n        await setId(myInvitations[props.match.params.id][props.match.params.event]._id)\r\n        await setbase(\"inv\");\r\n        await setisadmin(false)\r\n      }\r\n    }\r\n  }, [myInvitations, MyEvents])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={false} md={2}></Grid>\r\n        <Grid item xs={12} md={10}>\r\n          <Row\r\n            style={{\r\n              marginTop: 20,\r\n              marginRight: 3,\r\n              marginLeft: 3,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Schedules\r\n            </p>\r\n          </Row>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{ padding: '18px' }}>\r\n          <AddSchedule CurrentEventDetails={Eventdata} IsAdmin={isadmin} Eid={Id} />\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowStory.js",["570","571","572","573","574","575"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"./Invitations.css\"\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport history from \"../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport Story from './AddStory';\r\n\r\nexport default function ShowStory(props) {\r\n    const dispatch = useDispatch();\r\n    const [Eventdata, setEventdata] = useState([])\r\n    const [base, setbase] = useState(\"\")\r\n    const [maincode, setmaincode] = useState(\"\")\r\n    const [uniqurl, setuniqurl] = useState(\"\");\r\n    const [Id, setId] = useState(\"\")\r\n    const [isadmin, setisadmin] = useState(false)\r\n    const [IsAdmin, setIsAdmin] = useState(false);\r\n    let MyEvents = useSelector(\r\n        (state) => state.Eventdata.myEvents\r\n    );\r\n    const Auth = useSelector((state) => state.Auth);\r\n    let myInvitations = useSelector(\r\n        (state) => state.Eventdata.myInvitations\r\n    );\r\n    useEffect(async () => {\r\n        let data = []\r\n        if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n            await dispatch(GetEvents());\r\n            await dispatch(GetInvitations());\r\n        } else {\r\n\r\n            if (\r\n                props.location.pathname ===\r\n                \"/MyEvents/story/\" +\r\n                props.match.params.id\r\n\r\n            ) {\r\n                data = MyEvents[props.match.params.id][0]\r\n                await setEventdata(data.InvId.Story);\r\n                await setbase(\"MyEvents\");\r\n                await setId(data._id)\r\n                await setisadmin(true);\r\n                await setmaincode(data.MainCode)\r\n                if (data.Host.includes(Auth.Phone)) {\r\n                    await setIsAdmin(true);\r\n                } else {\r\n                    await setIsAdmin(false);\r\n                }\r\n                await setuniqurl(data.file)\r\n            } else {\r\n                data = myInvitations[props.match.params.id][0]\r\n                await setEventdata(data.InvId.Story)\r\n                await setId(data._id)\r\n                await setbase(\"inv\");\r\n                await setisadmin(false);\r\n                if (data.Host.includes(Auth.Phone)) {\r\n                    await setIsAdmin(true);\r\n                } else {\r\n                    await setIsAdmin(false);\r\n                }\r\n                await setuniqurl(data.file)\r\n                await setmaincode(data.MainCode)\r\n            }\r\n        }\r\n    }, [myInvitations, MyEvents])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"desktop-only w-100\" >\r\n                <Header className=\"desktop-only\" />\r\n            </div>\r\n\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={false} md={2}></Grid>\r\n                <Grid item xs={12} md={10}>\r\n                    <Row\r\n                        style={{\r\n                            marginTop: 20,\r\n                            marginRight: 3,\r\n                            marginLeft: 3,\r\n                            marginBottom: 10,\r\n                        }}\r\n                    >\r\n                        <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n                            <IoArrowBackCircleOutline\r\n                                size={40}\r\n                                onClick={() => {\r\n                                    history.goBack();\r\n                                }}\r\n                            />\r\n                            Story\r\n                        </p>\r\n                    </Row>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{ padding: '5px' }}>\r\n                    {Eventdata.length === 0 ? <>\r\n                    </> : <></>}\r\n                    <Story Eventdata={Eventdata} uniqurl={uniqurl} maincode={maincode} />\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\hoxinvitation.js",["576","577","578","579","580","581","582"],"import React, { useState, useEffect } from \"react\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport \"./InvitationMain/InvitaionMain.css\"\r\nimport { Container, Row, Col, Carousel, Form } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header\"\r\nimport Icon from \"../../Assets/comment.png\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../Helpers/DesktopNav/DesktopNav\";\r\nimport axios from \"axios\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { HiHome } from \"react-icons/hi\";\r\nimport { AiOutlineLike, AiOutlineSync } from \"react-icons/ai\"\r\nimport { GoCalendar, GoLocation } from \"react-icons/go\"\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport history from \"../../Utils/History\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nimport { IoSendSharp } from \"react-icons/io5\";\r\nimport './Invitations.css'\r\nimport './InvitationMain/InvitaionMain.css'\r\nimport { addEvent } from '../../Redux/DispatchFuncitons/CodeFunctions'\r\nexport default function Hoxinvitation(props) {\r\n  const [Invitations, setInvitations] = useState([]);\r\n  const [show, setshow] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => {\r\n    if (Auth.isLoggedIn === false) {\r\n      if (props.match.params.maincode !== \"\" && props.match.params.Code !== \"\" && props.match.params.Code !== undefined) {\r\n        await dispatch(addEvent(props.match.params.Code, props.match.params.maincode))\r\n        // await dispatch(GetInvitations());\r\n        // history.push(\"/\");\r\n      } else if (props.match.params.Code === undefined && props.match.params.maincode !== \"\") {\r\n        await dispatch(addEvent(\"All\", props.match.params.maincode))\r\n      }\r\n    }\r\n    else {\r\n      await dispatch(GetInvitations());\r\n      myInvitations.map((invite, index) => {\r\n        console.log(invite);\r\n        if (invite[0].MainCode === props.match.params.maincode) {\r\n          history.push(\"/inv/eventpage/\" + index);\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  }, [Auth.isLoggedIn]);\r\n  const replacelinks = (desc) => {\r\n    var sindices = [];\r\n    var eindices = [];\r\n    let newdesc = <></>;\r\n    let descpy = desc\r\n    let returnelement = []\r\n    let restafter\r\n    for (var i = 0; i < desc.length; i++) {\r\n      if (desc[i] === \"{\") sindices.push(i);\r\n      if (desc[i] === \"}\") eindices.push(i);\r\n    }\r\n    let starting = 0;\r\n    if (sindices.length === 0) {\r\n      return <>{desc}</>\r\n    } else {\r\n      for (var i = 0; i < sindices.length; i++) {\r\n\r\n        let restbefore = descpy.substring(starting, sindices[i]);\r\n        let link = descpy.substring(sindices[i] + 1, eindices[i]);\r\n        restafter = descpy.substring(eindices[i] + 1, desc.length);\r\n        starting = eindices[i] + 1;\r\n        returnelement.push(<>{restbefore}</>)\r\n        returnelement.push(<span className=\"t-blue\" >{link}</span>)\r\n        //\r\n      }\r\n      returnelement.push(<>{restafter}</>)\r\n      return (<p>{returnelement.map(elm => (elm))}</p>)\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    if (props.match.params.Name === undefined) {\r\n      console.log(props.match.params.maincode);\r\n      await axios\r\n        .post(url + \"event/viewinvite\", {\r\n          MainCode: props.match.params.maincode,\r\n        })\r\n        .then(async (res) => {\r\n          console.log(res);\r\n          if (res.data.Status === \"success\") {\r\n            let EVENTCPY = [...res.data.Events]\r\n            //  await dispatch(addEvent(res.data.Events[0].code, res.data.Events[0].maincode))\r\n            for (let i = 0; i < EVENTCPY.length; i++) {\r\n              EVENTCPY[i].Description = await replacelinks(EVENTCPY[i].Description)\r\n            }\r\n\r\n            await setInvitations(EVENTCPY);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    } else {\r\n      await axios\r\n        .post(url + \"event/viewEvent\", {\r\n          maincode: props.match.params.maincode,\r\n          Code: props.match.params.Code\r\n        })\r\n        .then(async (res) => {\r\n          if (res.data.Status === \"success\") {\r\n            let EVENTCPY = [...res.data.Events]\r\n            //  await dispatch(addEvent(res.data.Events[0].code, res.data.Events[0].maincode))\r\n            for (let i = 0; i < EVENTCPY.length; i++) {\r\n              EVENTCPY[i].Description = await replacelinks(EVENTCPY[i].Description)\r\n            }\r\n\r\n            await setInvitations(EVENTCPY);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav />\r\n      <Popup\r\n        component={LoginSignup}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n      />\r\n      <Carousel controls={false} interval={99999999999999} className=\"mb-10 invitation_carousel\">\r\n        {Invitations &&\r\n          Invitations.map((eve, index) => (\r\n            <Carousel.Item\r\n              onClick={() => {\r\n                setshow(true);\r\n              }}\r\n            >\r\n              <Container className=\"upper-menu\">\r\n                <Row\r\n                  style={{\r\n                    marginTop: 20,\r\n                    marginRight: 3,\r\n                    marginLeft: 3,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p style={{ color: \"black\" }}>\r\n                    <HiHome\r\n                      style={{ backgroundColor: \"white\", borderRadius: \"50px\" }}\r\n                      size={30}\r\n\r\n                    />\r\n                  </p>\r\n                  <Col></Col>\r\n                  <FaUserFriends\r\n                    size={30}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"black\",\r\n                      borderRadius: 20,\r\n                      padding: \"0.1em 0.4em\",\r\n                    }} />\r\n                </Row>\r\n              </Container>\r\n              <Container className=\"container-event\">\r\n                {eve.filetype === \"png\" ||\r\n                  eve.filetype === \"jpg\" ||\r\n                  eve.filetype === \"jpeg\" ? (\r\n                  <Image src={eve.file} className=\"fullimagemain\" />\r\n                ) : (\r\n                  <video\r\n                    muted\r\n                    type=\"video/mp4\"\r\n                    autoPlay={true}\r\n                    src={eve.file}\r\n                    preload=\"none\"\r\n                    className=\"w-100\"\r\n                    style={{ height: '60vh', objectFit: 'cover' }}\r\n                  />\r\n                )}\r\n                <Container className=\"box-event\" fluid style={{ marginTop: \"5vh\" }}>\r\n\r\n                  <UserDataUrl\r\n                    Phone={eve.Host[0]}\r\n                    showIcon={true}\r\n                    className=\"m-10px\"\r\n                  />\r\n                  <div style={{ position: \"relative\", float: \"right\" }}>\r\n                    <IoSendSharp style={{\r\n                      height: \"20px\",\r\n                      width: \"20px\",\r\n                      marginRight: \"1.5vh\",\r\n                    }} />\r\n\r\n                    <Image src={Icon} className=\"go-chat\" />\r\n                  </div>\r\n                  <h4 className=\"avatar-name\">\r\n                    <UserDataUrl Phone={eve.Host[0]} showName={true} />\r\n                  </h4>\r\n                  <Form.Control\r\n                    size=\"sm\"\r\n                    placeholder=\"Write Comment\"\r\n                    className=\"form-control\"\r\n                    style={{\r\n                      border: 0,\r\n                      width: \"auto\",\r\n                      height: \"20px\",\r\n                      marginLeft: \"60px\",\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <center>\r\n                        <span className=\"Like-count\">0</span>\r\n\r\n                        <AiOutlineLike size=\"25\" className=\"info-icon\"\r\n                          style={{ color: \"#4e4e4e\" }} />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <AiOutlineSync size=\"25\"\r\n                          style={{ color: \"#4e4e4e\" }} />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <GoCalendar\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\" />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <GoLocation\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\" />\r\n                      </center>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n\r\n                  <h3 className=\"event-date\"><Dateformatter Date={eve.Date + \" \" + eve.Time} /></h3>\r\n                  <p className=\"event-des\">\r\n                    {/* {showfulldescription === false\r\n                      ? eve.Description.slice(0, 50) + \"...\"\r\n                      : eve.Description} */}\r\n                    {eve.Description}\r\n                  </p>\r\n                  {/* {eve.Description.length > 50 ? (\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"invitationmain_link\"\r\n                      onClick={() => {\r\n                        setshowfulldescription(!showfulldescription);\r\n                      }}\r\n                    >\r\n                      {showfulldescription === false\r\n                        ? \"Show More\"\r\n                        : \"Show Less\"}\r\n                    </a>\r\n                  ) : (\r\n                    <></>\r\n                  )} */}\r\n                </Container>\r\n              </Container>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      <NavMobile />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowAlbum.js",["583","584","585","586","587","588","589","590","591","592","593"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AlbumStyle.css\";\r\nimport AlbumsNone from \"../../Assets/AlbumsNone.jpg\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport MobileNav from \"../Helpers/NavMobile/NavMobile.js\";\r\nimport DesktopNav from \"../Helpers/DesktopNav/DesktopNav.js\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { uploadfiletoalbum } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport Addtoalbum from \"./Addtoalbum\";\r\nimport { useSwipeable } from 'react-swipeable';\r\n\r\nexport default function ShowAlbum(props) {\r\n  const [isUploaded, setisUploaded] = useState(false);\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [uniqurl, setuniqurl] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [IsAdmin, setIsAdmin] = useState(false);\r\n  const [MainCode, setMainCode] = useState(\"\");\r\n  const [base, setbase] = useState(\"\");\r\n  const [images, setimages] = useState([]);\r\n  const [Prevfiles, setPrevfiles] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [Type, setType] = useState(\"\");\r\n  const [show, setshow] = useState(false);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const [currentmedia, setcurrentmedia] = useState(0);\r\n  const params = {\r\n    spaceBetween: 30,\r\n    centeredSlides: true,\r\n    autoplay: {\r\n      delay: 2500,\r\n      disableOnInteraction: false,\r\n    },\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      clickable: true,\r\n    },\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\",\r\n    },\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let data = []\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/albums/\" + props.match.params.id &&\r\n        MyEvents.length > 0\r\n      ) {\r\n        console.log(MyEvents[0]);\r\n        data = MyEvents[props.match.params.id][0]\r\n        await setEventdata(data.InvId.Album);\r\n        await setbase(\"MyEvents\");\r\n        await setType(data.InvId.Type);\r\n        await setName(data.Name);\r\n        await setMainCode(data.MainCode);\r\n        if (data.Host.includes(Auth.Phone)) {\r\n          await setIsAdmin(true);\r\n        } else {\r\n          await setIsAdmin(false);\r\n        }\r\n        await setuniqurl(data.file)\r\n      } else if (\r\n        props.location.pathname === \"/inv/albums/\" + props.match.params.id &&\r\n        myInvitations.length > 0\r\n      ) {\r\n        data = myInvitations[props.match.params.id][0]\r\n        console.log(myInvitations[0]);\r\n        await setEventdata(data.InvId.Album);\r\n        await setbase(\"inv\");\r\n        await setType(data.InvId.Type);\r\n        await setName(data.Name);\r\n        await setMainCode(data.MainCode);\r\n        if (data.Host.includes(Auth.Phone)) {\r\n          await setIsAdmin(true);\r\n        } else {\r\n          await setIsAdmin(false);\r\n        }\r\n        await setuniqurl(data.file)\r\n      }\r\n      console.log(Eventdata);\r\n    }\r\n  }, [MyEvents, myInvitations]);\r\n  useEffect(() => {\r\n    let imagescpy = [];\r\n    let Prevfilescpy = [];\r\n\r\n    if (Eventdata.length > 0) {\r\n      Eventdata.map((eve) => {\r\n        Prevfilescpy.push({ file: eve.file, type: eve.type });\r\n        imagescpy.push({\r\n          file: eve.file,\r\n          type: eve.type,\r\n        });\r\n      });\r\n    }\r\n    setimages(imagescpy);\r\n\r\n    setPrevfiles(Prevfilescpy);\r\n    console.log(images);\r\n  }, [Eventdata]);\r\n\r\n  const save = async () => {\r\n    let Album = [];\r\n    let uniqueurl =\r\n      props.Type +\r\n      Math.floor(100000 + Math.random() * 900000) +\r\n      \"/\" +\r\n      \"Album/\" +\r\n      props.match.params.id +\r\n      Eventdata[0].Name;\r\n    images.map(async (fildeata, index) => {\r\n      if (index > Prevfiles.length) {\r\n        let newurl = await uploadString(\r\n          fildeata.file,\r\n          uniqueurl + \".\" + fildeata.type\r\n        );\r\n        Album.push({ file: newurl, type: fildeata.type });\r\n      } else {\r\n        Album.push({ file: fildeata.file, type: fildeata.type });\r\n      }\r\n    });\r\n    console.log(Album);\r\n    await dispatch(uploadfiletoalbum(Album, Eventdata[0].MainCode));\r\n    setisUploaded(false);\r\n  };\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => currentmedia < images.length - 1 ? setcurrentmedia(currentmedia + 1) : setcurrentmedia(0),\r\n    onSwipedRight: () => currentmedia > 0 ? setcurrentmedia(currentmedia - 1) : setcurrentmedia(images.length - 1),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"desktop-only w-100\">\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <Addtoalbum\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        images={Prevfiles}\r\n        _id={props.match.params.id}\r\n        eventname={Name}\r\n        Type={Type}\r\n        MainCode={MainCode}\r\n        uniqurl={uniqurl}\r\n      />\r\n\r\n      <DesktopNav id={props.match.params.id} base={base} />\r\n      <MobileNav id={props.match.params.id} base={base} />\r\n\r\n      <Container style={{ margin: 0, padding: 0, marginTop: 10 }} fluid>\r\n        <Row className=\"p-0 m-0\" >\r\n          <Col xs={6}>\r\n            {\" \"}\r\n            <h3 className=\"p-5px\"> Albums</h3>\r\n          </Col>\r\n          <Col xs={6}>\r\n            {IsAdmin === true ? (\r\n              <Button\r\n                variant=\"secondary\"\r\n                style={{ width: \"30%\", float: \"right\", borderRadius: \"20px\" }}\r\n                className=\"albumedit_btn\"\r\n                onClick={() => {\r\n                  setshow(true);\r\n                }}\r\n              >\r\n                <AddPhotoAlternateIcon /> Edit\r\n              </Button>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        {images.length === 0 ? (\r\n          <>\r\n\r\n            {IsAdmin === true ? <>  {\" \"}\r\n              <img src={AlbumsNone} className=\"blank-album\" />\r\n              <br />\r\n              <h3 className=\"tac\">Add Albums😍 Now!</h3>\r\n              <p style={{ textAlign: \"center\" }}>\r\n                Share with your friends the final pictures of event any time\r\n              </p><div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"addalbums_btn\"\r\n                  onClick={() => {\r\n                    setshow(true);\r\n                  }}\r\n                >\r\n                  Add Albums\r\n                </Button>\r\n              </div></> : <>  <img src={AlbumsNone} className=\"blank-album\" /> <br />\r\n              <h3 className=\"tac\">No Albums😍 Yet!</h3>\r\n            </>}\r\n\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* <Swiper {...params}>\r\n              {images.map((img) => (\r\n                <div>\r\n                  <Image\r\n                    alt=\"img\"\r\n                    src={img.file}\r\n                    fluid\r\n                    className=\"image-gallery-image\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Swiper> */}\r\n            <Row  {...handlers} style={{ marginTop: 0, position: 'fixed', top: '10vh', outline: 'none', left: 0, margin: 0, height: '65vh' }}>\r\n              {images.map((post, index) => (\r\n\r\n                post.file !== \"\" && index === currentmedia ?\r\n                  <img className=\"Media\" src={post.file} key={index} onClick={() => { setcurrentmedia(index) }} onmo /> : <></>)\r\n              )}\r\n\r\n            </Row>\r\n            <Row style={{ marginTop: 5, position: 'fixed', bottom: '15vh', overflowX: 'scroll', width: '100vw', margin: 0, left: 0 }}>\r\n              {images.map((post, index) => (\r\n                post.fileurl !== \"\" ?\r\n                  <img className=\"item-options\" src={post.file} key={index} onClick={() => { setcurrentmedia(index) }} />\r\n                  : <></>)\r\n              )}\r\n\r\n\r\n            </Row>\r\n\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\RSVP\\Rsvp.js",["594","595","596"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import \"../EventInfo/EventInfo.css\";\r\nimport { Carousel, Button } from \"react-bootstrap\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport history from \"../../../Utils/History\";\r\nimport \"./Rsvp.css\";\r\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\r\nexport default function Rsvp(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [base, setbase] = useState(\"\");\r\n  const Eventdata1 = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  const Eventdata2 = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  useEffect(async () => {\r\n    if (props.location.pathname === \"/MyEvents/rsvp/\" + props.match.params.id) {\r\n      await setbase(\"MyEvents\");\r\n      setEventdata(Eventdata2);\r\n    } else {\r\n      await setbase(\"inv\");\r\n      setEventdata(Eventdata1);\r\n    }\r\n  }, []);\r\n  const Next = async (i) => {\r\n    if (Eventdata && Eventdata.length > 0) {\r\n      console.log(i, Eventdata.length);\r\n      if (i < Eventdata.length) {\r\n        setindex(i);\r\n        setdirection(\"next\");\r\n      } else {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n        await dispatch(getNotification())\r\n        history.goBack()\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const [index, setindex] = useState(0);\r\n\r\n  const [direction, setdirection] = useState(\"\");\r\n\r\n  const handleSelect = (index) => {\r\n    let newIndex = index + 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*  <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav />\r\n      <Toggler /> */}\r\n      <Carousel\r\n        controls={false}\r\n        direction={direction}\r\n        onSelect={(i) => {\r\n          handleSelect(i);\r\n        }}\r\n        activeIndex={index}\r\n        interval={99999999999999}\r\n      >\r\n        {base === \"inv\"\r\n          ? Eventdata1 &&\r\n          Eventdata1.map((eve, index) => (\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block rsvpimage\"\r\n                src={eve.file}\r\n                alt=\"First slide\"\r\n              />\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain \"\r\n                    onClick={async () => {\r\n\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))\r\n          : Eventdata2 &&\r\n          Eventdata2.map((eve, index) => (\r\n            <Carousel.Item>\r\n              {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  className=\"d-block rsvpimage\"\r\n                  src={eve.file}\r\n                  alt=\"First slide\"\r\n                />) : (\r\n                <video\r\n                  muted\r\n                  type=\"video/mp4\"\r\n                  autoPlay={true}\r\n                  src={\r\n                    eve.file\r\n                  }\r\n                  preload=\"none\"\r\n                  className=\"d-block rsvpimage\"\r\n                />\r\n              )}\r\n\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain \"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\jitsi\\Jitsivc.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Location Offline\\LocationOffline.js",["597","598","599","600","601","602","603","604","605","606","607"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Guest\\Guest.js",["608","609","610","611","612","613","614","615"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Tab, Tabs } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"../Guest/Guest.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { IoMdPersonAdd } from \"react-icons/io\";\r\nimport history from \"../../Utils/History\";\r\nimport Userdataurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\nimport {\r\n  addCohost,\r\n  removeCohost,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport _ from \"lodash\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nexport default function Guest(props) {\r\n  const dispatch = useDispatch();\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [Hosts, setHosts] = useState([]);\r\n  const [guestList, setguestList] = useState([]);\r\n  const [guestListaccept, setguestListaccept] = useState([]);\r\n  const [guestListdecline, setguestListdecline] = useState([]);\r\n  const [guestListmaybe, setguestListmaybe] = useState([]);\r\n  const [shouldchange, setshouldchange] = useState(false);\r\n  const [eid, seteid] = useState(\"\");\r\n  const [isAdmin, setisAdmin] = useState(false);\r\n  const [base, setbase] = useState(\"\");\r\n  useEffect(async () => {\r\n    let RSVPList = [];\r\n    let Participants = [];\r\n    let accept = [];\r\n    let decline = [];\r\n    let maybe = [];\r\n    let data = [];\r\n    let all = [];\r\n    if (\r\n      props.location.pathname ===\r\n      \"/MyEvents/guestlist/\" +\r\n      props.match.params.id +\r\n      \"/\" +\r\n      props.match.params.invno &&\r\n      MyEvents.length > 0\r\n    ) {\r\n      data = MyEvents[props.match.params.id][props.match.params.invno];\r\n      await setbase(\"MyEvents\");\r\n    } else {\r\n      data = myInvitations[props.match.params.id][props.match.params.invno];\r\n      await setbase(\"inv\");\r\n    }\r\n\r\n    RSVPList = _.orderBy(data.RSVPList, \"By\", \"asc\");\r\n    Participants = [...data.Participants, ...data.Host].sort();\r\n    await setguestList(Participants);\r\n    await setHosts(data.Host);\r\n    await seteid(data._id);\r\n    if (data.Host.includes(Auth.Phone)) {\r\n      await setisAdmin(true);\r\n    } else {\r\n      await setisAdmin(false);\r\n    }\r\n    RSVPList.map((rsvp) => {\r\n      if (Participants.includes(rsvp.By)) {\r\n        if (rsvp.Status === \"Accept\") {\r\n          accept.push(rsvp);\r\n        }\r\n        if (rsvp.Status === \"Decline\") {\r\n          decline.push(rsvp);\r\n        }\r\n        if (rsvp.Status === \"May Be\") {\r\n          maybe.push(rsvp);\r\n        }\r\n      }\r\n    });\r\n    let allrsvp = [...accept, ...decline, ...maybe];\r\n\r\n    for (let i = 0; i < Participants.length; i++) {\r\n      let Status = \"Invited\";\r\n      let found = false;\r\n      for (let j = 0; j < allrsvp.length; j++) {\r\n        if (allrsvp[j].By === Participants[i]) {\r\n          found = true;\r\n          Status = allrsvp[j].Status;\r\n        }\r\n      }\r\n      all.push({ By: Participants[i], Status: Status });\r\n      found = false;\r\n    }\r\n    await setshouldchange(true);\r\n    await setguestList(all);\r\n    await setguestListaccept(accept);\r\n    await setguestListdecline(decline);\r\n    await setguestListmaybe(maybe);\r\n  }, [myInvitations, MyEvents]);\r\n  return (\r\n    <div>\r\n      <div className=\"desktop-only w-100\">\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <Container className=\"guest-box\">\r\n        <Row\r\n          style={{\r\n            marginTop: 30,\r\n            marginRight: 3,\r\n            marginLeft: 3,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Col xs={9}>\r\n            <p style={{ fontWeight: \"bold\", fontSize: 20 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={32}\r\n                onClick={() => {\r\n                  console.log(\r\n                    \"/\" + base + \"/eventpage/\" + props.match.params.id\r\n                  );\r\n                  history.push(\r\n                    \"/\" + base + \"/eventpage/\" + props.match.params.id\r\n                  );\r\n                }}\r\n              />\r\n              View Guest\r\n            </p>\r\n          </Col>\r\n          <Col>\r\n            {isAdmin === true ? (\r\n              <span\r\n                style={{ fontWeight: \"500\", fontSize: 20 }}\r\n                onClick={() => {\r\n                  history.push(\r\n                    \"/MyEvents\" +\r\n                    \"/Manage-GuestList/\" +\r\n                    props.match.params.id +\r\n                    \"/\" +\r\n                    props.match.params.invno\r\n                  );\r\n                }}\r\n              >\r\n                <IoMdPersonAdd />\r\n                <span className=\"manage_guest\">Manage Guests</span>\r\n              </span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row\r\n          style={{\r\n            fontSize: \"14px\",\r\n            fontWeight: \"600\",\r\n            marginLeft: \"auto\",\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Col>\r\n            <Tabs defaultActiveKey=\"All\" className=\"tabs_guestlist\">\r\n              <Tab eventKey=\"All\" title=\"All\">\r\n                {guestList.map((guest) => (\r\n                  <Grid className=\"p-5px\" container spacing={0}>\r\n                    <Grid item xs={2} md={1}>\r\n                      <Userdataurl showIcon={true} Phone={guest.By} />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Grid item xs={12} className=\"m-0 \">\r\n                        <Userdataurl showName={true} Phone={guest.By} />\r\n                      </Grid>\r\n                      <Grid item xs={12} className=\"m-0 \">\r\n                        <span\r\n                          className={\r\n                            \"status \" + guest.Status === \"Accept\"\r\n                              ? \"user-accept\"\r\n                              : guest.Status === \"Decline\"\r\n                                ? \"user-decline\"\r\n                                : guest.Status === \"May Be\"\r\n                                  ? \"user-maybe\"\r\n                                  : \"user-invited\"\r\n                          }\r\n                        >\r\n                          {guest.Status}\r\n                        </span>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      {isAdmin === true ? (\r\n                        Hosts.includes(guest.By) === false ? (\r\n                          <>\r\n                            {shouldchange === false ? (\r\n                              <>...</>\r\n                            ) : (\r\n                              <button\r\n                                className=\"addHostButton\"\r\n                                onClick={async () => {\r\n                                  setshouldchange(false);\r\n                                  await dispatch(addCohost(eid, guest.By));\r\n                                }}\r\n                                onDoubleClick={async () => {\r\n                                  setshouldchange(false);\r\n                                  await dispatch(addCohost(eid, guest.By));\r\n                                }}\r\n                              >\r\n                                <>\r\n                                  {\" \"}\r\n                                  <StarsIcon /> Add Co-Host\r\n                                </>\r\n                              </button>\r\n                            )}\r\n                          </>\r\n                        ) : guest.By !== Auth.Phone ? (\r\n                          <center>\r\n                            {\" \"}\r\n                            {shouldchange === false ? (\r\n                              <>...</>\r\n                            ) : (\r\n                              <button\r\n                                className=\"removeHostButton\"\r\n                                onClick={async () => {\r\n                                  setshouldchange(false);\r\n                                  await dispatch(removeCohost(eid, guest.By));\r\n                                }}\r\n                                onDoubleClick={async () => {\r\n                                  setshouldchange(false);\r\n                                  await dispatch(removeCohost(eid, guest.By));\r\n                                }}\r\n                              >\r\n                                <>\r\n                                  {\" \"}\r\n                                  <StarsIcon /> Remove\r\n                                </>\r\n                              </button>\r\n                            )}\r\n                          </center>\r\n                        ) : (\r\n                          <center>\r\n                            <StarsIcon />\r\n                          </center>\r\n                        )\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </Tab>\r\n\r\n              <Tab eventKey=\"Accept\" title=\"Accept\">\r\n                {guestListaccept.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n              <Tab eventKey=\"Decline\" title=\"Decline\">\r\n                {guestListdecline.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n              <Tab eventKey=\"Maybe\" title=\"Maybe\">\r\n                {guestListmaybe.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Guest\\ManageGuest.js",["616","617","618","619","620","621","622","623","624","625","626","627","628","629"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  ListGroup,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"../Guest/Guest.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport Userdataurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport {\r\n  update_participants,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport default function ManageGuest(props) {\r\n  const dispatch = useDispatch();\r\n  const [isDisable, setDisabled] = useState(true);\r\n  const [list, setlist] = useState([]);\r\n  const [guestList, setguestList] = useState([]);\r\n  const [isMobile, SetIsMobile] = useState(false);\r\n  const [_id, Set_id] = useState(\"\");\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  let supported = \"\";\r\n  const [base, setbase] = useState(\"\");\r\n\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  let attribute = [\"name\", \"tel\"];\r\n  const opts = { multiple: true };\r\n\r\n  useEffect(async () => {\r\n    supported = \"contacts\" in navigator && \"ContactsManager\" in window;\r\n    if (supported === true) {\r\n      SetIsMobile(true);\r\n    } else {\r\n      SetIsMobile(false);\r\n    }\r\n  }, []);\r\n\r\n  const readExcel = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n\r\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n\r\n        const wsname = wb.SheetNames[0];\r\n\r\n        const ws = wb.Sheets[wsname];\r\n\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n        resolve(data);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        console.log(error);\r\n        reject(error);\r\n      };\r\n    });\r\n\r\n    promise.then((d) => {\r\n      console.log(d);\r\n      let result = d.map((data) => data.Contact);\r\n\r\n      console.log(result);\r\n      let Status = \"\";\r\n      result = result.map((data) => {\r\n        if (typeof data === \"string\") {\r\n          if (data.includes(\"+\")) {\r\n          } else {\r\n            data = \"+91\" + data;\r\n          }\r\n        } else {\r\n          data = \"+91\" + data;\r\n        }\r\n        let jdata = { By: data, Status: Status };\r\n        return jdata;\r\n      });\r\n      console.log(result);\r\n      setguestList([...guestList, ...result]);\r\n      setlist([...guestList, ...result]);\r\n      setDisabled(false);\r\n    });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let Listcpy = [];\r\n    let accept = [];\r\n    let decline = [];\r\n    let maybe = [];\r\n    let RSVPList = []\r\n    let all = [];\r\n    let Participants = [];\r\n    if (\r\n      props.location.pathname ===\r\n      \"/MyEvents/Manage-GuestList/\" +\r\n      props.match.params.id +\r\n      \"/\" +\r\n      props.match.params.invno\r\n    ) {\r\n      await setEventdata(MyEvents[props.match.params.id]);\r\n      await setbase(\"MyEvents\");\r\n      await Set_id(MyEvents[props.match.params.id][props.match.params.invno]._id);\r\n      await setguestList(MyEvents[props.match.params.id][props.match.params.invno].RSVPList);\r\n      RSVPList = MyEvents[props.match.params.id][props.match.params.invno].RSVPList;\r\n      Participants = MyEvents[props.match.params.id][props.match.params.invno].Participants\r\n    } else {\r\n      await setEventdata(myInvitations[props.match.params.id]);\r\n      await setbase(\"inv\");\r\n      await Set_id(myInvitations[props.match.params.id][props.match.params.invno]._id);\r\n      await setguestList(myInvitations[props.match.params.id][props.match.params.invno].RSVPList);\r\n      RSVPList = myInvitations[props.match.params.id][props.match.params.invno].RSVPList;\r\n      Participants = MyEvents[props.match.params.id][props.match.params.invno].Participants\r\n    }\r\n    RSVPList.map((rsvp) => {\r\n      if (rsvp.Status === \"Accept\") {\r\n        accept.push(rsvp);\r\n      }\r\n      if (rsvp.Status === \"Decline\") {\r\n        decline.push(rsvp);\r\n      }\r\n      if (rsvp.Status === \"May Be\") {\r\n        maybe.push(rsvp);\r\n      }\r\n    });\r\n\r\n    let allrsvp = accept.concat(decline);\r\n    allrsvp = allrsvp.concat(maybe);\r\n    let Status = \"invited\";\r\n    for (let j = 0; j < Participants.length; j++) {\r\n      let Status = \"invited\";\r\n      let found = false;\r\n      for (let k = 0; k < allrsvp.length; k++) {\r\n        if (\r\n          allrsvp[k].By === Participants[j] ||\r\n          allrsvp[k].By === \"+91\" + Participants[j]\r\n        ) {\r\n          Status = allrsvp[k].Status;\r\n          found = true;\r\n          break;\r\n        } else {\r\n        }\r\n      }\r\n\r\n      if (Participants[j].toString().startsWith(\"+\")) {\r\n        Listcpy.push(Participants[j]);\r\n        all.push({ By: Participants[j], Status: Status });\r\n      } else {\r\n        Listcpy.push(\"+91\" + Participants[j]);\r\n        all.push({ By: \"+91\" + Participants[j], Status: Status });\r\n      }\r\n      found = false;\r\n    }\r\n    setlist(all);\r\n    setguestList(all);\r\n  }, [MyEvents]);\r\n\r\n  const deleteparticipant = async (by) => {\r\n    let all = guestList;\r\n\r\n    all = all.filter((allcontact) => {\r\n      return by != allcontact.By;\r\n    });\r\n    console.log(all);\r\n    await setguestList([]);\r\n    await setguestList(all);\r\n  };\r\n  const removeall = () => {\r\n    setguestList([]);\r\n    setDisabled(false);\r\n  };\r\n  const openContactPicker = async () => {\r\n    try {\r\n      let ldata = [];\r\n      let number = \"\";\r\n      const contacts = await navigator.contacts.select(attribute, opts);\r\n\r\n      contacts.map(async (contact) => {\r\n        if (contact.tel.length > 1) {\r\n          if (contact.tel[0].includes(\"+\")) {\r\n            await ldata.push(contact.tel[0]);\r\n          } else {\r\n            await ldata.push('+91' + contact.tel[0]);\r\n          }\r\n\r\n\r\n        } else {\r\n          await ldata.push(contact.tel[0]);\r\n        }\r\n      });\r\n\r\n      console.log(ldata);\r\n      let Status = \"\";\r\n      ldata = ldata.map((data) => {\r\n        if (typeof data === \"string\") {\r\n          if (data.startsWith(\"+\")) {\r\n          } else {\r\n            data = \"+91\" + data;\r\n          }\r\n        } else {\r\n          data = \"+91\" + data;\r\n        }\r\n        let jdata = { By: data, Status: Status };\r\n        return jdata;\r\n      });\r\n      console.log(ldata);\r\n      setguestList([...guestList, ...ldata]);\r\n      setlist(ldata);\r\n      setDisabled(false);\r\n      await setlist([...ldata]);\r\n      console.log(_id);\r\n      let participants = [...ldata];\r\n      // await dispatch(update_participants(_id, participants));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  function save() {\r\n    let listdata = [];\r\n    guestList.map((data) => {\r\n      listdata.push(data.By);\r\n    });\r\n    setguestList(guestList);\r\n    setlist(guestList);\r\n    setDisabled(true);\r\n    dispatch(update_participants(_id, listdata));\r\n  }\r\n  function cancelchanges() {\r\n    setguestList(list);\r\n    setDisabled(true);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        animation={false}\r\n        className=\"delete-modal\"\r\n      >\r\n        {/* <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\"></Modal.Title>\r\n      </Modal.Header> */}\r\n        <Modal.Body>\r\n          <p> Do You Want to Remove all Participants ?</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleClose} variant=\"danger\">\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} variant=\"success\">\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Container className=\"guest-box\">\r\n        <Row style={{ marginTop: 30, marginRight: 3, marginLeft: 3 }}>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            />\r\n            Manage Guest\r\n          </p>\r\n        </Row>\r\n        <Row className=\"m-1\">\r\n          <Col xs={false} md={6}></Col>\r\n          <Col>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"w-100 label\"\r\n              onClick={() => {\r\n                removeall();\r\n              }}\r\n            >\r\n              Remove All\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              variant=\"info\"\r\n              className=\"w-100 label\"\r\n              style={{ display: isMobile === true ? \"block\" : \"none\" }}\r\n              onClick={() => {\r\n                openContactPicker();\r\n              }}\r\n            >\r\n              Add Participants\r\n            </Button>\r\n            <>\r\n              <label\r\n                htmlFor=\"input\"\r\n                className=\"btn btn-info label\"\r\n                style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n              >\r\n                Add Participants\r\n              </label>\r\n              <input\r\n                id=\"input\"\r\n                type=\"file\"\r\n                accept=\".xlsx\"\r\n                onChange={(e) => {\r\n                  const file = e.target.files[0];\r\n                  readExcel(file);\r\n                }}\r\n                placeholder=\"Add Participants\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <ListGroup className=\"list-data\">\r\n              {guestList.map((guest, index) => (\r\n                <ListGroup.Item className=\"m-1\">\r\n                  <Row className=\"m-0 \">\r\n                    <Col xs={2} md={1}>\r\n                      <Userdataurl\r\n                        showIcon={true}\r\n                        Phone={guest.By}\r\n                        key={index}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Row className=\"m-0\" style={{ fontSize: '14px', fontWeight: '600' }}>\r\n                        <Userdataurl showName={true} Phone={guest.By} />\r\n                      </Row>\r\n                      <Row className=\"m-0 \">\r\n                        <span\r\n                          className={\r\n                            \"status \" + guest.Status === \"Accept\"\r\n                              ? \"user-accept \"\r\n                              : guest.Status === \"Decline\"\r\n                                ? \"user-decline\"\r\n                                : guest.Status === \"May Be\"\r\n                                  ? \"user-maybe\"\r\n                                  : \"user-invited\"\r\n                          }\r\n                        >\r\n                          {guest.Status || \"\"}\r\n                        </span>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={2} md={1}>\r\n                      <HighlightOffRoundedIcon\r\n                        color=\"error\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          setDisabled(false);\r\n                          deleteparticipant(guest.By);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n              {/* {list.map((item) => (\r\n                <ListGroup.Item className=\"m-1\">\r\n                  <Row className=\"m-0 \">\r\n                    <Col xs={2} md={1}>\r\n                      <Userdataurl showIcon={true} Phone={item} />\r\n                    </Col>\r\n                    <Col xs={8} md={10}>\r\n                      <Row className=\"m-0 \">\r\n                        <Userdataurl showName={true} Phone={item} />\r\n                      </Row>\r\n                      <Row className=\"m-0 \"></Row>\r\n                    </Col>\r\n                    <Col xs={2} md={1}>\r\n                      <HighlightOffRoundedIcon color=\"error\" fontSize=\"large\" />\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))} */}\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n        {isDisable === true ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"lg\"\r\n              className=\"fr label\"\r\n              onClick={() => {\r\n                cancelchanges();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              className=\"fr label\"\r\n              onClick={() => {\r\n                save();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Sidebar\\SidebarMore.js",["630","631","632","633","634","635","636","637","638","639","640","641","642","643"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { IoArrowBackCircleOutline, IoCall } from \"react-icons/io5\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport DancingImg from \"../../Assets/DancingImg.png\";\r\nimport { GoBook } from \"react-icons/go\";\r\nimport { IoPowerSharp, IoTrashOutline, IoShareSocialOutline } from \"react-icons/io5\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations, deleteInvite\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { logout } from '../../Redux/DispatchFuncitons/AuthFunctions'\r\nimport { Modal } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nexport default function SidebarMore(props) {\r\n  const [base, setbase] = useState(\"\");\r\n  const [ishost, setishost] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const [showPopup, toggleShowPopup] = useState(false)\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (props.location.pathname === \"/MyEvents/more/\" + props.match.params.id && MyEvents.length > 0) {\r\n        await setEventdata(MyEvents[props.match.params.id])\r\n        await setbase(\"MyEvents\");\r\n        console.log(Eventdata)\r\n        var Host = MyEvents[props.match.params.id][0].Host;\r\n        for (var i = 0; i < Host.length; i++) {\r\n          if (Host[i] === Auth.Phone) {\r\n            await setishost(true);\r\n            console.log(ishost)\r\n          }\r\n        }\r\n      } else if (props.location.pathname === \"/inv/more/\" + props.match.params.id && myInvitations.length > 0) {\r\n\r\n        await setEventdata(myInvitations[props.match.params.id])\r\n        await setbase(\"inv\");\r\n        console.log(Eventdata)\r\n        var Host = myInvitations[props.match.params.id][0].Host;\r\n        for (var i = 0; i < Host.length; i++) {\r\n          if (Host[i] === Auth.Phone) {\r\n            await setishost(true);\r\n            console.log(ishost)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [myInvitations, MyEvents]);\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"modal\"\r\n        open={showPopup}\r\n      >\r\n        <div className=\"modal-card\">\r\n          <IconButton\r\n            className=\"popup-close\"\r\n            onClick={() => {\r\n              toggleShowPopup(false);\r\n            }}\r\n          >\r\n            <CancelIcon color=\"secondary\" fontSize=\"large\" />\r\n          </IconButton>\r\n          <Row className=\"m-0\"><center><h3 style={{ fontSize: 20, textAlign: 'center', fontWeight: 400 }}>\r\n            Do you want to delete this invite?</h3></center>\r\n          </Row>\r\n          <Row className=\"m-0\" style={{ paddingTop: 20 }}>\r\n            <Col><Button variant=\"danger\"\r\n              style={{ borderRadius: 20 }}\r\n              className=\"w-100\" onClick={() => {\r\n                dispatch(deleteInvite(Eventdata[0].MainCode))\r\n              }} >Yes</Button>\r\n            </Col>\r\n            <Col><Button variant=\"primary\"\r\n              style={{ borderRadius: 20 }} className=\"w-100\" onClick={() => {\r\n                toggleShowPopup(false);\r\n              }}>No</Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\r\n        <Row>\r\n          <Col>\r\n            <p\r\n              style={{\r\n                fontWeight: 600,\r\n                fontSize: 20,\r\n                paddingLeft: \"10px\",\r\n                marginBottom: 20,\r\n                marginTop: 20,\r\n\r\n              }}\r\n            >\r\n              <IoArrowBackCircleOutline\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              More\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Image src={DancingImg} className=\"sidebar_img\" />\r\n        <a\r\n          className=\"linkto-rows\"\r\n          onClick={() => {\r\n            history.push(\"../\" + \"story/\" + props.match.params.id);\r\n          }}\r\n        >\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <GoBook size=\"25\" /> Our Story\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        {ishost === true ? (\r\n          <a\r\n            className=\"linkto-rows\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/\" + 'event-create-success/' + Eventdata[0].MainCode + '/Share');\r\n            }}\r\n          >\r\n            <Row className=\"sidebar-rows\">\r\n              <Col xs={8}>\r\n                <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                  <IoShareSocialOutline size=\"25\" /> Share\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p>\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </a>) : <></>}\r\n        <a\r\n          className=\"linkto-rows\"\r\n          onClick={() => {\r\n            toggleShowPopup(true)\r\n            // dispatch(deleteInvite(Eventdata[0].MainCode))\r\n          }}\r\n        >\r\n          <Row className=\"sidebar-rows\">\r\n            <Col xs={8}>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                {\" \"}\r\n                <IoTrashOutline size=\"25\" /> Delete Invite\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        {ishost === true ? (\r\n          <a\r\n            className=\"linkto-rows\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/\" + \"admin/\" + props.match.params.id);\r\n            }}\r\n          >\r\n            <Row className=\"sidebar-rows\">\r\n              <Col>\r\n                <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                  <FaUserAlt size=\"20\" /> Admin\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p>\r\n                  {\" \"}\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n\r\n        <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <IoCall size=\"25\" /> Contact Us\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        <a className=\"linkto-rows\" onClick={() => { dispatch(logout()) }}>\r\n          <Row className=\"sidebar-rows\">\r\n\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <IoPowerSharp size=\"25\" /> Logout\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n\r\n        {/* <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Recommendaton</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        {/*  <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Prices</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Sidebar\\AdminSidebar.js",["644"],"import React from \"react\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nexport default function AdminSidebar(props) {\r\n  let Eventdata = [];\r\n  let base = \"\";\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  if (props.location.pathname === \"/MyEvents/admin/\" + props.match.params.id) {\r\n    Eventdata = MyEvents;\r\n    base = \"MyEvents\";\r\n  } else {\r\n    Eventdata = myInvitations;\r\n    base = \"inv\";\r\n  }\r\n  console.log(Eventdata);\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\r\n        <Row>\r\n          <Col>\r\n            <p style={{\r\n              fontWeight: 600,\r\n              fontSize: 20,\r\n              paddingLeft: \"10px\",\r\n              marginBottom: 20,\r\n              marginTop: 20,\r\n\r\n            }}>\r\n              <IoArrowBackCircleOutline\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Admin\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        {Eventdata &&\r\n          Eventdata.map((eventdata, index) => (\r\n            <a\r\n              className=\"linkto-rows\"\r\n              onClick={() => {\r\n                history.push(\r\n                  \"/\" + base + \"/admin/\" + props.match.params.id + \"/\" + index\r\n                );\r\n              }}\r\n            >\r\n              <Row className=\"sidebar-rows\">\r\n                <Col style={{ margin: \"auto\", padding: \"10px\" }}>{eventdata.Name}</Col>\r\n                <Col>\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </Col>\r\n              </Row>\r\n            </a>\r\n          ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Admin\\EventAdmin.js",["645","646","647","648","649","650","651"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"./EventAdmin.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport axios from \"axios\";\r\nimport { GetEvents } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function EventAdmin(props) {\r\n  const dispatch = useDispatch();\r\n  const [options, setoptions] = useState({\r\n    labels: [\"Yes\", \"No\", \"Maybe\", \"N/A\"],\r\n    colors: [\"#008744\", \"#E74D5F\", \"#FFA700\", \"#0000fa\"],\r\n  });\r\n  const [series, setseries] = useState([1, 1, 1, 1]);\r\n  const [comment, setcomment] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [Eventdata, setEventdata] = useState(\"\")\r\n  const [Rsvplist, setRsvplist] = useState([])\r\n  let MyEvents = useSelector(\r\n    (state) =>\r\n      state.Eventdata.myEvents\r\n  );\r\n\r\n  useEffect(async () => {\r\n    if (MyEvents && MyEvents.length > 0) {\r\n      let Rsvplistcpy = []\r\n      let accept = [];\r\n      let decline = [];\r\n      let maybe = [];\r\n      let Participants = []\r\n      let Host = []\r\n      let all = []\r\n      await setEventdata(MyEvents[props.match.params.id][props.match.params.eid])\r\n      await setRsvplist(MyEvents[props.match.params.id][props.match.params.eid].RSVPList)\r\n      Participants = MyEvents[props.match.params.id][props.match.params.eid].Participants;\r\n      Host = MyEvents[props.match.params.id][props.match.params.eid].Host;\r\n      if (MyEvents[props.match.params.id][props.match.params.eid].RSVPList !== undefined || MyEvents[props.match.params.id][props.match.params.eid].RSVPList.length > 0) {\r\n        Rsvplistcpy = [...MyEvents[props.match.params.id][props.match.params.eid].RSVPList] || [];\r\n\r\n        Rsvplistcpy.map((rsvp) => {\r\n          if (!Host.includes(rsvp.By)) {\r\n            if (rsvp.Status === \"Accept\") {\r\n              accept.push(rsvp);\r\n            }\r\n            if (rsvp.Status === \"Decline\") {\r\n              decline.push(rsvp);\r\n            }\r\n            if (rsvp.Status === \"May Be\") {\r\n              maybe.push(rsvp);\r\n            }\r\n          }\r\n\r\n        });\r\n        let allrsvp = accept.concat(decline);\r\n        allrsvp = allrsvp.concat(maybe);\r\n        for (let j = 0; j < Participants.length; j++) {\r\n          let Status = \"invited\";\r\n          let found = false;\r\n          for (let k = 0; k < allrsvp.length; k++) {\r\n            if (\r\n              allrsvp[k].By === Participants[j] ||\r\n              allrsvp[k].By === \"+91\" + Participants[j]\r\n            ) {\r\n              Status = allrsvp[k].Status;\r\n              found = true;\r\n              break;\r\n            } else {\r\n              console.log(\"x\");\r\n            }\r\n          }\r\n\r\n          if (Participants[j].toString().startsWith(\"+\")) {\r\n            all.push({ By: Participants[j], Status: Status });\r\n          } else {\r\n            all.push({ By: \"+91\" + Participants[j], Status: Status });\r\n          }\r\n          found = false;\r\n        }\r\n        setseries([accept.length, decline.length, maybe.length, Participants.length - (accept.length + decline.length + maybe.length)]);\r\n        console.log(90, [accept.length, decline.length, maybe.length, Participants.length - (accept.length + decline.length + maybe.length)])\r\n      }\r\n      else {\r\n        setseries([0, 0, 0, Participants.length]);\r\n        console.log(94, [0, 0, 0, Participants.length])\r\n      }\r\n    } else {\r\n      await dispatch(GetEvents());\r\n\r\n    }\r\n\r\n  }, [MyEvents])\r\n  const submit = () => {\r\n    if (comment !== \"\") {\r\n      console.log({\r\n        message: comment,\r\n        Participants: Eventdata.Participants,\r\n        by: Auth.Phone,\r\n        img: Eventdata.file,\r\n        Eid: Eventdata._id,\r\n        Maincode: Eventdata.MainCode,\r\n      });\r\n\r\n      axios\r\n        .post(url + \"notification/sendNotifications\", {\r\n          message: comment,\r\n          Participants: Eventdata.Participants,\r\n          by: Auth.Phone,\r\n          img: Eventdata.file,\r\n          Eid: Eventdata._id,\r\n          Maincode: Eventdata.MainCode,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.data) {\r\n            console.log(res.data.data);\r\n            setcomment(\"\");\r\n            alert(\"message Sent as Notification\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"message failed \");\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container style={{ marginTop: 25 }}>\r\n        <Row>\r\n          <Col>\r\n            <p style={{ fontWeight: 700, fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Event\r\n            </p>\r\n          </Col>\r\n          <Col>\r\n            {/* <Button\r\n                  variant=\"dark\"\r\n                  style={{ float: \"right\", borderRadius: 20 }}\r\n                  className=\"edit-eventbtn\"\r\n                  onClick={() => {\r\n                    history.push(\r\n                      \"/\" + base + \"/Manage-Event/\" +\r\n                      props.match.params.id +\r\n                      \"/\" +\r\n                      props.match.params.eid\r\n                    );\r\n                  }}\r\n                >\r\n                  Edit Event\r\n                </Button> */}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Chart\r\n          options={options}\r\n          series={series}\r\n          type=\"donut\"\r\n          width=\"400\"\r\n          style={{\r\n            margin: \"auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        />\r\n        <Row style={{ justifyContent: \"center\" }}>\r\n          <Col>\r\n            {Eventdata && Eventdata.EntryWay === \"Code\" ? <>\r\n\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className=\"tac m-b-25px clipboard\"\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(\r\n                    \"https://mobillyinvite.com/MyInvitations/\" + Eventdata.MainCode + \"/\" + Eventdata.code\r\n                  );\r\n                }}\r\n              >\r\n                <Grid container spacing={0} >\r\n                  <Grid item xs={10} md={11} className=\"link\" >\r\n                    {\"https://mobillyinvite.com/MyInvitations/xxxxx\"\r\n                    }\r\n\r\n                  </Grid>\r\n                  <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                    <FileCopyIcon className=\"v-t\" />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n            </> : <> <Grid\r\n              item\r\n              xs={12}\r\n              className=\"tac m-b-25px clipboard\"\r\n              onClick={() => {\r\n                navigator.clipboard.writeText(\r\n                  \"https://mobillyinvite.com/MyInvitations/\" +\r\n                  Eventdata.MainCode\r\n                );\r\n              }}\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={10} md={11} className=\"link\">\r\n                  {\"https://mobillyinvite.com/xxxxx\"}\r\n                </Grid>\r\n                <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                  <FileCopyIcon className=\"v-t\" />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid></>}\r\n\r\n          </Col>\r\n        </Row>\r\n        {/* <Row className=\"messageboard\">\r\n          <h3 className=\"messageboard-txt\">Message Board</h3>\r\n        </Row>\r\n        <Row style={{ justifyContent: \"center\" }}>\r\n          {\" \"}\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={6}\r\n            placeholder=\"Write text here\"\r\n            style={{ marginTop: 10 }}\r\n            onChange={(e) => {\r\n              setcomment(e.target.value);\r\n            }}\r\n            value={comment}\r\n          />\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            style={{ width: \"40vh\", borderRadius: 20, marginTop: 30 }}\r\n            onClick={() => {\r\n              submit();\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Row> */}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\EditEvent\\EditEvent.js",["652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./EditEvent.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Map from \"../Helpers/Maps/Places\";\r\nimport AddImg from \"../../Assets/AddImage.svg\";\r\nimport { Grid, Select, FormControl } from \"@material-ui/core\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\nimport Eventnamebox from \"../AddEvent/CreateEvent/EventNameBox\";\r\nimport history from \"../../Utils/History\";\r\nimport { update_events } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nexport default function EditEvent(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"lightgrey !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [base, setbase] = useState(\"\");\r\n  const [maincode, setmaincode] = useState(\"\");\r\n  const [IsSubmitted, setIsSubmitted] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n  const [isfileChanged, setisfileChanged] = useState(false);\r\n  const [changedfiles, setchangedfiles] = useState([\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n  ]);\r\n  const [urltype, seturltype] = useState(\"\");\r\n  const [selectedEvent, setselectedEvent] = useState(null);\r\n  const [_id, Set_id] = useState(\"\");\r\n  const [Type, SetType] = useState(\"Event\");\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [Fileurl, setFile] = useState(\"\");\r\n  const [Filetype, setFiletype] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Date, setDate] = useState(\"\");\r\n  const [Time, setTime] = useState(\"\");\r\n  const [VenueType, setVenueType] = useState(\"\");\r\n  const [Link, setLink] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [datacopy, setdatacopy] = useState([]);\r\n  const [urls, seturls] = useState([]);\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n\r\n  const [uniqueurl, setuniqueurl] = useState(\"\")\r\n  const checkIfEventEmpty = async () => {\r\n\r\n    if (Type === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    }\r\n    console.log(Eventdata);\r\n    let Eventcpy = [...Eventdata];\r\n    let result = true;\r\n    let incompleteeventnumber = null;\r\n    //check for event first\r\n    Eventcpy = { ...Eventdata[selectedEvent] };\r\n    if (Eventcpy.Name === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Date === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Time === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Description === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (\r\n      Eventcpy.VenueType === \"Both\" &&\r\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n    ) {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.file === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.filetype === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    }\r\n\r\n    for (let i = 0; i < Eventdata.length; i++) {\r\n      incompleteeventnumber = i;\r\n      Eventcpy = { ...Eventdata[i] };\r\n      if (Eventcpy.Name === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Date === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Time === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Description === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (\r\n        Eventcpy.VenueType === \"Both\" &&\r\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n      ) {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.file === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.filetype === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    // console.log({ status: true, selectedEvent: null, component: \"\" });\r\n    setisError(false);\r\n    return 1;\r\n    // return { status: true, selectedEvent: null, component: \"\" };\r\n  };\r\n\r\n  useEffect(async () => {\r\n    grabdata();\r\n  }, []);\r\n\r\n  async function grabdata() {\r\n    await setselectedEvent(null);\r\n    if (\r\n      props.location.pathname ===\r\n      \"/MyEvents/Manage-Event/\" +\r\n      props.match.params.id +\r\n      \"/\" +\r\n      props.match.params.invno\r\n    ) {\r\n      await setEventdata(MyEvents);\r\n      await setmaincode(MyEvents[0].MainCode);\r\n      console.log(MyEvents[0].MainCode);\r\n      await setdatacopy(JSON.stringify({ MyEvents }));\r\n      await setbase(\"MyEvents\");\r\n      await SetType(MyEvents[0].InvId.Type);\r\n      await grabUrsl(MyEvents)\r\n    } else {\r\n      await setEventdata(myInvitations);\r\n      await setmaincode(myInvitations[0].MainCode);\r\n      await setdatacopy(JSON.stringify({ myInvitations }));\r\n      await setbase(\"inv\");\r\n      await SetType(myInvitations[0].InvId.Type);\r\n      await grabUrsl(myInvitations)\r\n    }\r\n\r\n    await setselectedEvent(0);\r\n  }\r\n  useEffect(() => {\r\n    console.log(Eventdata);\r\n    if (Eventdata.length !== 0 && selectedEvent !== null) {\r\n      setName(Eventdata[selectedEvent].Name);\r\n      setFile(Eventdata[selectedEvent].file);\r\n      setFiletype(Eventdata[selectedEvent].filetype);\r\n      setDate(Eventdata[selectedEvent].Date);\r\n      setTime(Eventdata[selectedEvent].Time);\r\n      setVenueType(Eventdata[selectedEvent].VenueType);\r\n      setLink(Eventdata[selectedEvent].Link);\r\n      if (Eventdata[selectedEvent].Location !== \"\") {\r\n        console.log(\r\n          Eventdata[selectedEvent].Location.split(\":\")[3]\r\n            .split('\"}')[0]\r\n            .split('\"')[1]\r\n        );\r\n\r\n        setaddress(\r\n          Eventdata[selectedEvent].Location.split(\":\")[3]\r\n            .split('\"}')[0]\r\n            .split('\"')[1]\r\n        );\r\n      }\r\n      setLocation(Eventdata[selectedEvent].Location);\r\n      setDescription(Eventdata[selectedEvent].Description);\r\n    }\r\n  }, [selectedEvent]);\r\n  const addevent = () => {\r\n    let events = {\r\n      Name: \"\",\r\n      Participants: [],\r\n      file: \"\",\r\n      filetype: \"\",\r\n      Date: \"\",\r\n      Time: \"\",\r\n      VenueType: \"Online\",\r\n      Location: \"\",\r\n      Link: \"\",\r\n      Description: \"\",\r\n      GuestInvite: false,\r\n      Host: \"\",\r\n      Co_Host: [],\r\n      Schedule: [],\r\n    };\r\n    let Eventdatacpy = [...Eventdata];\r\n    if (Eventdatacpy.length < 4) {\r\n      Eventdatacpy.push(events);\r\n      setEventdata(Eventdatacpy);\r\n    }\r\n  };\r\n  const removeevent = () => {\r\n    let Eventdatacpy = [...Eventdata];\r\n    if (Eventdatacpy.length > 1) {\r\n      Eventdatacpy.pop();\r\n      setEventdata(Eventdatacpy);\r\n    }\r\n  };\r\n  const save = async () => {\r\n    // console.log(Eventdata);\r\n    // console.log(changedfiles);\r\n    await preserve(selectedEvent);\r\n    let ischecked = await checkIfEventEmpty();\r\n    if (ischecked === 0) {\r\n      alert(\"something is missing\");\r\n    } else {\r\n      let Eventdatacpy = [...Eventdata];\r\n\r\n      //saveuploadedfiles\r\n\r\n      //  uniqueurl = Type + Math.floor(100000 + Math.random() * 900000) + \"/\";\r\n      for (let i = 0; i < Eventdatacpy.length; i++) {\r\n        console.log(Eventdatacpy[i])\r\n        console.log(changedfiles[i])\r\n        if (changedfiles[i].ischanged === true) {\r\n          alert(\"file at index \" + i + \" has changed\");\r\n          if (urls[i] === undefined) {\r\n            alert(\"url not found\")\r\n\r\n            let newurl = await uploadString(\r\n              changedfiles[i].fileurl,\r\n              urltype + uniqueurl + \"Event_image/\" + i + Eventdatacpy[i].Name.replaceAll(\" \", '')\r\n            );\r\n            Eventdatacpy[i].file = newurl;\r\n            console.log(newurl);\r\n          } else {\r\n            alert(\"url  found\")\r\n            console.log(\"uploading file\")\r\n            let newurl = await uploadString(\r\n              changedfiles[i].fileurl,\r\n              urls[i]\r\n            );\r\n            Eventdatacpy[i].file = newurl;\r\n            console.log(newurl);\r\n            console.log(urls[i])\r\n          }\r\n        } else {\r\n        }\r\n      }\r\n\r\n      await setEventdata(Eventdatacpy);\r\n      console.log(Eventdata);\r\n      dispatch(update_events(Type, Eventdata, maincode));\r\n    }\r\n  };\r\n\r\n  const preserve = async (i) => {\r\n    let Eventdatacpy = [...Eventdata];\r\n    Eventdatacpy[selectedEvent].Name = Name;\r\n    Eventdatacpy[selectedEvent].file = Fileurl;\r\n    Eventdatacpy[selectedEvent].filetype = Filetype;\r\n    Eventdatacpy[selectedEvent].Date = Date;\r\n    Eventdatacpy[selectedEvent].Time = Time;\r\n    Eventdatacpy[selectedEvent].VenueType = VenueType;\r\n    Eventdatacpy[selectedEvent].Link = Link;\r\n    Eventdatacpy[selectedEvent].Location = Location;\r\n    Eventdatacpy[selectedEvent].Description = Description;\r\n    await setEventdata(Eventdatacpy);\r\n    await setselectedEvent(i);\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    setisfileChanged(true);\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    setFiletype(type[1]);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let filedata = reader.result;\r\n      await setFile(filedata);\r\n      // uploadfile(filedata, type);\r\n      // console.log(filedata, type);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  async function uploadfile(fileurl, type, selectedEvent) {\r\n\r\n    let changedfilescpy = [...changedfiles];\r\n    console.log(selectedEvent);\r\n    if (fileurl.includes(\"https://firebasestorage\") || fileurl === \"\") {\r\n      return false;\r\n    }\r\n    if (selectedEvent === null) {\r\n      if (!changedfilescpy[0].fileurl.includes(\"https://firebasestorage\")) {\r\n        changedfilescpy[0].fileurl = fileurl;\r\n        changedfilescpy[0].type = type;\r\n        changedfilescpy[0].ischanged = true;\r\n        changedfilescpy[0].selectedEvent = 0\r\n      }\r\n\r\n    } else {\r\n      if (!changedfilescpy[selectedEvent].fileurl.includes(\"https://firebasestorage\")) {\r\n        changedfilescpy[selectedEvent].fileurl = fileurl;\r\n        changedfilescpy[selectedEvent].type = type;\r\n        changedfilescpy[selectedEvent].ischanged = true;\r\n        changedfilescpy[selectedEvent].selectedEvent = selectedEvent\r\n      }\r\n\r\n    }\r\n    console.log(changedfilescpy)\r\n    await setchangedfiles(changedfilescpy);\r\n  }\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  async function grabUrsl(eventdata) {\r\n    let urlscpy = [];\r\n    let fileurl = \"\"\r\n    let unuls = \"\"\r\n    eventdata.map((data, index) => {\r\n      console.log(data.file)\r\n      fileurl = data.file.split(\"https://firebasestorage.googleapis.com/v0/b/mobilly-invite.appspot.com/o/\")[1].split(\"?\")[0];\r\n      fileurl = fileurl.replaceAll(\"%2F\", \"/\");\r\n      fileurl = fileurl.split(\"Mob-invited/\")[1];\r\n      console.log(fileurl);\r\n      unuls = fileurl\r\n      setuniqueurl(fileurl.split(\"/Event_image\")[0].match(/\\d+/g)[0]);\r\n      seturltype(fileurl.split(\"/Event_image\")[0].match(/[a-zA-Z]+/g)[0]);\r\n      urlscpy.push(fileurl)\r\n    })\r\n    urlscpy = urlscpy.reverse()\r\n    await seturls(urlscpy)\r\n    console.log(urlscpy)\r\n  }\r\n  useEffect(async () => {\r\n    await uploadfile(Fileurl, Filetype, selectedEvent, selectedEvent)\r\n  }, [Fileurl])\r\n  return (\r\n    <div>\r\n      {/* <Header /> */}\r\n      <Container>\r\n        <Row style={{ marginTop: 30, marginRight: 3, marginLeft: 3 }}>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            />\r\n            Edit Events\r\n          </p>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              className=\"w-100-p  m-b-10 \"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.notchedOutline,\r\n                },\r\n              }}\r\n            >\r\n              <Select\r\n                native\r\n                value={Type}\r\n                onChange={(e) => SetType(e.target.value)}\r\n                className=\"selectboxblue\"\r\n              >\r\n                <option value={Type}>{Type}</option>\r\n                {Type !== \"Wedding\" ? (\r\n                  <option value=\"Wedding\">Wedding</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Birthday\" ? (\r\n                  <option value=\"Birthday\">Birthday</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Wedding Anniversary\" ? (\r\n                  <option value=\"Wedding Anniversary\">\r\n                    Wedding Anniversary\r\n                  </option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Get Together\" ? (\r\n                  <option value=\"Get Together\">Get Together</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Formal Event\" ? (\r\n                  <option value=\"Formal Event\">Formal Event</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Select>\r\n              {IsSubmitted === true && Type === \"\" ? (\r\n                <span className=\"error p-l-5px\">please enter Type</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </FormControl>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <div className=\"noe r4vw \">\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={false} sm={1} md={2} />\r\n                <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\r\n                  Number Of Events\r\n                </Grid>\r\n                <Grid item xs={5} sm={5} md={4}>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"Cirlce tar  fl\">\r\n                        <AddCircleOutlineIcon\r\n                          className=\"l-blue-t\"\r\n                          fontSize=\"large\"\r\n                          onClick={() => {\r\n                            addevent();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"white box  fl\">{Eventdata.length}</div>\r\n                      <div className=\"Cirlce tal  fl\">\r\n                        <RemoveCircleOutlineIcon\r\n                          className=\"l-blue-t \"\r\n                          fontSize=\"large\"\r\n                          onClick={() => {\r\n                            removeevent();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Container>\r\n          <Row>\r\n            <Eventnamebox\r\n              data={Eventdata}\r\n              SelectedEvent={selectedEvent}\r\n              SelectEvent={preserve}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12}>\r\n              {Fileurl === \"\" ? (\r\n                <center>\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <img\r\n                      src={AddImg}\r\n                      className={\"add-Img \"}\r\n                    // onClick={() => {\r\n                    //   toggleShowPopup(true);\r\n                    // }}\r\n                    />{\" \"}\r\n                  </div>\r\n                </center>\r\n              ) : Fileurl !== undefined && Filetype !== undefined ? (\r\n                Filetype === \"png\" ||\r\n                  Filetype === \"jpg\" ||\r\n                  Filetype === \"jpeg\" ? (\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <img\r\n                      src={Fileurl}\r\n                      className={\"notTransparent uploaded-file w-100\"}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <video\r\n                      muted\r\n                      type=\"video/mp4\"\r\n                      autoPlay={true}\r\n                      src={Fileurl}\r\n                      preload=\"none\"\r\n                      className={\"notTransparent w-100\"}\r\n                    />\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {IsSubmitted === true && Fileurl === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <span className=\"label\">Name</span>\r\n            <TextField\r\n              id=\"outlined-basics\"\r\n              variant=\"outlined\"\r\n              className=\"w-100-p\"\r\n              size=\"small\"\r\n              value={Name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.notchedOutline,\r\n                },\r\n              }}\r\n            />\r\n            {IsSubmitted === true && Name === \"\" ? (\r\n              <span className=\"error p-l-5px\">please enter Name</span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Row>\r\n          <Row>\r\n            <Col xs={6} md={6} className=\"p-5px\">\r\n              <span className=\"label\">Time</span>\r\n              <TextField\r\n                id=\"time\"\r\n                // label=\"Time\"\r\n                variant=\"outlined\"\r\n                type=\"time\"\r\n                size=\"small\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                className=\"w-100-p \"\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                ampm={false}\r\n                value={Time}\r\n                onChange={(e) => {\r\n                  setTime(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Time === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={6} md={6} className=\"p-5px\">\r\n              <span className=\"label\">Date</span>\r\n              <TextField\r\n                id=\"date\"\r\n                // label=\"Date\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size=\"small\"\r\n                className=\"w-100-p\"\r\n                value={Date}\r\n                onChange={(e) => {\r\n                  setDate(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Date === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={6} className=\"p-5px\">\r\n              <span className=\"label\">Type</span>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                className=\"w-100-p selectboxblue pob0\"\r\n                value={VenueType}\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n                size=\"small\"\r\n              >\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Online-Inapp\");\r\n                  }}\r\n                  value=\"Online-Inapp\"\r\n                >\r\n                  Online-Inapp\r\n                </MenuItem>\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Online\");\r\n                  }}\r\n                  value=\"Online\"\r\n                >\r\n                  Online\r\n                </MenuItem>\r\n\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Offline\");\r\n                  }}\r\n                  value=\"Offline\"\r\n                >\r\n                  Offline\r\n                </MenuItem>\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Both\");\r\n                  }}\r\n                  value=\"Both\"\r\n                >\r\n                  Both\r\n                </MenuItem>\r\n              </Select>\r\n              {IsSubmitted === true && VenueType === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col\r\n              xs={6}\r\n              className=\"p-5px\"\r\n              style={{\r\n                display:\r\n                  VenueType === \"Online\" || VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              <span className=\"label\">Change Links </span>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className=\"w-100-p \"\r\n                value={Link}\r\n                onChange={(e) => {\r\n                  setLink(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Link === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col\r\n              xs={VenueType === \"Offline\" ? 6 : 12}\r\n              className=\"p-5px\"\r\n              style={{\r\n                display:\r\n                  VenueType === \"Offline\" || VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              <Map\r\n                setLocation={setLocation}\r\n                location={address}\r\n                setaddress={setaddress}\r\n                type={\"Offline\"}\r\n              />\r\n              {IsSubmitted === true && address === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={12} className=\"p-5px\">\r\n              <span className=\"label\">Description</span>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                // label=\"Description\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className=\"w-100-p m-7px \"\r\n                value={Description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Description === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n      <div className=\"update\">\r\n        <center>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"update-buttons\"\r\n            onClick={() => {\r\n              save();\r\n              setIsSubmitted(true);\r\n            }}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            className=\"update-buttons\"\r\n            onClick={() => {\r\n              //reload();\r\n              history.goBack();\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Gift\\Gift.js",["671","672","673","674","675","676","677"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Gift.css\";\r\nimport GiftBanner from \"./GiftBanner\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { url, GiftShopCategory } from \"../../Utils/Config\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport history from \"../../Utils/History\";\r\nimport {Button} from \"react-bootstrap\"\r\nimport AmazonLogo from \"../../Assets/AmazonLogo.png\";\r\nimport { FaShoppingCart } from \"react-icons/fa\";\r\nexport default function Gift(props) {\r\n  const dispatch = useDispatch();\r\n  const [gifts, setgifts] = useState([]);\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [category, setcategory] = useState(\"\");\r\n  const [base, setbase] = useState(\"\");\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n\r\n  const redirect = () =>{\r\n    window.location.href = \"https://shop.mobillyinvite.com/\";\r\n  }\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n          \"/MyEvents/eventpage/gift/\" +\r\n            props.match.params.id +\r\n            \"/\" +\r\n            props.match.params.MainCode &&\r\n        MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id][0]);\r\n        await setbase(\"MyEvents\");\r\n        await setcategory(MyEvents[props.match.params.id][0].InvId.Type);\r\n        await getgifts(MyEvents[props.match.params.id][0].InvId.Type);\r\n      } else if (\r\n        props.location.pathname ===\r\n          \"/inv/eventpage/gift/\" +\r\n            props.match.params.id +\r\n            \"/\" +\r\n            props.match.params.MainCode &&\r\n        myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id][0]);\r\n        await setbase(\"inv\");\r\n        await setcategory(myInvitations[props.match.params.id][0].InvId.Type);\r\n        await getgifts(myInvitations[props.match.params.id][0].InvId.Type);\r\n      }\r\n    }\r\n  }, [MyEvents, myInvitations]);\r\n  function getgifts(c) {\r\n    let Category = \"\";\r\n\r\n    GiftShopCategory.map((cat, index) => {\r\n      if (cat.Name === c) {\r\n        Category = cat.id;\r\n      }\r\n    });\r\n\r\n    axios\r\n      .post(url + \"event/ListGifts\", { category: Category })\r\n      .then(function (response) {\r\n        console.log(response.data.alldata);\r\n        if (response.data.status === \"success\") {\r\n          setgifts(response.data.alldata);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <NavMobile base={base} id={props.match.params.id} />\r\n      <GiftBanner />\r\n      <Grid spacing={0} container>\r\n        <Grid xs={12} item className=\"back-navigation desktop-only p-10px\">\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginTop: 5,\r\n              marginRight: 3,\r\n              marginLeft: 3,\r\n            }}\r\n          >\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              style={{ color: \"black\" }}\r\n              onClick={() => history.goBack()}\r\n            />\r\n            <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n              Feed\r\n            </h3>\r\n          </div>\r\n        </Grid>\r\n\r\n        {gifts.map((gift, index) => (\r\n          <Grid xs={12} sm={3} item key={index}>\r\n            <Row className=\"product_card\">\r\n              <Col\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  width: \"50%\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <img src={gift.images[0].src} fluid />\r\n                <img\r\n                  src={AmazonLogo}\r\n                  style={{ height: \"15px\", objectFit: \"contain\" }}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                {\" \"}\r\n                <div className=\"product_cardbody\">\r\n                  <div className=\"card-title\">\r\n                    <h4 style={{ fontSize: 13 }}>{gift.name}</h4>\r\n                    <h3 style={{ fontSize: 13 }}>₹{gift.price}</h3>\r\n                  </div>\r\n\r\n                  <p>{gift.short_description}</p>\r\n\r\n                  <div className=\"btn-group\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() =>\r\n                        window.open(\r\n                          gift.external_url,\r\n                          \"_blank\",\r\n                          \"noopener,noreferrer\"\r\n                        )\r\n                      }\r\n                      style={{ borderRadius: \"20px\" }}\r\n                    >\r\n                      <FaShoppingCart style={{ marginRight: 5 }} />\r\n                      Buy Now\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-outline-primary\"\r\n                      onClick={() =>\r\n                        window.open(\r\n                          gift.permalink,\r\n                          \"_blank\",\r\n                          \"noopener,noreferrer\"\r\n                        )\r\n                      }\r\n                      style={{ borderRadius: \"20px\" }}\r\n                    >\r\n                      Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        ))}\r\n        <Button variant=\"primary\" style={{margin:'auto', borderRadius:'20px'}} onClick={redirect}>Load More</Button>\r\n        <Grid xs={12} item className=\"m-b-50px\"></Grid>\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\EventCreateAndUpdate\\CreateOrUpdate.js",["678"],"import React, { useState, useEffect } from 'react'\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport './CreateOrUpdate.css'\r\nexport default function CreateOrUpdate(props) {\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n    return (\r\n        <div> <Header url={props.location.pathname} ismobile=\"desktop-only\" />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\Chat.js",["679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport CList from \"./List\";\r\nimport Chatbox from \"./Chatbox\";\r\nimport \"./Chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updatechat } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport NavMobile from '../Helpers/NavMobile/NavMobile'\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Chat(props) {\r\n  const dispatch = useDispatch();\r\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\r\n  let socketurl = url.split(\"api/\");\r\n  // console.log(socketurl);\r\n  let socket = io(socketurl[0], { transports: [\"websocket\"] });\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [show, setshow] = useState(0);\r\n  const [windowwidth, setwindowwidth] = useState(1280);\r\n  const [fullscreen, setfullscreen] = useState(true);\r\n  const [SelectedGroup, setSelectedGroup] = useState(\"\");\r\n  const [inroom, setinroom] = useState(false);\r\n  let Eventdata = [];\r\n  const [base, setbase] = useState(\"\")\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const [MainCode, setMainCode] = useState(\"\");\r\n  const [allparticipants, setallparticipants] = useState([]);\r\n  const [chats, setchat] = useState([]);\r\n  const [text, settext] = useState(\"\");\r\n  const [IndvName, setIndvName] = useState(\"\");\r\n  // console.log(MyEvents);\r\n  const [IsSubmit, setIsSubmit] = useState(false);\r\n  function handleResize() {\r\n    setwindowwidth(window.innerWidth);\r\n    // console.log(window.innerWidth);\r\n    if (window.innerWidth > 959) {\r\n      setfullscreen(true);\r\n      // console.log(true);\r\n    } else {\r\n      setfullscreen(false);\r\n      // console.log(false);\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/chat/\" + props.match.params.id && MyEvents.length > 0\r\n      ) {\r\n        Eventdata = MyEvents[props.match.params.id];\r\n        await setbase(\"MyEvents\");\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/chat/\" + props.match.params.id && myInvitations.length > 0\r\n      ) {\r\n        Eventdata = myInvitations[props.match.params.id];\r\n        await setbase(\"inv\");\r\n      }\r\n      let participants = [];\r\n      Eventdata.map((singleevent) => {\r\n        singleevent.Participants.map((participant) => {\r\n          participants.push(participant);\r\n          setMainCode(singleevent.MainCode);\r\n        });\r\n      });\r\n      // console.log(participants);\r\n      participants = [...new Set(participants)];\r\n      setallparticipants(participants);\r\n    }\r\n  }, [myInvitations, MyEvents]);\r\n  useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let selectedgrpcpr = SelectedGroup;\r\n    let chat = [...chats];\r\n    socket.on(\r\n      \"init\",\r\n      () => {\r\n        socket.emit(\"connectit\", { Phone: Auth.Phone });\r\n        if (inroom === false) {\r\n          // console.log(\"join rooms\");\r\n          socket.emit(\"rooms\", { Phone: Auth.Phone });\r\n          setinroom(true);\r\n        }\r\n      },\r\n      [\"abc\"]\r\n    );\r\n\r\n    socket.on(\"joined\", (rooms) => { });\r\n    socket.once(\"msg_saved\", (data) => {\r\n      dispatch(updatechat(data, data.room));\r\n    });\r\n  });\r\n\r\n  function submit() {\r\n    socket.emit(\"message\", {\r\n      sender: Auth.Phone,\r\n      content: text,\r\n      type: \"text\",\r\n      room: SelectedGroup.room,\r\n      _id: SelectedGroup._id,\r\n    });\r\n    setIsSubmit(true);\r\n  }\r\n  function sendImage(data) {\r\n    socket.emit(\"message\", data);\r\n    setIsSubmit(true);\r\n  }\r\n  const updateName = () => {\r\n    if (SelectedGroup.Name && SelectedGroup.Type === \"INDV\") {\r\n      if (\r\n        SelectedGroup.Admin === Auth.Phone ||\r\n        \"+91\" + SelectedGroup.Admin === Auth.Phone\r\n      ) {\r\n        if (typeof SelectedGroup.Name === \"string\") {\r\n          if (SelectedGroup.Name.startsWith(\"+\")) {\r\n            setIndvName(SelectedGroup.Name);\r\n          } else {\r\n            setIndvName(\"+91\" + SelectedGroup.Name);\r\n          }\r\n        } else {\r\n          setIndvName(\"+91\" + SelectedGroup.Name);\r\n        }\r\n      } else {\r\n        if (typeof SelectedGroup.Admin === \"string\") {\r\n          if (SelectedGroup.Admin.startsWith(\"+\")) {\r\n            setIndvName(SelectedGroup.Admin);\r\n          } else {\r\n            setIndvName(\"+91\" + SelectedGroup.Admin);\r\n          }\r\n        } else {\r\n          setIndvName(\"+91\" + SelectedGroup.Admin);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={3}\r\n        className={\r\n          fullscreen === true ? \"show h93\" : show === 1 ? \"hide\" : \"show h100\"\r\n        }\r\n      >\r\n        <CList\r\n          MyEvents={MyEvents}\r\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\r\n          fullscreen={fullscreen}\r\n          allparticipants={allparticipants}\r\n          MainCode={MainCode}\r\n          setSelectedGroup={setSelectedGroup}\r\n          setshow={setshow}\r\n          chats={chats}\r\n          setchat={setchat}\r\n          updateName={updateName}\r\n          setIsSubmit={setIsSubmit}\r\n          IsSubmit={IsSubmit}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={9}\r\n        className={\r\n          fullscreen === true ? \"show h93\" : show === 0 ? \"hide\" : \"show h100\"\r\n        }\r\n      >\r\n        <Chatbox\r\n          MyEvents={MyEvents}\r\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\r\n          fullscreen={fullscreen}\r\n          allparticipants={allparticipants}\r\n          MainCode={MainCode}\r\n          setSelectedGroup={setSelectedGroup}\r\n          setshow={setshow}\r\n          chats={chats}\r\n          setchat={setchat}\r\n          updateName={updateName}\r\n          submit={submit}\r\n          text={text}\r\n          settext={settext}\r\n          SelectedGroup={SelectedGroup}\r\n          sendImage={sendImage}\r\n          setIsSubmit={setIsSubmit}\r\n          IsSubmit={IsSubmit}\r\n        />\r\n      </Grid>\r\n      <NavMobile base={base} id={props.match.params.id} />\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitaionviewToggler.js",["699","700","701","702"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport InvitaionRSVP from \"./InvitaionRSVP/InvitaionRSVP\";\r\nimport InvitaionMain from \"./InvitationMain/InvitaionMain\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nexport default function InvitaionviewToggler(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Eventdata, setEventdata] = useState(true)\r\n  const [base, setbase] = useState(\"\")\r\n\r\n  const [dataloading, setdataloading] = useState(true)\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n\r\n    } else {\r\n\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/\" + props.match.params.id && MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n        await setbase(\"MyEvents\");\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/\" + props.match.params.id && myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n        await setbase(\"inv\");\r\n      }\r\n      setdataloading(false)\r\n    }\r\n  }, [MyEvents, myInvitations])\r\n\r\n\r\n  const [evno, setevno] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [hasallrsvps, sethasallrsvps] = useState(false);\r\n  const [rsvpnumber, setrsvpnumber] = useState(0);\r\n  useEffect(() => {\r\n    if (Eventdata && evno < Eventdata.length) {\r\n      let EVcount = 0;\r\n      for (let i = 0; i < Eventdata.length; i++) {\r\n        if (Eventdata[i].RSVPList.length > 0) {\r\n          let RSVPList = Eventdata[i].RSVPList;\r\n\r\n          for (let j = 0; j < RSVPList.length; j++) {\r\n            if (RSVPList[j].By === Auth.Phone) {\r\n              EVcount++;\r\n            } else {\r\n              setrsvpnumber(i);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (EVcount === Eventdata.length) {\r\n        sethasallrsvps(true);\r\n      } else {\r\n      }\r\n    }\r\n    console.log(Eventdata);\r\n    console.log(props);\r\n  }, [Eventdata]);\r\n  return (\r\n    <>{dataloading === false ? <div>\r\n      {hasallrsvps === false ? (\r\n        <InvitaionRSVP\r\n          Eventdata={Eventdata}\r\n          setevno={setevno}\r\n          id={props.match.params.id}\r\n          sethasallrsvps={sethasallrsvps}\r\n          toggle={true}\r\n          base={base}\r\n        />\r\n      ) : (\r\n        <InvitaionMain\r\n          Eventdata={Eventdata}\r\n          id={props.match.params.id}\r\n          base={base}\r\n        />\r\n      )}\r\n    </div> : <CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} />}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\HomePage.js",["703","704"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport MainBanner from \"./MainBanner\";\r\nimport Contact from \"./ContactUs\";\r\nimport Footer from \"./Footer\";\r\nimport Testimonials from \"./Testimonials\";\r\nimport Features from \"./Features\";\r\nimport Additionals from \"./Additionals\";\r\nimport AboutBanner from \"./AboutBanner\";\r\nimport CompanySlide from \"./CompanySlide\";\r\nimport ChatWidget from \"./ChatWidget\";\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        \r\n        <MainBanner />\r\n        <ChatWidget />\r\n        <Features />\r\n        <AboutBanner />\r\n        <Additionals />\r\n        {/* <Testimonials />\r\n        <CompanySlide /> */}\r\n        <Contact />\r\n        <Footer />\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js",["705"],"import {\r\n  LOGINSUCCESS,\r\n  LOGINFAIL,\r\n  GOTOTP,\r\n  OPTEXPIRED,\r\n  OTPVERIFIED,\r\n  SAVEUSER,\r\n  LOGOUT,\r\n} from \"../Actions/AuthActions\";\r\nimport setAuthToken from \"../../Utils/Login\";\r\nimport axios from \"axios\";\r\nimport { url, testmode } from \"../../Utils/Config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport history from \"../../Utils/History\";\r\nexport function getopt(Phone) {\r\n  return (dispatch) => {\r\n    const userData = {\r\n      Phone,\r\n    };\r\n    if (Phone !== \"\") {\r\n      if (testmode === true) {\r\n        dispatch(loginuser(Phone))\r\n      } else {\r\n        axios.post(url + \"auth/send-otp\", userData).then((res) => {\r\n          console.log(res);\r\n          if (res.data.status === \"pending\") {\r\n            dispatch({\r\n              type: GOTOTP,\r\n            });\r\n          } else {\r\n          }\r\n        });\r\n      }\r\n\r\n    }\r\n  };\r\n}\r\nexport function verifyotp(Phone, code) {\r\n  return async (dispatch) => {\r\n    if (code !== \"\") {\r\n      await axios\r\n        .post(url + \"auth/verify-otp\", { Phone, code })\r\n        .then(async (res) => {\r\n          await console.log(res);\r\n          if (\r\n            res.data.status === \"checked\" &&\r\n            res.data.response === \"approved\"\r\n          ) {\r\n            console.log(res.data.data);\r\n            dispatch({\r\n              type: OTPVERIFIED,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: OPTEXPIRED,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n}\r\nexport function loginuser(Phone) {\r\n  return (dispatch) => {\r\n    const userData = {\r\n      Phone,\r\n    };\r\n    if (Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/login\", userData)\r\n        .then((res) => {\r\n          if (res.data.token) {\r\n            const token = res.data.token;\r\n            const decoded = jwt_decode(token);\r\n            setAuthToken(token);\r\n            //checkfor codeed Events\r\n            dispatch({\r\n              type: LOGINSUCCESS,\r\n              payload: res.data,\r\n            });\r\n            // history.push(\"/home\");\r\n            return \"loggedin\";\r\n          } else if (res.data.status === \"-1\") {\r\n            dispatch({\r\n              type: LOGINFAIL,\r\n              payload: res.data.message,\r\n            });\r\n          } else if (res.data.details[0].message) {\r\n            dispatch({\r\n              type: LOGINFAIL,\r\n              payload: res.data.details[0].message,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      alert(\"Auth falied\");\r\n    }\r\n  };\r\n}\r\nexport function logout(Phone) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n}\r\nexport function saveuserinfo(Name, Gender, DOB, Image, nurl) {\r\n  return (dispatch) => {\r\n    console.log(\"/\" + nurl);\r\n    const userData = {\r\n      Name: Name,\r\n      Gender: Gender,\r\n      DOB: DOB,\r\n      Image: Image,\r\n    };\r\n    if (Name !== \"\" && Gender !== \"\") {\r\n      axios\r\n        .post(url + \"auth/userinfo\", userData)\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            console.log(res.data.user);\r\n            dispatch({\r\n              type: SAVEUSER,\r\n              payload: res.data.user,\r\n            });\r\n            if (nurl !== \"\") {\r\n              history.push(\"/\" + nurl);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n}\r\nexport function getuserdata(Phone) {\r\n  const userData = {\r\n    Phone: Phone,\r\n  };\r\n  if (Phone !== \"\") {\r\n    axios\r\n      .get(url + \"auth/userinfo\", userData)\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log(res.data.user);\r\n          return res.data.user;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return { err: \"error 404\" };\r\n      });\r\n  }\r\n}\r\nexport function checktoken() {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + \"auth/verify\")\r\n      .then((res) => {\r\n        if (res.data.status !== \"valid\") {\r\n          dispatch({\r\n            type: LOGOUT,\r\n          });\r\n          history.push(\"\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: LOGOUT,\r\n        });\r\n      });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js",["706"],"import { GOTNOTIFICATIONS } from \"../Actions/NotificationAction\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nexport function getNotification() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"notification/getNotifications\").then((res) => {\r\n      dispatch({\r\n        type: GOTNOTIFICATIONS,\r\n        payload: res.data.data,\r\n      });\r\n      return true\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Config.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js",["707","708","709"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { ADDCODEDEVENT, DELETECODEDEVENT } from \"../Actions/CodeAction\";\r\nimport history from \"../../Utils/History\";\r\nexport function addEvent(Code, Maincode) {\r\n    return (dispatch) => {\r\n        dispatch({ type: ADDCODEDEVENT, payload: { Code: Code, Maincode: Maincode } });\r\n    };\r\n}\r\nexport function deleteEvent() {\r\n    return (dispatch) => {\r\n        dispatch({ type: DELETECODEDEVENT });\r\n    };\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\postfunctions.js",["710"],"import { GOTPOST } from \"../Actions/PostActions\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { GetEvents } from './Eventfunctions'\r\nimport { getNotification } from './NotificationFunctions'\r\nexport function getposts() {\r\n  return (dispatch) => {\r\n\r\n    axios.get(url + \"post/getposts\").then((res) => {\r\n      dispatch({\r\n        type: GOTPOST,\r\n        payload: res.data.data,\r\n      });\r\n      return true\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function likepost(id, by, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"post/like\", { id: id, by: by, date: dateTime, MainCode: MainCode }).then((res) => {\r\n      dispatch(getNotification());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function likecomment(id, by, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"event/likecomment\", { id: id, by: by, date: dateTime, MainCode: MainCode }).then((res) => {\r\n      dispatch(GetEvents());\r\n      dispatch(getNotification());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function addcomments(id, by, comment, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"post/comment\", { id: id, by: by, comment: comment, date: dateTime, MainCode: MainCode })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch(GetEvents());\r\n        dispatch(getNotification());\r\n        return 1;\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function addpost(id, by, furl, type, tags, caption) {\r\n  return (dispatch) => {\r\n    console.log(\"alling\");\r\n    axios\r\n      .post(url + \"post/add\", {\r\n        id: id,\r\n        by: by,\r\n        furl: furl,\r\n        type: type,\r\n        tags: tags,\r\n        caption: caption,\r\n      })\r\n      .then((res) => {\r\n        // dispatch(getposts());\r\n        dispatch(getNotification());\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js",["711","712","713"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport history from \"../../Utils/History\";\r\nimport { SAVECHATS, GOTCHATS, UPDATECHAT } from \"../Actions/ChatActions\";\r\nexport function savechats(DATA) {\r\n  return (dispatch) => {\r\n    dispatch({ type: SAVECHATS, payload: DATA });\r\n  };\r\n}\r\nexport function creategroup(Name, room, Participants, GrpPhoto, Type) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"chatgroup/createroom\", {\r\n        Name: Name,\r\n        room: room,\r\n        Participants: Participants,\r\n        GrpPhoto: GrpPhoto,\r\n        Type: Type,\r\n      })\r\n      .then((res) => {\r\n        dispatch(getChats());\r\n      });\r\n  };\r\n}\r\nexport function updatechat(data, room) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATECHAT,\r\n      payload: {\r\n        data,\r\n        room,\r\n      },\r\n    });\r\n  };\r\n}\r\nexport function getChats() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"chatgroup/getmyrooms\").then((res) => {\r\n      dispatch({ type: SAVECHATS, payload: res.data.Chatgroup });\r\n      console.log(res);\r\n      return true\r\n    });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\CreateEventFormReducer.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\NotificatonReducer.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\ChatReducer.js",["714"],"const initialState = {\r\n  groups: [],\r\n  chats: [],\r\n};\r\n\r\nconst Chatdata = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GOTCHATS\":\r\n      return {\r\n        ...state,\r\n        chats: action.payload,\r\n      };\r\n    case \"SAVECHAT\":\r\n      return {\r\n        ...state,\r\n        groups: action.payload,\r\n      };\r\n    case \"UPDATECHAT\":\r\n      let groupscpy = [...state.groups];\r\n      groupscpy.map((grp) => {\r\n        if (grp.room === action.payload.room) {\r\n          grp.chats.push(action.payload.data);\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        groups: groupscpy,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Chatdata;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\CodeEventReducer.js",["715","716"],"const initialState = {\r\n    Maincode: \"\",\r\n    Code: \"\"\r\n};\r\n\r\nconst CodeEvent = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADDCODEDEVENT\":\r\n            return action.payload\r\n            break;\r\n        case \"DELETECODEDEVENT\":\r\n            return initialState;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default CodeEvent;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\GuestListReducer.js",["717"],"import { act } from \"react-dom/test-utils\";\r\n\r\nconst initialState = [];\r\n\r\nconst GuestList = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GOTGUEST\":\r\n            return action.payload\r\n        // console.log(action.payload);\r\n        // let finallist = [];\r\n        // for (let i = 0; i < action.payload.length; i++) {\r\n        //     finallist[action.payload[i].Phone] = { Name: action.payload[i].Name, Pic: action.payload[i].Pic };\r\n        // }\r\n        // console.log(finallist);\r\n        // //   state = finallist;\r\n        // return { ...state, listdata: finallist }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default GuestList;","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\TemplatesReducer.js",["718"],"import { act } from \"react-dom/test-utils\";\r\n\r\nconst initialState = [];\r\n\r\nconst Templates = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GOTTEMPLATE\":\r\n            return action.payload\r\n        // console.log(action.payload);\r\n        // let finallist = [];\r\n        // for (let i = 0; i < action.payload.length; i++) {\r\n        //     finallist[action.payload[i].Phone] = { Name: action.payload[i].Name, Pic: action.payload[i].Pic };\r\n        // }\r\n        // console.log(finallist);\r\n        // //   state = finallist;\r\n        // return { ...state, listdata: finallist }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default Templates;","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\AuthReducer.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\EventReducer.js",["719"],"import { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nconst initialState = {\r\n  ALBUM: [],\r\n  STORY: [],\r\n  myEvents: [],\r\n  myInvitations: [],\r\n};\r\n\r\nconst Eventdata = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SAVEALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: action.payload,\r\n      };\r\n    case \"DELETEALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: [],\r\n      };\r\n    case \"SAVESTORY\":\r\n      return {\r\n        ...state,\r\n        STORY: action.payload,\r\n      };\r\n    case \"DELETESTORY\":\r\n      return {\r\n        ...state,\r\n        STORY: [],\r\n      };\r\n    case \"GOTMYEVENTS\":\r\n      let datacopy = [];\r\n      let tracker = [];\r\n      let mcindex = 0;\r\n      //get similar events in single array\r\n      console.log(action.payload);\r\n      let payload = [];\r\n      if (action.payload !== undefined) {\r\n        payload = [...action.payload];\r\n      } else {\r\n        payload = [];\r\n      }\r\n      for (let i = 0; i < payload.length; i++) {\r\n        if (tracker.length === 0) {\r\n          datacopy[0] = [action.payload[i]];\r\n          tracker.push(action.payload[i].MainCode);\r\n        } else {\r\n          mcindex = tracker.includes(action.payload[i].MainCode);\r\n          if (mcindex === true) {\r\n            let key = tracker.findIndex(\r\n              (track) => track === action.payload[i].MainCode\r\n            );\r\n            console.log(key);\r\n            datacopy[key] = [...datacopy[key], action.payload[i]];\r\n          } else {\r\n            tracker.push(action.payload[i].MainCode);\r\n            datacopy.push([action.payload[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        myEvents: datacopy,\r\n      };\r\n    case \"GETMYINVITAITONS\": {\r\n      let datacopy = [];\r\n      let tracker = [];\r\n      let mcindex = 0;\r\n      //get similar events in single array\r\n      console.log(action.payload);\r\n      let payload = [];\r\n      if (action.payload !== undefined) {\r\n        payload = [...action.payload];\r\n      } else {\r\n        payload = [];\r\n      }\r\n\r\n      for (let i = 0; i < payload.length; i++) {\r\n        if (tracker.length === 0) {\r\n          datacopy[0] = [action.payload[i]];\r\n          tracker.push(action.payload[i].MainCode);\r\n        } else {\r\n          mcindex = tracker.includes(action.payload[i].MainCode);\r\n          if (mcindex === true) {\r\n            let key = tracker.findIndex(\r\n              (track) => track === action.payload[i].MainCode\r\n            );\r\n            console.log(key);\r\n            datacopy[key] = [...datacopy[key], action.payload[i]];\r\n          } else {\r\n            tracker.push(action.payload[i].MainCode);\r\n            datacopy.push([action.payload[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        myInvitations: datacopy,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Eventdata;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\Invitation.js",["720","721","722","723","724","725","726","727","728","729","730"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Invitations.css\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport history from \"../../Utils/History\";\r\nimport Notifications from \"../Notifications/Notification\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UserProfile from \"../UserPorfile/UserProfile\";\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nimport SingleEvent from '../../Assets/singleevent.png'\r\nexport default function Invitation(props) {\r\n  const [data, setData] = useState(props.data);\r\n  const [show, setshow] = useState(false);\r\n  const [MainCode, setmaincode] = useState(\"\");\r\n  const Auth = useSelector(state => state.Auth)\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  const [HasSkipped, setHasSkipped] = useState(false);\r\n  useEffect(async () => {\r\n    console.log(props.data);\r\n    let datacpy = [...props.data];\r\n\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={0} className=\"mb-100 invitation_mobile\" >\r\n      <Popup\r\n        component={UserProfile}\r\n        setuserInfopopup={setuserInfopopup}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n        url={\"MyEvents/\"}\r\n        showall={setHasSkipped}\r\n      />\r\n      <Popup\r\n        component={Notifications}\r\n        setuserInfopopup={setshow}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={MainCode}\r\n        showinvitaions={true}\r\n\r\n      />\r\n      {data.length > 0 && data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={window.innerHeight / window.innerWidth > 0.9 ? 12 : 6}\r\n          className=\"InvitationCard\"\r\n          key={\"InvitationCard\" + index}\r\n\r\n        >\r\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\r\n            src={inv[0].file}\r\n            className=\"inv-img\"\r\n            onClick={() => {\r\n              console.log(Auth.Name)\r\n              Auth.Name == \"\" || Auth.Name == undefined ?\r\n                HasSkipped === false ?\r\n                  setuserInfopopup(true) :\r\n                  history.push(\"/inv/eventpage/\" + index)\r\n                :\r\n                history.push(\"/inv/eventpage/\" + index);\r\n            }}\r\n          />) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                inv[0].file\r\n              }\r\n              onClick={() => {\r\n                console.log(Auth.Name)\r\n                Auth.Name == \"\" || Auth.Name == undefined ?\r\n                  HasSkipped === false ?\r\n                    setuserInfopopup(true) :\r\n                    history.push(\"/inv/eventpage/\" + index)\r\n                  :\r\n                  history.push(\"/inv/eventpage/\" + index);\r\n              }}\r\n              preload=\"none\"\r\n              className='w-100 inv-img'\r\n            />\r\n          )}\r\n\r\n          <NotificationsNoneIcon\r\n            className=\"card-button Notifyme t-white\"\r\n            onClick={async () => {\r\n              if (Auth.Name !== \"\" || Auth.Name !== undefined) {\r\n                await setmaincode(inv[0].MainCode)\r\n                await setshow(true)\r\n              } else {\r\n                setuserInfopopup(true)\r\n              }\r\n            }}\r\n            fontSize='large'\r\n          />\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\">\r\n                    {inv[0].Name}\r\n                  </Grid>\r\n                  <Grid item xs={12} className=\"fs-small t-white \">\r\n                    <Dateformatter Date={inv[0].Date + \" \" + inv[0].Time} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <button\r\n                  className=\"card-button rsvp-button \"\r\n                  onClick={(e) => {\r\n                    console.log(Auth.Name)\r\n                    Auth.Name == \"\" || Auth.Name == undefined ?\r\n                      HasSkipped === false ?\r\n                        setuserInfopopup(true) :\r\n                        history.push(\"/inv/eventpage/\" + index)\r\n                      :\r\n                      history.push(\"/inv/eventpage/\" + index);\r\n                    e.preventDefault();\r\n                  }}\r\n                >\r\n                  RSVP\r\n                </button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n      <Grid\r\n        item\r\n        xs={12}>\r\n        {data.length === 1 ? <center> <img src={SingleEvent} ></img></center> : <></>}\r\n      </Grid>\r\n\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\GuestActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\EventActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\TemplateActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Gift\\GiftBanner.js",["731","732","733","734"],"import React, { useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  Autoplay,\r\n  Pagination,\r\n  Navigation,\r\n  Scrollbar,\r\n} from \"swiper\";\r\n\r\nimport Banner from \"../../Assets/Banner.jpg\";\r\nimport BannerTwo from \"../../Assets/BannerTwo.jpg\";\r\nimport BannerThree from \"../../Assets/BannerThree.jpg\";\r\n\r\n\r\n\r\nSwiperCore.use([Autoplay, Pagination, Navigation, Scrollbar]);\r\nconst GiftBanner = () => {\r\n  return (\r\n    <>\r\n\r\n    <Swiper\r\n      centeredSlides={true}\r\n      slidesPerView={1}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 6500,\r\n        disableOnInteraction: false,\r\n      }}\r\n      pagination={{\r\n        clickable: true,\r\n        \"dynamicBullets\": true\r\n      }}\r\n    >\r\n      <SwiperSlide>\r\n        <img src={Banner} />\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <img src={BannerTwo} />\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <img src={BannerThree} />\r\n      </SwiperSlide>\r\n    </Swiper>\r\n    </>\r\n  );\r\n};\r\nexport default GiftBanner;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\FileUpload_Download.js",["735"],"import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nexport async function uploadString(filedata, urlref) {\r\n  let dataurl = \"\";\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyA5Hi5O5ODsGzQuLsj__E3LecmmoSTRzek\",\r\n      authDomain: \"mobilly-invite.firebaseapp.com\",\r\n      projectId: \"mobilly-invite\",\r\n      storageBucket: \"mobilly-invite.appspot.com\",\r\n      messagingSenderId: \"828075682004\",\r\n      appId: \"1:828075682004:web:5a35293a7657af72b1f341\",\r\n      measurementId: \"G-KX6SQRPLCB\",\r\n    });\r\n  }\r\n\r\n  const ref = await firebase.storage().ref(\"/Mob-invited/\" + urlref);\r\n  await ref.putString(filedata, \"data_url\").then(async (snapshot) => {\r\n    console.log(\"fileuploaded\");\r\n    await ref.getDownloadURL().then((url) => {\r\n      dataurl = url;\r\n    });\r\n  });\r\n  return dataurl;\r\n}\r\nexport async function getString(urlref) {\r\n  var url = await firebase\r\n    .storage()\r\n    .ref(\"/Mob-invited/\" + urlref)\r\n    .getDownloadURL();\r\n  return url;\r\n}\r\nexport async function deletefile(urlref) {\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyA5Hi5O5ODsGzQuLsj__E3LecmmoSTRzek\",\r\n      authDomain: \"mobilly-invite.firebaseapp.com\",\r\n      projectId: \"mobilly-invite\",\r\n      storageBucket: \"mobilly-invite.appspot.com\",\r\n      messagingSenderId: \"828075682004\",\r\n      appId: \"1:828075682004:web:5a35293a7657af72b1f341\",\r\n      measurementId: \"G-KX6SQRPLCB\",\r\n    });\r\n  }\r\n  var storage = firebase.storage().ref();\r\n  var fileRef = await storage\r\n    .refFromURL(urlref)\r\n    .delete()\r\n    .then(function () {\r\n      // File deleted successfully\r\n      console.log(\"File Deleted\");\r\n    })\r\n    .catch(function (error) {\r\n      // Some Error occurred\r\n    });\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Events\\Eventlist.js",["736","737","738","739"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Eventlist.css\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport Notifications from \"../Notifications/Notification\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport history from \"../../Utils/History\";\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nimport SingleEvent from '../../Assets/singleevent.png'\r\nexport default function EventList(props) {\r\n  const [show, setshow] = useState(false);\r\n  const [MainCode, setmaincode] = useState(\"\");\r\n\r\n  const [data, setData] = useState(props.data);\r\n  useEffect(async () => {\r\n    console.log(props.data);\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n  return (\r\n    <Grid container className=\"mb-100 contain-main\" >\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={MainCode}\r\n        showinvitaions={true}\r\n      // eventCode={eventCode}\r\n      />\r\n      {data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={window.innerHeight / window.innerWidth > 0.9 ? 12 : 6}\r\n          className=\"InvitationCard\"\r\n          key={\"invContainer\" + index}\r\n\r\n\r\n        >\r\n\r\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\r\n            src={inv[0].file}\r\n            className=\"inv-img\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/eventpage/\" + index);\r\n            }}\r\n          />) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                inv[0].file\r\n              }\r\n              onClick={() => {\r\n                history.push(\"/MyEvents/eventpage/\" + index);\r\n              }}\r\n              preload=\"none\"\r\n              className='w-100 inv-img'\r\n            />\r\n          )}\r\n          <NotificationsNoneIcon\r\n            className=\"card-button Notifyme t-white\"\r\n            onClick={async () => {\r\n              await setmaincode(inv[0].MainCode);\r\n              // await seteventcode(inv[index].eventCode);\r\n              await setshow(true);\r\n            }}\r\n            fontSize='large'\r\n          />\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\">\r\n                    {inv[0].Name}\r\n                  </Grid>\r\n                  <Grid item xs={12} className=\"fs-small t-white \">\r\n                    <Dateformatter Date={inv[0].Date + \" \" + inv[0].Time} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n      <Grid\r\n        item\r\n        xs={12}>\r\n        {data.length === 1 ? <center> <img src={SingleEvent} ></img></center> : <></>}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\ChatWidget.js",["740"],"import React from 'react';\r\nimport \"./styles.css\"\r\nimport { FaWhatsapp } from 'react-icons/fa'\r\n\r\nexport default function ChatWidget() {\r\n    return (\r\n        <div className=\"zap_widget\">\r\n            <a className=\"blantershow-chat\" title=\"Show Chat\" href=\"https://api.whatsapp.com/send?phone=919873971865&text=Hii%21%20There.\"><i className=\"fab fa-whatsapp\" />Contact Us</a>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\CompanySlide.js",["741"],"import React from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\nimport BrandImage from \"../../Assets/resources/brand-1-1.png\";\r\nimport './styles.css'\r\nimport ZoomIcon from \"../../Assets/logo_zoom.png\";\r\n\r\n\r\nexport default function CompanySlide() {\r\n  const params = {\r\n    speed: 1000,\r\n    spaceBetween: 100,\r\n    autoplay: {\r\n      delay: 3000,\r\n      disableOnInteraction: false,\r\n    },\r\n    slidesPerView: 5,\r\n    rebuildOnUpdate: true,\r\n    // Responsive breakpoints\r\n    breakpoints: {\r\n      0: {\r\n        spaceBetween: 30,\r\n        slidesPerView: 2,\r\n      },\r\n      767: {\r\n        spaceBetween: 30,\r\n        slidesPerView: 3,\r\n      },\r\n      991: {\r\n        spaceBetween: 50,\r\n        slidesPerView: 4,\r\n      },\r\n      1499: {\r\n        slidesPerView: 5,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"brand-one\">\r\n\r\n      <Swiper className=\"brand-one__carousel\" {...params}>\r\n        <div>\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n      </Swiper>\r\n\r\n    </section>\r\n  )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\AboutBanner.js",["742","743","744","745"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport DanceIcon from \"../../Assets/DanceIcon.png\"\r\nimport Swiper from \"react-id-swiper\";\r\nimport HappyIcon from \"../../Assets/Group 4317.png\"\r\nimport celebrateslide from \"../../Assets/celebrateslide.jpg\"\r\nimport birthdayslide from \"../../Assets/birthdayslide.jpg\"\r\n\r\n\r\nexport default function AboutBanner() {\r\n  return (\r\n    <Swiper>\r\n      <div className=\"personal_area py-75\" style={{ marginTop: 20 }}>\r\n        <div className=\"container\">\r\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\r\n            <div className=\"item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    src={celebrateslide}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\" font-weight-bold\">Personal Events</h2>\r\n                  <p className=\"text-secondary\">\r\n                  Invite your guests now digitally on a DIY Platform with no\r\n                      hassle and also share your excitement by bringing them on\r\n                      the same platform, with lot more features to keep them all\r\n                      engaged. You can also share your memories/album with all\r\n                      the guests at a go and keep them all updated\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"personal_area py-75\">\r\n        <div className=\"container\">\r\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\r\n            <div className=\"item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    src={birthdayslide}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\"font-weight-bold\">Video Conferencing</h2>\r\n                  <p className=\"text-secondary\">\r\n                  Excited about your child birthday? Now share your excitement with all your guests digitally. A smart tracker for RSVP and managing your guests. Also, keep your memories with you forever with digital albums. \r\n<br /><br />\r\n<span style={{textAlign:\"center\"}}>Create Invite Now!😊</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Swiper>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\FootMenu\\FootMenu.js",["746","747","748","749","750"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, AppBar, Fab } from \"@material-ui/core\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"./FooterMenu.css\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport UserProfile from \"../../UserPorfile/UserProfile\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\",\r\n    background: \"#3897F1\",\r\n    color: \"#fff\",\r\n    padding: \"33px\",\r\n  },\r\n}));\r\n\r\nexport default function FootMenu(props) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      color=\"primary\"\r\n      className={classes.appBar}\r\n      color=\"default\"\r\n    >\r\n      <Toolbar>\r\n        <Fab\r\n          aria-label=\"add\"\r\n          className={classes.fabButton}\r\n          onClick={() => {\r\n            if (Auth.Name === \"\" || Auth.Name === undefined) {\r\n              setuserInfopopup(true);\r\n            } else {\r\n              history.push(\"add-event\");\r\n            }\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Grid container spacing={0} className={classes.grow}>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            className={props.menu === 0 ? \"menubox activemenu\" : \"menubox\"}\r\n            onClick={() => {\r\n              props.setMenu(0);\r\n              history.push(\"/inv\");\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;Invitations&nbsp;&nbsp;\r\n          </Grid>\r\n          <Grid xs={2}></Grid>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            className={props.menu === 1 ? \"menubox activemenu\" : \"menubox\"}\r\n            onClick={() => {\r\n              props.setMenu(1);\r\n              history.push(\"/MyEvents\");\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;My Events&nbsp;&nbsp;\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <Popup\r\n        component={UserProfile}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n        url={\"add-event\"}\r\n      />\r\n      {/* <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={Entercode}\r\n        url={\"MyEvents/add-event\"}\r\n      /> */}\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Header\\Header.js",["751"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Header.css\";\r\nimport Headings from \"../../../Utils/Headings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { logout } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notification from \"../../Notifications/Notification\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport UserProfile from \"../../../Components/UserPorfile/UserProfile\";\r\n\r\nexport default function Header(props) {\r\n  const dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  useEffect(() => {\r\n    if (Auth.isExpired === true) {\r\n      dispatch(logout());\r\n    }\r\n  }, [Auth.isExpired]);\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem\r\n        onClick={() => {\r\n          setuserInfopopup(true);\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"show 4 new mails\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          {Auth.Profile === \"\" ? (\r\n            <AccountCircle />\r\n          ) : (\r\n            <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n          )}\r\n        </IconButton>\r\n        <span className=\"menu-option\">Profile</span>\r\n      </MenuItem>\r\n      {props.showextra === true ? (\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleMenuClose(true);\r\n            toggleShowPopup(true);\r\n          }}\r\n        >\r\n          <IconButton\r\n            aria-label=\"show 4 new mails\"\r\n            color=\"inherit\"\r\n            className=\"p-0\"\r\n          >\r\n            <NotificationsIcon />\r\n          </IconButton>\r\n          <span className=\"menu-option\">Notification</span>\r\n        </MenuItem>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <SearchIcon className=\"search-button\" />\r\n        </IconButton>\r\n        <p>Search</p>\r\n      </MenuItem> */}\r\n      <MenuItem\r\n        onClick={(e) => {\r\n          handleProfileMenuOpen(e);\r\n          dispatch(logout());\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          <PowerSettingsNewIcon color=\"secondary\" className=\"search-button\" />\r\n        </IconButton>\r\n        <span className=\"menu-option\">Logout</span>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={props.ismobile !== undefined ? props.ismobile : \"grow\"}>\r\n      <Popup\r\n        component={UserProfile}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n      />\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"menuButton\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          ></IconButton>\r\n\r\n          <Headings url={props.url} />\r\n\r\n          <div className=\"grow\" />\r\n          <div className=\"sectionDesktop\">\r\n            {Auth.isLoggedIn === true ? (\r\n              <>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                  onClick={() => {\r\n                    setuserInfopopup(true);\r\n                  }}\r\n                >\r\n                  {Auth.Profile === \"\" ? (\r\n                    <AccountCircle />\r\n                  ) : (\r\n                    <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n                  )}\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"show 4 new mails\"\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                  onClick={() => {\r\n                    dispatch(logout());\r\n                  }}\r\n                >\r\n                  <PowerSettingsNewIcon color=\"secondary\" />\r\n                </IconButton>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"sectionMobile\">\r\n            <IconButton\r\n              style={{ padding: \"inherit\" }}\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {Auth.isLoggedIn === true ? renderMobileMenu : <></>}\r\n      {Auth.isLoggedIn === true ? renderMenu : <></>}\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={Notification}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\NavMobile\\NavMobile.js",["752","753","754","755","756"],"import React, { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport {\r\n  BiNews,\r\n  BiPhotoAlbum,\r\n  BiCalendarEvent,\r\n} from \"react-icons/bi\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport \"./NavMobile.css\";\r\nimport { AiOutlineShopping } from \"react-icons/ai\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector, } from \"react-redux\";\r\n\r\nimport Popup from \"../Popups/Popup\";\r\nimport Notifications from \"../../Notifications/Notification\";\r\nexport default function NavMobile(props) {\r\n\r\n  const [show, setshow] = useState(false);\r\n  const [eventcode, seteventcode] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [ishost, setishost] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      props.Eventdata[0].Host.map((host) => {\r\n        if (host === Auth.Phone) {\r\n          setishost(true);\r\n        }\r\n      });\r\n      console.log(props.Eventdata[0].Name);\r\n    }\r\n  }, [props.Eventdata]);\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg=\"light\"\r\n        variant=\"light\"\r\n        style={{\r\n          position: \"fixed\",\r\n          left: 0,\r\n          bottom: 0,\r\n          width: \"100vw\",\r\n          zIndex: 255,\r\n        }}\r\n        className=\"deskhide-nav\"\r\n      >\r\n        <Nav\r\n          style={{\r\n            margin: \"auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n\r\n            width: \"100vw\",\r\n            height: \"4.5vh\",\r\n          }}\r\n\r\n        >\r\n          <Nav.Link\r\n\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + \"/eventpage/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiCalendarEvent size={25} className=\"reacticons_align\" />\r\n            <p className=\"mobilebar_text\">Invites</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + \"/albums/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiPhotoAlbum size={25} />\r\n            <p className=\"mobilebar_text\">Albums</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\r\n                \"/\" +\r\n                props.base +\r\n                \"/eventpage/\" +\r\n                \"feed/\" +\r\n                props.id +\r\n                \"/\" +\r\n                props.MainCode\r\n              );\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiNews size={25} />\r\n            <p className=\"mobilebar_text\">Feed</p>\r\n          </Nav.Link>\r\n          {/*  <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + '/eventpage/' + \"gift/\" + props.id + \"/\" + props.MainCode);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiGift size={25} style={{ marginLeft: '8px' }} />\r\n            <p className=\"mobilebar_text_notif\">Notifications</p>\r\n          </Nav.Link> */}\r\n          <Nav.Link\r\n            style={{ textDecoration: \"none\" }} onClick={() => {\r\n              history.push(\"/\" + props.base + '/eventpage/' + \"gift/\" + props.id + \"/\" + props.MainCode);\r\n            }}\r\n          >\r\n            <AiOutlineShopping size={25} />\r\n            <p className=\"mobilebar_text\">Shop</p>\r\n          </Nav.Link>\r\n\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + \"/more/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BsThreeDots size={25} />\r\n            <p className=\"mobilebar_text\">More</p>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={props.MainCode}\r\n        showinvitaions={true}\r\n        eventcode={eventcode}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Places.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Additionals.js",["757","758","759","760","761","762"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport PictureIcon from \"../../Assets/PictureIcon.png\"\r\nimport EngageIcon from \"../../Assets/EngageIcon.png\"\r\nimport AlbumsIcon from \"../../Assets/AlbumsIcon.png\"\r\nimport CustomIcon from \"../../Assets/CustomIcon.png\"\r\nimport PrivateIcon from \"../../Assets/PrivateIcon.png\"\r\nimport InviteIcon from \"../../Assets/InviteIcon.png\"\r\nimport EasyIcon from \"../../Assets/EasyIcon.png\"\r\nimport DestinIcon from \"../../Assets/DestinIcon.png\"\r\nimport MobilePro from \"../../Assets/MobilePro.png\"\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\n\r\nexport default function Additionals() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"additional_part py-75\">\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 mb-4\">\r\n                <h2 className=\"font-weight-bold text-color text-left mb-0\">\r\n                  Additionals\r\n                </h2>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={PictureIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Pictures and Videos</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={EngageIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Engagement</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={AlbumsIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Albums</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={CustomIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Customize</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={PrivateIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Private / Secure</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={InviteIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Invite at GO</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={EasyIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">\r\n                    Easy to create in 5 Minutes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={DestinIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Destination Event</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 text-left\">\r\n                <button className=\"addition_btn\" onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}>Create an Invite</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"Additionals_img\">\r\n              <img\r\n                src={MobilePro}\r\n                className=\"img-fluid\"\r\n                alt=\"img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Features.js",["763","764","765","766"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport PeopleIcon from \"../../Assets/PeopleIcon.png\"\r\nimport RSVPIcon from \"../../Assets/RSVPIcon.png\"\r\nimport LocationIcon from \"../../Assets/LocationIcon.png\"\r\nimport MobileIcon from \"../../Assets/MobileIcon.png\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nexport default function Features() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: 25 }}>\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 mb-4\">\r\n          <h2 className=\"font-weight-bold text-color text-center mb-0 our_feature\">\r\n            Our Features\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={MobileIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">No App Required</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={PeopleIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">Unlimited Guests</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={RSVPIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">RSVP</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={LocationIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">Schedule Location</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 text-center mt-5\">\r\n          <button className=\"feature_btn\" onClick={() => {\r\n            toggleShowPopup(true);\r\n          }}>Create an Invite</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Testimonials.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\MainBanner.js",["767","768","769","770","771","772"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Button, Form, Image, Col } from \"react-bootstrap\";\r\nimport Logo from \"../../Assets/LightLogo.png\";\r\n\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  Autoplay,\r\n  Pagination,\r\n  Navigation,\r\n  Scrollbar,\r\n} from \"swiper\";\r\nimport SecondSlide from \"../../Assets/SecondSlide.png\";\r\nimport DancingImg from \"../../Assets/DancingImg.jpg\";\r\nimport DarkLogo from \"../../Assets/DarkLogo.png\";\r\n\r\nSwiperCore.use([Autoplay, Pagination, Navigation, Scrollbar]);\r\n\r\nexport default function MainBanner() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let ischeck = reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = reactLocalStorage.get(\"Phone\");\r\n    // let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === false || ischeck === undefined || ischeck === \"\") {\r\n      console.log(\"push\");\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"loginuser\");\r\n      dispatch(loginuser(Phone));\r\n    }\r\n  }, []);\r\n  return (\r\n    <Swiper\r\n      centeredSlides={true}\r\n      slidesPerView={1}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 6500,\r\n        disableOnInteraction: false,\r\n      }}\r\n      pagination={{\r\n        clickable: true,\r\n        dynamicBullets: true,\r\n      }}\r\n    >\r\n      {/* Slider One */}\r\n      <SwiperSlide>\r\n        <Container fluid className=\"wrapper\">\r\n          <Popup\r\n            toggleShowPopup={toggleShowPopup}\r\n            showPopup={showPopup}\r\n            component={LoginSignup}\r\n          />\r\n          <Row>\r\n            <img src={Logo} style={{ margin: \"auto\" }} />\r\n          </Row>\r\n          <Container className=\"header_containmain\">\r\n            <Row>\r\n              <h3 className=\"header_heading\" style={{ marginTop: \"auto\" }}>\r\n                A Smarter way to invite\r\n              </h3>\r\n            </Row>\r\n            <Row style={{ marginTop: 10 }}>\r\n              <p className=\"header_slogan\">\r\n                Invite people to celebrate your occasion\r\n              </p>\r\n            </Row>\r\n            <Row\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Working on it\"\r\n                className=\"phonenumber_text\"\r\n                disabled\r\n              />\r\n            </Row>\r\n            <Row style={{ marginTop: 13 }}>\r\n              <Button\r\n                variant=\"primary mobile_numberbtn\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Try Now\r\n              </Button>\r\n            </Row>\r\n            <Row className=\"row_down\">\r\n              <div className=\"addthis_inline_share_toolbox\"></div>\r\n            </Row>\r\n            <Row className=\"alignthat_btnh\">\r\n              <Button\r\n                variant=\"light mybutton_here\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Login / Signup\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <Container fluid className=\"wrapper second_slide\">\r\n          <Popup\r\n            toggleShowPopup={toggleShowPopup}\r\n            showPopup={showPopup}\r\n            component={LoginSignup}\r\n          />\r\n          <Row>\r\n            <Col style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <img src={DarkLogo} style={{ margin: \"auto\" }} />\r\n            </Col>\r\n          </Row>\r\n          <Container className=\"header_slidertwo\">\r\n            <Row>\r\n              <h3 className=\"secondslide_heading\">\r\n                Multiple <br />\r\n                Events\r\n              </h3>\r\n            </Row>\r\n            <Row>\r\n              <p className=\"secondslide_par\">\r\n                Manage Multiple Events Simultaneously\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <Image src={SecondSlide} className=\"image_secondslide\" />\r\n            </Row>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Working on it\"\r\n                className=\"phonenumber_text\"\r\n                disabled\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                variant=\"primary slide_numberbtn\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Try Now\r\n              </Button>\r\n            </Row>\r\n\r\n            <Row className=\"row_down\">\r\n              <div className=\"addthis_inline_share_toolbox\"></div>\r\n            </Row>\r\n            <Row className=\"alignthat_btnh\">\r\n              <Button\r\n                variant=\"light mybutton_here\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Login / Signup\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <Container fluid className=\"wrapper third_slide\">\r\n          <Popup\r\n            toggleShowPopup={toggleShowPopup}\r\n            showPopup={showPopup}\r\n            component={LoginSignup}\r\n          />\r\n          <Row>\r\n            <Col style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <img src={DarkLogo} style={{ margin: \"auto\" }} />\r\n            </Col>\r\n          </Row>\r\n          <Container style={{ float: \"right\" }}>\r\n            <Row>\r\n              <h3 className=\"secondslide_heading\">\r\n                Video <br />\r\n                Invitation\r\n              </h3>\r\n            </Row>\r\n            <Row>\r\n              <p className=\"secondslide_par\">\r\n                Invite people to celebrate your occasion online via Zoom or Meet\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              {\" \"}\r\n              <p className=\"thirdslide_extra\">\r\n                Unlimited Timeless Conferencing*\r\n              </p>\r\n            </Row>\r\n\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Working on it\"\r\n                className=\"phonenumber_text\"\r\n                disabled\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                variant=\"primary slide_numberbtn\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Try Now\r\n              </Button>\r\n            </Row>\r\n            <Row className=\"row_down\">\r\n              <div className=\"addthis_inline_share_toolbox\"></div>\r\n            </Row>\r\n\r\n            <Row className=\"alignthat_btnh\">\r\n              <Button\r\n                variant=\"light mybutton_here\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Login/Signup\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      </SwiperSlide>\r\n\r\n      {/*  Slider two */}\r\n\r\n      {/*  Slider 3 */}\r\n    </Swiper>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Footer.js",["773","774","775","776","777"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport { FaTwitter, FaFacebookF, FaWhatsapp, FaInstagram } from \"react-icons/fa\"\r\n\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer\r\n      className=\"footer_wrap p-4 mt-3\"\r\n      style={{ background: \"#1F1F1F\", marginTop: 50 }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-5 text-md-left text-center mb-2 mb-md-0\">\r\n            <p className=\"text-white mb-0\">\r\n              Copyright @ 2021, All Rights Reserved by Cy Ecommerce LLP\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-2 text-center\">\r\n            {\" \"}\r\n            <a href=\"#\" className=\"text-white\">\r\n              Terms &amp; Conditions\r\n            </a>{\" \"}\r\n          </div>\r\n          <div className=\"col-md-3 text-center\">\r\n            {\" \"}\r\n            <a href=\"#\" className=\"text-white\">\r\n              Privacy &amp; Policy\r\n            </a>{\" \"}\r\n          </div>\r\n          <div className=\"col-md-2 text-right\">\r\n            <div className=\"justify-content-center justify-content-md-end d-flex flex-row\">\r\n              <a href=\"https://www.facebook.com/Minvitd/\" className=\"ml-3 text-white\">\r\n                <FaFacebookF size='20' />\r\n              </a>\r\n   {/*            <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaTwitter size='20' />\r\n              </a>\r\n              <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaWhatsapp size='20' />\r\n              </a>\r\n              <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaInstagram size='20' />\r\n              </a> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\ContactUs.js",["778","779"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport ContactImg from \"../../Assets/ContactImg.png\";\r\nimport { db } from \"./Firebase\";\r\n\r\nconst ContactUs = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    db.collection(\"contacts\")\r\n      .add({\r\n        name: name,\r\n        email: email,\r\n        message: message,\r\n      })\r\n      .then(() => {\r\n        setLoader(false);\r\n        alert(\"Your message has been submitted👍\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n        setLoader(false);\r\n      });\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact_us py-75\" style={{ marginTop: 50 }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 align-self-end\">\r\n            <img src={ContactImg} alt=\"img\" className=\"img-fluid\" />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h2 className=\"font-weight-bold mb-4\">Contact Us</h2>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Name\"\r\n                >\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"form-control contact_field\"\r\n                  value={name}\r\n                  placeholder=\"Enter your Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Email\"\r\n                >\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"form-control contact_field\"\r\n                  value={email}\r\n                  placeholder=\"Enter your Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Message\"\r\n                >\r\n                  Message\r\n                </label>\r\n                <textarea\r\n                  rows={5}\r\n                  className=\"form-control contact_field\"\r\n                  value={message}\r\n                  placeholder=\"Enter your Message\"\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 py-2 rounded-pill mt-3\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js",["780"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./InvitaionRSVP.css\";\r\nimport { Carousel, Button } from \"react-bootstrap\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\r\nexport default function InvitaionRSVP(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  const Next = async (i) => {\r\n    console.log(i, props.Eventdata.length);\r\n    if (i < props.Eventdata.length) {\r\n      props.setevno(i);\r\n      setindex(i);\r\n      setdirection(\"next\");\r\n    } else {\r\n      props.sethasallrsvps(true);\r\n      await dispatch(GetInvitations());\r\n      await dispatch(GetEvents());\r\n      await dispatch(getNotification())\r\n    }\r\n  };\r\n\r\n  const [index, setindex] = useState(0);\r\n  const [direction, setdirection] = useState(\"\");\r\n\r\n  const handleSelect = (index) => {\r\n    let newIndex = index + 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*  <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <DesktopNav id={props.id} base={props.base} />\r\n      <Toggler id={props.id} /> */}\r\n      <Carousel\r\n        controls={false}\r\n        direction={direction}\r\n        onSelect={(i) => {\r\n          handleSelect(i);\r\n        }}\r\n        activeIndex={index}\r\n        interval={99999999999999}\r\n      >\r\n        {props.Eventdata && props.Eventdata.length > 0 &&\r\n          props.Eventdata.map((eve, index) => (\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block fullimage\"\r\n                src={eve.file}\r\n                alt=\"First slide\"\r\n              />\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(rsvp_event(eve._id, \"Accept\", Auth.Phone));\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(rsvp_event(eve._id, \"May Be\", Auth.Phone));\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      {/* <NavMobile className=\"footnavmobile\" id={props.id} base={props.base} /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js",["781","782","783","784","785","786","787","788"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\Chatbox.js",["789","790","791","792","793","794","795","796","797","798"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport axios from \"axios\";\r\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"96%\",\r\n    marginLeft: \"1%\",\r\n    background: \" #f5f0f0\",\r\n    borderRadius: \"500px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function Chatbox(props) {\r\n  const classes = useStyles();\r\n  const [chats, setchat] = useState([]);\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    type = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let url = props.SelectedGroup.room + \"/\" + Date.now() + \".\" + type;\r\n      // console.log(url);\r\n      let filedata = await uploadString(reader.result, url);\r\n      props.sendImage({\r\n        sender: Auth.Phone,\r\n        type: \"image\",\r\n        content: filedata,\r\n        room: props.SelectedGroup.room,\r\n        _id: props.SelectedGroup._id,\r\n      });\r\n      console.log({\r\n        sender: Auth.Phone,\r\n        type: \"image\",\r\n        content: filedata,\r\n        room: props.SelectedGroup.room,\r\n        _id: props.SelectedGroup._id,\r\n      });\r\n    };\r\n    reader.onerror = function (error) {\r\n      // console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, \",\r\n  });\r\n  useEffect(async () => {\r\n    const interval = setInterval(() => {\r\n      if (props.SelectedGroup._id !== \"\") {\r\n        getChats(props.SelectedGroup._id);\r\n      }\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  useEffect(async () => {\r\n    props.setIsSubmit(false);\r\n  }, [props.SelectedGroup.chats, props.IsSubmit]);\r\n\r\n  const getChats = (_id) => {\r\n    axios\r\n      .post(url + \"chatgroup/getchat\", { _id: _id })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        if (response.data.status === \"success\") {\r\n          setchat(response.data.chatdata);\r\n          console.log(response.data.chatdata);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n  return (\r\n    <Grid container spacing={0} className=\"h100\">\r\n      <Grid item xs={12} className=\"h7 white\">\r\n        <List className=\"p-0 m-0\">\r\n          <ListItem className=\" m-0\">\r\n            {props.fullscreen === false ? (\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.setshow(0);\r\n                }}\r\n              >\r\n                <ArrowBackIosIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {props.SelectedGroup !== \"\" ? (\r\n              props.SelectedGroup.Type === \"GRP\" ? (\r\n                <>\r\n                  <ListItemIcon>\r\n                    <Avatar src={props.SelectedGroup.GrpPhoto} />\r\n                  </ListItemIcon>\r\n                  <ListItemText>{props.SelectedGroup.Name}</ListItemText>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ListItemAvatar>\r\n                    <UserDatajustUrl\r\n                      showIcon={true}\r\n                      Phone={\r\n                        props.SelectedGroup.Name === Auth.Phone ||\r\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\r\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\r\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Admin\r\n                            : \"+91\" + props.SelectedGroup.Admin\r\n                          : typeof props.SelectedGroup.Name === \"string\" &&\r\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Name.toString()\r\n                            : \"+91\" + props.SelectedGroup.Name\r\n                      }\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText>\r\n                    <UserDatajustUrl\r\n                      showName={true}\r\n                      Phone={\r\n                        props.SelectedGroup.Name === Auth.Phone ||\r\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\r\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\r\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Admin\r\n                            : \"+91\" + props.SelectedGroup.Admin\r\n                          : typeof props.SelectedGroup.Name === \"string\" &&\r\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Name.toString()\r\n                            : \"+91\" + props.SelectedGroup.Name\r\n                      }\r\n                    />\r\n                  </ListItemText>\r\n                </>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </ListItem>\r\n        </List>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} className=\"chat\">\r\n        {chats &&\r\n          chats.map((chat) => (\r\n            <>\r\n              {chat.sender === Auth.Phone ? (\r\n                <div className=\"sender\">\r\n                  {chat.type === \"text\" ? (\r\n                    chat.content\r\n                  ) : chat.type === \"image\" ? (\r\n                    <img src={chat.content} className=\"chat-img\" />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"recieved\">\r\n                  {chat.type === \"text\" ? (\r\n                    <>\r\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\r\n                      :\r\n                      <br />\r\n                      {chat.content}\r\n                    </>\r\n                  ) : chat.type === \"image\" ? (\r\n                    <>\r\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\r\n                      :\r\n                      <br />\r\n                      <img src={chat.content} className=\"chat-img\" />\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </>\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className=\"inputbox\"\r\n        style={{ display: props.SelectedGroup !== \"\" ? \"block\" : \"none\" }}\r\n      >\r\n        <Paper\r\n          component=\"form\"\r\n          className={classes.root}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n              <AttachFileIcon className=\"tilt\" />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <InputBase\r\n            className={classes.input}\r\n            placeholder=\"hi...\"\r\n            inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            value={props.text}\r\n            onChange={(e) => {\r\n              props.settext(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Divider className={classes.divider} orientation=\"vertical\" />\r\n          <IconButton\r\n            color=\"primary\"\r\n            className={classes.iconButton}\r\n            aria-label=\"directions\"\r\n            onClick={() => {\r\n              props.submit();\r\n              props.settext(\"\");\r\n            }}\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\List.js",["799","800","801","802","803","804","805"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport history from \"../../Utils/History\";\r\nimport {\r\n  Paper,\r\n  InputBase,\r\n  Tabs,\r\n  IconButton,\r\n  Tab,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport SelectParticipant from \"./SelectParticipant\";\r\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabroot: {\r\n    flexGrow: 1,\r\n  },\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    borderRadius: \"500px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\nexport default function CList(props) {\r\n  const [value, setValue] = useState(0);\r\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  // console.log(Auth.Phone);\r\n  const [show, setshow] = useState(false);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const [Groups, setGroups] = useState([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    let grpcopy = [];\r\n    AllGroups.map((sgrpup) => {\r\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\r\n        grpcopy.push(sgrpup);\r\n      }\r\n    });\r\n    setGroups(grpcopy);\r\n  }, []);\r\n  useEffect(() => {\r\n    let grpcopy = [];\r\n    AllGroups.map((sgrpup) => {\r\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\r\n        grpcopy.push(sgrpup);\r\n      }\r\n    });\r\n    setGroups(grpcopy);\r\n  }, [AllGroups]);\r\n  return (\r\n    <div className=\"h100 vlgrey\">\r\n      <Grid container spacing={0} className=\"h7 white\">\r\n        <Grid item xs={10} className=\"h7 white\">\r\n          <h2 className=\"chatheadertitle\">\r\n            {/* <ArrowBackIosIcon\r\n              onClick={() => {\r\n                // console.log(props.pushto);\r\n                history.goBack();\r\n              }}\r\n            /> */}\r\n            Chat\r\n          </h2>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <AddCircleOutlineIcon\r\n            fontSize={\"large\"}\r\n            color={\"primary\"}\r\n            className=\"m-5px\"\r\n            onClick={() => {\r\n              setshow(true);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.tabroot}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Direct\" />\r\n            <Tab label=\"Group\" />\r\n          </Tabs>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search for Participants\"\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n\r\n            <IconButton\r\n              color=\"default\"\r\n              className={classes.iconButton}\r\n              aria-label=\"directions\"\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} className=\" w-90-p\">\r\n          <List>\r\n            {Groups.map((grp) => (\r\n              <ListItem\r\n                className=\" m-5px\"\r\n                onClick={() => {\r\n                  // console.log(grp);\r\n                  props.setSelectedGroup(grp);\r\n                  props.setchat(grp.chats);\r\n                  props.updateName();\r\n                  props.setshow(1);\r\n                }}\r\n              >\r\n                {value === 1 && grp.Type === \"GRP\" ? (\r\n                  <>\r\n                    <ListItemAvatar>\r\n                      <Avatar alt=\"Profile Picture\" src={grp.GrpPhoto} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={grp.Name} />\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {value === 0 && grp.Type === \"INDV\" ? (\r\n                  <>\r\n                    <ListItemAvatar>\r\n                      <UserDatajustUrl\r\n                        showIcon={true}\r\n                        Phone={\r\n                          grp.Name === Auth.Phone ||\r\n                            \"+91\" + grp.Name === Auth.Phone\r\n                            ? typeof grp.Admin === \"string\" &&\r\n                              grp.Admin.toString().startsWith(\"+\")\r\n                              ? grp.Admin\r\n                              : \"+91\" + grp.Admin\r\n                            : typeof grp.Name === \"string\" &&\r\n                              grp.Name.toString().startsWith(\"+\")\r\n                              ? grp.Name.toString()\r\n                              : \"+91\" + grp.Name\r\n                        }\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText>\r\n                      <UserDatajustUrl\r\n                        showName={true}\r\n                        Phone={\r\n                          grp.Name === Auth.Phone ||\r\n                            \"+91\" + grp.Name === Auth.Phone\r\n                            ? typeof grp.Admin === \"string\" &&\r\n                              grp.Admin.toString().startsWith(\"+\")\r\n                              ? grp.Admin\r\n                              : \"+91\" + grp.Admin\r\n                            : typeof grp.Name === \"string\" &&\r\n                              grp.Name.toString().startsWith(\"+\")\r\n                              ? grp.Name.toString()\r\n                              : \"+91\" + grp.Name\r\n                        }\r\n                      />\r\n                    </ListItemText>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Popup\r\n        component={SelectParticipant}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        url={props.allparticipants}\r\n        showall={value}\r\n        MainCode={props.MainCode}\r\n        Groups={Groups}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\NotificationAction.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\CodeAction.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\PostActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\ChatActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\UserPorfile\\UserProfile.js",["806","807","808","809","810","811"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Notifications\\Notification.js",["812"],"import React from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Notifications.css\"\r\nimport { useSelector } from \"react-redux\";\r\nimport NoNotfcations from '../../Assets/NoNotifications.svg'\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nexport default function Notification(props) {\r\n  const Notifications = useSelector((state) => state.Notifications);\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Notificationportion-strt p-2 \">\r\n        <div className=\"Notifications-header d-flex flex-row\" style={{ marginTop: -15 }}>\r\n          <h4\r\n            className=\"font-weight-bold pr-5 pt-2\"\r\n            style={{ marginRight: \"0%\" }}\r\n          >\r\n            Notifications\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      {Notifications.length > 0 ? (\r\n        <div className=\"ofh \" style={{ marginTop: \"13px\", height: '40vh' }}>\r\n          {Notifications.map((note, index) =>\r\n            note.by === Auth.Phone ? <></> : (props.MainCode && note.MainCode === props.MainCode ?\r\n              <div className=\"media  mb-3\">\r\n                <Avatar className=\"mr-3\" src={note.img} alt=\"img\" style={{ top: '4px' }} />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0 font-weight-bold small\">\r\n                    {note.Notification}\r\n                  </h5>\r\n                  <p className=\"text-secondary time_notification\"><Dateformatter Date={note.date.split('T')[0] + ' ' + note.date.split('T')[1].substring(0, 5)} /></p>\r\n                </div>\r\n              </div> : <></>)\r\n          )}\r\n        </div>) :\r\n        <>\r\n          <img src={NoNotfcations} className=\"w-100\" />\r\n          <br />\r\n          <h4 className=\"tac\">No Notification</h4>\r\n        </>\r\n      }\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\DateFormatter\\Dateformatter.js",["813","814"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport default function Dateformatter(props) {\r\n    const [FormattedDate, setFormattedDate] = useState(\"\")\r\n    const [Months, setMonths] = useState(['NIL', 'Jan', 'Feb', 'March'\r\n        , 'April', 'May', 'June', 'July', 'August', 'Sept', 'Oct', 'Nov', 'Dec'])\r\n    useEffect(() => {\r\n\r\n        if (props.Date !== \"\") {\r\n            //  2021 - 07 - 23 21: 06\r\n            let type = \"am\"\r\n            let hour = props.Date.split(\" \")[1].split(\":\")[0]\r\n            if (parseInt(hour) > 12) {\r\n                hour = hour - 12;\r\n                type = \"pm\"\r\n            }\r\n            let time = hour + \":\" + props.Date.split(\" \")[1].split(\":\")[1]\r\n            let date = props.Date.split(\" \")[0]\r\n            date = date.split(\"-\")\r\n            date = date[2] + \" \" + Months[parseInt(date[1])] + \" \" + date[0]\r\n            setFormattedDate(date + \" \" + time + \" \" + type)\r\n        }\r\n    }, [props.Date])\r\n    return (\r\n        <>\r\n            {FormattedDate}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Popups\\Popup.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\MobileHeader\\MobileHeader.js",["815","816","817","818"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Headings.js",["819"],"// import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"../Assets/Logo.svg\";\r\nimport history from \"./History\";\r\nimport MobileLogo from \"../Assets/MobileLogo.png\"\r\nexport default function Headings(props) {\r\n  // const [url, seturl] = useState(\"\");\r\n  // useEffect(() => {\r\n  //   let urlstr = props.url.split(\"/\");\r\n  //   seturl(urlstr[1]);\r\n  // }, []);\r\n\r\n  return (\r\n    <span className=\"black-t title-name\">\r\n      <img\r\n        src={MobileLogo}\r\n        className=\"Logo\"\r\n        alt=\"logo\"\r\n        width=\"30\"\r\n        height=\"30\"\r\n        onClick={() => history.push(\"/home\")}\r\n      />\r\n    </span>\r\n  );\r\n\r\n  //return <span className=\"black-t\">{props.url}123</span>;\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Firebase.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Auth\\LoginSignup.js",["820"],"import React, { useState, useEffect } from \"react\";\r\nimport Login from \"../../Assets/Auth.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Auth.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport Timer from \"../Helpers/timer/timer\";\r\nimport {\r\n  loginuser,\r\n  getopt,\r\n  verifyotp,\r\n} from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport history from '../../Utils/History'\r\nexport default function LoginSignup() {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const [todo, settodo] = useState(0);\r\n  const [step, setStep] = useState(0);\r\n  const [number, setnumber] = useState(0);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [OTP, SetOPT] = useState();\r\n  const [Phone, setPhone] = useState(\"\");\r\n  let phone = \"\";\r\n  const handleClick = (e) => {\r\n    phone = \"+\" + number.toString();\r\n    if (phone.length < 9) {\r\n      setError(\"Invalid Phone Number\");\r\n    } else {\r\n      dispatch(getopt(phone));\r\n      setPhone(phone);\r\n      setStep(1);\r\n    }\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    dispatch(verifyotp(Phone, OTP));\r\n  };\r\n  useEffect(() => {\r\n    if (Auth.isLoggedIn === true) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [Auth.isLoggedIn])\r\n\r\n  useEffect(() => {\r\n    if (Auth.OTPStatus === true) {\r\n      if (Auth.isVerified === true) {\r\n        dispatch(loginuser(Phone));\r\n      } else if (Auth.isVerified === false) {\r\n        // setStep(1);\r\n      } else {\r\n        setError(\"please check the input\");\r\n      }\r\n    }\r\n  }, [Auth.isVerified, Auth.OTPStatus]);\r\n\r\n  if (step === 0) {\r\n    return (\r\n      <div>\r\n        <div id=\"sign-in-button\"></div>\r\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            Login\r\n            <p className=\"modal-title-description\">\r\n              Enter your Mobile Number and Verify to login\r\n            </p>\r\n            <p className=\"phno-text\" style={{ fontSize: 17, marginTop: 24 }}>\r\n              {\" \"}\r\n              Phone Number\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <PhoneInput\r\n              country={\"in\"}\r\n              value={number}\r\n              onChange={(phone) => setnumber(phone)}\r\n            />\r\n            <p className=\"error\">{Auth.Message || error}</p>\r\n\r\n            <button\r\n              onClick={(e) => {\r\n                handleClick(e);\r\n              }}\r\n              className=\"get-otp-button\"\r\n            >\r\n              Request OTP\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else if (step === 1) {\r\n    return (\r\n      <div>\r\n        <div id=\"recaptcha-container\" size=\"invisible\"></div>\r\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            Authorized OTP\r\n            <p className=\"modal-title-description\">\r\n              Enter the code you recieved on your number\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <span style={{ fontSize: 13, color: \"#727272\" }}>\r\n              Enter One Time Password (OTP)\r\n            </span>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <OtpInput\r\n              className=\"OTP\"\r\n              value={OTP}\r\n              onChange={(otp) => SetOPT(otp)}\r\n              numInputs={6}\r\n              separator={<span></span>}\r\n              inputStyle=\"Otp-block\"\r\n              isInputNum={true}\r\n            />\r\n            <p className=\"error\">{Auth.Message}</p>\r\n            <Row style={{ margin: \"auto\" }}>\r\n              <Col>\r\n                <button\r\n                  onClick={(e) => {\r\n                    handleCheck();\r\n                  }}\r\n                  className={todo ? \"resend-otp\" : \"get-otp-button\"}\r\n                >\r\n                  Verify\r\n                </button>\r\n              </Col>\r\n              <Col>\r\n                <button\r\n                  onClick={(e) => {\r\n                    handleClick(e);\r\n                  }}\r\n                  className={todo ? \"get-otp-button\" : \"resend-otp\"}\r\n                >\r\n                  Resend OTP\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <p\r\n              className=\"label w-100 tac\"\r\n              style={{ marginTop: 10, color: \"#727272\" }}\r\n            >\r\n              <Timer setStep={setStep} settodo={settodo} />\r\n            </p>\r\n          </Grid>\r\n          <p style={{ fontSize: 9, color: \"#727272\" }}>\r\n            By Continuing ,you agree to Mobillyinvite's{\" \"}\r\n            <b style={{ color: \"black\" }}>\r\n              Terms {\"&\"} Conditions, Privacy policy\r\n            </b>{\" \"}\r\n            and receving updated through WhatsAPP.\r\n          </p>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js",["821","822","823"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { BiNews } from \"react-icons/bi\";\r\nimport { AiOutlineBell } from \"react-icons/ai\";\r\nimport { Container, Row, Col, Dropdown, DropdownButton, Button } from \"react-bootstrap\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport Notifications from \"../../Notifications/Notification\";\r\nimport { IoImagesSharp } from \"react-icons/io5\";\r\nimport { deleteInvite } from '../../../Redux/DispatchFuncitons/Eventfunctions'\r\nimport { Modal } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nexport default function DesktopNav(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const useStyles = makeStyles({});\r\n  const [ishost, setishost] = useState(false);\r\n  const [show, setshow] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false)\r\n  useEffect(() => {\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      console.log(props.Eventdata)\r\n      var Host = props.Eventdata[0].Host;\r\n      for (var i = 0; i < Host.length; i++) {\r\n        if (Host[i] === Auth.Phone) {\r\n          setishost(true);\r\n        }\r\n      }\r\n    }\r\n    console.log(props.base);\r\n  }, [props.Eventdata]);\r\n\r\n  return (\r\n    <Container className=\"navigation-box\" fluid>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"modal\"\r\n        open={showPopup}\r\n      >\r\n        <div className=\"modal-card\">\r\n          <IconButton\r\n            className=\"popup-close\"\r\n            onClick={() => {\r\n              toggleShowPopup(false);\r\n            }}\r\n          >\r\n            <CancelIcon color=\"secondary\" fontSize=\"large\" />\r\n          </IconButton>\r\n          <Row className=\"m-0\"><center><h3\r\n            style={{ fontSize: 20, textAlign: 'center', fontWeight: 400 }}\r\n          >\r\n            Do you want to delete this invite?</h3></center>\r\n          </Row>\r\n          <Row className=\"m-0\" style={{ paddingTop: 20 }}>\r\n            <Col><Button variant=\"danger\"\r\n              style={{ borderRadius: 20 }}\r\n              className=\"w-100\" onClick={() => {\r\n                dispatch(deleteInvite(props.Eventdata[0].MainCode))\r\n              }}>Yes</Button>\r\n            </Col>\r\n            <Col><Button variant=\"primary\" className=\"w-100\"\r\n              style={{ borderRadius: 20 }}\r\n              onClick={() => {\r\n                toggleShowPopup(false);\r\n              }}>No</Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n      <Row>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            history.push(\"../albums/\" + props.id);\r\n          }}\r\n        >\r\n          <IoImagesSharp size={30} />\r\n          <a>Album</a>\r\n        </Col>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            history.push(\"./feed/\" + props.id + \"/\" + props.MainCode);\r\n          }}\r\n        >\r\n          <BiNews size={30} />\r\n          Feed\r\n        </Col>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            setshow(true);\r\n          }}\r\n        >\r\n          <AiOutlineBell size={30} />\r\n          Notifications\r\n        </Col>\r\n        <Col md={2} className=\"tac\">\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"More\">\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/\" + props.base + \"/story/\" + props.id);\r\n              }}\r\n            >\r\n              Our Story\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/\" + props.base + \"/albums/\" + props.id);\r\n              }}\r\n            >\r\n              Albums\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              onClick={() => {\r\n                toggleShowPopup(true)\r\n                // dispatch(deleteInvite(Eventdata[0].MainCode))\r\n              }}\r\n            >\r\n              Delete Invite\r\n            </Dropdown.Item>\r\n            {ishost === true ? (\r\n\r\n              <Dropdown.Item\r\n                as=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/MyEvents/admin/\" + props.id);\r\n                }}\r\n              >\r\n                Admin\r\n              </Dropdown.Item>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </DropdownButton>\r\n        </Col>\r\n      </Row>\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={props.MainCode}\r\n        showinvitaions={true}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js",["824","825","826"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\SelectParticipant.js",["827","828","829","830","831","832","833","834","835","836","837","838"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  List,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  TextField,\r\n  Avatar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Userurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport AddImg from \"../../Assets/AddImage.svg\";\r\nimport { creategroup } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nexport function Participant(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  return (\r\n    <Grid container spacing={2} className=\"mt-10px ofh\">\r\n      <Grid item xs={12}>\r\n        <h5>Select Contact</h5>\r\n      </Grid>\r\n      <List>\r\n        {props.url.map((grp) =>\r\n          grp !== Auth.Phone ? (\r\n            <ListItem\r\n              onClick={async () => {\r\n                await props.setParticipants([grp]);\r\n                console.log([grp]);\r\n                await props.setgroupName(grp + \"\");\r\n                await props.create();\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Userurl\r\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                  showIcon={true}\r\n                />\r\n              </ListItemAvatar>\r\n              <Userurl\r\n                Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                showName={true}\r\n              />\r\n            </ListItem>\r\n          ) : (\r\n            <></>\r\n          )\r\n        )}\r\n      </List>\r\n    </Grid>\r\n  );\r\n}\r\nexport function CreateGroup(props) {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    props.setgroupImagetype(type);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let fileurl = reader.result;\r\n      props.setgroupImage(fileurl);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  const [groupName, setgroupName] = useState(\"\");\r\n  const [participants, setparticipants] = useState([...props.url]);\r\n  function filterparticipant(grp) {\r\n    let Participantcopy = [];\r\n    Participantcopy = participants.filter((sParticipant, i) => {\r\n      return sParticipant !== grp;\r\n    });\r\n    setparticipants(Participantcopy);\r\n  }\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  return (\r\n    <div>\r\n      <h5> Create Group</h5>\r\n\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <img\r\n          src={props.groupImage === \"\" ? AddImg : props.groupImage}\r\n          style={{\r\n            width: \"200px\",\r\n            objectFit: \"cover\",\r\n            height: \"200px\",\r\n            borderRadius: \"100%\",\r\n            margin: \"10px\",\r\n            marginLeft: \"50px\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        label=\"Group Name\"\r\n        size=\"small\"\r\n        className=\"w-100 mt-10px\"\r\n        value={props.groupName}\r\n        onChange={(e) => {\r\n          props.setgroupName(e.target.value);\r\n        }}\r\n      />\r\n      <Grid container spacing={2} className=\"mt-10px ofh\">\r\n        <List>\r\n          {props.url.map((grp) =>\r\n            grp !== Auth.Phone ? (\r\n              <ListItem\r\n                onClick={async () => {\r\n                  await props.setParticipants([...props.Participants, grp]);\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Userurl\r\n                    Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                    showIcon={true}\r\n                  />\r\n                </ListItemAvatar>\r\n                <Userurl\r\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                  showName={true}\r\n                />\r\n              </ListItem>\r\n            ) : (\r\n              <></>\r\n            )\r\n          )}\r\n        </List>\r\n      </Grid>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"w-100\"\r\n        onClick={async () => {\r\n          await props.create();\r\n          props.show(false);\r\n        }}\r\n      >\r\n        Create Group\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function SelectParticipant(props) {\r\n  const [createGroup, setcreateGroup] = useState(props.showall);\r\n  const [Participants, setParticipants] = useState([]);\r\n  const [groupName, setgroupName] = useState(\"\");\r\n  const [groupImage, setgroupImage] = useState(\"\");\r\n  const [groupImagetype, setgroupImagetype] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const create = async () => {\r\n    let fileurl = \"\";\r\n    if (Participants.length > 0 && groupName !== \"\") {\r\n      let participants = [...new Set(Participants)];\r\n      await setParticipants(participants);\r\n      console.log(\r\n        groupName,\r\n        props.MainCode + groupName,\r\n        groupImage,\r\n        createGroup === 0 ? \"INDV\" : \"GRP\"\r\n      );\r\n      if (groupImage !== \"\") {\r\n        fileurl = await uploadString(\r\n          groupImage,\r\n          \"Groups/\" + props.MainCode + \"/\" + groupName + \".\" + groupImagetype\r\n        );\r\n        await setgroupImage(fileurl);\r\n      }\r\n      await dispatch(\r\n        creategroup(\r\n          groupName,\r\n          props.MainCode + groupName,\r\n          Participants,\r\n          fileurl,\r\n          createGroup === 0 ? \"INDV\" : \"GRP\"\r\n        )\r\n      );\r\n      props.hide(false);\r\n    } else {\r\n      console.log(groupName);\r\n      console.log(Participants);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {createGroup === 0 ? (\r\n        <>\r\n          <Participant\r\n            url={props.url}\r\n            setParticipants={setParticipants}\r\n            setgroupName={setgroupName}\r\n            create={create}\r\n            show={props.hide}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CreateGroup\r\n            url={props.url}\r\n            Participants={Participants}\r\n            setParticipants={setParticipants}\r\n            setgroupImage={setgroupImage}\r\n            setgroupName={setgroupName}\r\n            groupName={groupName}\r\n            groupImage={groupImage}\r\n            create={create}\r\n            show={props.hide}\r\n            setgroupImagetype={setgroupImagetype}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\timer\\timer.js",["839"],"import React, { useState } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nexport default function Timer(props) {\r\n  const [datetimer, setdatetime] = useState(Date.now() + 60000);\r\n\r\n  const renderer = ({ hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      props.settodo(1);\r\n      return <></>;\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <>\r\n          OTP will expire in : {hours}:{minutes}:{seconds}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return <Countdown date={datetimer} renderer={renderer} />;\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Login.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\AuthActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\Addtoalbum.js",["840","841","842","843","844","845","846"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../Assets/ChooseFromGallery.svg\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"../AddEvent/Extras/Extras.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"../Helpers/Popups/Popup.css\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { uploadString } from '../../Utils/FileUpload_Download'\r\nimport { uploadfiletoalbum } from '../../Redux/DispatchFuncitons/Eventfunctions'\r\nimport { useDispatch } from \"react-redux\";\r\nexport default function Addtoalbum(props) {\r\n    const dispatch = useDispatch();\r\n    const [album, setAlbum] = useState([]);\r\n    const [uniqurl, setuniqurl] = useState('');\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        let bkpalbum = [];\r\n        let filetype = [];\r\n\r\n        for (let i = 0; i < acceptedFiles.length; i++) {\r\n            if (acceptedFiles[i].size > 5259265) {\r\n            } else {\r\n                let type = acceptedFiles[i].type.split(\"/\");\r\n                type = type[1];\r\n                await getBase64(acceptedFiles[i]).then(async (data) => {\r\n                    await bkpalbum.push({ file: data, type: type });\r\n                    await filetype.push(type);\r\n                });\r\n            }\r\n        }\r\n        await setAlbum([...bkpalbum]);\r\n        return true;\r\n    }, []);\r\n    useEffect(async () => {\r\n\r\n        if (props.uniqurl.split('%2F')[1] === \"InternalTemplates\") {\r\n            let newurl = props.uniqurl.split('%2F')[2] + Math.floor(100000 + Math.random() * 900000) + '/Album/';\r\n            for (let i = 0; i < album.length; i++) {\r\n                if (album[i].file.includes('firebasestorage.googleapis.com')) {\r\n                    newurl = album[i].file.split('%2F')[1] + '/Album/'\r\n                }\r\n            }\r\n\r\n            console.log(newurl)\r\n            await setuniqurl(newurl)\r\n        } else {\r\n            await setuniqurl(props.uniqurl.split('%2F')[1] + '/Album/')\r\n            console.log(props.uniqurl.split('%2F')[1] + '/Album/')\r\n        }\r\n\r\n    }, [props.uniqurl])\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: \"image/jpeg, image/png, image/jpg\",\r\n    });\r\n    const cancel = () => {\r\n        setAlbum([]);\r\n    };\r\n    const deleteimage = (i) => {\r\n        let albumcpy = [...album];\r\n        albumcpy = albumcpy.filter((item, index) => i !== index);\r\n        setAlbum([...albumcpy]);\r\n    };\r\n    const save = async () => {\r\n        let albumcopy = [...props.images]\r\n        let uniqueurl =\r\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\" + \"Album/\";\r\n        for (let i = 0; i < album.length; i++) {\r\n            let newurl = await uploadString(album[i].file, uniqueurl + i + \".\" + album[i].type)\r\n            await albumcopy.push({ file: newurl, type: album[i].type })\r\n        }\r\n        console.log(albumcopy)\r\n        await dispatch(uploadfiletoalbum(albumcopy, props.MainCode))\r\n        props.toggleShowPopup(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"modal\"\r\n                open={props.showPopup}\r\n            >\r\n                <div className=\"modal-card\">\r\n                    <IconButton\r\n                        className=\"popup-close\"\r\n                        onClick={() => {\r\n                            props.toggleShowPopup(false);\r\n                        }}\r\n                    >\r\n                        <CancelIcon color=\"secondary\" fontSize=\"large\" />\r\n                    </IconButton>\r\n\r\n                    <div {...getRootProps()} style={{ width: '100%' }}>\r\n                        <input {...getInputProps()} />\r\n                        <img src={Gallery} className=\"w-100 uploadhere\" />\r\n                    </div>\r\n                    <Grid item xs={12} className=\"ofh view\">\r\n                        <Grid container spacing={4}>\r\n                            {album && album.length > 0\r\n                                ? album.map((image, index) => (\r\n                                    <Grid item xs={4} md={2} key={\"img\" + index}>\r\n                                        <CancelIcon\r\n                                            onClick={() => {\r\n                                                deleteimage(index);\r\n                                            }}\r\n                                            color=\"secondary\"\r\n                                            className=\"delete-img\"\r\n                                        />\r\n                                        <img src={image.file} className=\"w-100 preview\" />\r\n                                    </Grid>\r\n                                ))\r\n                                : Array.from({ length: 30 }, (value, key) => (\r\n                                    <Grid\r\n                                        item\r\n                                        xs={2}\r\n                                        md={1}\r\n                                        key={\"img\" + key}\r\n                                        className=\"w-100 preview grey m-5px\"\r\n                                    ></Grid>\r\n                                ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} className=\"submit jcc\">\r\n                        <button\r\n                            onClick={() => {\r\n                                save();\r\n                            }}\r\n                            className=\"add-album  \"\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </Grid>\r\n                    {uniqurl}\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\AddStory.js",["847","848","849","850","851","852","853","854","855","856","857"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\AddPost.js",["858","859","860","861","862"],"import React, { useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport { Container, Row, Col, } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport { IoCameraOutline } from \"react-icons/io5\";\r\nimport { FaTag } from \"react-icons/fa\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Grid } from '@material-ui/core'\r\nexport default function AddPost(props) {\r\n    const Auth = useSelector((state) => state.Auth);\r\n\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        if (acceptedFiles[0].size > 5259265) {\r\n            alert(\"Max file size 5mb\");\r\n            return false;\r\n        }\r\n        let url = \"\";\r\n        let ftype = acceptedFiles[0].type.split(\"/\");\r\n        console.log(ftype)\r\n        props.settype(ftype[0]);\r\n        var reader = await new FileReader();\r\n        reader.onload = async function () {\r\n            url = reader.result;\r\n            props.setimageurl(url);\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log(\"Error: \", error);\r\n        };\r\n        await reader.readAsDataURL(acceptedFiles[0]);\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        multiple: false,\r\n        accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n    });\r\n\r\n    return (\r\n        <Container\r\n            className=\"addpost-event  \"\r\n            style={{ marginTop: 10, marginBottom: 10 }}\r\n            fluid\r\n        >\r\n            <Grid container spacing={0} className=\"commentinp\">\r\n                <Grid item xs={2} md={1} style={{ margin: 'auto' }}>\r\n                    <UserData Phone={Auth.Phone} showIcon={true} />\r\n                </Grid>\r\n                <Grid item xs={8} md={10}>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            props.setcaption(e.target.value);\r\n                        }}\r\n                        value={props.caption}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"w-100\"\r\n                        placeholder=\"Add a Post\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            outline: \"none\",\r\n                            border: \"none\",\r\n                            background: \"#f6f6f6\",\r\n                            height: \"100%\",\r\n                            fontSize: 14,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2} md={1}>\r\n                    {props.isSubmit === false ? (\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                props.submit();\r\n                            }}\r\n                        >\r\n                            <SendIcon style={{ color: \"black\" }} />\r\n                        </IconButton>\r\n                    ) : (\r\n                        <IconButton>\r\n                            <CircularProgress style={{ color: \"black\" }} />\r\n                        </IconButton>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Row className=\"addmedia-tag\" style={{ marginTop: 20 }}>\r\n                <Col className=\"btn t-blue ll-blue btn-rnd m-5px\" {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <a style={{ color: \"#007bff\" }}>\r\n                        <IoCameraOutline size={20} /> Add Media\r\n                    </a>\r\n                </Col>\r\n                <Col className=\"btn t-blue ll-blue btn-rnd m-5px\">\r\n                    <a\r\n                        style={{ color: \"#007bff\" }}\r\n                        onClick={() => {\r\n                            props.setShowTagQuery(true);\r\n                        }}\r\n                    >\r\n                        <FaTag size={17} /> Tag\r\n                    </a>\r\n                    {/* )} */}\r\n                </Col>\r\n            </Row>\r\n            {props.imageurl !== \"\" ? (\r\n                props.type !== \"mp4\" ? (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <img\r\n                                    src={props.imageurl}\r\n                                    className=\"w-100\"\r\n                                    style={{ height: \"30vh\" }}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    <Row>\r\n                        <center>\r\n                            <video\r\n                                src={props.imageurl}\r\n                                type=\"video/mp4\"\r\n                                controls={true}\r\n                                preload=\"none\"\r\n                                height={260}\r\n                                width={window.innerWidth > 400 ? 800 : window.innerWidth}\r\n                                autoPlay=\"true\"\r\n                            />\r\n                        </center>\r\n                    </Row>\r\n                )\r\n\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Posts.js",["863","864","865","866"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport FeedComments from \"./FeedComments\";\r\n\r\nexport default function Postrender(props) {\r\n    const [Posts, setPosts] = useState([])\r\n    useEffect(() => {\r\n        if (props.filter === 'All') {\r\n            setPosts(props.data)\r\n        } else {\r\n            setPosts(props.filterdata)\r\n        }\r\n\r\n    }, [props.data, props.filter, props.filterdata])\r\n    return (\r\n        <div>\r\n            <>\r\n                {Posts.map((post, index) => (\r\n                    <Container\r\n                        className=\"main-feed \"\r\n                        style={{\r\n                            marginTop: 10,\r\n                            padding: 20,\r\n\r\n                        }}\r\n                    >\r\n                        <Row className=\"m-0\">\r\n                            <Col xs={2} md={1} fluid>\r\n                                <UserData showIcon={true} Phone={post.by} className=\"fl\" />\r\n                            </Col>\r\n                            <Col className=\"m-0 p-0\">\r\n                                <p className=\" m-5px fs-14\">\r\n                                    <b>\r\n                                        <UserDataUrl Phone={post.by} showName={true} />\r\n                                    </b>\r\n                                    {post.tags.length > 0 ? (\r\n                                        <>\r\n                                            {\" \"}\r\n                                            is with:{\" \"}\r\n                                            <b>\r\n                                                <UserDataUrl Phone={post.tags[0]} showName={true} />\r\n                                            </b>\r\n                                            {post.tags.length >= 2 ? (\r\n                                                <> and {post.tags.length - 1} other(s)</>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n                                            :\r\n                                        </>\r\n                                    ) : (\r\n                                        <></>\r\n                                    )}\r\n                                </p>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <p className=\" m-5px fs-14\">{post.caption}</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {post.fileurl !== \"\" ? (\r\n                            post.filetype === \"image\" ? (\r\n                                <Image src={post.fileurl} fluid />\r\n                            ) : (\r\n                                <center>\r\n                                    {\" \"}\r\n                                    <video\r\n                                        height=\"360\"\r\n                                        width={window.innerWidth > 500 ? 800 : window.innerWidth}\r\n                                        autoplay={false}\r\n                                        src={post.fileurl}\r\n                                        type=\"video/mp4\"\r\n                                        controls={true}\r\n                                        preload=\"none\"\r\n                                    />\r\n                                </center>\r\n                            )\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                        <Row className=\"m-0 p-0\">\r\n                            <Col xs={6} className=\"mt-10px\">\r\n                                <center>\r\n                                    <a\r\n                                        style={{ color: \"rgb(244 67 54)\" }}\r\n                                        onClick={() => {\r\n                                            props.getposts();\r\n                                        }}\r\n                                    >\r\n                                        <Like\r\n                                            index={index}\r\n                                            LikeList={post.LikeList}\r\n                                            _id={post._id}\r\n                                            getposts={props.getposts}\r\n                                            maincode={props.Maincode}\r\n                                        />\r\n                                    </a>\r\n                                </center>\r\n                            </Col>\r\n                            <Col xs={6} className=\"mt-10px\">\r\n                                <center>\r\n                                    <a\r\n                                        style={{ color: \"#007bff\" }}\r\n                                        onClick={async () => {\r\n                                            console.log(props.showcommmentforpost)\r\n                                            console.log(!props.showcommment)\r\n                                            console.log(!props.showcommment)\r\n                                            if (props.showcommmentforpost === post._id) {\r\n                                                props.setshowcommment(!props.showcommment);\r\n                                                props.setshowcommmentforpost(post._id);\r\n                                                await props.getposts();\r\n                                            } else {\r\n                                                props.setshowcommment(true);\r\n                                                props.setshowcommmentforpost(post._id);\r\n                                                await props.getposts();\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <FaRegCommentDots size={25} style={{ marginLeft: 30 }} />\r\n\r\n                                        {post.CommentList.length}\r\n                                    </a>\r\n                                </center>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Col>\r\n                            {props.showcommment === true && props.showcommmentforpost === post._id ? (\r\n                                <FeedComments\r\n                                    id={post._id}\r\n                                    getposts={props.getposts}\r\n                                    data={post.CommentList}\r\n                                    maincode={props.MainCode}\r\n                                    post={post}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </Col>\r\n                    </Container>\r\n                ))}\r\n            </>\r\n        </div>\r\n    )\r\n}\r\nexport function Like(props) {\r\n    const dispatch = useDispatch();\r\n    const Auth = useSelector((state) => state.Auth);\r\n    const [isLike, setisLike] = useState(false);\r\n    const [count, setcount] = useState(0);\r\n    useEffect(() => {\r\n        props.LikeList.map((likedata) => {\r\n            if (likedata.LikeBy === Auth.Phone) {\r\n                setisLike(true);\r\n            }\r\n        });\r\n        setcount(props.LikeList.length);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLike === false ? (\r\n                <FcLikePlaceholder\r\n                    size={30}\r\n                    onClick={async () => {\r\n                        await dispatch(likepost(props._id, Auth.Phone, props.maincode));\r\n                        await setisLike(true);\r\n                        // await props.getposts(props.maincode);\r\n                        await setcount(count + 1);\r\n                    }}\r\n                />\r\n            ) : (\r\n                <FcLike\r\n                    size={30}\r\n                    onClick={async () => {\r\n                        await dispatch(likepost(props._id, Auth.Phone, props.maincode));\r\n                        await setisLike(false);\r\n                        // await props.getposts(props.maincode);\r\n                        await setcount(count - 1);\r\n                    }}\r\n                />\r\n            )}\r\n            {count}\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\AddTags.js",["867","868"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport './Feed.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\nexport default function AddTags(props) {\r\n    const [Tags, setTags] = useState(props.url)\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        setTags([...props.url])\r\n        console.log(props.MainCode)\r\n    }, [props.url])\r\n\r\n    const addTags = (data) => {\r\n        setTags([...Tags, data])\r\n    }\r\n    const removeTags = (data) => {\r\n        let Tagscpy = [...Tags];\r\n        Tagscpy = Tagscpy.filter((tag) => {\r\n            return data != tag;\r\n        });\r\n        setTags([...Tagscpy])\r\n    }\r\n\r\n    return (\r\n        <div><h3>Add Tags</h3>\r\n\r\n            <List className={classes.root}>\r\n                {props.MainCode.map(Participant => (\r\n                    <ListItem alignItems=\"flex-start\" className={Tags.includes(Participant) ? \"selected m-5px\" : \"m-5px\"}\r\n                        onClick={() => { Tags.includes(Participant) ? removeTags(Participant) : addTags(Participant) }}>\r\n                        <ListItemAvatar>\r\n                            <UserDataUrl showIcon={true} Phone={Participant} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={<UserDataUrl showName={true} Phone={Participant} />}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n\r\n                                    </Typography>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                ))}\r\n\r\n\r\n            </List>\r\n            <button className=\"btn btn-primary\" onClick={() => { props.showall([...Tags]); props.hide(false) }}\r\n                style={{ width: \"100%\", borderRadius: 20 }}>\r\n                Save\r\n            </button>\r\n        </div >\r\n    );\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Media.js",["869","870","871","872"],"import React, { useState, useEffect } from 'react'\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport './Feed.css'\r\nexport default function Media(props) {\r\n    const [currentmedia, setcurrentmedia] = useState(0);\r\n    useEffect(async () => {\r\n        let isselected = false;\r\n        for (let i = 0; i < props.currentPosts.length; i++) {\r\n            if (isselected === false) {\r\n                if (props.popuptype === \"Photo\" && props.currentPosts[i].filetype === \"image\") {\r\n                    await setcurrentmedia(i)\r\n                    console.log(props.currentPosts[i])\r\n                    console.log(i)\r\n                    isselected = true;\r\n                } else if (props.popuptype === \"Videos\" && props.currentPosts[i].filetype === \"video\") {\r\n                    await setcurrentmedia(i)\r\n                    isselected = true;\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container fluid >\r\n            <Row style={{ marginleft: 30, position: 'absolute', top: 0, zIndex: 99999 }}>\r\n                <IoArrowBackCircleOutline\r\n                    size={40}\r\n                    style={{ color: \"black\" }}\r\n                    onClick={() => props.toggleShowPopup(false)}\r\n                />\r\n                <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n                    {props.popuptype}\r\n                </h3>\r\n            </Row>\r\n            <Row style={{ marginTop: 0, position: 'fixed', top: 0, outline: 'none', left: 0, margin: 0 }}>\r\n                {props.currentPosts.map((post, index) => (\r\n\r\n                    post.fileurl !== \"\" && index === currentmedia ?\r\n                        (props.popuptype === \"Photo\" && post.filetype === \"image\") ?\r\n                            <img className=\"Media\" src={post.fileurl} key={index} onClick={() => { setcurrentmedia(index) }} />\r\n                            : (props.popuptype === \"Videos\" && post.filetype === \"video\") ? <>\r\n                                <video className=\"Media\" src={post.fileurl} type=\"video/mp4\"\r\n                                    controls={true} autoplay='true'\r\n                                    preload=\"none\" height={window.innerWidth - 150} width={window.innerWidth > 400 ? 800 : window.innerWidth} />\r\n                            </> :\r\n                                <></>\r\n                        : <></>\r\n\r\n\r\n                ))}\r\n\r\n            </Row>\r\n            <Row style={{ marginTop: 5, position: 'fixed', bottom: 0, overflowX: 'scroll', width: '100vw', margin: 0, left: 0 }}>\r\n                {props.currentPosts.map((post, index) => (\r\n                    post.fileurl !== \"\" ?\r\n                        (props.popuptype === \"Photo\" && post.filetype === \"image\") ?\r\n                            <img className=\"item-options\" src={post.fileurl} key={index} onClick={() => { setcurrentmedia(index) }} />\r\n                            : (props.popuptype === \"Videos\" && post.filetype === \"video\") ?\r\n                                <video className=\"item-options\" width={50} height={50} src={post.fileurl} type=\"video/mp4\"\r\n                                    autoPlay={false} preload=\"none\" onClick={() => { setcurrentmedia(index) }} />\r\n                                :\r\n                                <></>\r\n                        : <></>\r\n\r\n                ))}\r\n\r\n\r\n            </Row>\r\n\r\n        </Container >\r\n    )\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Schedule.js",["873","874","875","876","877","878","879","880","881","882"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js",["883","884","885","886","887","888","889","890"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Select,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\nimport EventNameBox from \"./EventNameBox\";\r\nimport AddImg from \"../../../Assets/AddImage.svg\";\r\nimport Uploading from \"../../../Assets/Uploading.svg\";\r\nimport EventDetails from \"./EventDetails\";\r\nimport \"./CreateEvent.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nexport default function CreateEvent(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"#3897f1 !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n\r\n  const [disablesave, setDisablesave] = useState(false);\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  const [erroring, seterroring] = useState(false);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n\r\n  const [url, seturl] = useState(AddImg);\r\n  useEffect(() => {\r\n    if (\r\n      props.Events[props.SelectedEvent] !== undefined &&\r\n      props.Events[props.SelectedEvent].file !== \"\"\r\n    ) {\r\n      if (props.Events[props.SelectedEvent].file === \"uploading\") {\r\n        seturl(Uploading);\r\n      } else {\r\n        seturl(props.Events[props.SelectedEvent].file);\r\n      }\r\n    } else {\r\n      seturl(AddImg);\r\n    }\r\n  }, [\r\n    props.Events[props.SelectedEvent] !== undefined\r\n      ? props.Events[props.SelectedEvent].file\r\n      : \"\",\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={0} className=\"m-0  p-15px pt-0 pb-0\">\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className=\"w-100-p  m-b-10 \"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            <Select\r\n              native\r\n              value={props.Type}\r\n              onChange={props.handleChange}\r\n              error={erroring}\r\n              className=\"selectboxblue\"\r\n              displayEmpty\r\n            >\r\n              <option value=\"Wedding\">Wedding</option>\r\n              <option value=\"Birthday\">Birthday</option>\r\n              <option value=\"Wedding Anniversary\">Wedding Anniversary</option>\r\n              <option value=\"Get Together\">Get Together</option>\r\n              <option value=\"Formal Event\">Formal Event</option>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <div className=\"noe\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={false} sm={1} md={2} />\r\n              <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\r\n                Number Of Events\r\n              </Grid>\r\n              <Grid item xs={5} sm={5} md={4}>\r\n                <Grid container spacing={0}>\r\n                  <Grid item xs={12}>\r\n                    <div className=\"Cirlce tar  fl\">\r\n                      <RemoveCircleOutlineIcon\r\n                        className=\"l-blue-t \"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.removeAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"white box  fl\">{props.Events.length}</div>\r\n                    <div className=\"Cirlce tal  fl\">\r\n\r\n                      <AddCircleOutlineIcon\r\n                        className=\"l-blue-t\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.addAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"event-Names m-b-10 p-15px pb-0 pt-0\">\r\n        <EventNameBox\r\n          data={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectEvent={props.SelectEvent}\r\n          SelectedEvent={props.SelectedEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n        />\r\n      </div>\r\n\r\n      <Grid item xs={12}>\r\n        <EventDetails\r\n          Events={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectedEvent={props.SelectedEvent}\r\n          SelectEvent={props.SelectEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n          setDisablesave={setDisablesave}\r\n          disablesave={disablesave}\r\n          albumdata={props.albumdata}\r\n          setStory={props.setStory}\r\n          setalbumdata={props.setalbumdata}\r\n          Story={props.Story}\r\n          template={props.template}\r\n          handleNext={props.handleNext}\r\n          Type={props.Type}\r\n          seterroring={seterroring}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <button\r\n          className={\r\n            disablesave === false ? \"save-events disabled\" : \"save-events \"\r\n          }\r\n          onClick={() => {\r\n            if (disablesave === true) {\r\n              props.handleNext();\r\n            }\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Plan\\Plan.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js",["891","892","893","894","895"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Stepper\\Stepper.js",["896","897","898","899","900","901","902","903"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"\", \"\", \"\"];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"\";\r\n    case 1:\r\n      return \"\";\r\n    case 2:\r\n      return \"\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper(props) {\r\n  const classes = useStyles();\r\n\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    // <div className={classes.root}>\r\n    //   <Stepper activeStep={props.activeStep}>\r\n    //     {steps.map((label, index) => {\r\n    //       const stepProps = {};\r\n    //       const labelProps = {};\r\n\r\n    //       return (\r\n    //         // <Step key={index} {...stepProps} c>\r\n    //         //   <StepLabel {...labelProps} className=\"l-blue-t\">\r\n    //         //     {label}\r\n    //         //   </StepLabel>\r\n    //         // </Step>\r\n    //\r\n    //       );\r\n    //     })}\r\n    //   </Stepper>\r\n    //   <div>\r\n    //     <div>\r\n    //       <Typography className={classes.instructions}>\r\n    //         {getStepContent(props.activeStep)}\r\n    //       </Typography>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n    <div className=\"w-100 p-10px\"></div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserData.js",["904","905","906","907"],"import React, { useState, useEffect } from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as _ from \"lodash\";\r\nexport default function UserData(props) {\r\n  const [User, setUser] = useState({});\r\n  const GuestList = useSelector(state => state.GuestList)\r\n  const Auth = useSelector(state => state.Auth);\r\n  useEffect(async () => {\r\n    console.log(props.Phone);\r\n    if (props.Phone !== \"\" || props.Phone === undefined) {\r\n      if (Auth.Phone === props.Phone) {\r\n        setUser({ Name: Auth.Name, Pic: Auth.Profile });\r\n      } else {\r\n        let i = _.findLastIndex(GuestList, function (o) { return o.Phone == props.Phone; });\r\n        if (i !== -1) {\r\n          await setUser(GuestList[i])\r\n        } else {\r\n          await setUser({ Name: Auth.Phone, Pic: \"\" })\r\n        }\r\n      }\r\n    }\r\n  }, [props.Phone, GuestList]);\r\n  return (\r\n    <div className=\"w-100\">\r\n      {props.showIcon === true ? (\r\n        User.Pic !== undefined && User.Pic !== \"\" ? (\r\n          <div className=\"fl\">\r\n            <Avatar alt=\"Profile Picture\" src={User.Pic} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"fl\">\r\n            <AccountCircle />\r\n          </div>\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showName === true ? (\r\n        <div className=\"fl  fs-bold \">{User.Name} </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\FeedComments.js",["908"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { addcomments } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core';\r\nexport default function FeedComments(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [comment, setcomment] = useState(\"\");\r\n  const [comments, setcomments] = useState([]);\r\n  const [isError, setisError] = useState(false);\r\n  const submit = async () => {\r\n    if (comment !== \"\") {\r\n      await dispatch(addcomments(props.id, Auth.Phone, comment, props.maincode));\r\n\r\n      let commentscpy = [...comments]\r\n      await commentscpy.push({ CommentBy: Auth.Phone, Comment: comment })\r\n      console.log(commentscpy)\r\n      await setcomments(commentscpy)\r\n      await setisError(false);\r\n      await setcomment(\"\")\r\n      await props.getposts(props.maincode)\r\n    } else {\r\n      setisError(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(props.data)\r\n    setcomments(props.data)\r\n  }, [props.post])\r\n\r\n  return (\r\n    <Grid container spacing={0} className=\"mt-5px p-0  mb-100\">\r\n      <Grid container spacing={0} className=\"commentinp\">\r\n        <Grid item xs={2} md={1} className=\"m-0 p-0\">\r\n          <UserDataUrl showIcon={true} Phone={Auth.Phone} />\r\n        </Grid>\r\n        <Grid item xs={8} className=\"p-0 \">\r\n          <input\r\n            type='text'\r\n            value={comment}\r\n            onChange={(e) => setcomment(e.target.value)}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className=\"w-100\"\r\n            placeholder=\"Add comment\"\r\n            error={isError}\r\n            style={{ width: '100%', outline: 'none', border: 'none', background: '#f6f6f6', height: '100%', fontSize: 14 }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2} className=\"\">\r\n          <IconButton onClick={() => {\r\n            submit();\r\n          }}>\r\n            <SendIcon style={{ color: 'black' }} />\r\n          </IconButton >\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={0} className=\"p-5px m-5px \">\r\n        {comments &&\r\n          comments.map((cmt) => (\r\n            <Grid container spacing={0}\r\n              style={{\r\n                marginTop: '10px',\r\n                width: '100%'\r\n              }}\r\n              md={12}\r\n            >\r\n              <Grid item xs={2} md={1} className=\"fs-14\">\r\n                <UserDataUrl showIcon={true} Phone={cmt.CommentBy} />\r\n              </Grid>\r\n              <Grid item xs={10} md={9}>\r\n                <h5 className=\"m-0 p-0 fs-14\">\r\n                  <UserDataUrl showName={true} Phone={cmt.CommentBy} />\r\n                </h5>\r\n\r\n                <span className=\"t-grey fs-14\">{cmt.Comment}</span>\r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js",["909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js",["935","936","937","938","939","940"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Button,\r\n  ListGroup,\r\n  Tabs,\r\n  Tab,\r\n  Col,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { BsFillPeopleFill } from \"react-icons/bs\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport default function Addformultiple(props) {\r\n  const [participants, setparticipants] = useState([]);\r\n  const [width, setwidth] = useState(\"100%\");\r\n  useEffect(async () => {\r\n    console.log(props);\r\n    await setparticipants(props.participants);\r\n    await setwidth(100 / props.Events.length + \"vw\");\r\n  }, [props.participants]);\r\n\r\n  const readExcel = async (file) => {\r\n    const fileReader = new FileReader();\r\n    await fileReader.readAsArrayBuffer(file);\r\n    fileReader.onload = async (e) => {\r\n      const bufferArray = e.target.result;\r\n      const wb = await XLSX.read(bufferArray, { type: \"buffer\" });\r\n      const wsname = await wb.SheetNames[0];\r\n      const ws = await wb.Sheets[wsname];\r\n      const data = await XLSX.utils.sheet_to_json(ws);\r\n      await props.saveparticipantsfromexcel(data);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      console.log(error);\r\n    };\r\n  };\r\n\r\n  const DeleteThisContact = (index) => {\r\n    let particpantscpy = [...props.participants];\r\n    let NexteventKey = parseInt(props.eventKey) + 1;\r\n    particpantscpy[props.eventKey] = particpantscpy[props.eventKey].filter(\r\n      (word, i) => index !== i\r\n    );\r\n    props.setParticipants(particpantscpy);\r\n  };\r\n\r\n  const copyToNext = () => {\r\n    let particpantscpy = [...props.participants];\r\n    if (particpantscpy.length === 0) {\r\n      alert(\"Please add contacts to this event Firts\");\r\n    } else {\r\n      if (props.eventKey < 3 && props.eventKey < props.Events.length - 1) {\r\n        let NexteventKey = parseInt(props.eventKey) + 1;\r\n        particpantscpy[NexteventKey] = particpantscpy[props.eventKey];\r\n        console.log(particpantscpy);\r\n        props.setParticipants(particpantscpy);\r\n      } else {\r\n        alert(\"No more Events to copy\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"p-0\">\r\n        <h3 className=\"p-15px\">Add Guests</h3>\r\n\r\n        <Tabs\r\n          activeKey={props.eventKey}\r\n          onSelect={(k) => {\r\n            console.log(k);\r\n            props.setKey(k);\r\n          }}\r\n        >\r\n          {props.Events &&\r\n            props.Events.map((eve, index) => (\r\n              <Tab\r\n                eventKey={index}\r\n                title={eve.Name.substring(1, 4) + \"...\"}\r\n                style={{ width: width }}\r\n              >\r\n                <ListGroup style={{ margin: \"auto\" }} className=\"listitems_box\">\r\n                  {participants &&\r\n                    participants[props.eventKey] &&\r\n                    participants[props.eventKey].map((listdata, i) => (\r\n                      <ListGroup.Item>\r\n                        {listdata}\r\n                        <AiFillCloseCircle\r\n                          size=\"25\"\r\n                          style={{ float: \"right\", color: \"red\" }}\r\n                          onClick={() => {\r\n                            DeleteThisContact(i);\r\n                          }}\r\n                        />\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n              </Tab>\r\n            ))}\r\n        </Tabs>\r\n        <Row>\r\n          <Col xs={12} md={12} style={{ display: \"flex\" }}>\r\n            {props.isMobile === true ? (\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                className=\"addcontacts_btn\"\r\n                style={{ margin: \"auto\", borderRadius: 20 }}\r\n                onClick={() => {\r\n                  props.openContactPicker();\r\n                }}\r\n              >\r\n                <BsFillPeopleFill /> Add Contacts\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <label\r\n                  htmlFor=\"input2\"\r\n                  className=\"addcontacts_btn btn btn-outline-primary\"\r\n                  style={{\r\n                    display: props.isMobile === false ? \"block\" : \"none\",\r\n                  }}\r\n                  style={{ margin: \"auto\", borderRadius: 20 }}\r\n                  onClick={() => {\r\n                    console.log(\"done 3\");\r\n                  }}\r\n                >\r\n                  <BsFillPeopleFill /> Add Contacts\r\n                </label>\r\n                <input\r\n                  id=\"input2\"\r\n                  type=\"file\"\r\n                  accept=\".xlsx\"\r\n                  onChange={(e) => {\r\n                    console.log(\"done 4\");\r\n                    const file = e.target.files[0];\r\n                    readExcel(file);\r\n                  }}\r\n                  placeholder=\"Add Participants\"\r\n                  style={{ display: \"none\" }}\r\n                />\r\n              </>\r\n            )}\r\n          </Col>\r\n          <Col xs={12} md={12} style={{ marinTop: 10 }}>\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              onClick={() => {\r\n                copyToNext();\r\n              }}\r\n              style={{\r\n                display:\r\n                  props.eventKey == props.Events.length - 1 ? \"none\" : \"block\", borderRadius: 20, marginTop: 20\r\n              }}\r\n              className=\"addcontacts_btn\"\r\n            >\r\n              Copy to Next Invite\r\n              <FaArrowRight />\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {\" \"}\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              style={{\r\n                float: \"right\",\r\n                width: \"100%\",\r\n                borderRadius: 20,\r\n                marginTop: 50,\r\n              }}\r\n              className=\"addcontacts_btn\"\r\n              onClick={() => {\r\n                props.open(false);\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              variant=\"primary\"\r\n              style={{\r\n                float: \"right\",\r\n                width: \"100%\",\r\n                borderRadius: 20,\r\n                marginTop: 50,\r\n              }}\r\n              className=\"addcontacts_btn\"\r\n              onClick={() => {\r\n                props.eventKey == props.Events.length - 1\r\n                  ? props.open(false)\r\n                  : props.setKey(parseInt(props.eventKey) + 1);\r\n              }}\r\n              disabled={props.isSaving}\r\n            >\r\n              {props.isSaving === true ? (\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"sr-only\">Saving...</span>\r\n                </Spinner>\r\n              ) : (\r\n                <>\r\n                  {props.eventKey === props.Events.length - 1 ? (\r\n                    \"Save\"\r\n                  ) : (\r\n                    <>Save</>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js",["941","942"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, Container, Row, Col, Form } from \"react-bootstrap\";\r\nexport default function AddCode(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const [codes, setCodes] = useState([]);\r\n  const [usercode, setusercode] = useState([]);\r\n  // var codescpy = [];\r\n  var usercodecpy = [];\r\n  function randomString(length, chars) {\r\n    var result = \"\";\r\n    for (var i = length; i > 0; --i)\r\n      result += chars[Math.floor(Math.random() * chars.length)];\r\n    return result;\r\n  }\r\n\r\n  // async function setcodesInEvents() {\r\n  //   if (props.code.length !== props.Events.length) {\r\n  //     for (var i = 0; i < props.Events.length; i++) {\r\n  //       codescpy.push({\r\n  //         Name: props.Events[i].Name,\r\n  //         code: randomString(\r\n  //           8,\r\n  //           \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n  //         ),\r\n  //       });\r\n  //       usercodecpy.push(codescpy[i].code);\r\n  //     }\r\n  //     console.log(codescpy);\r\n  //     await setCodes(codescpy);\r\n  //     await setusercode(usercodecpy);\r\n  //     await props.setEntryWay(\"Code\");\r\n  //     await props.setCodes(usercode);\r\n  //     await props.save();\r\n  //   }\r\n  // }\r\n  return (\r\n    <div>\r\n      <button className=\" next btn btn-dark mt-10px\" onClick={() => {\r\n        props.save()\r\n      }}>\r\n        Use Code\r\n      </button>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        style={{ position: \"absolute\", top: \"0vh\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Code For Events</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container fluid style={{ padding: '5px' }}>\r\n            <Row className=\"m-0 m-5px\">\r\n              <Col xs={5} md={3}>\r\n                <b>Name</b>\r\n              </Col>\r\n              <Col xs={7} md={9}>\r\n                <b>Code</b>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            {codes.map((code, index) => (\r\n              <Row className=\"m-0 mt-5px\" key={code.code}>\r\n                <Col xs={5} md={3} className=\"m-0 mt-5px\">\r\n                  {code.Name + \":\"}\r\n                </Col>\r\n                <Col xs={7} md={9} className=\"m-0 mt-5px\" style={{ paddingBottom: '10px' }}>\r\n                  <Form.Control\r\n                    disabled={true}\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    style={{ borderRadius: 20 }}\r\n                    value={usercode[index]}\r\n                    onChange={(e) => {\r\n                      usercodecpy[index] = e.target.value;\r\n                      setusercode(usercodecpy);\r\n                    }}\r\n                    maxLength={4}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n            <br />\r\n            <Row className=\"m-0\">\r\n              <Button\r\n                variant=\"success\"\r\n                style={{ borderRadius: 20, backgroundColor: \"#3897f1\" }}\r\n                className=\"w-100 mt-10px\"\r\n                onClick={() => {\r\n                  props.setEntryWay(\"Code\");\r\n                  props.setCodes(usercode);\r\n                  handleClose(false);\r\n                }}\r\n              >\r\n                Done\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Maps.js",["943","944","945","946"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport \"./Maps.css\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Geocode from \"react-geocode\";\r\nlet mapStyles = [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        weight: \"2.00\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#9c9c9c\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#f2f2f2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape.man_made\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        saturation: -100,\r\n      },\r\n      {\r\n        lightness: 45,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#eeeeee\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#7b7b7b\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#46bcec\",\r\n      },\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#c8d7d4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#070707\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"400px\",\r\n  width: \"100%\",\r\n  border: \"solid\",\r\n  display: \"none\",\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  gestureHandling: \"cooperative\",\r\n};\r\nconst center = {\r\n  lat: 20.5937,\r\n  lng: 78.9629,\r\n};\r\n\r\nexport default function Map(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\",\r\n    libraries,\r\n  });\r\n\r\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\r\n\r\n  Geocode.setLanguage(\"en\");\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [adderss, setAddress] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  useEffect(() => {\r\n    try {\r\n      let data = JSON.parse(props.CurrentEventDetails.location);\r\n      setAddress(data.Location);\r\n      setLocation(data.Location);\r\n    } catch (err) {\r\n      setLocation(\"\");\r\n    }\r\n  }, []);\r\n\r\n  const onMapClick = useCallback(async (e) => {\r\n    let lat = e.latLng.lat();\r\n    let long = e.latLng.lng();\r\n    setMarkers((current) => [\r\n      {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ]);\r\n    Geocode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(\r\n      (response) => {\r\n        const faddress = response.results[0].formatted_address;\r\n\r\n        setAddress(faddress);\r\n\r\n        let location = JSON.stringify({ lat, long, faddress });\r\n        console.log({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n        // props.setLocation(location);\r\n        // if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //     Link: \"\",\r\n        //   });\r\n        // } else {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //   });\r\n        // }\r\n\r\n        console.log(faddress);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    let location = JSON.stringify({ lat, lng });\r\n    console.log(location);\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(20);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <h1></h1>\r\n\r\n      <Search\r\n        panTo={panTo}\r\n        Location={Location}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n        setLocation={props.setLocation}\r\n      />\r\n\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={5}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n        options={{ scrollwheel: false }}\r\n        style={{ display: \"none\" }}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={`${marker.lat}-${marker.lng}`}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{adderss}</h2>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  console.log(props);\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\r\n      radius: 100 * 1000,\r\n    },\r\n  });\r\n\r\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\r\n\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setValue(address, false);\r\n    clearSuggestions();\r\n\r\n    try {\r\n      const results = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n      props.panTo({ lat, lng });\r\n      console.log(results);\r\n      let location = await JSON.stringify({ lat, lng, address });\r\n\r\n      if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n          Link: \"\",\r\n        });\r\n      } else {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n      }\r\n      props.setisEditLocation(false)\r\n    } catch (error) {\r\n      console.log(\"😱 Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-90\">\r\n      <Combobox\r\n        onSelect={async (address) => { await handleSelect(address); await props.setLocation(address) }}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        setCurrentEventDetails={props.setCurrentEventDetails}\r\n      >\r\n        <span\r\n          className={\r\n            props.CurrentEventDetails.VenueType === \"Offline\"\r\n              ? \"label top-5\"\r\n              : \"label\"\r\n          }\r\n        >\r\n          Location\r\n        </span>\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={handleInput}\r\n          disabled={!ready}\r\n          Placeholder=\"Search your location\"\r\n          className={\"locationSearch\"}\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div >\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js",["947","948","949","950","951","952","953","954","955","956","957","958"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport Tenmplate from \"../../../Assets/TemplateNone.svg\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../../Utils/Config\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport CanvasEditor from \"./CanvasEditor\";\r\nimport { useSelector } from \"react-redux\";\r\nexport default function ImageSelectionModal(props) {\r\n  const [Show, setswitch] = useState(false);\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 10259265) {\r\n      alert(\"Max file size 10 mb\");\r\n      return false;\r\n    }\r\n    let EventsCpy = await { ...props.CurrentEventDetails };\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    EventsCpy.filetype = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      EventsCpy.file = reader.result;\r\n      await props.SetCurrentEventDetails(EventsCpy);\r\n      props.show(false);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4\",\r\n  });\r\n\r\n  return Show === false ? (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <h2 className=\"tac\">Upload Your Picture</h2>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          <img src={Gallery} className=\"w-100\" />\r\n        </div>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={6}\r\n        onClick={() => {\r\n          setswitch(true);\r\n        }}\r\n      >\r\n        <img src={Tenmplate} className=\"w-100\" />\r\n      </Grid>\r\n    </Grid>\r\n  ) : (\r\n    <ImageSelectionModalTemplates\r\n      CurrentEventDetails={props.CurrentEventDetails}\r\n      SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n      Type={props.Type}\r\n      show={props.show}\r\n    />\r\n  );\r\n}\r\n\r\nexport function ImageSelectionModalTemplates(props) {\r\n  const [allimgsforcategory, setallimgsforcategory] = useState([\r\n    { Url: Tenmplate },\r\n  ]);\r\n  const [currentimage, setcurrentimage] = useState(0);\r\n  const [SelectedImage, setSelectedImage] = useState(\"\");\r\n  const [SelectedTemplate, setSelectedTemplate] = useState(\"\");\r\n  const [isImageSelected, setisImageSelected] = useState(false);\r\n  const [loadedRemoteImgs, setloadedRemoteImgs] = useState(false);\r\n  const AllTemplates = useSelector(state => state.AllTemplates)\r\n  const save = async (file) => {\r\n    let EventsCpy = await { ...props.CurrentEventDetails };\r\n    EventsCpy.file = file;\r\n    await setSelectedImage(file);\r\n    await setisImageSelected(true);\r\n    // await props.SetCurrentEventDetails(EventsCpy);\r\n    // props.show(false);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let AllTemplatescpy = await AllTemplates.filter(async (temps, index) => {\r\n      return temps.Category === props.Type;\r\n    });\r\n    await setallimgsforcategory(AllTemplatescpy);\r\n    await setloadedRemoteImgs(true)\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isImageSelected === false ? (\r\n        loadedRemoteImgs === false ? <h1>Loading Templates</h1> :\r\n          <div>\r\n            <div style={{ width: \"100%\", height: \"300px\" }}>\r\n              <img\r\n                src={allimgsforcategory[currentimage].urlToImage[0].src}\r\n                style={{ width: \"100%\", height: \"299px\" }}\r\n              />\r\n              <div\r\n                style={{\r\n                  width: \"50px\",\r\n                  height: \"50px\",\r\n                  position: \"relative\",\r\n                  bottom: \"40px\",\r\n                  left: \"280px\",\r\n                }}\r\n              >\r\n                <CheckCircleOutlineIcon\r\n                  style={{\r\n                    color: \"Green\",\r\n                    background: \"#fff\",\r\n                    borderRadius: \"100%\",\r\n                  }}\r\n                  onClick={() => {\r\n                    save(allimgsforcategory[currentimage].urlToImage[0].src);\r\n                  }}\r\n                  fontSize=\"large\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                overflowX: \"scroll\",\r\n                marginTop: \"5px\",\r\n              }}\r\n            >\r\n              {allimgsforcategory.map((img, index) => (\r\n                <img\r\n                  src={img.urlToImage[0].src}\r\n                  style={{ width: \"50px\", height: \"50px\" }}\r\n                  onClick={() => {\r\n                    setcurrentimage(index);\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n      ) : (\r\n        <CanvasEditor\r\n          SelectedImage={SelectedImage}\r\n          isImageSelected={isImageSelected}\r\n          SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n          EventsCpy={props.CurrentEventDetails}\r\n          show={props.show}\r\n          currentimage={currentimage}\r\n          setcurrentimage={setcurrentimage}\r\n          allimgsforcategory={allimgsforcategory}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CanvasEditor.js",["959","960","961","962","963"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\r\nimport './CanvasEditor.scss'\r\nimport { toPng } from 'html-to-image';\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function CanvasEditor(props) {\r\n    const [version, setversion] = useState(0);\r\n    const download = async () => {\r\n        let file = await toPng(document.getElementById('image'))\r\n            .then(async function (blob) {\r\n                let EventsCpy = await { ...props.CurrentEventDetails };\r\n                console.log(blob)\r\n                EventsCpy.filetype = \"png\";\r\n                EventsCpy.file = blob;\r\n                await props.SetCurrentEventDetails(EventsCpy);\r\n                props.show(false);\r\n            });\r\n\r\n    };\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                id=\"image\"\r\n                style={{\r\n                    backgroundImage: `url(${props.allimgsforcategory[props.currentimage].urlToImage[version].src})`,\r\n                    backgroundSize: \"contain\",\r\n                    height: \"500px\",\r\n                    overflow: \"hidden\",\r\n                    width: \"320px\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundPosition: \"center center\",\r\n                    zIndex: 0,\r\n                    padding: 0, margin: 0,\r\n\r\n                }}\r\n            >\r\n                {props.allimgsforcategory[props.currentimage].Texts.map((txt, index) => (\r\n                    <p\r\n                        contentEditable=\"true\"\r\n                        key={index}\r\n                        className=\"editable-content\"\r\n                        style={{\r\n                            position: \"relative\",\r\n                            width: txt.Style.width,\r\n                            margin: txt.Style.margin,\r\n                            top: txt.Style.top,\r\n                            fontSize: txt.Style.fontSize,\r\n                            color: txt.Style.color,\r\n                            fontWeight: txt.Style.fontWeight,\r\n                            transform: txt.Style.transform,\r\n                            textAlign: txt.Style.textAlign,\r\n                            fontFamily: txt.Style.fontFamily,\r\n                            zIndex: index + 1,\r\n                        }}\r\n                    >\r\n                        {txt.editable}\r\n                    </p>\r\n                ))}\r\n\r\n            </div>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={6} justify=\"center\"><center style={{ paddingTop: '10px' }}>\r\n                    {props.allimgsforcategory[props.currentimage].urlToImage.map((options, index) => (\r\n                        <Button\r\n                            className=\"color-blocks\"\r\n                            style={{ backgroundColor: options.color }}\r\n                            onClick={() => {\r\n                                setversion(index)\r\n                            }}\r\n                        ></Button>\r\n                    ))}</center>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <button className=\"save-event\" style={{ marginTop: '5px' }} onClick={() => {\r\n                        download()\r\n                    }}>\r\n                        Save\r\n                    </button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n",{"ruleId":"964","replacedBy":"965"},{"ruleId":"966","replacedBy":"967"},{"ruleId":"968","severity":1,"message":"969","line":52,"column":13,"nodeType":"970","endLine":70,"endColumn":4},{"ruleId":"968","severity":1,"message":"971","line":56,"column":18,"nodeType":"972","endLine":61,"endColumn":16},{"ruleId":"973","severity":1,"message":"974","line":13,"column":10,"nodeType":"975","messageId":"976","endLine":13,"endColumn":18},{"ruleId":"968","severity":1,"message":"969","line":17,"column":13,"nodeType":"970","endLine":28,"endColumn":4},{"ruleId":"973","severity":1,"message":"977","line":20,"column":9,"nodeType":"975","messageId":"976","endLine":20,"endColumn":14},{"ruleId":"968","severity":1,"message":"978","line":28,"column":6,"nodeType":"979","endLine":28,"endColumn":8,"suggestions":"980"},{"ruleId":"968","severity":1,"message":"969","line":29,"column":13,"nodeType":"970","endLine":39,"endColumn":4},{"ruleId":"968","severity":1,"message":"978","line":39,"column":6,"nodeType":"979","endLine":39,"endColumn":23,"suggestions":"981"},{"ruleId":"973","severity":1,"message":"982","line":4,"column":3,"nodeType":"975","messageId":"976","endLine":4,"endColumn":13},{"ruleId":"973","severity":1,"message":"983","line":5,"column":3,"nodeType":"975","messageId":"976","endLine":5,"endColumn":16},{"ruleId":"968","severity":1,"message":"969","line":21,"column":13,"nodeType":"970","endLine":42,"endColumn":4},{"ruleId":"968","severity":1,"message":"984","line":42,"column":6,"nodeType":"979","endLine":42,"endColumn":8,"suggestions":"985"},{"ruleId":"968","severity":1,"message":"969","line":43,"column":13,"nodeType":"970","endLine":48,"endColumn":4},{"ruleId":"968","severity":1,"message":"978","line":48,"column":6,"nodeType":"979","endLine":48,"endColumn":8,"suggestions":"986"},{"ruleId":"973","severity":1,"message":"987","line":20,"column":20,"nodeType":"975","messageId":"976","endLine":20,"endColumn":31},{"ruleId":"973","severity":1,"message":"988","line":22,"column":10,"nodeType":"975","messageId":"976","endLine":22,"endColumn":14},{"ruleId":"968","severity":1,"message":"989","line":75,"column":6,"nodeType":"979","endLine":75,"endColumn":8,"suggestions":"990"},{"ruleId":"991","severity":1,"message":"992","line":111,"column":15,"nodeType":"993","endLine":111,"endColumn":54},{"ruleId":"991","severity":1,"message":"992","line":188,"column":17,"nodeType":"993","endLine":188,"endColumn":95},{"ruleId":"973","severity":1,"message":"994","line":75,"column":9,"nodeType":"975","messageId":"976","endLine":75,"endColumn":15},{"ruleId":"973","severity":1,"message":"995","line":119,"column":7,"nodeType":"975","messageId":"976","endLine":119,"endColumn":28},{"ruleId":"996","severity":1,"message":"997","line":167,"column":33,"nodeType":"970","messageId":"998","endLine":167,"endColumn":35},{"ruleId":"999","severity":1,"message":"1000","line":175,"column":29,"nodeType":"1001","messageId":"1002","endLine":175,"endColumn":30},{"ruleId":"968","severity":1,"message":"969","line":183,"column":13,"nodeType":"970","endLine":185,"endColumn":4},{"ruleId":"968","severity":1,"message":"1003","line":185,"column":6,"nodeType":"979","endLine":185,"endColumn":8,"suggestions":"1004"},{"ruleId":"991","severity":1,"message":"992","line":249,"column":15,"nodeType":"993","endLine":249,"endColumn":33},{"ruleId":"968","severity":1,"message":"969","line":51,"column":13,"nodeType":"970","endLine":81,"endColumn":4},{"ruleId":"968","severity":1,"message":"1005","line":81,"column":6,"nodeType":"979","endLine":81,"endColumn":31,"suggestions":"1006"},{"ruleId":"973","severity":1,"message":"1007","line":121,"column":11,"nodeType":"975","messageId":"976","endLine":121,"endColumn":23},{"ruleId":"973","severity":1,"message":"1008","line":121,"column":25,"nodeType":"975","messageId":"976","endLine":121,"endColumn":38},{"ruleId":"973","severity":1,"message":"1009","line":121,"column":40,"nodeType":"975","messageId":"976","endLine":121,"endColumn":52},{"ruleId":"973","severity":1,"message":"1010","line":160,"column":9,"nodeType":"975","messageId":"976","endLine":160,"endColumn":24},{"ruleId":"973","severity":1,"message":"1011","line":169,"column":11,"nodeType":"975","messageId":"976","endLine":169,"endColumn":16},{"ruleId":"968","severity":1,"message":"1012","line":206,"column":6,"nodeType":"979","endLine":206,"endColumn":17,"suggestions":"1013"},{"ruleId":"968","severity":1,"message":"1014","line":211,"column":6,"nodeType":"979","endLine":211,"endColumn":14,"suggestions":"1015"},{"ruleId":"973","severity":1,"message":"1016","line":27,"column":10,"nodeType":"975","messageId":"976","endLine":27,"endColumn":15},{"ruleId":"968","severity":1,"message":"1017","line":56,"column":6,"nodeType":"979","endLine":56,"endColumn":8,"suggestions":"1018"},{"ruleId":"968","severity":1,"message":"969","line":69,"column":13,"nodeType":"970","endLine":92,"endColumn":4},{"ruleId":"968","severity":1,"message":"1019","line":76,"column":21,"nodeType":"1020","endLine":76,"endColumn":59},{"ruleId":"968","severity":1,"message":"1021","line":77,"column":16,"nodeType":"1022","endLine":77,"endColumn":26},{"ruleId":"973","severity":1,"message":"1023","line":83,"column":9,"nodeType":"975","messageId":"976","endLine":83,"endColumn":13},{"ruleId":"968","severity":1,"message":"1024","line":222,"column":6,"nodeType":"979","endLine":222,"endColumn":8,"suggestions":"1025"},{"ruleId":"973","severity":1,"message":"1023","line":15,"column":10,"nodeType":"975","messageId":"976","endLine":15,"endColumn":14},{"ruleId":"968","severity":1,"message":"969","line":25,"column":13,"nodeType":"970","endLine":49,"endColumn":4},{"ruleId":"968","severity":1,"message":"1026","line":49,"column":6,"nodeType":"979","endLine":49,"endColumn":31,"suggestions":"1027"},{"ruleId":"973","severity":1,"message":"1023","line":15,"column":12,"nodeType":"975","messageId":"976","endLine":15,"endColumn":16},{"ruleId":"973","severity":1,"message":"1028","line":18,"column":12,"nodeType":"975","messageId":"976","endLine":18,"endColumn":14},{"ruleId":"973","severity":1,"message":"1029","line":19,"column":12,"nodeType":"975","messageId":"976","endLine":19,"endColumn":19},{"ruleId":"973","severity":1,"message":"1030","line":20,"column":12,"nodeType":"975","messageId":"976","endLine":20,"endColumn":19},{"ruleId":"968","severity":1,"message":"969","line":28,"column":15,"nodeType":"970","endLine":68,"endColumn":6},{"ruleId":"968","severity":1,"message":"1031","line":68,"column":8,"nodeType":"979","endLine":68,"endColumn":33,"suggestions":"1032"},{"ruleId":"968","severity":1,"message":"969","line":33,"column":13,"nodeType":"970","endLine":54,"endColumn":4},{"ruleId":"996","severity":1,"message":"997","line":45,"column":41,"nodeType":"970","messageId":"998","endLine":45,"endColumn":43},{"ruleId":"968","severity":1,"message":"1033","line":54,"column":6,"nodeType":"979","endLine":54,"endColumn":23,"suggestions":"1034"},{"ruleId":"973","severity":1,"message":"1035","line":58,"column":9,"nodeType":"975","messageId":"976","endLine":58,"endColumn":16},{"ruleId":"1036","severity":1,"message":"1037","line":70,"column":16,"nodeType":"975","messageId":"1038","endLine":70,"endColumn":17},{"ruleId":"968","severity":1,"message":"969","line":84,"column":13,"nodeType":"970","endLine":130,"endColumn":4},{"ruleId":"968","severity":1,"message":"1039","line":130,"column":6,"nodeType":"979","endLine":130,"endColumn":8,"suggestions":"1040"},{"ruleId":"973","severity":1,"message":"1041","line":21,"column":10,"nodeType":"975","messageId":"976","endLine":21,"endColumn":20},{"ruleId":"973","severity":1,"message":"1042","line":37,"column":9,"nodeType":"975","messageId":"976","endLine":37,"endColumn":15},{"ruleId":"968","severity":1,"message":"969","line":54,"column":13,"nodeType":"970","endLine":98,"endColumn":4},{"ruleId":"968","severity":1,"message":"1043","line":98,"column":6,"nodeType":"979","endLine":98,"endColumn":31,"suggestions":"1044"},{"ruleId":"996","severity":1,"message":"997","line":104,"column":27,"nodeType":"970","messageId":"998","endLine":104,"endColumn":29},{"ruleId":"968","severity":1,"message":"1045","line":116,"column":6,"nodeType":"979","endLine":116,"endColumn":17,"suggestions":"1046"},{"ruleId":"973","severity":1,"message":"1047","line":118,"column":9,"nodeType":"975","messageId":"976","endLine":118,"endColumn":13},{"ruleId":"991","severity":1,"message":"992","line":196,"column":15,"nodeType":"993","endLine":196,"endColumn":63},{"ruleId":"991","severity":1,"message":"992","line":211,"column":31,"nodeType":"993","endLine":211,"endColumn":79},{"ruleId":"991","severity":1,"message":"992","line":234,"column":19,"nodeType":"993","endLine":234,"endColumn":120},{"ruleId":"991","severity":1,"message":"992","line":241,"column":19,"nodeType":"993","endLine":241,"endColumn":122},{"ruleId":"968","severity":1,"message":"969","line":23,"column":13,"nodeType":"970","endLine":31,"endColumn":4},{"ruleId":"968","severity":1,"message":"1048","line":31,"column":6,"nodeType":"979","endLine":31,"endColumn":8,"suggestions":"1049"},{"ruleId":"973","severity":1,"message":"1050","line":53,"column":9,"nodeType":"975","messageId":"976","endLine":53,"endColumn":17},{"ruleId":"973","severity":1,"message":"1023","line":64,"column":5,"nodeType":"975","messageId":"976","endLine":64,"endColumn":9},{"ruleId":"973","severity":1,"message":"1051","line":95,"column":18,"nodeType":"975","messageId":"976","endLine":95,"endColumn":27},{"ruleId":"973","severity":1,"message":"1052","line":97,"column":19,"nodeType":"975","messageId":"976","endLine":97,"endColumn":29},{"ruleId":"973","severity":1,"message":"1053","line":98,"column":10,"nodeType":"975","messageId":"976","endLine":98,"endColumn":18},{"ruleId":"973","severity":1,"message":"1054","line":98,"column":20,"nodeType":"975","messageId":"976","endLine":98,"endColumn":31},{"ruleId":"973","severity":1,"message":"1055","line":105,"column":9,"nodeType":"975","messageId":"976","endLine":105,"endColumn":14},{"ruleId":"991","severity":1,"message":"992","line":132,"column":7,"nodeType":"993","endLine":144,"endColumn":9},{"ruleId":"1056","severity":1,"message":"1057","line":153,"column":9,"nodeType":"1058","endLine":153,"endColumn":41},{"ruleId":"1059","severity":1,"message":"1060","line":199,"column":19,"nodeType":"1061","messageId":"1062","endLine":199,"endColumn":24},{"ruleId":"1059","severity":1,"message":"1060","line":243,"column":17,"nodeType":"1061","messageId":"1062","endLine":243,"endColumn":22},{"ruleId":"1059","severity":1,"message":"1060","line":291,"column":17,"nodeType":"1061","messageId":"1062","endLine":291,"endColumn":22},{"ruleId":"973","severity":1,"message":"1063","line":11,"column":3,"nodeType":"975","messageId":"976","endLine":11,"endColumn":12},{"ruleId":"973","severity":1,"message":"1064","line":12,"column":3,"nodeType":"975","messageId":"976","endLine":12,"endColumn":17},{"ruleId":"973","severity":1,"message":"1065","line":20,"column":8,"nodeType":"975","messageId":"976","endLine":20,"endColumn":24},{"ruleId":"973","severity":1,"message":"1066","line":22,"column":8,"nodeType":"975","messageId":"976","endLine":22,"endColumn":16},{"ruleId":"968","severity":1,"message":"969","line":38,"column":13,"nodeType":"970","endLine":103,"endColumn":4},{"ruleId":"996","severity":1,"message":"997","line":71,"column":25,"nodeType":"970","messageId":"998","endLine":71,"endColumn":27},{"ruleId":"973","severity":1,"message":"1067","line":96,"column":7,"nodeType":"975","messageId":"976","endLine":96,"endColumn":12},{"ruleId":"968","severity":1,"message":"1068","line":103,"column":6,"nodeType":"979","endLine":103,"endColumn":31,"suggestions":"1069"},{"ruleId":"973","severity":1,"message":"1070","line":29,"column":10,"nodeType":"975","messageId":"976","endLine":29,"endColumn":19},{"ruleId":"973","severity":1,"message":"1023","line":31,"column":10,"nodeType":"975","messageId":"976","endLine":31,"endColumn":14},{"ruleId":"973","severity":1,"message":"1071","line":42,"column":9,"nodeType":"975","messageId":"976","endLine":42,"endColumn":19},{"ruleId":"968","severity":1,"message":"969","line":47,"column":13,"nodeType":"970","endLine":54,"endColumn":4},{"ruleId":"968","severity":1,"message":"1072","line":48,"column":17,"nodeType":"1073","endLine":48,"endColumn":71},{"ruleId":"968","severity":1,"message":"969","line":106,"column":13,"nodeType":"970","endLine":176,"endColumn":4},{"ruleId":"996","severity":1,"message":"997","line":135,"column":25,"nodeType":"970","messageId":"998","endLine":135,"endColumn":27},{"ruleId":"973","severity":1,"message":"1074","line":149,"column":9,"nodeType":"975","messageId":"976","endLine":149,"endColumn":15},{"ruleId":"973","severity":1,"message":"1067","line":172,"column":7,"nodeType":"975","messageId":"976","endLine":172,"endColumn":12},{"ruleId":"968","severity":1,"message":"1075","line":176,"column":6,"nodeType":"979","endLine":176,"endColumn":16,"suggestions":"1076"},{"ruleId":"1077","severity":1,"message":"1078","line":182,"column":17,"nodeType":"1001","messageId":"1062","endLine":182,"endColumn":19},{"ruleId":"973","severity":1,"message":"1079","line":195,"column":11,"nodeType":"975","messageId":"976","endLine":195,"endColumn":17},{"ruleId":"973","severity":1,"message":"1080","line":232,"column":11,"nodeType":"975","messageId":"976","endLine":232,"endColumn":23},{"ruleId":"996","severity":1,"message":"997","line":240,"column":26,"nodeType":"970","messageId":"998","endLine":240,"endColumn":28},{"ruleId":"973","severity":1,"message":"1023","line":23,"column":10,"nodeType":"975","messageId":"976","endLine":23,"endColumn":14},{"ruleId":"968","severity":1,"message":"969","line":31,"column":13,"nodeType":"970","endLine":62,"endColumn":4},{"ruleId":"1036","severity":1,"message":"1081","line":52,"column":13,"nodeType":"975","messageId":"1038","endLine":52,"endColumn":17},{"ruleId":"1036","severity":1,"message":"1037","line":53,"column":18,"nodeType":"975","messageId":"1038","endLine":53,"endColumn":19},{"ruleId":"968","severity":1,"message":"1082","line":62,"column":6,"nodeType":"979","endLine":62,"endColumn":31,"suggestions":"1083"},{"ruleId":"1084","severity":1,"message":"1085","line":125,"column":9,"nodeType":"993","endLine":130,"endColumn":10},{"ruleId":"999","severity":1,"message":"1000","line":128,"column":32,"nodeType":"1001","messageId":"1002","endLine":128,"endColumn":33},{"ruleId":"1084","severity":1,"message":"1085","line":146,"column":11,"nodeType":"993","endLine":151,"endColumn":12},{"ruleId":"999","severity":1,"message":"1000","line":149,"column":41,"nodeType":"1001","messageId":"1002","endLine":149,"endColumn":42},{"ruleId":"1084","severity":1,"message":"1085","line":165,"column":9,"nodeType":"993","endLine":171,"endColumn":10},{"ruleId":"1084","severity":1,"message":"1085","line":188,"column":11,"nodeType":"993","endLine":193,"endColumn":12},{"ruleId":"999","severity":1,"message":"1000","line":191,"column":41,"nodeType":"1001","messageId":"1002","endLine":191,"endColumn":42},{"ruleId":"1084","severity":1,"message":"1085","line":213,"column":9,"nodeType":"993","endLine":213,"endColumn":36},{"ruleId":"1084","severity":1,"message":"1085","line":229,"column":9,"nodeType":"993","endLine":229,"endColumn":75},{"ruleId":"1084","severity":1,"message":"1085","line":54,"column":13,"nodeType":"993","endLine":61,"endColumn":14},{"ruleId":"973","severity":1,"message":"1086","line":16,"column":19,"nodeType":"975","messageId":"976","endLine":16,"endColumn":29},{"ruleId":"973","severity":1,"message":"1087","line":24,"column":10,"nodeType":"975","messageId":"976","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"969","line":30,"column":13,"nodeType":"970","endLine":97,"endColumn":4},{"ruleId":"996","severity":1,"message":"997","line":46,"column":32,"nodeType":"970","messageId":"998","endLine":46,"endColumn":34},{"ruleId":"973","severity":1,"message":"1067","line":83,"column":11,"nodeType":"975","messageId":"976","endLine":83,"endColumn":16},{"ruleId":"968","severity":1,"message":"1088","line":97,"column":6,"nodeType":"979","endLine":97,"endColumn":16,"suggestions":"1089"},{"ruleId":"973","severity":1,"message":"1090","line":98,"column":9,"nodeType":"975","messageId":"976","endLine":98,"endColumn":15},{"ruleId":"973","severity":1,"message":"1023","line":30,"column":10,"nodeType":"975","messageId":"976","endLine":30,"endColumn":14},{"ruleId":"973","severity":1,"message":"1091","line":33,"column":10,"nodeType":"975","messageId":"976","endLine":33,"endColumn":17},{"ruleId":"973","severity":1,"message":"1092","line":34,"column":10,"nodeType":"975","messageId":"976","endLine":34,"endColumn":23},{"ruleId":"973","severity":1,"message":"1093","line":43,"column":10,"nodeType":"975","messageId":"976","endLine":43,"endColumn":13},{"ruleId":"973","severity":1,"message":"1094","line":43,"column":15,"nodeType":"975","messageId":"976","endLine":43,"endColumn":21},{"ruleId":"973","severity":1,"message":"1095","line":56,"column":10,"nodeType":"975","messageId":"976","endLine":56,"endColumn":18},{"ruleId":"973","severity":1,"message":"994","line":74,"column":9,"nodeType":"975","messageId":"976","endLine":74,"endColumn":15},{"ruleId":"973","severity":1,"message":"995","line":114,"column":7,"nodeType":"975","messageId":"976","endLine":114,"endColumn":28},{"ruleId":"968","severity":1,"message":"969","line":168,"column":13,"nodeType":"970","endLine":170,"endColumn":4},{"ruleId":"968","severity":1,"message":"1096","line":170,"column":6,"nodeType":"979","endLine":170,"endColumn":8,"suggestions":"1097"},{"ruleId":"968","severity":1,"message":"1098","line":225,"column":6,"nodeType":"979","endLine":225,"endColumn":21,"suggestions":"1099"},{"ruleId":"973","severity":1,"message":"1009","line":367,"column":40,"nodeType":"975","messageId":"976","endLine":367,"endColumn":52},{"ruleId":"996","severity":1,"message":"997","line":376,"column":33,"nodeType":"970","messageId":"998","endLine":376,"endColumn":35},{"ruleId":"973","severity":1,"message":"1100","line":382,"column":7,"nodeType":"975","messageId":"976","endLine":382,"endColumn":12},{"ruleId":"968","severity":1,"message":"969","line":391,"column":13,"nodeType":"970","endLine":393,"endColumn":4},{"ruleId":"968","severity":1,"message":"1101","line":393,"column":6,"nodeType":"979","endLine":393,"endColumn":15,"suggestions":"1102"},{"ruleId":"1056","severity":1,"message":"1057","line":415,"column":15,"nodeType":"1058","endLine":415,"endColumn":33},{"ruleId":"991","severity":1,"message":"992","line":514,"column":21,"nodeType":"993","endLine":520,"endColumn":23},{"ruleId":"991","severity":1,"message":"992","line":529,"column":21,"nodeType":"993","endLine":532,"endColumn":23},{"ruleId":"973","severity":1,"message":"1070","line":22,"column":10,"nodeType":"975","messageId":"976","endLine":22,"endColumn":19},{"ruleId":"973","severity":1,"message":"1103","line":23,"column":10,"nodeType":"975","messageId":"976","endLine":23,"endColumn":18},{"ruleId":"968","severity":1,"message":"969","line":31,"column":13,"nodeType":"970","endLine":62,"endColumn":4},{"ruleId":"968","severity":1,"message":"1104","line":62,"column":6,"nodeType":"979","endLine":62,"endColumn":31,"suggestions":"1105"},{"ruleId":"996","severity":1,"message":"997","line":66,"column":39,"nodeType":"970","messageId":"998","endLine":66,"endColumn":41},{"ruleId":"991","severity":1,"message":"992","line":122,"column":17,"nodeType":"993","endLine":122,"endColumn":55},{"ruleId":"991","severity":1,"message":"992","line":123,"column":17,"nodeType":"993","endLine":126,"endColumn":19},{"ruleId":"973","severity":1,"message":"1106","line":1,"column":17,"nodeType":"975","messageId":"976","endLine":1,"endColumn":25},{"ruleId":"973","severity":1,"message":"1107","line":1,"column":38,"nodeType":"975","messageId":"976","endLine":1,"endColumn":49},{"ruleId":"973","severity":1,"message":"1108","line":4,"column":3,"nodeType":"975","messageId":"976","endLine":4,"endColumn":9},{"ruleId":"973","severity":1,"message":"1109","line":5,"column":3,"nodeType":"975","messageId":"976","endLine":5,"endColumn":7},{"ruleId":"973","severity":1,"message":"1110","line":6,"column":3,"nodeType":"975","messageId":"976","endLine":6,"endColumn":11},{"ruleId":"973","severity":1,"message":"1111","line":7,"column":3,"nodeType":"975","messageId":"976","endLine":7,"endColumn":15},{"ruleId":"973","severity":1,"message":"1112","line":8,"column":3,"nodeType":"975","messageId":"976","endLine":8,"endColumn":15},{"ruleId":"973","severity":1,"message":"1113","line":9,"column":3,"nodeType":"975","messageId":"976","endLine":9,"endColumn":8},{"ruleId":"973","severity":1,"message":"1114","line":10,"column":3,"nodeType":"975","messageId":"976","endLine":10,"endColumn":12},{"ruleId":"973","severity":1,"message":"1115","line":11,"column":3,"nodeType":"975","messageId":"976","endLine":11,"endColumn":10},{"ruleId":"973","severity":1,"message":"1116","line":12,"column":3,"nodeType":"975","messageId":"976","endLine":12,"endColumn":13},{"ruleId":"973","severity":1,"message":"1117","line":13,"column":3,"nodeType":"975","messageId":"976","endLine":13,"endColumn":17},{"ruleId":"973","severity":1,"message":"1118","line":26,"column":9,"nodeType":"975","messageId":"976","endLine":26,"endColumn":18},{"ruleId":"973","severity":1,"message":"1119","line":32,"column":10,"nodeType":"975","messageId":"976","endLine":32,"endColumn":21},{"ruleId":"973","severity":1,"message":"1120","line":44,"column":10,"nodeType":"975","messageId":"976","endLine":44,"endColumn":18},{"ruleId":"968","severity":1,"message":"969","line":58,"column":13,"nodeType":"970","endLine":88,"endColumn":4},{"ruleId":"968","severity":1,"message":"1019","line":68,"column":21,"nodeType":"1020","endLine":68,"endColumn":52},{"ruleId":"996","severity":1,"message":"997","line":78,"column":35,"nodeType":"970","messageId":"998","endLine":78,"endColumn":37},{"ruleId":"996","severity":1,"message":"997","line":79,"column":52,"nodeType":"970","messageId":"998","endLine":79,"endColumn":54},{"ruleId":"973","severity":1,"message":"1121","line":95,"column":9,"nodeType":"975","messageId":"976","endLine":95,"endColumn":23},{"ruleId":"973","severity":1,"message":"1122","line":96,"column":9,"nodeType":"975","messageId":"976","endLine":96,"endColumn":13},{"ruleId":"968","severity":1,"message":"969","line":20,"column":13,"nodeType":"970","endLine":42,"endColumn":4},{"ruleId":"968","severity":1,"message":"1123","line":42,"column":6,"nodeType":"979","endLine":42,"endColumn":31,"suggestions":"1124"},{"ruleId":"973","severity":1,"message":"1125","line":48,"column":10,"nodeType":"975","messageId":"976","endLine":48,"endColumn":20},{"ruleId":"968","severity":1,"message":"1126","line":72,"column":6,"nodeType":"979","endLine":72,"endColumn":17,"suggestions":"1127"},{"ruleId":"973","severity":1,"message":"1128","line":6,"column":8,"nodeType":"975","messageId":"976","endLine":6,"endColumn":20},{"ruleId":"973","severity":1,"message":"1129","line":10,"column":8,"nodeType":"975","messageId":"976","endLine":10,"endColumn":20},{"ruleId":"973","severity":1,"message":"1130","line":73,"column":19,"nodeType":"975","messageId":"976","endLine":73,"endColumn":26},{"ruleId":"1131","severity":1,"message":"1132","line":12,"column":7,"nodeType":"1133","messageId":"1134","endLine":12,"endColumn":24},{"ruleId":"973","severity":1,"message":"1135","line":1,"column":8,"nodeType":"975","messageId":"976","endLine":1,"endColumn":13},{"ruleId":"973","severity":1,"message":"1136","line":2,"column":10,"nodeType":"975","messageId":"976","endLine":2,"endColumn":13},{"ruleId":"973","severity":1,"message":"1137","line":4,"column":8,"nodeType":"975","messageId":"976","endLine":4,"endColumn":15},{"ruleId":"1131","severity":1,"message":"1132","line":15,"column":7,"nodeType":"1133","messageId":"1134","endLine":15,"endColumn":24},{"ruleId":"973","severity":1,"message":"1138","line":3,"column":8,"nodeType":"975","messageId":"976","endLine":3,"endColumn":18},{"ruleId":"973","severity":1,"message":"1137","line":4,"column":8,"nodeType":"975","messageId":"976","endLine":4,"endColumn":15},{"ruleId":"973","severity":1,"message":"1139","line":5,"column":21,"nodeType":"975","messageId":"976","endLine":5,"endColumn":29},{"ruleId":"996","severity":1,"message":"997","line":20,"column":27,"nodeType":"970","messageId":"998","endLine":20,"endColumn":29},{"ruleId":"1131","severity":1,"message":"1132","line":10,"column":13,"nodeType":"1140","messageId":"1134","endLine":10,"endColumn":19},{"ruleId":"1131","severity":1,"message":"1132","line":13,"column":13,"nodeType":"1140","messageId":"1134","endLine":13,"endColumn":19},{"ruleId":"973","severity":1,"message":"1141","line":1,"column":10,"nodeType":"975","messageId":"976","endLine":1,"endColumn":13},{"ruleId":"973","severity":1,"message":"1141","line":1,"column":10,"nodeType":"975","messageId":"976","endLine":1,"endColumn":13},{"ruleId":"973","severity":1,"message":"1142","line":1,"column":10,"nodeType":"975","messageId":"976","endLine":1,"endColumn":27},{"ruleId":"968","severity":1,"message":"969","line":20,"column":13,"nodeType":"970","endLine":25,"endColumn":4},{"ruleId":"973","severity":1,"message":"1143","line":22,"column":9,"nodeType":"975","messageId":"976","endLine":22,"endColumn":16},{"ruleId":"991","severity":1,"message":"992","line":29,"column":12,"nodeType":"993","endLine":29,"endColumn":50},{"ruleId":"991","severity":1,"message":"992","line":60,"column":100,"nodeType":"993","endLine":72,"endColumn":13},{"ruleId":"1077","severity":1,"message":"1144","line":65,"column":25,"nodeType":"1001","messageId":"1062","endLine":65,"endColumn":27},{"ruleId":"1077","severity":1,"message":"1144","line":65,"column":44,"nodeType":"1001","messageId":"1062","endLine":65,"endColumn":46},{"ruleId":"1077","severity":1,"message":"1144","line":82,"column":27,"nodeType":"1001","messageId":"1062","endLine":82,"endColumn":29},{"ruleId":"1077","severity":1,"message":"1144","line":82,"column":46,"nodeType":"1001","messageId":"1062","endLine":82,"endColumn":48},{"ruleId":"1077","severity":1,"message":"1144","line":123,"column":31,"nodeType":"1001","messageId":"1062","endLine":123,"endColumn":33},{"ruleId":"1077","severity":1,"message":"1144","line":123,"column":50,"nodeType":"1001","messageId":"1062","endLine":123,"endColumn":52},{"ruleId":"991","severity":1,"message":"992","line":142,"column":39,"nodeType":"993","endLine":142,"endColumn":63},{"ruleId":"973","severity":1,"message":"1106","line":1,"column":17,"nodeType":"975","messageId":"976","endLine":1,"endColumn":25},{"ruleId":"991","severity":1,"message":"992","line":35,"column":9,"nodeType":"993","endLine":35,"endColumn":29},{"ruleId":"991","severity":1,"message":"992","line":38,"column":9,"nodeType":"993","endLine":38,"endColumn":32},{"ruleId":"991","severity":1,"message":"992","line":41,"column":9,"nodeType":"993","endLine":41,"endColumn":34},{"ruleId":"973","severity":1,"message":"1145","line":47,"column":7,"nodeType":"975","messageId":"976","endLine":47,"endColumn":14},{"ruleId":"968","severity":1,"message":"969","line":16,"column":13,"nodeType":"970","endLine":19,"endColumn":4},{"ruleId":"991","severity":1,"message":"992","line":23,"column":12,"nodeType":"993","endLine":23,"endColumn":50},{"ruleId":"991","severity":1,"message":"992","line":46,"column":100,"nodeType":"993","endLine":52,"endColumn":13},{"ruleId":"991","severity":1,"message":"992","line":96,"column":39,"nodeType":"993","endLine":96,"endColumn":63},{"ruleId":"973","severity":1,"message":"1146","line":3,"column":10,"nodeType":"975","messageId":"976","endLine":3,"endColumn":20},{"ruleId":"973","severity":1,"message":"1147","line":5,"column":8,"nodeType":"975","messageId":"976","endLine":5,"endColumn":16},{"ruleId":"973","severity":1,"message":"1148","line":3,"column":8,"nodeType":"975","messageId":"976","endLine":3,"endColumn":17},{"ruleId":"973","severity":1,"message":"1149","line":5,"column":8,"nodeType":"975","messageId":"976","endLine":5,"endColumn":17},{"ruleId":"991","severity":1,"message":"992","line":19,"column":19,"nodeType":"993","endLine":22,"endColumn":21},{"ruleId":"991","severity":1,"message":"992","line":45,"column":19,"nodeType":"993","endLine":48,"endColumn":21},{"ruleId":"973","severity":1,"message":"1150","line":48,"column":10,"nodeType":"975","messageId":"976","endLine":48,"endColumn":14},{"ruleId":"973","severity":1,"message":"1151","line":48,"column":16,"nodeType":"975","messageId":"976","endLine":48,"endColumn":23},{"ruleId":"973","severity":1,"message":"1152","line":51,"column":10,"nodeType":"975","messageId":"976","endLine":51,"endColumn":19},{"ruleId":"973","severity":1,"message":"1153","line":51,"column":21,"nodeType":"975","messageId":"976","endLine":51,"endColumn":36},{"ruleId":"1056","severity":1,"message":"1057","line":57,"column":7,"nodeType":"1058","endLine":57,"endColumn":22},{"ruleId":"968","severity":1,"message":"978","line":49,"column":6,"nodeType":"979","endLine":49,"endColumn":22,"suggestions":"1154"},{"ruleId":"973","severity":1,"message":"1155","line":19,"column":21,"nodeType":"975","messageId":"976","endLine":19,"endColumn":33},{"ruleId":"973","severity":1,"message":"1156","line":21,"column":10,"nodeType":"975","messageId":"976","endLine":21,"endColumn":16},{"ruleId":"996","severity":1,"message":"997","line":25,"column":42,"nodeType":"970","messageId":"998","endLine":25,"endColumn":44},{"ruleId":"968","severity":1,"message":"1157","line":32,"column":6,"nodeType":"979","endLine":32,"endColumn":23,"suggestions":"1158"},{"ruleId":"999","severity":1,"message":"1000","line":106,"column":61,"nodeType":"1001","messageId":"1002","endLine":106,"endColumn":62},{"ruleId":"973","severity":1,"message":"1159","line":1,"column":27,"nodeType":"975","messageId":"976","endLine":1,"endColumn":36},{"ruleId":"973","severity":1,"message":"1160","line":13,"column":10,"nodeType":"975","messageId":"976","endLine":13,"endColumn":21},{"ruleId":"973","severity":1,"message":"1142","line":14,"column":10,"nodeType":"975","messageId":"976","endLine":14,"endColumn":27},{"ruleId":"973","severity":1,"message":"1137","line":15,"column":8,"nodeType":"975","messageId":"976","endLine":15,"endColumn":15},{"ruleId":"973","severity":1,"message":"1161","line":16,"column":10,"nodeType":"975","messageId":"976","endLine":16,"endColumn":19},{"ruleId":"973","severity":1,"message":"1162","line":21,"column":9,"nodeType":"975","messageId":"976","endLine":21,"endColumn":17},{"ruleId":"973","severity":1,"message":"1159","line":1,"column":27,"nodeType":"975","messageId":"976","endLine":1,"endColumn":36},{"ruleId":"973","severity":1,"message":"1163","line":7,"column":10,"nodeType":"975","messageId":"976","endLine":7,"endColumn":19},{"ruleId":"973","severity":1,"message":"1160","line":10,"column":10,"nodeType":"975","messageId":"976","endLine":10,"endColumn":21},{"ruleId":"973","severity":1,"message":"1162","line":13,"column":9,"nodeType":"975","messageId":"976","endLine":13,"endColumn":17},{"ruleId":"973","severity":1,"message":"1164","line":19,"column":8,"nodeType":"975","messageId":"976","endLine":19,"endColumn":18},{"ruleId":"973","severity":1,"message":"1165","line":26,"column":9,"nodeType":"975","messageId":"976","endLine":26,"endColumn":13},{"ruleId":"968","severity":1,"message":"978","line":39,"column":6,"nodeType":"979","endLine":39,"endColumn":8,"suggestions":"1166"},{"ruleId":"991","severity":1,"message":"992","line":63,"column":13,"nodeType":"993","endLine":63,"endColumn":58},{"ruleId":"991","severity":1,"message":"992","line":125,"column":15,"nodeType":"993","endLine":125,"endColumn":64},{"ruleId":"991","severity":1,"message":"992","line":187,"column":15,"nodeType":"993","endLine":187,"endColumn":64},{"ruleId":"973","severity":1,"message":"1167","line":4,"column":10,"nodeType":"975","messageId":"976","endLine":4,"endColumn":19},{"ruleId":"973","severity":1,"message":"1146","line":4,"column":34,"nodeType":"975","messageId":"976","endLine":4,"endColumn":44},{"ruleId":"973","severity":1,"message":"1168","line":4,"column":46,"nodeType":"975","messageId":"976","endLine":4,"endColumn":57},{"ruleId":"1084","severity":1,"message":"1169","line":22,"column":13,"nodeType":"993","endLine":22,"endColumn":48},{"ruleId":"1084","severity":1,"message":"1169","line":28,"column":13,"nodeType":"993","endLine":28,"endColumn":48},{"ruleId":"973","severity":1,"message":"1159","line":1,"column":27,"nodeType":"975","messageId":"976","endLine":1,"endColumn":36},{"ruleId":"973","severity":1,"message":"1170","line":10,"column":10,"nodeType":"975","messageId":"976","endLine":10,"endColumn":16},{"ruleId":"973","severity":1,"message":"1050","line":32,"column":9,"nodeType":"975","messageId":"976","endLine":32,"endColumn":17},{"ruleId":"973","severity":1,"message":"1171","line":37,"column":10,"nodeType":"975","messageId":"976","endLine":37,"endColumn":14},{"ruleId":"973","severity":1,"message":"1172","line":37,"column":16,"nodeType":"975","messageId":"976","endLine":37,"endColumn":23},{"ruleId":"973","severity":1,"message":"1035","line":59,"column":9,"nodeType":"975","messageId":"976","endLine":59,"endColumn":16},{"ruleId":"1036","severity":1,"message":"1037","line":71,"column":16,"nodeType":"975","messageId":"1038","endLine":71,"endColumn":17},{"ruleId":"968","severity":1,"message":"969","line":85,"column":13,"nodeType":"970","endLine":113,"endColumn":4},{"ruleId":"968","severity":1,"message":"1157","line":113,"column":6,"nodeType":"979","endLine":113,"endColumn":23,"suggestions":"1173"},{"ruleId":"1077","severity":1,"message":"1078","line":269,"column":45,"nodeType":"1001","messageId":"1062","endLine":269,"endColumn":47},{"ruleId":"968","severity":1,"message":"1174","line":414,"column":6,"nodeType":"979","endLine":414,"endColumn":22,"suggestions":"1175"},{"ruleId":"973","severity":1,"message":"1176","line":15,"column":23,"nodeType":"975","messageId":"976","endLine":15,"endColumn":34},{"ruleId":"973","severity":1,"message":"974","line":25,"column":10,"nodeType":"975","messageId":"976","endLine":25,"endColumn":18},{"ruleId":"968","severity":1,"message":"1177","line":86,"column":6,"nodeType":"979","endLine":86,"endColumn":8,"suggestions":"1178"},{"ruleId":"973","severity":1,"message":"1009","line":87,"column":40,"nodeType":"975","messageId":"976","endLine":87,"endColumn":52},{"ruleId":"968","severity":1,"message":"969","line":92,"column":13,"nodeType":"970","endLine":99,"endColumn":4},{"ruleId":"968","severity":1,"message":"1179","line":99,"column":6,"nodeType":"979","endLine":99,"endColumn":8,"suggestions":"1180"},{"ruleId":"968","severity":1,"message":"969","line":100,"column":13,"nodeType":"970","endLine":102,"endColumn":4},{"ruleId":"968","severity":1,"message":"1181","line":102,"column":6,"nodeType":"979","endLine":102,"endColumn":49,"suggestions":"1182"},{"ruleId":"991","severity":1,"message":"992","line":200,"column":21,"nodeType":"993","endLine":200,"endColumn":68},{"ruleId":"991","severity":1,"message":"992","line":219,"column":23,"nodeType":"993","endLine":219,"endColumn":70},{"ruleId":"973","severity":1,"message":"1111","line":6,"column":8,"nodeType":"975","messageId":"976","endLine":6,"endColumn":20},{"ruleId":"973","severity":1,"message":"1137","line":8,"column":8,"nodeType":"975","messageId":"976","endLine":8,"endColumn":15},{"ruleId":"973","severity":1,"message":"1183","line":19,"column":8,"nodeType":"975","messageId":"976","endLine":19,"endColumn":24},{"ruleId":"996","severity":1,"message":"997","line":61,"column":28,"nodeType":"970","messageId":"998","endLine":61,"endColumn":30},{"ruleId":"968","severity":1,"message":"1184","line":67,"column":6,"nodeType":"979","endLine":67,"endColumn":8,"suggestions":"1185"},{"ruleId":"996","severity":1,"message":"997","line":70,"column":28,"nodeType":"970","messageId":"998","endLine":70,"endColumn":30},{"ruleId":"968","severity":1,"message":"1186","line":76,"column":6,"nodeType":"979","endLine":76,"endColumn":17,"suggestions":"1187"},{"ruleId":"973","severity":1,"message":"1188","line":27,"column":12,"nodeType":"975","messageId":"976","endLine":27,"endColumn":16},{"ruleId":"973","severity":1,"message":"1009","line":38,"column":40,"nodeType":"975","messageId":"976","endLine":38,"endColumn":52},{"ruleId":"1077","severity":1,"message":"1144","line":72,"column":18,"nodeType":"1001","messageId":"1062","endLine":72,"endColumn":20},{"ruleId":"991","severity":1,"message":"992","line":73,"column":13,"nodeType":"993","endLine":73,"endColumn":85},{"ruleId":"991","severity":1,"message":"992","line":75,"column":13,"nodeType":"993","endLine":75,"endColumn":118},{"ruleId":"1059","severity":1,"message":"1189","line":75,"column":97,"nodeType":"1061","messageId":"1062","endLine":75,"endColumn":103},{"ruleId":"991","severity":1,"message":"992","line":39,"column":11,"nodeType":"993","endLine":39,"endColumn":56},{"ruleId":"973","severity":1,"message":"1190","line":5,"column":20,"nodeType":"975","messageId":"976","endLine":5,"endColumn":29},{"ruleId":"968","severity":1,"message":"1191","line":23,"column":8,"nodeType":"979","endLine":23,"endColumn":20,"suggestions":"1192"},{"ruleId":"973","severity":1,"message":"1162","line":8,"column":9,"nodeType":"975","messageId":"976","endLine":8,"endColumn":17},{"ruleId":"973","severity":1,"message":"1156","line":9,"column":10,"nodeType":"975","messageId":"976","endLine":9,"endColumn":16},{"ruleId":"996","severity":1,"message":"997","line":14,"column":42,"nodeType":"970","messageId":"998","endLine":14,"endColumn":44},{"ruleId":"968","severity":1,"message":"1193","line":21,"column":6,"nodeType":"979","endLine":21,"endColumn":23,"suggestions":"1194"},{"ruleId":"973","severity":1,"message":"1195","line":2,"column":8,"nodeType":"975","messageId":"976","endLine":2,"endColumn":12},{"ruleId":"968","severity":1,"message":"1196","line":57,"column":6,"nodeType":"979","endLine":57,"endColumn":39,"suggestions":"1197"},{"ruleId":"973","severity":1,"message":"1198","line":19,"column":9,"nodeType":"975","messageId":"976","endLine":19,"endColumn":18},{"ruleId":"968","severity":1,"message":"1199","line":34,"column":6,"nodeType":"979","endLine":34,"endColumn":23,"suggestions":"1200"},{"ruleId":"1084","severity":1,"message":"1085","line":83,"column":11,"nodeType":"993","endLine":83,"endColumn":14},{"ruleId":"968","severity":1,"message":"969","line":11,"column":13,"nodeType":"970","endLine":26,"endColumn":4},{"ruleId":"1077","severity":1,"message":"1144","line":16,"column":74,"nodeType":"1001","messageId":"1062","endLine":16,"endColumn":76},{"ruleId":"968","severity":1,"message":"1201","line":26,"column":6,"nodeType":"979","endLine":26,"endColumn":30,"suggestions":"1202"},{"ruleId":"973","severity":1,"message":"1159","line":1,"column":27,"nodeType":"975","messageId":"976","endLine":1,"endColumn":36},{"ruleId":"973","severity":1,"message":"1111","line":6,"column":3,"nodeType":"975","messageId":"976","endLine":6,"endColumn":15},{"ruleId":"973","severity":1,"message":"1112","line":7,"column":3,"nodeType":"975","messageId":"976","endLine":7,"endColumn":15},{"ruleId":"973","severity":1,"message":"1108","line":10,"column":3,"nodeType":"975","messageId":"976","endLine":10,"endColumn":9},{"ruleId":"973","severity":1,"message":"1203","line":14,"column":8,"nodeType":"975","messageId":"976","endLine":14,"endColumn":18},{"ruleId":"968","severity":1,"message":"1204","line":75,"column":6,"nodeType":"979","endLine":75,"endColumn":8,"suggestions":"1205"},{"ruleId":"973","severity":1,"message":"1009","line":76,"column":40,"nodeType":"975","messageId":"976","endLine":76,"endColumn":52},{"ruleId":"973","severity":1,"message":"1206","line":81,"column":10,"nodeType":"975","messageId":"976","endLine":81,"endColumn":19},{"ruleId":"973","severity":1,"message":"1207","line":81,"column":21,"nodeType":"975","messageId":"976","endLine":81,"endColumn":33},{"ruleId":"973","severity":1,"message":"1208","line":83,"column":12,"nodeType":"975","messageId":"976","endLine":83,"endColumn":29},{"ruleId":"991","severity":1,"message":"992","line":98,"column":9,"nodeType":"993","endLine":108,"endColumn":11},{"ruleId":"973","severity":1,"message":"1209","line":164,"column":23,"nodeType":"975","messageId":"976","endLine":164,"endColumn":37},{"ruleId":"973","severity":1,"message":"1210","line":5,"column":21,"nodeType":"975","messageId":"976","endLine":5,"endColumn":32},{"ruleId":"968","severity":1,"message":"969","line":36,"column":15,"nodeType":"970","endLine":53,"endColumn":6},{"ruleId":"968","severity":1,"message":"1211","line":53,"column":8,"nodeType":"979","endLine":53,"endColumn":23,"suggestions":"1212"},{"ruleId":"973","severity":1,"message":"1009","line":63,"column":42,"nodeType":"975","messageId":"976","endLine":63,"endColumn":54},{"ruleId":"973","severity":1,"message":"1213","line":67,"column":11,"nodeType":"975","messageId":"976","endLine":67,"endColumn":17},{"ruleId":"999","severity":1,"message":"1000","line":78,"column":76,"nodeType":"1001","messageId":"1002","endLine":78,"endColumn":77},{"ruleId":"991","severity":1,"message":"992","line":107,"column":25,"nodeType":"993","endLine":107,"endColumn":75},{"ruleId":"991","severity":1,"message":"992","line":121,"column":41,"nodeType":"993","endLine":121,"endColumn":91},{"ruleId":"973","severity":1,"message":"1214","line":64,"column":9,"nodeType":"975","messageId":"976","endLine":64,"endColumn":16},{"ruleId":"973","severity":1,"message":"1009","line":84,"column":40,"nodeType":"975","messageId":"976","endLine":84,"endColumn":52},{"ruleId":"973","severity":1,"message":"1215","line":118,"column":9,"nodeType":"975","messageId":"976","endLine":118,"endColumn":17},{"ruleId":"968","severity":1,"message":"969","line":147,"column":13,"nodeType":"970","endLine":168,"endColumn":4},{"ruleId":"968","severity":1,"message":"1216","line":168,"column":6,"nodeType":"979","endLine":168,"endColumn":38,"suggestions":"1217"},{"ruleId":"1077","severity":1,"message":"1144","line":172,"column":12,"nodeType":"1001","messageId":"1062","endLine":172,"endColumn":14},{"ruleId":"991","severity":1,"message":"992","line":187,"column":17,"nodeType":"993","endLine":187,"endColumn":65},{"ruleId":"1077","severity":1,"message":"1144","line":280,"column":15,"nodeType":"1001","messageId":"1062","endLine":280,"endColumn":17},{"ruleId":"991","severity":1,"message":"992","line":281,"column":9,"nodeType":"993","endLine":281,"endColumn":57},{"ruleId":"991","severity":1,"message":"992","line":295,"column":21,"nodeType":"993","endLine":298,"endColumn":23},{"ruleId":"991","severity":1,"message":"992","line":397,"column":19,"nodeType":"993","endLine":400,"endColumn":21},{"ruleId":"968","severity":1,"message":"1204","line":35,"column":8,"nodeType":"979","endLine":35,"endColumn":10,"suggestions":"1218"},{"ruleId":"973","severity":1,"message":"1009","line":37,"column":42,"nodeType":"975","messageId":"976","endLine":37,"endColumn":54},{"ruleId":"1084","severity":1,"message":"1085","line":94,"column":21,"nodeType":"993","endLine":94,"endColumn":53},{"ruleId":"1084","severity":1,"message":"1085","line":99,"column":21,"nodeType":"993","endLine":104,"endColumn":22},{"ruleId":"991","severity":1,"message":"992","line":116,"column":33,"nodeType":"993","endLine":120,"endColumn":35},{"ruleId":"1084","severity":1,"message":"1085","line":93,"column":37,"nodeType":"993","endLine":98,"endColumn":38},{"ruleId":"1084","severity":1,"message":"1085","line":111,"column":37,"nodeType":"993","endLine":127,"endColumn":38},{"ruleId":"996","severity":1,"message":"997","line":161,"column":39,"nodeType":"970","messageId":"998","endLine":161,"endColumn":41},{"ruleId":"968","severity":1,"message":"1219","line":167,"column":8,"nodeType":"979","endLine":167,"endColumn":10,"suggestions":"1220"},{"ruleId":"968","severity":1,"message":"1186","line":27,"column":8,"nodeType":"979","endLine":27,"endColumn":19,"suggestions":"1221"},{"ruleId":"1077","severity":1,"message":"1078","line":35,"column":25,"nodeType":"1001","messageId":"1062","endLine":35,"endColumn":27},{"ruleId":"968","severity":1,"message":"969","line":7,"column":15,"nodeType":"970","endLine":23,"endColumn":6},{"ruleId":"968","severity":1,"message":"1222","line":23,"column":8,"nodeType":"979","endLine":23,"endColumn":10,"suggestions":"1223"},{"ruleId":"991","severity":1,"message":"992","line":43,"column":29,"nodeType":"993","endLine":43,"endColumn":128},{"ruleId":"991","severity":1,"message":"992","line":60,"column":29,"nodeType":"993","endLine":60,"endColumn":135},{"ruleId":"973","severity":1,"message":"1224","line":29,"column":10,"nodeType":"975","messageId":"976","endLine":29,"endColumn":15},{"ruleId":"973","severity":1,"message":"1091","line":33,"column":10,"nodeType":"975","messageId":"976","endLine":33,"endColumn":17},{"ruleId":"973","severity":1,"message":"1215","line":62,"column":9,"nodeType":"975","messageId":"976","endLine":62,"endColumn":17},{"ruleId":"973","severity":1,"message":"1225","line":74,"column":11,"nodeType":"975","messageId":"976","endLine":74,"endColumn":21},{"ruleId":"973","severity":1,"message":"1226","line":82,"column":9,"nodeType":"975","messageId":"976","endLine":82,"endColumn":16},{"ruleId":"973","severity":1,"message":"1225","line":98,"column":9,"nodeType":"975","messageId":"976","endLine":98,"endColumn":19},{"ruleId":"1084","severity":1,"message":"1169","line":224,"column":31,"nodeType":"993","endLine":230,"endColumn":32},{"ruleId":"991","severity":1,"message":"992","line":313,"column":13,"nodeType":"993","endLine":313,"endColumn":40},{"ruleId":"1077","severity":1,"message":"1144","line":317,"column":12,"nodeType":"1001","messageId":"1062","endLine":317,"endColumn":14},{"ruleId":"1056","severity":1,"message":"1057","line":366,"column":17,"nodeType":"1058","endLine":366,"endColumn":46},{"ruleId":"973","severity":1,"message":"1198","line":17,"column":9,"nodeType":"975","messageId":"976","endLine":17,"endColumn":18},{"ruleId":"973","severity":1,"message":"1007","line":32,"column":11,"nodeType":"975","messageId":"976","endLine":32,"endColumn":23},{"ruleId":"973","severity":1,"message":"1008","line":32,"column":25,"nodeType":"975","messageId":"976","endLine":32,"endColumn":38},{"ruleId":"973","severity":1,"message":"1009","line":32,"column":40,"nodeType":"975","messageId":"976","endLine":32,"endColumn":52},{"ruleId":"973","severity":1,"message":"1227","line":38,"column":10,"nodeType":"975","messageId":"976","endLine":38,"endColumn":13},{"ruleId":"968","severity":1,"message":"1228","line":52,"column":6,"nodeType":"979","endLine":56,"endColumn":4,"suggestions":"1229"},{"ruleId":"968","severity":1,"message":"1230","line":53,"column":5,"nodeType":"1231","endLine":55,"endColumn":11},{"ruleId":"1056","severity":1,"message":"1057","line":66,"column":13,"nodeType":"1058","endLine":66,"endColumn":31},{"ruleId":"973","severity":1,"message":"1198","line":14,"column":7,"nodeType":"975","messageId":"976","endLine":14,"endColumn":16},{"ruleId":"968","severity":1,"message":"969","line":39,"column":15,"nodeType":"970","endLine":46,"endColumn":6},{"ruleId":"968","severity":1,"message":"1072","line":40,"column":21,"nodeType":"1073","endLine":40,"endColumn":75},{"ruleId":"996","severity":1,"message":"997","line":107,"column":26,"nodeType":"970","messageId":"998","endLine":107,"endColumn":28},{"ruleId":"991","severity":1,"message":"992","line":240,"column":13,"nodeType":"993","endLine":240,"endColumn":58},{"ruleId":"973","severity":1,"message":"1106","line":1,"column":17,"nodeType":"975","messageId":"976","endLine":1,"endColumn":25},{"ruleId":"973","severity":1,"message":"1232","line":3,"column":8,"nodeType":"975","messageId":"976","endLine":3,"endColumn":15},{"ruleId":"973","severity":1,"message":"1233","line":4,"column":8,"nodeType":"975","messageId":"976","endLine":4,"endColumn":12},{"ruleId":"973","severity":1,"message":"1234","line":5,"column":8,"nodeType":"975","messageId":"976","endLine":5,"endColumn":17},{"ruleId":"973","severity":1,"message":"1235","line":6,"column":8,"nodeType":"975","messageId":"976","endLine":6,"endColumn":18},{"ruleId":"973","severity":1,"message":"1236","line":25,"column":10,"nodeType":"975","messageId":"976","endLine":25,"endColumn":24},{"ruleId":"973","severity":1,"message":"1226","line":39,"column":9,"nodeType":"975","messageId":"976","endLine":39,"endColumn":16},{"ruleId":"973","severity":1,"message":"1237","line":41,"column":9,"nodeType":"975","messageId":"976","endLine":41,"endColumn":14},{"ruleId":"973","severity":1,"message":"1176","line":4,"column":10,"nodeType":"975","messageId":"976","endLine":4,"endColumn":21},{"ruleId":"968","severity":1,"message":"969","line":10,"column":13,"nodeType":"970","endLine":24,"endColumn":4},{"ruleId":"1077","severity":1,"message":"1144","line":16,"column":74,"nodeType":"1001","messageId":"1062","endLine":16,"endColumn":76},{"ruleId":"968","severity":1,"message":"1201","line":24,"column":6,"nodeType":"979","endLine":24,"endColumn":30,"suggestions":"1238"},{"ruleId":"968","severity":1,"message":"1239","line":32,"column":6,"nodeType":"979","endLine":32,"endColumn":18,"suggestions":"1240"},{"ruleId":"973","severity":1,"message":"1241","line":31,"column":22,"nodeType":"975","messageId":"976","endLine":31,"endColumn":35},{"ruleId":"973","severity":1,"message":"1242","line":37,"column":10,"nodeType":"975","messageId":"976","endLine":37,"endColumn":24},{"ruleId":"973","severity":1,"message":"1243","line":37,"column":26,"nodeType":"975","messageId":"976","endLine":37,"endColumn":44},{"ruleId":"973","severity":1,"message":"1244","line":38,"column":10,"nodeType":"975","messageId":"976","endLine":38,"endColumn":22},{"ruleId":"973","severity":1,"message":"1245","line":38,"column":24,"nodeType":"975","messageId":"976","endLine":38,"endColumn":39},{"ruleId":"973","severity":1,"message":"1246","line":39,"column":10,"nodeType":"975","messageId":"976","endLine":39,"endColumn":22},{"ruleId":"973","severity":1,"message":"1247","line":39,"column":24,"nodeType":"975","messageId":"976","endLine":39,"endColumn":39},{"ruleId":"973","severity":1,"message":"1248","line":40,"column":10,"nodeType":"975","messageId":"976","endLine":40,"endColumn":14},{"ruleId":"973","severity":1,"message":"1249","line":40,"column":16,"nodeType":"975","messageId":"976","endLine":40,"endColumn":23},{"ruleId":"973","severity":1,"message":"1250","line":43,"column":10,"nodeType":"975","messageId":"976","endLine":43,"endColumn":17},{"ruleId":"968","severity":1,"message":"1251","line":48,"column":6,"nodeType":"979","endLine":48,"endColumn":8,"suggestions":"1252"},{"ruleId":"1253","severity":1,"message":"1254","line":64,"column":13,"nodeType":"1255","messageId":"1256","endLine":64,"endColumn":30},{"ruleId":"968","severity":1,"message":"1257","line":76,"column":6,"nodeType":"979","endLine":76,"endColumn":27,"suggestions":"1258"},{"ruleId":"973","severity":1,"message":"1259","line":78,"column":7,"nodeType":"975","messageId":"976","endLine":78,"endColumn":11},{"ruleId":"973","severity":1,"message":"1260","line":82,"column":7,"nodeType":"975","messageId":"976","endLine":82,"endColumn":16},{"ruleId":"973","severity":1,"message":"1261","line":84,"column":7,"nodeType":"975","messageId":"976","endLine":84,"endColumn":14},{"ruleId":"973","severity":1,"message":"1262","line":85,"column":7,"nodeType":"975","messageId":"976","endLine":85,"endColumn":19},{"ruleId":"973","severity":1,"message":"1263","line":86,"column":7,"nodeType":"975","messageId":"976","endLine":86,"endColumn":21},{"ruleId":"973","severity":1,"message":"1264","line":89,"column":7,"nodeType":"975","messageId":"976","endLine":89,"endColumn":13},{"ruleId":"973","severity":1,"message":"1265","line":93,"column":9,"nodeType":"975","messageId":"976","endLine":93,"endColumn":21},{"ruleId":"973","severity":1,"message":"1225","line":108,"column":11,"nodeType":"975","messageId":"976","endLine":108,"endColumn":21},{"ruleId":"973","severity":1,"message":"1162","line":132,"column":9,"nodeType":"975","messageId":"976","endLine":132,"endColumn":17},{"ruleId":"991","severity":1,"message":"992","line":140,"column":13,"nodeType":"993","endLine":148,"endColumn":15},{"ruleId":"991","severity":1,"message":"992","line":155,"column":13,"nodeType":"993","endLine":169,"endColumn":15},{"ruleId":"1056","severity":1,"message":"1057","line":330,"column":11,"nodeType":"1058","endLine":332,"endColumn":13},{"ruleId":"1056","severity":1,"message":"1057","line":341,"column":11,"nodeType":"1058","endLine":341,"endColumn":29},{"ruleId":"968","severity":1,"message":"969","line":20,"column":13,"nodeType":"970","endLine":24,"endColumn":4},{"ruleId":"968","severity":1,"message":"1266","line":24,"column":6,"nodeType":"979","endLine":24,"endColumn":26,"suggestions":"1267"},{"ruleId":"973","severity":1,"message":"1268","line":44,"column":9,"nodeType":"975","messageId":"976","endLine":44,"endColumn":21},{"ruleId":"1056","severity":1,"message":"1057","line":126,"column":19,"nodeType":"1058","endLine":126,"endColumn":63},{"ruleId":"1077","severity":1,"message":"1144","line":156,"column":34,"nodeType":"1001","messageId":"1062","endLine":156,"endColumn":36},{"ruleId":"1077","severity":1,"message":"1144","line":195,"column":32,"nodeType":"1001","messageId":"1062","endLine":195,"endColumn":34},{"ruleId":"973","severity":1,"message":"1269","line":6,"column":17,"nodeType":"975","messageId":"976","endLine":6,"endColumn":25},{"ruleId":"973","severity":1,"message":"1270","line":10,"column":12,"nodeType":"975","messageId":"976","endLine":10,"endColumn":24},{"ruleId":"968","severity":1,"message":"1271","line":232,"column":6,"nodeType":"979","endLine":232,"endColumn":8,"suggestions":"1272"},{"ruleId":"968","severity":1,"message":"1273","line":275,"column":6,"nodeType":"979","endLine":275,"endColumn":8,"suggestions":"1274"},{"ruleId":"1275","severity":1,"message":"1276","line":295,"column":7,"nodeType":"993","endLine":295,"endColumn":11},{"ruleId":"1056","severity":1,"message":"1057","line":313,"column":9,"nodeType":"1058","endLine":313,"endColumn":41},{"ruleId":"973","severity":1,"message":"1135","line":6,"column":8,"nodeType":"975","messageId":"976","endLine":6,"endColumn":13},{"ruleId":"973","severity":1,"message":"1136","line":7,"column":10,"nodeType":"975","messageId":"976","endLine":7,"endColumn":13},{"ruleId":"968","severity":1,"message":"1204","line":31,"column":6,"nodeType":"979","endLine":31,"endColumn":8,"suggestions":"1277"},{"ruleId":"973","severity":1,"message":"1009","line":33,"column":40,"nodeType":"975","messageId":"976","endLine":33,"endColumn":52},{"ruleId":"991","severity":1,"message":"992","line":47,"column":11,"nodeType":"993","endLine":47,"endColumn":50},{"ruleId":"991","severity":1,"message":"992","line":57,"column":9,"nodeType":"993","endLine":57,"endColumn":50},{"ruleId":"973","severity":1,"message":"1278","line":76,"column":10,"nodeType":"975","messageId":"976","endLine":76,"endColumn":26},{"ruleId":"973","severity":1,"message":"1279","line":76,"column":28,"nodeType":"975","messageId":"976","endLine":76,"endColumn":47},{"ruleId":"968","severity":1,"message":"969","line":89,"column":13,"nodeType":"970","endLine":95,"endColumn":4},{"ruleId":"968","severity":1,"message":"1280","line":95,"column":6,"nodeType":"979","endLine":95,"endColumn":8,"suggestions":"1281"},{"ruleId":"991","severity":1,"message":"992","line":103,"column":15,"nodeType":"993","endLine":106,"endColumn":17},{"ruleId":"991","severity":1,"message":"992","line":138,"column":17,"nodeType":"993","endLine":144,"endColumn":19},{"ruleId":"973","severity":1,"message":"1159","line":1,"column":27,"nodeType":"975","messageId":"976","endLine":1,"endColumn":36},{"ruleId":"973","severity":1,"message":"1282","line":1,"column":38,"nodeType":"975","messageId":"976","endLine":1,"endColumn":44},{"ruleId":"973","severity":1,"message":"1107","line":1,"column":46,"nodeType":"975","messageId":"976","endLine":1,"endColumn":57},{"ruleId":"973","severity":1,"message":"1283","line":3,"column":10,"nodeType":"975","messageId":"976","endLine":3,"endColumn":30},{"ruleId":"973","severity":1,"message":"1284","line":10,"column":13,"nodeType":"975","messageId":"976","endLine":10,"endColumn":17},"no-native-reassign",["1285"],"no-negated-in-lhs",["1286"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-unused-vars","'getChats' is defined but never used.","Identifier","unusedVar","'Token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1287"],["1288"],"'EVENTSAVED' is defined but never used.","'EVENTSAVEFAIL' is defined but never used.","React Hook useEffect has missing dependencies: 'CodeEvent.Code', 'CodeEvent.Maincode', 'dispatch', and 'props.location.pathname'. Either include them or remove the dependency array.",["1289"],["1290"],"'setmaincode' is assigned a value but never used.","'mode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Name', 'maincode', and 'props.match.params.id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setcodesharelink' needs the current value of 'maincode'.",["1291"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'result' is assigned a value but never used.","'incompleteeventnumber' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'addAnEvent'. Either include it or remove the dependency array.",["1292"],"React Hook useEffect has missing dependencies: 'dispatch', 'getposts', 'guestlist', 'props.location.pathname', 'props.match.params.MainCode', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1293"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'ParticipantsCPY' is assigned a value but never used.","'Phone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getposts'. Either include it or remove the dependency array.",["1294"],"React Hook useEffect has a missing dependency: 'admins'. Either include it or remove the dependency array.",["1295"],"'eveid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getcomments'. Either include it or remove the dependency array.",["1296"],"Assignments to the 'Eventdata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'base' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'base' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.likeby'. Either include them or remove the dependency array. If 'setisliked' needs the current value of 'props.likeby', you can also switch to useReducer instead of useState and read 'props.likeby' in the reducer.",["1297"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', 'props.match.params.event', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1298"],"'Id' is assigned a value but never used.","'isadmin' is assigned a value but never used.","'IsAdmin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array.",["1299"],"React Hook useEffect has missing dependencies: 'dispatch', 'myInvitations', 'props.match.params.Code', and 'props.match.params.maincode'. Either include them or remove the dependency array.",["1300"],"'newdesc' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'props.match.params.Code', 'props.match.params.Name', and 'props.match.params.maincode'. Either include them or remove the dependency array.",["1301"],"'isUploaded' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array.",["1302"],"React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["1303"],"'save' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Eventdata1', 'Eventdata2', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array.",["1304"],"'newIndex' is assigned a value but never used.","'setMarker' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'Location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'panTo' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","'GetEvents' is defined but never used.","'GetInvitations' is defined but never used.","'CircularProgress' is defined but never used.","'Backdrop' is defined but never used.","'found' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'props.location.pathname', 'props.match.params.id', and 'props.match.params.invno'. Either include them or remove the dependency array.",["1305"],"'Eventdata' is assigned a value but never used.","'handleShow' is assigned a value but never used.","Assignments to the 'supported' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression","'Status' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myInvitations', 'props.location.pathname', 'props.match.params.id', and 'props.match.params.invno'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1306"],"eqeqeq","Expected '!==' and instead saw '!='.","'number' is assigned a value but never used.","'participants' is assigned a value but never used.","'Host' is already defined.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'ishost', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1307"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setoptions' is assigned a value but never used.","'Rsvplist' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.match.params.eid', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1308"],"'submit' is assigned a value but never used.","'isError' is assigned a value but never used.","'isfileChanged' is assigned a value but never used.","'_id' is assigned a value but never used.","'Set_id' is assigned a value but never used.","'datacopy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'grabdata'. Either include it or remove the dependency array.",["1309"],"React Hook useEffect has a missing dependency: 'Eventdata'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setName' needs the current value of 'Eventdata'.",["1310"],"'unuls' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Filetype', 'selectedEvent', and 'uploadfile'. Either include them or remove the dependency array.",["1311"],"'category' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', 'props.match.params.MainCode', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1312"],"'useState' is defined but never used.","'useCallback' is defined but never used.","'Avatar' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Paper' is defined but never used.","'InputBase' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'ListItemAvatar' is defined but never used.","'AllGroups' is assigned a value but never used.","'windowwidth' is assigned a value but never used.","'IndvName' is assigned a value but never used.","'selectedgrpcpr' is assigned a value but never used.","'chat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1313"],"'rsvpnumber' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'evno', and 'props'. Either include them or remove the dependency array.",["1314"],"'Testimonials' is defined but never used.","'CompanySlide' is defined but never used.","'decoded' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'axios' is defined but never used.","'url' is defined but never used.","'history' is defined but never used.","'jwt_decode' is defined but never used.","'GOTCHATS' is defined but never used.","BreakStatement","'act' is defined but never used.","'reactLocalStorage' is defined but never used.","'datacpy' is assigned a value but never used.","Expected '===' and instead saw '=='.","'fileRef' is assigned a value but never used.","'FaWhatsapp' is defined but never used.","'ZoomIcon' is defined but never used.","'DanceIcon' is defined but never used.","'HappyIcon' is defined but never used.","'menu' is assigned a value but never used.","'setMenu' is assigned a value but never used.","'showPopup' is assigned a value but never used.","'toggleShowPopup' is assigned a value but never used.",["1315"],"'seteventcode' is assigned a value but never used.","'ishost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Auth.Phone'. Either include it or remove the dependency array.",["1316"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'loginuser' is defined but never used.","'dispatch' is assigned a value but never used.","'Container' is defined but never used.","'DancingImg' is defined but never used.","'Auth' is assigned a value but never used.",["1317"],"'FaTwitter' is defined but never used.","'FaInstagram' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'loader' is assigned a value but never used.","'show' is assigned a value but never used.","'setshow' is assigned a value but never used.",["1318"],"React Hook useEffect has missing dependencies: 'Auth.Phone' and 'showicon'. Either include them or remove the dependency array.",["1319"],"'useDispatch' is defined but never used.","React Hook useCallback has missing dependencies: 'Auth.Phone' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1320"],"React Hook useEffect has a missing dependency: 'props.SelectedGroup._id'. Either include it or remove the dependency array.",["1321"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1322"],"'ArrowBackIosIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'AllGroups' and 'props.MainCode'. Either include them or remove the dependency array.",["1323"],"React Hook useEffect has a missing dependency: 'props.MainCode'. Either include it or remove the dependency array.",["1324"],"'type' is assigned a value but never used.","Duplicate key 'height'.","'setMonths' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Months'. Either include it or remove the dependency array.",["1325"],"React Hook useEffect has missing dependencies: 'Auth.Phone' and 'EventState'. Either include them or remove the dependency array.",["1326"],"'Logo' is defined but never used.","React Hook useEffect has missing dependencies: 'Phone' and 'dispatch'. Either include them or remove the dependency array.",["1327"],"'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.base'. Either include them or remove the dependency array.",["1328"],"React Hook useEffect has missing dependencies: 'Auth.Name', 'Auth.Phone', and 'Auth.Profile'. Either include them or remove the dependency array.",["1329"],"'CancelIcon' is defined but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1330"],"'groupName' is assigned a value but never used.","'setgroupName' is assigned a value but never used.","'filterparticipant' is defined but never used.","'setcreateGroup' is assigned a value but never used.","'setdatetime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'album'. Either include it or remove the dependency array.",["1331"],"'cancel' is assigned a value but never used.","'dataurl' is assigned a value but never used.","'saveedit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'subStory'. Either include it or remove the dependency array.",["1332"],["1333"],"React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.LikeList'. Either include them or remove the dependency array.",["1334"],["1335"],"React Hook useEffect has missing dependencies: 'props.currentPosts' and 'props.popuptype'. Either include them or remove the dependency array.",["1336"],"'venue' is assigned a value but never used.","'EventsCopy' is assigned a value but never used.","'classes' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'seturl' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["1337"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Typography' is defined but never used.","'getStepContent' is defined but never used.","'steps' is assigned a value but never used.",["1338"],"React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setcomments' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.",["1339"],"'setProcessing' is assigned a value but never used.","'shedulevisible' is assigned a value but never used.","'SetScheduleVisible' is assigned a value but never used.","'storyvisible' is assigned a value but never used.","'SetStoryVisible' is assigned a value but never used.","'albumvisible' is assigned a value but never used.","'SetAlbumVisible' is assigned a value but never used.","'Link' is assigned a value but never used.","'setLink' is assigned a value but never used.","'address' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'SetCurrentEventDetails' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["1340"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has missing dependencies: 'CurrentEventDetails' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1341"],"'gapi' is assigned a value but never used.","'CLIENT_ID' is assigned a value but never used.","'API_KEY' is assigned a value but never used.","'clientSecret' is assigned a value but never used.","'DISCOVERY_DOCS' is assigned a value but never used.","'SCOPES' is assigned a value but never used.","'currentEvent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["1342"],"'NexteventKey' is assigned a value but never used.","'setCodes' is assigned a value but never used.","'randomString' is defined but never used.","React Hook useEffect has a missing dependency: 'props.CurrentEventDetails.location'. Either include it or remove the dependency array.",["1343"],"React Hook useCallback has a missing dependency: 'props.CurrentEventDetails'. Either include it or remove the dependency array.",["1344"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["1345"],"'SelectedTemplate' is assigned a value but never used.","'setSelectedTemplate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AllTemplates' and 'props.Type'. Either include them or remove the dependency array.",["1346"],"'useRef' is defined but never used.","'BsFillInfoCircleFill' is defined but never used.","'file' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1347","fix":"1348"},{"desc":"1349","fix":"1350"},{"desc":"1351","fix":"1352"},{"desc":"1347","fix":"1353"},{"desc":"1354","fix":"1355"},{"desc":"1356","fix":"1357"},{"desc":"1358","fix":"1359"},{"desc":"1360","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1364","fix":"1365"},{"desc":"1366","fix":"1367"},{"desc":"1368","fix":"1369"},{"desc":"1370","fix":"1371"},{"desc":"1372","fix":"1373"},{"desc":"1374","fix":"1375"},{"desc":"1376","fix":"1377"},{"desc":"1378","fix":"1379"},{"desc":"1380","fix":"1381"},{"desc":"1382","fix":"1383"},{"desc":"1384","fix":"1385"},{"desc":"1386","fix":"1387"},{"desc":"1388","fix":"1389"},{"desc":"1390","fix":"1391"},{"desc":"1392","fix":"1393"},{"desc":"1394","fix":"1395"},{"desc":"1396","fix":"1397"},{"desc":"1398","fix":"1399"},{"desc":"1400","fix":"1401"},{"desc":"1402","fix":"1403"},{"desc":"1404","fix":"1405"},{"desc":"1347","fix":"1406"},{"desc":"1404","fix":"1407"},{"desc":"1408","fix":"1409"},{"desc":"1410","fix":"1411"},{"desc":"1412","fix":"1413"},{"desc":"1414","fix":"1415"},{"desc":"1416","fix":"1417"},{"desc":"1416","fix":"1418"},{"desc":"1419","fix":"1420"},{"desc":"1421","fix":"1422"},{"desc":"1423","fix":"1424"},{"desc":"1425","fix":"1426"},{"desc":"1427","fix":"1428"},{"desc":"1429","fix":"1430"},{"desc":"1431","fix":"1432"},{"desc":"1433","fix":"1434"},{"desc":"1429","fix":"1435"},{"desc":"1436","fix":"1437"},{"desc":"1438","fix":"1439"},{"desc":"1440","fix":"1441"},{"desc":"1442","fix":"1443"},{"desc":"1427","fix":"1444"},{"desc":"1445","fix":"1446"},{"desc":"1442","fix":"1447"},{"desc":"1448","fix":"1449"},{"desc":"1450","fix":"1451"},{"desc":"1452","fix":"1453"},{"desc":"1454","fix":"1455"},{"desc":"1429","fix":"1456"},{"desc":"1457","fix":"1458"},"Update the dependencies array to be: [dispatch]",{"range":"1459","text":"1460"},"Update the dependencies array to be: [Auth.isLoggedIn, dispatch]",{"range":"1461","text":"1462"},"Update the dependencies array to be: [CodeEvent.Code, CodeEvent.Maincode, dispatch, props.location.pathname]",{"range":"1463","text":"1464"},{"range":"1465","text":"1460"},"Update the dependencies array to be: [Auth.Name, maincode, props.match.params.id]",{"range":"1466","text":"1467"},"Update the dependencies array to be: [addAnEvent]",{"range":"1468","text":"1469"},"Update the dependencies array to be: [MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",{"range":"1470","text":"1471"},"Update the dependencies array to be: [Eventdata, getposts]",{"range":"1472","text":"1473"},"Update the dependencies array to be: [admins, filter]",{"range":"1474","text":"1475"},"Update the dependencies array to be: [getcomments]",{"range":"1476","text":"1477"},"Update the dependencies array to be: [Auth.Phone, props.likeby]",{"range":"1478","text":"1479"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.event]",{"range":"1480","text":"1481"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Auth.Phone]",{"range":"1482","text":"1483"},"Update the dependencies array to be: [Auth.isLoggedIn, dispatch, myInvitations, props.match.params.Code, props.match.params.maincode]",{"range":"1484","text":"1485"},"Update the dependencies array to be: [props.match.params.Code, props.match.params.Name, props.match.params.maincode]",{"range":"1486","text":"1487"},"Update the dependencies array to be: [Auth.Phone, Eventdata, MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",{"range":"1488","text":"1489"},"Update the dependencies array to be: [Eventdata, images]",{"range":"1490","text":"1491"},"Update the dependencies array to be: [Eventdata1, Eventdata2, props.location.pathname, props.match.params.id]",{"range":"1492","text":"1493"},"Update the dependencies array to be: [myInvitations, MyEvents, props.location.pathname, props.match.params.id, props.match.params.invno, Auth.Phone]",{"range":"1494","text":"1495"},"Update the dependencies array to be: [MyEvents, myInvitations, props.location.pathname, props.match.params.id, props.match.params.invno]",{"range":"1496","text":"1497"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Eventdata, Auth.Phone, ishost]",{"range":"1498","text":"1499"},"Update the dependencies array to be: [MyEvents, dispatch, props.match.params.eid, props.match.params.id]",{"range":"1500","text":"1501"},"Update the dependencies array to be: [grabdata]",{"range":"1502","text":"1503"},"Update the dependencies array to be: [Eventdata, selectedEvent]",{"range":"1504","text":"1505"},"Update the dependencies array to be: [Filetype, Fileurl, selectedEvent, uploadfile]",{"range":"1506","text":"1507"},"Update the dependencies array to be: [MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",{"range":"1508","text":"1509"},"Update the dependencies array to be: [MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",{"range":"1510","text":"1511"},"Update the dependencies array to be: [Auth.Phone, Eventdata, evno, props]",{"range":"1512","text":"1513"},"Update the dependencies array to be: [Auth.isExpired, dispatch]",{"range":"1514","text":"1515"},"Update the dependencies array to be: [Auth.Phone, props.Eventdata]",{"range":"1516","text":"1517"},{"range":"1518","text":"1460"},{"range":"1519","text":"1517"},"Update the dependencies array to be: [Auth.Phone, props.RSVPList, showicon]",{"range":"1520","text":"1521"},"Update the dependencies array to be: [Auth.Phone, props]",{"range":"1522","text":"1523"},"Update the dependencies array to be: [props.SelectedGroup._id]",{"range":"1524","text":"1525"},"Update the dependencies array to be: [props.SelectedGroup.chats, props.IsSubmit, props]",{"range":"1526","text":"1527"},"Update the dependencies array to be: [AllGroups, props.MainCode]",{"range":"1528","text":"1529"},{"range":"1530","text":"1529"},"Update the dependencies array to be: [Months, props.Date]",{"range":"1531","text":"1532"},"Update the dependencies array to be: [Auth.Phone, EventState, props.Eventdata]",{"range":"1533","text":"1534"},"Update the dependencies array to be: [Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",{"range":"1535","text":"1536"},"Update the dependencies array to be: [Auth.Phone, props.Eventdata, props.base]",{"range":"1537","text":"1538"},"Update the dependencies array to be: [props.Phone, GuestList, Auth.Phone, Auth.Name, Auth.Profile]",{"range":"1539","text":"1540"},"Update the dependencies array to be: [props]",{"range":"1541","text":"1542"},"Update the dependencies array to be: [album, props.uniqurl]",{"range":"1543","text":"1544"},"Update the dependencies array to be: [props.Eventdata, props.uniqurl, subStory]",{"range":"1545","text":"1546"},{"range":"1547","text":"1542"},"Update the dependencies array to be: [Auth.Phone, props.LikeList]",{"range":"1548","text":"1549"},"Update the dependencies array to be: [props.MainCode, props.url]",{"range":"1550","text":"1551"},"Update the dependencies array to be: [props.currentPosts, props.popuptype]",{"range":"1552","text":"1553"},"Update the dependencies array to be: [props.Events, props.SelectedEvent]",{"range":"1554","text":"1555"},{"range":"1556","text":"1540"},"Update the dependencies array to be: [props.data, props.post]",{"range":"1557","text":"1558"},{"range":"1559","text":"1555"},"Update the dependencies array to be: [CurrentEventDetails, props, props.SelectedEvent]",{"range":"1560","text":"1561"},"Update the dependencies array to be: [props, props.participants]",{"range":"1562","text":"1563"},"Update the dependencies array to be: [props.CurrentEventDetails.location]",{"range":"1564","text":"1565"},"Update the dependencies array to be: [props.CurrentEventDetails]",{"range":"1566","text":"1567"},{"range":"1568","text":"1542"},"Update the dependencies array to be: [AllTemplates, props.Type]",{"range":"1569","text":"1570"},[1215,1217],"[dispatch]",[1525,1542],"[Auth.isLoggedIn, dispatch]",[1434,1436],"[CodeEvent.Code, CodeEvent.Maincode, dispatch, props.location.pathname]",[1594,1596],[2662,2664],"[Auth.Name, maincode, props.match.params.id]",[7313,7315],"[addAnEvent]",[3602,3627],"[MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",[7320,7331],"[Eventdata, getposts]",[7439,7447],"[admins, filter]",[2004,2006],"[getcomments]",[6724,6726],"[Auth.Phone, props.likeby]",[1848,1873],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.event]",[2642,2667],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Auth.Phone]",[2445,2462],"[Auth.isLoggedIn, dispatch, myInvitations, props.match.params.Code, props.match.params.maincode]",[5028,5030],"[props.match.params.Code, props.match.params.Name, props.match.params.maincode]",[3586,3611],"[Auth.Phone, Eventdata, MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",[4024,4035],"[Eventdata, images]",[1321,1323],"[Eventdata1, Eventdata2, props.location.pathname, props.match.params.id]",[3579,3604],"[myInvitations, MyEvents, props.location.pathname, props.match.params.id, props.match.params.invno, Auth.Phone]",[5414,5424],"[MyEvents, myInvitations, props.location.pathname, props.match.params.id, props.match.params.invno]",[2642,2667],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Eventdata, Auth.Phone, ishost]",[3798,3808],"[MyEvents, dispatch, props.match.params.eid, props.match.params.id]",[5967,5969],"[grabdata]",[7785,7800],"[Eventdata, selectedEvent]",[13302,13311],"[Filetype, Fileurl, selectedEvent, uploadfile]",[2432,2457],"[MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",[1515,1540],"[MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",[2394,2405],"[Auth.Phone, Eventdata, evno, props]",[1908,1924],"[Auth.isExpired, dispatch]",[1019,1036],"[Auth.Phone, props.Eventdata]",[1478,1480],[4275,4292],[14946,14962],"[Auth.Phone, props.RSVPList, showicon]",[2470,2472],"[Auth.Phone, props]",[2870,2872],"[props.SelectedGroup._id]",[2939,2982],"[props.SelectedGroup.chats, props.IsSubmit, props]",[1999,2001],"[AllGroups, props.MainCode]",[2225,2236],[945,957],"[Months, props.Date]",[740,757],"[Auth.Phone, EventState, props.Eventdata]",[1667,1700],"[Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",[1424,1441],"[Auth.Phone, props.Eventdata, props.base]",[980,1004],"[props.Phone, GuestList, Auth.Phone, Auth.Name, Auth.Profile]",[2298,2300],"[props]",[2176,2191],"[album, props.uniqurl]",[5346,5378],"[props.Eventdata, props.uniqurl, subStory]",[1389,1391],[7845,7847],"[Auth.Phone, props.LikeList]",[929,940],"[props.MainCode, props.url]",[971,973],"[props.currentPosts, props.popuptype]",[1697,1817],"[props.Events, props.SelectedEvent]",[941,965],[1239,1251],"[props.data, props.post]",[1721,1723],[2533,2554],"[CurrentEventDetails, props, props.SelectedEvent]",[673,693],"[props, props.participants]",[4197,4199],"[props.CurrentEventDetails.location]",[5399,5401],"[props.CurrentEventDetails]",[1282,1284],[3305,3307],"[AllTemplates, props.Type]"]