[{"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\index.js":"1","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\App.js":"2","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\reportWebVitals.js":"4","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\store.js":"5","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\History.js":"6","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Routing.js":"7","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Auth\\MobileAuth.js":"8","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Landingpage.js":"9","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Home\\Home.js":"10","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddEventSucess.js":"11","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\EventDone\\EventDone.js":"12","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddEvent.js":"13","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Feed.js":"14","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Comments\\Coments.js":"15","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\Chat.js":"16","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Entercode\\Entercode.js":"17","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowSchedule.js":"18","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\BlankPages\\404.js":"19","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\hoxinvitation.js":"20","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitaionviewToggler.js":"21","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Notifications\\Notification.js":"22","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowStory.js":"23","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\RSVP\\Rsvp.js":"24","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowAlbum.js":"25","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js":"26","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Location Offline\\LocationOffline.js":"27","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Guest\\ManageGuest.js":"28","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Sidebar\\AdminSidebar.js":"29","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Guest\\Guest.js":"30","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Admin\\EventAdmin.js":"31","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\jitsi\\Jitsivc.js":"32","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\EditEvent\\EditEvent.js":"33","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Sidebar\\SidebarMore.js":"34","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\FD\\Fd.js":"35","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Settings\\AlertNotif\\AlertNotif.js":"36","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\HomePage.js":"37","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\ReducerCombiner.js":"38","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Auth\\LoginSignup.js":"39","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Banner.js":"40","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Clients.js":"41","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\CTAOne.js":"42","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Contact.js":"43","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\FAQ.js":"44","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Footer.js":"45","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Header.js":"46","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Layout.js":"47","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Services.js":"48","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\MobileMenu.js":"49","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\CTATwo.js":"50","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Pricing.js":"51","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\VideoOne.js":"52","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Testimonials.js":"53","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js":"54","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js":"55","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js":"56","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\postfunctions.js":"57","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js":"58","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\CodeEventReducer.js":"59","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\PostReducer.js":"60","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\NotificatonReducer.js":"61","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\ChatReducer.js":"62","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\EventReducer.js":"63","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\CreateEventFormReducer.js":"64","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\AuthReducer.js":"65","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\ChatWidget.js":"66","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\CompanySlide.js":"67","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Additionals.js":"68","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\AboutBanner.js":"69","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Features.js":"70","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Testimonials.js":"71","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Footer.js":"72","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\ContactUs.js":"73","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\MainBanner.js":"74","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\FileUpload_Download.js":"75","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js":"76","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Popups\\Popup.js":"77","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Header\\Header.js":"78","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\FootMenu\\FootMenu.js":"79","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Places.js":"80","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\BlockTitle.js":"81","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Config.js":"82","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js":"83","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Firebase.js":"84","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\PostActions.js":"85","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\NotificationAction.js":"86","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\ChatActions.js":"87","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\EventActions.js":"88","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Headings.js":"89","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\UserPorfile\\UserProfile.js":"90","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Login.js":"91","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\AuthActions.js":"92","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\NavLinks.js":"93","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\AccordionItem.js":"94","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\CodeAction.js":"95","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\timer\\timer.js":"96","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js":"97","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js":"98","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js":"99","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\NavMobile\\NavMobile.js":"100","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\Addtoalbum.js":"101","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js":"102","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\Chatbox.js":"103","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\List.js":"104","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\AddPost.js":"105","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Posts.js":"106","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\AddTags.js":"107","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Media.js":"108","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserData.js":"109","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\FeedComments.js":"110","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js":"111","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Plan\\Plan.js":"112","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js":"113","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Stepper\\Stepper.js":"114","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js":"115","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\Invitation.js":"116","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Events\\Eventlist.js":"117","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\SelectParticipant.js":"118","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js":"119","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js":"120","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js":"121","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js":"122","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Album.js":"123","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Maps.js":"124","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\EventCreationFormFunction.js":"125","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Story.js":"126","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\EventCreationFormActions.js":"127","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Schedule.js":"128","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddDetails\\AddDetails.js":"129"},{"size":914,"mtime":1627460524940,"results":"130","hashOfConfig":"131"},{"size":7764,"mtime":1627460524333,"results":"132","hashOfConfig":"131"},{"size":5201,"mtime":1627460524942,"results":"133","hashOfConfig":"131"},{"size":377,"mtime":1627460524942,"results":"134","hashOfConfig":"131"},{"size":368,"mtime":1627460524935,"results":"135","hashOfConfig":"131"},{"size":87,"mtime":1627460524937,"results":"136","hashOfConfig":"131"},{"size":1689,"mtime":1627460524939,"results":"137","hashOfConfig":"131"},{"size":586,"mtime":1627460524711,"results":"138","hashOfConfig":"131"},{"size":2513,"mtime":1627460524774,"results":"139","hashOfConfig":"131"},{"size":2302,"mtime":1627460524753,"results":"140","hashOfConfig":"131"},{"size":6692,"mtime":1627460524697,"results":"141","hashOfConfig":"131"},{"size":1528,"mtime":1627460524725,"results":"142","hashOfConfig":"131"},{"size":9774,"mtime":1627460524696,"results":"143","hashOfConfig":"131"},{"size":12924,"mtime":1627460524729,"results":"144","hashOfConfig":"131"},{"size":7432,"mtime":1627460524721,"results":"145","hashOfConfig":"131"},{"size":6755,"mtime":1627460524717,"results":"146","hashOfConfig":"131"},{"size":2342,"mtime":1627460524724,"results":"147","hashOfConfig":"131"},{"size":4133,"mtime":1627460524768,"results":"148","hashOfConfig":"131"},{"size":814,"mtime":1627460524712,"results":"149","hashOfConfig":"131"},{"size":7781,"mtime":1627460524769,"results":"150","hashOfConfig":"131"},{"size":3012,"mtime":1627460524762,"results":"151","hashOfConfig":"131"},{"size":2139,"mtime":1627460524919,"results":"152","hashOfConfig":"131"},{"size":4951,"mtime":1627460524769,"results":"153","hashOfConfig":"131"},{"size":6668,"mtime":1627460524767,"results":"154","hashOfConfig":"131"},{"size":7278,"mtime":1627479177209,"results":"155","hashOfConfig":"131"},{"size":13535,"mtime":1627479538752,"results":"156","hashOfConfig":"131"},{"size":10831,"mtime":1627460524918,"results":"157","hashOfConfig":"131"},{"size":13401,"mtime":1627460524733,"results":"158","hashOfConfig":"131"},{"size":2308,"mtime":1627461767715,"results":"159","hashOfConfig":"131"},{"size":12186,"mtime":1627538690302,"results":"160","hashOfConfig":"131"},{"size":8761,"mtime":1627461248842,"results":"161","hashOfConfig":"131"},{"size":683,"mtime":1627460524925,"results":"162","hashOfConfig":"131"},{"size":27043,"mtime":1627460524724,"results":"163","hashOfConfig":"131"},{"size":7487,"mtime":1627461570729,"results":"164","hashOfConfig":"131"},{"size":3254,"mtime":1627460524727,"results":"165","hashOfConfig":"131"},{"size":3827,"mtime":1627460524921,"results":"166","hashOfConfig":"131"},{"size":778,"mtime":1627460524758,"results":"167","hashOfConfig":"131"},{"size":592,"mtime":1627460524934,"results":"168","hashOfConfig":"131"},{"size":5127,"mtime":1627460524711,"results":"169","hashOfConfig":"131"},{"size":2637,"mtime":1627460524770,"results":"170","hashOfConfig":"131"},{"size":2246,"mtime":1627460524772,"results":"171","hashOfConfig":"131"},{"size":2013,"mtime":1627460524771,"results":"172","hashOfConfig":"131"},{"size":2037,"mtime":1627460524772,"results":"173","hashOfConfig":"131"},{"size":2673,"mtime":1627460524773,"results":"174","hashOfConfig":"131"},{"size":3815,"mtime":1627460524773,"results":"175","hashOfConfig":"131"},{"size":2186,"mtime":1627460524773,"results":"176","hashOfConfig":"131"},{"size":961,"mtime":1627460524776,"results":"177","hashOfConfig":"131"},{"size":2484,"mtime":1627460524779,"results":"178","hashOfConfig":"131"},{"size":1778,"mtime":1627460524776,"results":"179","hashOfConfig":"131"},{"size":2654,"mtime":1627460524771,"results":"180","hashOfConfig":"131"},{"size":5689,"mtime":1627460524779,"results":"181","hashOfConfig":"131"},{"size":1228,"mtime":1627460524783,"results":"182","hashOfConfig":"131"},{"size":4993,"mtime":1627460524780,"results":"183","hashOfConfig":"131"},{"size":4246,"mtime":1627460524928,"results":"184","hashOfConfig":"131"},{"size":6542,"mtime":1627460524930,"results":"185","hashOfConfig":"131"},{"size":1149,"mtime":1627460524929,"results":"186","hashOfConfig":"131"},{"size":2628,"mtime":1627460524931,"results":"187","hashOfConfig":"131"},{"size":428,"mtime":1627460524930,"results":"188","hashOfConfig":"131"},{"size":403,"mtime":1627460524932,"results":"189","hashOfConfig":"131"},{"size":272,"mtime":1627460524933,"results":"190","hashOfConfig":"131"},{"size":270,"mtime":1627460524933,"results":"191","hashOfConfig":"131"},{"size":698,"mtime":1627460524932,"results":"192","hashOfConfig":"131"},{"size":2901,"mtime":1627460524933,"results":"193","hashOfConfig":"131"},{"size":509,"mtime":1627460524932,"results":"194","hashOfConfig":"131"},{"size":2246,"mtime":1627460524931,"results":"195","hashOfConfig":"131"},{"size":402,"mtime":1627460524755,"results":"196","hashOfConfig":"131"},{"size":1925,"mtime":1627460524755,"results":"197","hashOfConfig":"131"},{"size":5220,"mtime":1627460524754,"results":"198","hashOfConfig":"131"},{"size":2595,"mtime":1627460524754,"results":"199","hashOfConfig":"131"},{"size":2748,"mtime":1627460524756,"results":"200","hashOfConfig":"131"},{"size":6086,"mtime":1627460524760,"results":"201","hashOfConfig":"131"},{"size":1737,"mtime":1627460524757,"results":"202","hashOfConfig":"131"},{"size":3273,"mtime":1627460524756,"results":"203","hashOfConfig":"131"},{"size":7636,"mtime":1627460524758,"results":"204","hashOfConfig":"131"},{"size":1761,"mtime":1627460524936,"results":"205","hashOfConfig":"131"},{"size":1290,"mtime":1627460524706,"results":"206","hashOfConfig":"131"},{"size":1291,"mtime":1627460524749,"results":"207","hashOfConfig":"131"},{"size":7680,"mtime":1627460524739,"results":"208","hashOfConfig":"131"},{"size":3054,"mtime":1627460524738,"results":"209","hashOfConfig":"131"},{"size":2638,"mtime":1627460524743,"results":"210","hashOfConfig":"131"},{"size":254,"mtime":1627460524770,"results":"211","hashOfConfig":"131"},{"size":275,"mtime":1627460524936,"results":"212","hashOfConfig":"131"},{"size":478,"mtime":1627460524929,"results":"213","hashOfConfig":"131"},{"size":430,"mtime":1627460524757,"results":"214","hashOfConfig":"131"},{"size":35,"mtime":1627460524928,"results":"215","hashOfConfig":"131"},{"size":53,"mtime":1627460524928,"results":"216","hashOfConfig":"131"},{"size":116,"mtime":1627460524926,"results":"217","hashOfConfig":"131"},{"size":348,"mtime":1627460524927,"results":"218","hashOfConfig":"131"},{"size":706,"mtime":1627462062748,"results":"219","hashOfConfig":"131"},{"size":5405,"mtime":1627460524924,"results":"220","hashOfConfig":"131"},{"size":316,"mtime":1627460524937,"results":"221","hashOfConfig":"131"},{"size":271,"mtime":1627460524926,"results":"222","hashOfConfig":"131"},{"size":1296,"mtime":1627460524777,"results":"223","hashOfConfig":"131"},{"size":713,"mtime":1627460524770,"results":"224","hashOfConfig":"131"},{"size":98,"mtime":1627460524927,"results":"225","hashOfConfig":"131"},{"size":571,"mtime":1627460524752,"results":"226","hashOfConfig":"131"},{"size":1172,"mtime":1627460524737,"results":"227","hashOfConfig":"131"},{"size":1905,"mtime":1627460524751,"results":"228","hashOfConfig":"131"},{"size":3233,"mtime":1627460524736,"results":"229","hashOfConfig":"131"},{"size":3860,"mtime":1627482895373,"results":"230","hashOfConfig":"131"},{"size":5531,"mtime":1627460524760,"results":"231","hashOfConfig":"131"},{"size":3746,"mtime":1627460524762,"results":"232","hashOfConfig":"131"},{"size":9014,"mtime":1627460524718,"results":"233","hashOfConfig":"131"},{"size":6786,"mtime":1627460524718,"results":"234","hashOfConfig":"131"},{"size":6772,"mtime":1627460524728,"results":"235","hashOfConfig":"131"},{"size":10034,"mtime":1627460524731,"results":"236","hashOfConfig":"131"},{"size":2966,"mtime":1627460524728,"results":"237","hashOfConfig":"131"},{"size":3673,"mtime":1627460524730,"results":"238","hashOfConfig":"131"},{"size":1529,"mtime":1627460524751,"results":"239","hashOfConfig":"131"},{"size":3060,"mtime":1627460524729,"results":"240","hashOfConfig":"131"},{"size":5715,"mtime":1627460524704,"results":"241","hashOfConfig":"131"},{"size":4278,"mtime":1627460524920,"results":"242","hashOfConfig":"131"},{"size":1050,"mtime":1627460524735,"results":"243","hashOfConfig":"131"},{"size":1702,"mtime":1627460524709,"results":"244","hashOfConfig":"131"},{"size":12529,"mtime":1627460524701,"results":"245","hashOfConfig":"131"},{"size":4630,"mtime":1627460524763,"results":"246","hashOfConfig":"131"},{"size":3044,"mtime":1627479125739,"results":"247","hashOfConfig":"131"},{"size":6812,"mtime":1627460524720,"results":"248","hashOfConfig":"131"},{"size":1644,"mtime":1627460524706,"results":"249","hashOfConfig":"131"},{"size":25514,"mtime":1627468212469,"results":"250","hashOfConfig":"131"},{"size":8457,"mtime":1627460524699,"results":"251","hashOfConfig":"131"},{"size":3388,"mtime":1627460524697,"results":"252","hashOfConfig":"131"},{"size":3333,"mtime":1627460524707,"results":"253","hashOfConfig":"131"},{"size":9497,"mtime":1627460524743,"results":"254","hashOfConfig":"131"},{"size":242,"mtime":1627460524930,"results":"255","hashOfConfig":"131"},{"size":13490,"mtime":1627460524708,"results":"256","hashOfConfig":"131"},{"size":37,"mtime":1627460524927,"results":"257","hashOfConfig":"131"},{"size":13501,"mtime":1627460524708,"results":"258","hashOfConfig":"131"},{"size":4750,"mtime":1627461053266,"results":"259","hashOfConfig":"131"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"93xf0z",{"filePath":"263","messages":"264","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"262"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"262"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"262"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"262"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"262"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"262"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"262"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"262"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"262"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"262"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"262"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"262"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"262"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"262"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"262"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"262"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"262"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"262"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"262"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"262"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"262"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"262"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"262"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"262"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"262"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"262"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"262"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"262"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"262"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"262"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"262"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"262"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"262"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"262"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"262"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"262"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"262"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"262"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"262"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"262"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"262"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"262"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"262"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"262"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"262"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"262"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"262"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"262"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"262"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"262"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"262"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"262"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"262"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"262"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"262"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"262"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"262"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"262"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"262"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"262"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"262"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"262"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"262"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"262"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"262"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"262"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"262"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"262"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"262"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"262"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"262"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"262"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"262"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"262"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"262"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"262"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"262"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"262"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"262"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"262"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"262"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"262"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"262"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"262"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"262"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"262"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"262"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"262"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"262"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"262"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"262"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"262"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"262"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"613"},"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\index.js",[],["614","615"],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\App.js",["616","617","618","619","620","621","622","623","624"],"import \"./App.css\";\r\nimport \"./Colors.css\";\r\nimport \"./Responsive.css\";\r\nimport \"./Scrollbar.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport ReactGa from \"react-ga\"\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport Redirector from \"./Utils/Routing\";\r\nimport history from \"./Utils/History\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MobileAuth from \"./Components/Auth/MobileAuth\";\r\nimport Landingpage from \"./Components/LandingPage/Landingpage\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport AddEvent from \"./Components/AddEvent/AddEvent\";\r\nimport Rsvp from \"./Components/Invitations/RSVP/Rsvp\";\r\nimport AddEventSucess from \"./Components/AddEvent/AddEventSucess\";\r\nimport Notification from \"./Components/Notifications/Notification\";\r\nimport EventDone from \"./Components/EventDone/EventDone\";\r\nimport AlertNotif from \"./Components/Settings/AlertNotif/AlertNotif\";\r\nimport EnterCode from \"./Components/Entercode/Entercode\";\r\nimport Chat from \"./Components/Chat/Chat\";\r\nimport Feed from \"./Components/Feed/Feed\";\r\nimport Comment from \"./Components/Comments/Coments\";\r\nimport Blankpages from \"./Components/BlankPages/404\";\r\nimport ShowSchedule from \"./Components/Invitations/ShowSchedule\";\r\nimport InvitaionviewToggler from \"./Components/Invitations/InvitaionviewToggler\";\r\nimport InvitaionMain from \"./Components/Invitations/InvitationMain/InvitaionMain\";\r\nimport Locationofline from \"./Components/Location Offline/LocationOffline\";\r\nimport Jitsi from \"./Components/jitsi/Jitsivc\";\r\nimport GuestList from \"./Components/Guest/Guest\";\r\nimport Hoxinvitation from \"./Components/Invitations/hoxinvitation\";\r\nimport SidebarMore from \"./Components/Sidebar/SidebarMore\";\r\nimport AdminSidebar from \"./Components/Sidebar/AdminSidebar\";\r\nimport EventAdmin from \"./Components/Admin/EventAdmin\";\r\nimport ManageGuest from \"./Components/Guest/ManageGuest\";\r\nimport EditEvent from \"./Components/EditEvent/EditEvent\";\r\nimport HomePage from \"./Components/HomePage/HomePage\";\r\nimport FD from \"./Components/FD/Fd\";\r\nimport ShowStory from './Components/Invitations/ShowStory';\r\nimport ShowAlbum from './Components/Invitations/ShowAlbum'\r\nfunction App() {\r\n  useEffect(() => {\r\n    ReactGa.initialize('UA-201872924-1')\r\n    ReactGa.pageview(window.location.pathname + window.location.search)\r\n  }, []\r\n  )\r\n  const Auth = useSelector((state) => state.Auth);\r\n  if (Auth.isLoggedIn === false) {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode/:Code\"\r\n              component={Hoxinvitation}\r\n            />\r\n\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/*\" component={Redirector} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  } else {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode/:Code\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route exact path=\"/MyEvents/eventpage/chat/:id\" component={Chat} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/GuestList/:id/:invno\"\r\n              component={GuestList}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Manage-GuestList/:id/:invno\"\r\n              component={ManageGuest}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Manage-Event/:id/:invno\"\r\n              component={EditEvent}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Admin/:id/:eid\"\r\n              component={EventAdmin}\r\n            />\r\n            <Route exact path=\"/MyEvents/Admin/:id\" component={AdminSidebar} />\r\n            <Route exact path=\"/MyEvents/More/:id\" component={SidebarMore} />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Location/:id/:event\"\r\n              component={Locationofline}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/schedule/:id/:event\"\r\n              component={ShowSchedule}\r\n            />\r\n            <Route exact path=\"/MyEvents/rsvp/:id\" component={Rsvp} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/eventpage/:id\"\r\n              component={InvitaionviewToggler}\r\n            />\r\n            <Route exact path=\"/MyEvents/eventpage/feed/:id\" component={Feed} />\r\n            <Route exact path=\"/MyEvents/comments/:id/:_id\" component={Comment} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/albums/:id\"\r\n              component={ShowAlbum}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/story/:id\"\r\n              component={ShowStory}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/albums/:id\"\r\n              component={ShowAlbum}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/story/:id\"\r\n              component={ShowStory}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Manage-Event/:id/:invno\"\r\n              component={EditEvent}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Admin/:id/:eid\"\r\n              component={EventAdmin}\r\n            />\r\n            {/* <Route\r\n              exact\r\n              path=\"/inv/Admin/:id/\"\r\n              component={AdminSidebar}\r\n            /> */}\r\n            <Route exact path=\"/inv/More/:id\" component={SidebarMore} />\r\n            <Route exact path=\"/inv/comments/:id/:_id\" component={Comment} />\r\n            <Route exact path=\"/inv/eventpage/feed/:id\" component={Feed} />\r\n            <Route exact path=\"/inv/videoconf/:id/\" component={Jitsi} />\r\n            <Route exact path=\"/inv/eventpage/chat/:id\" component={Chat} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Location/:id/:event\"\r\n              component={Locationofline}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/schedule/:id/:event\"\r\n              component={ShowSchedule}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/GuestList/:id/:invno\"\r\n              component={GuestList}\r\n            />\r\n\r\n            {/* <Route exact path=\"/inv/info/:id\" component={Invitationlist} /> */}\r\n            <Route exact path=\"/inv/rsvp/:id\" component={Rsvp} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/eventpage/:id\"\r\n              component={InvitaionviewToggler}\r\n            />\r\n            <Route exact path=\"/MyEvents\" component={Home} />\r\n            <Route exact path=\"/MyInvitations\" component={Home} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/event-create-success/:id\"\r\n              component={AddEventSucess}\r\n            />\r\n            <Route exact path=\"/MyEvents/add-event\" component={AddEvent} />\r\n            <Route exact path=\"/add-event\" component={AddEvent} />\r\n            <Route exact path=\"/user-profile\" component={AddEvent} />\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/*\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\reportWebVitals.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\store.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\History.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Routing.js",["625","626","627","628","629"],"import React, { useEffect } from \"react\";\r\nimport history from \"./History\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { loginuser } from \"../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getposts } from \"../Redux/DispatchFuncitons/postfunctions\";\r\nimport { getNotification } from \"../Redux/DispatchFuncitons/NotificationFunctions\";\r\nimport { getChats } from \"../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nexport default function Redirector() {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => {\r\n    debugger\r\n\r\n    let ischeck = await reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = await reactLocalStorage.get(\"Phone\");\r\n    let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === \"false\" || ischeck === undefined || ischeck === \"\") {\r\n      console.log(\"logout\");\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"loginuser\");\r\n      await dispatch(loginuser(Phone));\r\n    }\r\n  }, [])\r\n  useEffect(async () => {\r\n    if (Auth.isLoggedIn === true) {\r\n      debugger\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n      await dispatch(getNotification());\r\n      await dispatch(getposts());\r\n      await dispatch(getChats());\r\n      //  await history.goBack();\r\n    }\r\n  }, [Auth.isLoggedIn])\r\n  return <div><CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} /></div>;\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Auth\\MobileAuth.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Landingpage.js",["630","631"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"react-modal-video/css/modal-video.min.css\";\r\nimport \"./css/Landingpage.css\";\r\nimport \"./css/animate.min.css\";\r\nimport \"./css/apton-icons.css\";\r\nimport \"./css/style.css\";\r\nimport \"./css/responsive.css\";\r\nimport \"./css/fontawesome-all.min.css\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport Banner from \"./Banner\";\r\nimport Clients from \"./Clients\";\r\nimport Contact from \"./Contact\";\r\nimport CTAOne from \"./CTAOne\";\r\nimport CTATwo from \"./CTATwo\";\r\nimport FAQ from \"./FAQ\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport Layout from \"./Layout\";\r\nimport MobileMenu from \"./MobileMenu\";\r\nimport Pricing from \"./Pricing\";\r\nimport Services from \"./Services\";\r\nimport Testimonials from \"./Testimonials\";\r\nimport VideoOne from \"./VideoOne\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nexport default function Landingpage() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let ischeck = reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = reactLocalStorage.get(\"Phone\");\r\n    // let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === false || ischeck === undefined || ischeck === \"\") {\r\n      console.log(\"push\");\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"loginuser\");\r\n      dispatch(loginuser(Phone));\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <Layout pageTitle=\"Mobilly Invite\">\r\n        <Header\r\n          btnClass=\"main-nav__btn\"\r\n          extraClassName=\"site-header-one__fixed-top\"\r\n          toggleShowPopup={toggleShowPopup}\r\n        />\r\n        <MobileMenu />\r\n        <Banner toggleShowPopup={toggleShowPopup} />\r\n        <Services />\r\n        <CTAOne />\r\n        <CTATwo />\r\n        <Pricing />\r\n        <Testimonials />\r\n        <Clients />\r\n        <VideoOne />\r\n        <br />\r\n        <br />\r\n        <FAQ />\r\n        <Contact />\r\n        <Footer />\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Home\\Home.js",["632","633","634","635","636"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport FootMenu from \"../Helpers/FootMenu/FootMenu\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Invitation from \"../Invitations/Invitation\";\r\nimport EventList from \"../Events/Eventlist\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getposts } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { getNotification } from \"../../Redux/DispatchFuncitons/NotificationFunctions\";\r\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport { addme } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Home(props) {\r\n  const dispatch = useDispatch();\r\n  const [Menu, setMenu] = useState(0);\r\n  const CodeEvent = useSelector(state => state.CodeEvent)\r\n  const EventState = useSelector((state) => state.Eventdata);\r\n  useEffect(async () => {\r\n    if (CodeEvent.Name !== \"\") {\r\n      await dispatch(addme(CodeEvent.Code, CodeEvent.Name));\r\n    }\r\n\r\n    dispatch(GetEvents());\r\n    dispatch(GetInvitations());\r\n    dispatch(getNotification());\r\n    dispatch(getChats());\r\n\r\n    if (\r\n      props.location.pathname === \"/inv\" ||\r\n      props.location.pathname === \"/\" ||\r\n      props.location.pathname === \"/home\"\r\n    ) {\r\n      await setMenu(0);\r\n    } else {\r\n      setMenu(1);\r\n    }\r\n\r\n\r\n  }, []);\r\n  useEffect(async () => {\r\n    const interval = setInterval(() => {\r\n      dispatch(GetEvents());\r\n      dispatch(GetInvitations());\r\n      dispatch(getNotification());\r\n      dispatch(getChats());\r\n    }, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <><div className=\"w-100\" >\r\n      <Header url={props.location.pathname} />\r\n    </div>\r\n      {/* <MobileHeader /> */}\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} sm={12} md={12}>\r\n          {Menu === 0 ? (\r\n            <Invitation data={EventState.myInvitations} className=\"w-100\" />\r\n          ) : (\r\n            <EventList data={EventState.myEvents} className=\"w-100\" />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FootMenu menu={Menu} setMenu={setMenu} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddEventSucess.js",["637","638","639","640","641","642","643","644","645","646","647","648"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport check from \"../../Assets/check-circle.1.png\";\r\nimport Share from \"../../Assets/Shareon.svg\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useSelector } from \"react-redux\";\r\nimport { WhatsappShareButton } from 'react-share'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nexport default function AddEventSucess(props) {\r\n  const Auth = useSelector(state => state.Auth)\r\n  const [maincode, setmaincode] = useState(props.match.params.id);\r\n  const [allevents, setallevents] = useState([]);\r\n  const [mode, setmode] = useState();\r\n  const [sharelink, setcodesharelink] = useState(\"\");\r\n  const [Watsapp, setWatsapp] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    debugger\r\n    axios\r\n      .post(url + \"event/viewinvitation\", {\r\n        MainCode: props.match.params.id,\r\n      })\r\n      .then(async (res) => {\r\n\r\n        await setallevents(res.data.Events)\r\n        if (res.data.Events[0].EntryWay === 'Code') {\r\n\r\n\r\n          setcodesharelink(\" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\r\n          await setWatsapp(\r\n            \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + res.data.Events[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n            \" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\r\n        } else {\r\n          setcodesharelink(\" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\r\n          await setWatsapp(\r\n            \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + res.data.Events[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n            \" https://mobillyinvite.com/MyInvitations/\" +\r\n            maincode)\r\n        }\r\n\r\n        await setmode(res.data.Events[0].EntryWay)\r\n      });\r\n  }, [])\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = async (data) => {\r\n    await setcodesharelink(\" https://mobily-invited-server.herokuapp.com/MyInvitations/\" + maincode + \"/\" + data)\r\n    await setWatsapp(\r\n      \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + allevents[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n      \" https://mobily-invited-server.herokuapp.com/MyInvitations/\" + maincode + \"/\" + allevents[0].Name + \"/\" + allevents[0].code)\r\n    setAnchorEl(null);\r\n\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <Header />\r\n      </Grid>\r\n      <Grid item xs={false} sm={3} md={3} />\r\n      <Grid item xs={12} sm={6} md={6}>\r\n        <Grid container spacing={0} className=\"p-10px\">\r\n          <Grid item xs={12}>\r\n            <center>\r\n              <img src={check} className=\"p-10px \" />\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h2 className=\"tac theme-font\">\r\n              Your Invitation has been sucessfully created.\r\n            </h2>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <p className=\"w-100 tac\"> Click on the Link to copy</p>\r\n          </Grid>\r\n\r\n          {allevents && allevents.length > 0 && allevents[0].EntryWay === \"Code\" ? <>\r\n\r\n\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              className=\"tac m-b-25px clipboard\"\r\n\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={10} md={11} className=\"link\" onClick={(e) => { handleClick(e) }}>\r\n                  {sharelink.substr(0, 40)}\r\n\r\n                </Grid>\r\n                <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                  <FileCopyIcon className=\"v-t\" onClick={() => {\r\n                    navigator.clipboard.writeText(sharelink);\r\n                  }} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </> : <> <Grid\r\n            item\r\n            xs={12}\r\n            className=\"tac m-b-25px clipboard\"\r\n            onClick={() => {\r\n              navigator.clipboard.writeText(\r\n                \"https://mobily-invited-server.herokuapp.com/MyInvitations/\" +\r\n                maincode\r\n              );\r\n            }}\r\n          >\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={10} md={11} className=\"link\">\r\n                {\"https://mobily-invited-server.herokuapp.com/xxxxx\"}\r\n              </Grid>\r\n              <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                <FileCopyIcon className=\"v-t\" />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid></>}\r\n          <Grid item xs={12} className=\"w-100 tac\">\r\n            Share on\r\n          </Grid>\r\n          <Grid item xs={12} className=\"tac m-b-25px\">\r\n            <center>\r\n\r\n              <WhatsappShareButton\r\n                url={\" \"}\r\n                title={Watsapp}\r\n\r\n                separator=\" \"\r\n                className=\"Demo__some-network__share-button\"\r\n              >\r\n                <img src={Share} className=\"\" />\r\n              </WhatsappShareButton>\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"tac\">\r\n            Note: Only those who have invite can access.\r\n          </Grid>\r\n          <Grid item xs={12} className=\"down-float\">\r\n            <button\r\n              className=\"btn save-event mt-10px\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Done\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n\r\n      >\r\n        {allevents && allevents.map(eve => (\r\n          <MenuItem onClick={() => handleClose(eve.Name + \"/\" + eve.code)}>{\"Event Name: \" + eve.Name + \", EventCode :\" + eve.code}</MenuItem>\r\n        ))}\r\n\r\n      </Menu>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\EventDone\\EventDone.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddEvent.js",["649","650","651","652","653","654","655","656"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport HorizontalLinearStepper from \"./Stepper/Stepper\";\r\nimport CreateEvent from \"./CreateEvent/CreateEvent\";\r\nimport AddParticipants from \"../AddEvent/AddParticipants/NewAddParticipants\";\r\nimport Toggler from \"../Helpers/EventInvitoggler/Toggler\";\r\nimport BackNavBar from \"../Helpers/BackNavbar/BackNavBar\";\r\nimport Back from \"../../Assets/Back.svg\";\r\nimport history from \"../../Utils/History\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Plan from \"../Plan/Plan\";\r\nexport default function AddEvent(props) {\r\n  const [Type, setType] = useState(\"Wedding\");\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const CreateEventForm = useSelector((state) => state.CreateEventForm);\r\n  const [Events, setEvents] = useState([]);\r\n\r\n  let events = {\r\n    Name: \"\",\r\n    Participants: [],\r\n    file: \"\",\r\n    filetype: \"\",\r\n    Date: \"\",\r\n    Time: \"\",\r\n    VenueType: \"Online\",\r\n    Location: \"\",\r\n    Link: \"\",\r\n    Description: \"\",\r\n    GuestInvite: false,\r\n    Host: \"\",\r\n    Co_Host: [],\r\n    Schedule: [],\r\n  };\r\n  const [SelectedEvent, SelectEvent] = useState(0);\r\n  const [Story, setStory] = useState([]);\r\n  const [albumdata, setalbumdata] = useState([]);\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const addAnEvent = async () => {\r\n    if (Events.length < 4) {\r\n      setEvents([...Events, events]);\r\n    }\r\n  };\r\n  const removeAnEvent = async () => {\r\n    let events = [...Events];\r\n    if (events.length > 1) {\r\n      events = events.slice(0, -1);\r\n      await setEvents(events);\r\n    }\r\n\r\n    if (SelectedEvent > events.length - 1) {\r\n      console.log(SelectedEvent - 1);\r\n      SelectEvent(SelectedEvent - 1);\r\n      console.log(SelectedEvent, events.length - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const checkIfEventEmpty = async (eventscpy, Type, seterroring, index) => {\r\n    if (Type === \"\") {\r\n      seterroring(true);\r\n      return { status: false, index: 0, component: \"Type\" };\r\n    }\r\n    console.log(Events);\r\n    let Eventcpy = [...Events];\r\n    let result = true;\r\n    let incompleteeventnumber = null;\r\n    //check for event first\r\n    Eventcpy = { ...Events[index] };\r\n    if (Eventcpy.Name === \"\") {\r\n      console.log({ status: false, index: index, component: \"Name\" });\r\n      return { status: false, index: index, component: \"Name\" };\r\n    } else if (Eventcpy.Date === \"\") {\r\n      console.log({ status: false, index: index, component: \"Date\" });\r\n      return { status: false, index: index, component: \"Date\" };\r\n    } else if (Eventcpy.Time === \"\") {\r\n      console.log({ status: false, index: index, component: \"Time\" });\r\n      return { status: false, index: index, component: \"Time\" };\r\n    } else if (Eventcpy.Description === \"\") {\r\n      console.log({ status: false, index: index, component: \"Description\" });\r\n      return { status: false, index: index, component: \"Description\" };\r\n    } else if (Eventcpy.VenueType === \"\") {\r\n      console.log({ status: false, index: index, component: \"VenueType\" });\r\n      return { status: false, index: index, component: \"VenueType\" };\r\n    } else if (\r\n      Eventcpy.VenueType === \"Both\" &&\r\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n    ) {\r\n      console.log({\r\n        status: false,\r\n        index: index,\r\n        component: \"Both Location Link\",\r\n      });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n      console.log({ status: false, index: index, component: \"Link\" });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n      console.log({ status: false, index: index, component: \"Link\" });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.file === \"\") {\r\n      console.log({ status: false, index: index, component: \"file\" });\r\n      return { status: false, index: index, component: \"file\" };\r\n    } else if (Eventcpy.filetype === \"\") {\r\n      console.log({ status: false, index: index, component: \"filetype\" });\r\n      return { status: false, index: index, component: \"filetype\" };\r\n    }\r\n\r\n    for (let i = 0; i < Events.length; i++) {\r\n      incompleteeventnumber = i;\r\n      Eventcpy = { ...Events[i] };\r\n      if (Eventcpy.Name === \"\") {\r\n        console.log({ status: false, index: i, component: \"Name\" });\r\n        return { status: false, index: i, component: \"Name\" };\r\n      } else if (Eventcpy.Date === \"\") {\r\n        console.log({ status: false, index: i, component: \"Date\" });\r\n        return { status: false, index: i, component: \"Date\" };\r\n      } else if (Eventcpy.Time === \"\") {\r\n        console.log({ status: false, index: i, component: \"Time\" });\r\n        return { status: false, index: i, component: \"Time\" };\r\n      } else if (Eventcpy.Description === \"\") {\r\n        console.log({ status: false, index: i, component: \"Description\" });\r\n        return { status: false, index: i, component: \"Description\" };\r\n      } else if (Eventcpy.VenueType === \"\") {\r\n        console.log({ status: false, index: i, component: \"VenueType\" });\r\n        return { status: false, index: i, component: \"VenueType\" };\r\n      } else if (\r\n        Eventcpy.VenueType === \"Both\" &&\r\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n      ) {\r\n        console.log({\r\n          status: false,\r\n          index: i,\r\n          component: \"Both Location Link\",\r\n        });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n        console.log({ status: false, index: i, component: \"Link\" });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n        console.log({ status: false, index: i, component: \"Link\" });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.file === \"\") {\r\n        console.log({ status: false, index: i, component: \"file\" });\r\n        return { status: false, index: i, component: \"file\" };\r\n      } else if (Eventcpy.filetype === \"\") {\r\n        console.log({ status: false, index: i, component: \"filetype\" });\r\n        return { status: false, index: i, component: \"filetype\" };\r\n      }\r\n    }\r\n\r\n    console.log({ status: true, index: null, component: \"\" });\r\n    return { status: true, index: null, component: \"\" };\r\n  };\r\n\r\n  const addfinalDetails = () => {\r\n    let EventsCopy = [...Events];\r\n    EventsCopy.map((eve, index) => {\r\n      if (index === 0) {\r\n        eve.MainCode = \"ME\" + 313213132313;\r\n        eve.eventCode = \"ME\" + 313213132313;\r\n        eve.Link = \"dsd/as3213\";\r\n        //mainevent will give acces to all\r\n      } else {\r\n        eve.MainCode = \"ME\" + 313213132313;\r\n        eve.eventCode = \"E\" + \"randomcode\";\r\n        eve.Link = \"dsd/as3213/sdse\";\r\n        //single event access link\r\n      }\r\n    });\r\n    setEvents(EventsCopy);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    addAnEvent();\r\n  }, []);\r\n\r\n  function StepRender(step) {\r\n    switch (step.activeStep) {\r\n      case 0:\r\n        return (\r\n          <CreateEvent\r\n            setType={setType}\r\n            Type={Type}\r\n            Events={Events}\r\n            setEvents={setEvents}\r\n            addAnEvent={addAnEvent}\r\n            checkIfEventEmpty={checkIfEventEmpty}\r\n            handleChange={handleChange}\r\n            removeAnEvent={removeAnEvent}\r\n            SelectEvent={SelectEvent}\r\n            SelectedEvent={SelectedEvent}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            addfinalDetails={addfinalDetails}\r\n            albumdata={albumdata}\r\n            setalbumdata={setalbumdata}\r\n            Story={Story}\r\n            setStory={setStory}\r\n            template={events}\r\n            className=\"p-15px\"\r\n          />\r\n        );\r\n      case 1000:\r\n        return <Plan handleNext={handleNext} handleBack={handleBack} />;\r\n      case 1:\r\n        return (\r\n          <AddParticipants\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            Events={Events}\r\n            setEvents={setEvents}\r\n            SelectEvent={SelectEvent}\r\n            SelectedEvent={SelectedEvent}\r\n            addAnEvent={addAnEvent}\r\n            removeAnEvent={removeAnEvent}\r\n            addfinalDetails={addfinalDetails}\r\n            Type={Type}\r\n            Story={Story}\r\n          />\r\n        );\r\n      case 3:\r\n        return <div></div>;\r\n      default:\r\n        return <div></div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header url={props.location.pathname} ismobile=\"desktop-only\" />\r\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\r\n      <BackNavBar\r\n        logo={<img src={Back} />}\r\n        Name={\"Create Event\"}\r\n        functionality={() => {\r\n          history.push(\"/MyEvents\");\r\n        }}\r\n      />\r\n      <Grid container spacing={0} className=\" pt-0\">\r\n        <Grid item xs={false} sm={2} md={2} />\r\n\r\n        <Grid item xs={12} sm={8} md={8} className=\" pt-0\">\r\n          <HorizontalLinearStepper\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n          />\r\n          <StepRender activeStep={activeStep} />\r\n        </Grid>\r\n\r\n        <Grid item xs={false} sm={2} md={2} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Feed.js",["657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zoomicon from \"../../Assets/zoomicon.png\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { IoCameraOutline } from \"react-icons/io5\";\r\nimport { FaTag } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { InputTags } from \"react-bootstrap-tagsinput\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport history from \"../../Utils/History\";\r\nimport FeedComments from \"./FeedComments\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Media from \"./Media\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport AddTags from \"./AddTags\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Postrender from './Posts'\r\nimport AddPost from \"./AddPost\";\r\nexport default function Feed(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let Posts = useSelector((state) => state.Posts[props.match.params.id]);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const dispatch = useDispatch();\r\n  const [isSubmit, setisSubmit] = useState(false);\r\n  const [isloaded, toggleisloaded] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [ShowTagQuery, setShowTagQuery] = useState(false);\r\n  const [showcommment, setshowcommment] = useState(false);\r\n  const [currentPosts, setcurrentPosts] = useState([]);\r\n  const [currentfilteredPosts, setcurrentfilteredPosts] = useState([]);\r\n  const [participant, setparticipant] = useState([]);\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [admins, setadmins] = useState([]);\r\n  const [Tags, setTags] = useState([]);\r\n\r\n  const [base, setbase] = useState(\"\");\r\n  const [filter, setfilter] = useState(\"All\");\r\n  const [caption, setcaption] = useState(\"\");\r\n  const [imageurl, setimageurl] = useState(\"\");\r\n  const [type, settype] = useState(\"\");\r\n  const [popuptype, setpopuptype] = useState(\"\");\r\n  const [showcommmentforpost, setshowcommmentforpost] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    debugger\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      await setfilter('All')\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/feed/\" + props.match.params.id &&\r\n        MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n        await setbase(\"MyEvents\");\r\n        await setadmins(MyEvents[props.match.params.id][0].Host);\r\n        await guestlist([...MyEvents[props.match.params.id][0].Participants, ...MyEvents[props.match.params.id][0].Host]);\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/feed/\" + props.match.params.id &&\r\n        myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n        await setbase(\"inv\");\r\n        await setadmins(myInvitations[props.match.params.id][0].Host);\r\n        await guestlist([...myInvitations[props.match.params.id][0].Participants, ...myInvitations[props.match.params.id][0].Host]);\r\n      }\r\n      await getposts()\r\n    }\r\n  }, [MyEvents, myInvitations]);\r\n\r\n  const submit = async () => {\r\n    await setisSubmit(true);\r\n    var d = new Date();\r\n    let unique = d.getTime();\r\n    let url = Eventdata[0].MainCode + unique + \".\" + type;\r\n    console.log(url);\r\n    let newurl = \"\";\r\n    if (imageurl !== \"\") {\r\n      newurl = await uploadString(imageurl, url);\r\n    }\r\n    await dispatch(\r\n      addpost(Eventdata[0].MainCode, Auth.Phone, newurl, type, Tags, caption)\r\n    );\r\n    await setcaption(\"\");\r\n    await setimageurl(\"\");\r\n    await settype(\"\");\r\n    await setTags([]);\r\n    await setisSubmit(false);\r\n    await getposts();\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n    let url = \"\";\r\n    let ftype = acceptedFiles[0].type.split(\"/\");\r\n    settype(ftype[0]);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      url = reader.result;\r\n      setimageurl(url);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n\r\n  const getposts = async () => {\r\n    if (Eventdata !== undefined && Eventdata.length > 0 && Eventdata[0].MainCode !== \"\") {\r\n      axios\r\n        .post(url + \"post/getposts\", { maincode: Eventdata[0].MainCode })\r\n        .then(async function (response) {\r\n          toggleisloaded(true);\r\n          if (response.data.Posts.length !== 0) {\r\n            await setcurrentPosts(response.data.Posts);\r\n            await filterposts(response.data.Posts, Eventdata[0].Host)\r\n          }\r\n\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n          // always executed\r\n        });\r\n    }\r\n  };\r\n  const filterposts = async (Posts, admins) => {\r\n    let Postscpy = [];\r\n    for (let i = 0; i < Posts.length; i++) {\r\n      if (admins.includes(Posts[i].by) === true) {\r\n        Postscpy.push(Posts[i]);\r\n      }\r\n    }\r\n    await setcurrentfilteredPosts(Postscpy)\r\n  };\r\n\r\n\r\n\r\n  const guestlist = async (Participants) => {\r\n    debugger\r\n    var ParticipantsCPY = [];\r\n\r\n    for (let i = 0; i < Participants.length; i++) {\r\n      var Phone = \"\";\r\n      if (Participants[i] !== Auth.Phone) {\r\n        if (typeof Participants[i] === \"string\") {\r\n          Phone = Participants[i].includes(\"+\")\r\n            ? Participants[i]\r\n            : \"+91\" + Participants[i];\r\n        } else {\r\n          Phone = Participants[i].toString().includes(\"+\")\r\n            ? Participants[i]\r\n            : \"+91\" + Participants[i];\r\n        }\r\n\r\n        // await axios\r\n        //   .post(url + \"auth/getuserdetails\", {\r\n        //     Phone: Phone,\r\n        //   })\r\n        //   .then(async (res) => {\r\n        //     if (res.data.user) {\r\n        //       await ParticipantsCPY.push({\r\n        //         name: res.data.user.Name,\r\n        //         id: Participants[i],\r\n        //       });\r\n        //     } else {\r\n        //       await ParticipantsCPY.push({\r\n        //         name: Participants[i],\r\n        //         id: Participants[i],\r\n        //       });\r\n        //     }\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //     return { err: \"error 404\" };\r\n        //   });\r\n      }\r\n    }\r\n    console.log(Participants);\r\n    await setparticipant(Participants);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getposts();\r\n    }, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [Eventdata]);\r\n\r\n  useEffect(() => {\r\n    console.log(admins)\r\n    console.log(admins.includes('+917447525123'))\r\n  }, [filter])\r\n\r\n  return (\r\n    <>\r\n      <NavMobile base={base} id={props.match.params.id} />\r\n      <Popup\r\n        component={AddTags}\r\n        toggleShowPopup={setShowTagQuery}\r\n        showPopup={ShowTagQuery}\r\n        MainCode={[...participant]}\r\n        showall={setTags}\r\n        url={Tags}\r\n      />\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"f-s-modal\"\r\n        open={showPopup}\r\n        onClose={() => {\r\n          toggleShowPopup(false);\r\n        }}\r\n      >\r\n        <Container fluid className=\"p-0 m-0\">\r\n          <div className=\"f-s-modal-card \">\r\n            <Media\r\n              toggleShowPopup={toggleShowPopup}\r\n              currentPosts={currentPosts}\r\n              popuptype={popuptype}\r\n            />\r\n          </div>\r\n        </Container>\r\n      </Modal>\r\n      <Container className=\"guestlist-box\" fluid>\r\n        <div className=\"back-navigation desktop-only\">\r\n          <Row style={{ marginTop: 5, marginRight: 3, marginLeft: 3 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              style={{ color: \"black\" }}\r\n              onClick={() => history.goBack()}\r\n            />\r\n            <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n              Feed\r\n            </h3>\r\n          </Row>\r\n        </div>\r\n        {Eventdata && Eventdata.length > 0 ? (\r\n          <>\r\n            {Eventdata[0].filetype === \"png\" ||\r\n              Eventdata[0].filetype === \"jpg\" ||\r\n              Eventdata[0].filetype === \"jpeg\" ? (\r\n              <Image src={Eventdata[0].file} fluid style={{ height: \"30vh\" }} />\r\n            ) : (\r\n              <video\r\n                muted\r\n                type=\"video/mp4\"\r\n                autoPlay={true}\r\n                src={Eventdata[0].file}\r\n                preload=\"none\"\r\n                className=\"w-100\"\r\n                style={{ height: \"30vh\" }}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Image src={zoomicon} className=\"profile-avatar\" />\r\n        <h3 className=\"event-headings\">\r\n          {Eventdata[0] ? Eventdata[0].Name : \"\"}\r\n        </h3>\r\n\r\n        <div className=\"select-list\">\r\n          <Row className=\"p-0 m-0\">\r\n            <Col>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                style={{ width: \"30vw\", borderRadius: 20 }}\r\n                onClick={async () => {\r\n                  await setpopuptype(\"Photo\");\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Photos\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                onClick={async () => {\r\n                  await setpopuptype(\"Videos\");\r\n                  toggleShowPopup(true);\r\n                }}\r\n                style={{ width: \"30vw\", borderRadius: 20, marginLeft: 20 }}\r\n              >\r\n                Videos\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"select-list mt-10px\">\r\n          <Row className=\"filterbox\">\r\n            <Col\r\n              onClick={async () => {\r\n                await setfilter(\"All\");\r\n                // await filterposts(currentPosts);\r\n              }}\r\n              className={filter === \"All\" ? \"filter-type\" : \"\"}\r\n            >\r\n              <span style={{ width: \"30vw\", borderRadius: 20 }}>All</span>\r\n            </Col>\r\n            <Col\r\n              onClick={async () => {\r\n                await setfilter(\"Update\");\r\n\r\n                // await filterposts(currentPosts);\r\n              }}\r\n              className={filter === \"Update\" ? \"filter-type\" : \"\"}\r\n            >\r\n              <span style={{ width: \"30vw\", borderRadius: 20 }}> Update</span>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n      <AddPost settype={settype} setimageurl={setimageurl} setcaption={setcaption}\r\n        caption={caption} submit={submit} setShowTagQuery={setShowTagQuery} imageurl={imageurl} isSubmit={isSubmit} />\r\n\r\n      {isloaded === false ? (\r\n        <center>\r\n          <CircularProgress style={{ color: \"black\" }} />\r\n        </center>\r\n      ) : (\r\n        <Postrender data={currentPosts} filter={filter} filterdata={currentfilteredPosts} getposts={getposts}\r\n          Eventdata={Eventdata} showcommmentforpost={showcommmentforpost} showcommment={showcommment}\r\n          setshowcommmentforpost={setshowcommmentforpost}\r\n          setshowcommment={setshowcommment} />\r\n      )}\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Comments\\Coments.js",["684","685","686","687","688","689","690","691","692","693"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"../Comments/Comments.css\";\r\nimport CommentAvt from \"../../Assets/CommentAvt.png\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport history from \"../../Utils/History\";\r\nimport { likecomment } from '../../Redux/DispatchFuncitons/postfunctions'\r\nimport { comment_event } from '../../Redux/DispatchFuncitons/Eventfunctions'\r\nimport {\r\n  GetEvents,\r\n  GetInvitations\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Coments(props) {\r\n  const dispatch = useDispatch()\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let Events = useSelector((state) => state.Eventdata);\r\n  const [MainCode, setMainCode] = useState(\"\");\r\n  const [eveid, seteveid] = useState(\"\");\r\n  const [comments, setcomments] = useState([]);\r\n  const [comment, setcomment] = useState(\"\");\r\n  let base = \"\";\r\n  let Eventdata = [];\r\n  const getcomments = () => {\r\n    axios\r\n      .post(url + \"post/getEventcomments\", {\r\n        id: props.match.params._id,\r\n        Phone: Auth.Phone,\r\n      })\r\n      .then(async (res) => {\r\n        if (res.data.data) {\r\n          console.log(res.data.data);\r\n          await setcomments(res.data.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return { err: \"error 404\" };\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getcomments();\r\n    }, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [])\r\n\r\n  const submit = async () => {\r\n    if (comment !== \"\") {\r\n      var saved = await dispatch(comment_event(props.match.params._id, comment))\r\n      if (saved === 1) {\r\n        await setcomment(\"\");\r\n        await getcomments();\r\n      }\r\n\r\n    }\r\n  };\r\n  useEffect(async () => {\r\n\r\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\r\n    if (Events.myEvents.length > 0 && Events.myInvitations > 0) {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/comments/\" + props.match.params.id\r\n      ) {\r\n        Eventdata = Events.myEvents[props.match.params.id];\r\n        base = \"MyEvents\";\r\n        await seteveid(Eventdata[0]._id)\r\n        await setMainCode(Eventdata[0].MainCode)\r\n      } else {\r\n        Eventdata = Events.myInvitations[props.match.params.id];\r\n        base = \"inv\";\r\n        await seteveid(Eventdata[0]._id)\r\n        await setMainCode(Eventdata[0].MainCode)\r\n      }\r\n    } else {\r\n      await dispatch(GetEvents())\r\n      await dispatch(GetInvitations())\r\n    }\r\n\r\n\r\n    // Eventdata.map((singleevent) => {\r\n    //   setcomments(singleevent.CommentList);\r\n    // });\r\n  }, [Eventdata]);\r\n\r\n  useEffect(() => {\r\n    if (props.showcommment === true) {\r\n      console.log(props.id);\r\n      axios\r\n        .post(url + \"post/getpostcomments\", {\r\n          id: props.id,\r\n          Phone: Auth.Phone,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.data) {\r\n            console.log(res.data.data);\r\n            setcomments(res.data.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, [props.showcommment]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"p-0 ofh h80\" fluid>\r\n        <Container>\r\n          <Row\r\n            style={{\r\n              marginTop: 20,\r\n              marginRight: 3,\r\n              marginLeft: 3,\r\n              marginBottom: 5,\r\n            }}\r\n          >\r\n            <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Event\r\n            </p>\r\n            <Col></Col>\r\n          </Row>\r\n        </Container>\r\n        {comments.map((comment) => (\r\n          <Row\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              paddingLeft: 5,\r\n              marginRight: 5,\r\n            }}\r\n            md={2}\r\n          >\r\n            <Col xs={2} md={1}>\r\n              <UserDataUrl showIcon={true} Phone={comment.CommentBy} />\r\n            </Col>\r\n            <Col xs={8} md={9}>\r\n              <h5 className=\"m-0 p-0\">\r\n                <UserDataUrl showName={true} Phone={comment.CommentBy} />\r\n              </h5>\r\n              <p className=\" m-5px fs-14\">{comment.Comment}</p>\r\n            </Col>\r\n            <Col xs={2} md={1}>\r\n              <Like likeby={comment.likeby} MainCode={MainCode} _id={comment._id} />\r\n              {comment.likeby ? comment.likeby.Length : 0}\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </Container>\r\n      <Container fluid className=\"p-0\">\r\n        <Row\r\n          style={{\r\n            marginTop: 25,\r\n\r\n            marginLeft: \"auto\",\r\n            boxShadow: \"4px 7px 7px -7px rgba(0,0,0,0.54)\",\r\n          }}\r\n        >\r\n          <Col xs={10}>\r\n            <Form.Control\r\n              placeholder=\"Write a Comment\"\r\n              style={{\r\n                width: \"100%\",\r\n                margin: 0,\r\n                marginTop: \"5px\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n              value={comment}\r\n              onChange={(e) => {\r\n                setcomment(e.target.value);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col\r\n            xs={2}\r\n            onClick={() => {\r\n              submit();\r\n            }}\r\n          >\r\n            <IoMdSend\r\n              size={20}\r\n              style={{ float: \"right\", margin: \"auto\", marginTop: \"5px\" }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport function Like(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [isliked, setisliked] = useState(false);\r\n  useEffect(() => {\r\n    setisliked(props.likeby ? props.likeby.includes(Auth.Phone) : false);\r\n  }, []);\r\n  async function Dislike() {\r\n    let likelistcpy = [...props.likeby];\r\n    likelistcpy[props.index] = false;\r\n    await setisliked(false)\r\n  }\r\n  async function Like() {\r\n    let likelistcpy = [...props.likeby];\r\n    likelistcpy[props.index] = true;\r\n    // props.setLikeList(likelistcpy);\r\n    await setisliked(true)\r\n  }\r\n  const likethecomment = () => { };\r\n  return (\r\n    <>\r\n      {isliked === false ? (\r\n        <FcLikePlaceholder\r\n          size={30}\r\n          onClick={() => {\r\n            dispatch(likecomment(props._id, Auth.Phone, props.MainCode));\r\n            Like();\r\n            likethecomment();\r\n          }}\r\n        />\r\n      ) : (\r\n        <FcLike\r\n          size={30}\r\n          onClick={() => {\r\n            dispatch(likecomment(props._id, Auth.Phone, props.MainCode));\r\n            Dislike();\r\n            likethecomment();\r\n          }}\r\n        />\r\n      )}\r\n      Like {props.likeby.Length}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\Chat.js",["694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport CList from \"./List\";\r\nimport Chatbox from \"./Chatbox\";\r\nimport \"./Chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updatechat } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport NavMobile from '../Helpers/NavMobile/NavMobile'\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Chat(props) {\r\n  const dispatch = useDispatch();\r\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\r\n  let socketurl = url.split(\"api/\");\r\n  // console.log(socketurl);\r\n  let socket = io(socketurl[0], { transports: [\"websocket\"] });\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [show, setshow] = useState(0);\r\n  const [windowwidth, setwindowwidth] = useState(1280);\r\n  const [fullscreen, setfullscreen] = useState(true);\r\n  const [SelectedGroup, setSelectedGroup] = useState(\"\");\r\n  const [inroom, setinroom] = useState(false);\r\n  let Eventdata = [];\r\n  const [base, setbase] = useState(\"\")\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const [MainCode, setMainCode] = useState(\"\");\r\n  const [allparticipants, setallparticipants] = useState([]);\r\n  const [chats, setchat] = useState([]);\r\n  const [text, settext] = useState(\"\");\r\n  const [IndvName, setIndvName] = useState(\"\");\r\n  // console.log(MyEvents);\r\n  const [IsSubmit, setIsSubmit] = useState(false);\r\n  function handleResize() {\r\n    setwindowwidth(window.innerWidth);\r\n    // console.log(window.innerWidth);\r\n    if (window.innerWidth > 959) {\r\n      setfullscreen(true);\r\n      // console.log(true);\r\n    } else {\r\n      setfullscreen(false);\r\n      // console.log(false);\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/chat/\" + props.match.params.id && MyEvents.length > 0\r\n      ) {\r\n        Eventdata = MyEvents[props.match.params.id];\r\n        await setbase(\"MyEvents\");\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/chat/\" + props.match.params.id && myInvitations.length > 0\r\n      ) {\r\n        Eventdata = myInvitations[props.match.params.id];\r\n        await setbase(\"inv\");\r\n      }\r\n      let participants = [];\r\n      Eventdata.map((singleevent) => {\r\n        singleevent.Participants.map((participant) => {\r\n          participants.push(participant);\r\n          setMainCode(singleevent.MainCode);\r\n        });\r\n      });\r\n      // console.log(participants);\r\n      participants = [...new Set(participants)];\r\n      setallparticipants(participants);\r\n    }\r\n  }, [myInvitations, MyEvents]);\r\n  useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let selectedgrpcpr = SelectedGroup;\r\n    let chat = [...chats];\r\n    socket.on(\r\n      \"init\",\r\n      () => {\r\n        socket.emit(\"connectit\", { Phone: Auth.Phone });\r\n        if (inroom === false) {\r\n          // console.log(\"join rooms\");\r\n          socket.emit(\"rooms\", { Phone: Auth.Phone });\r\n          setinroom(true);\r\n        }\r\n      },\r\n      [\"abc\"]\r\n    );\r\n\r\n    socket.on(\"joined\", (rooms) => { });\r\n    socket.once(\"msg_saved\", (data) => {\r\n      dispatch(updatechat(data, data.room));\r\n    });\r\n  });\r\n\r\n  function submit() {\r\n    socket.emit(\"message\", {\r\n      sender: Auth.Phone,\r\n      content: text,\r\n      type: \"text\",\r\n      room: SelectedGroup.room,\r\n      _id: SelectedGroup._id,\r\n    });\r\n    setIsSubmit(true);\r\n  }\r\n  function sendImage(data) {\r\n    socket.emit(\"message\", data);\r\n    setIsSubmit(true);\r\n  }\r\n  const updateName = () => {\r\n    if (SelectedGroup.Name && SelectedGroup.Type === \"INDV\") {\r\n      if (\r\n        SelectedGroup.Admin === Auth.Phone ||\r\n        \"+91\" + SelectedGroup.Admin === Auth.Phone\r\n      ) {\r\n        if (typeof SelectedGroup.Name === \"string\") {\r\n          if (SelectedGroup.Name.startsWith(\"+\")) {\r\n            setIndvName(SelectedGroup.Name);\r\n          } else {\r\n            setIndvName(\"+91\" + SelectedGroup.Name);\r\n          }\r\n        } else {\r\n          setIndvName(\"+91\" + SelectedGroup.Name);\r\n        }\r\n      } else {\r\n        if (typeof SelectedGroup.Admin === \"string\") {\r\n          if (SelectedGroup.Admin.startsWith(\"+\")) {\r\n            setIndvName(SelectedGroup.Admin);\r\n          } else {\r\n            setIndvName(\"+91\" + SelectedGroup.Admin);\r\n          }\r\n        } else {\r\n          setIndvName(\"+91\" + SelectedGroup.Admin);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={3}\r\n        className={\r\n          fullscreen === true ? \"show h93\" : show === 1 ? \"hide\" : \"show h100\"\r\n        }\r\n      >\r\n        <CList\r\n          MyEvents={MyEvents}\r\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\r\n          fullscreen={fullscreen}\r\n          allparticipants={allparticipants}\r\n          MainCode={MainCode}\r\n          setSelectedGroup={setSelectedGroup}\r\n          setshow={setshow}\r\n          chats={chats}\r\n          setchat={setchat}\r\n          updateName={updateName}\r\n          setIsSubmit={setIsSubmit}\r\n          IsSubmit={IsSubmit}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={9}\r\n        className={\r\n          fullscreen === true ? \"show h93\" : show === 0 ? \"hide\" : \"show h100\"\r\n        }\r\n      >\r\n        <Chatbox\r\n          MyEvents={MyEvents}\r\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\r\n          fullscreen={fullscreen}\r\n          allparticipants={allparticipants}\r\n          MainCode={MainCode}\r\n          setSelectedGroup={setSelectedGroup}\r\n          setshow={setshow}\r\n          chats={chats}\r\n          setchat={setchat}\r\n          updateName={updateName}\r\n          submit={submit}\r\n          text={text}\r\n          settext={settext}\r\n          SelectedGroup={SelectedGroup}\r\n          sendImage={sendImage}\r\n          setIsSubmit={setIsSubmit}\r\n          IsSubmit={IsSubmit}\r\n        />\r\n      </Grid>\r\n      <NavMobile base={base} id={props.match.params.id} />\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Entercode\\Entercode.js",["714","715","716","717","718","719","720","721"],"import React, { useState } from \"react\";\r\nimport check from \"../../Assets/check-circle.1.png\";\r\nimport history from \"../../Utils/History\";\r\nimport eventimage from \"../../Assets/eventimage.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addme } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Entercode(props) {\r\n  const [code, setcode] = useState(\"\");\r\n  const [iserror, setiserror] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <img\r\n        src={eventimage}\r\n        className=\"rounded mx-auto d-block\"\r\n        style={{ height: 100, width: 100 }}\r\n      />\r\n      {/* <h4\r\n        style={{\r\n          float: \"left\",\r\n          marginTop: 60,\r\n          fontWeight: \"bold\",\r\n          fontStretch: \"normal\",\r\n          fontStyle: \"normal\",\r\n          fontSize: 16,\r\n          marginLeft: 5,\r\n        }}\r\n      >\r\n        Enter Code\r\n      </h4>\r\n      <input\r\n        className=\"form-control form-control-sm\"\r\n        type=\"text\"\r\n        placeholder=\"Code\"\r\n        style={{\r\n          borderRadius: 30,\r\n          margin: \"10px 0.2px 4.8px 0\",\r\n          height: \"40px\",\r\n        }}\r\n        value={code}\r\n        onChange={(e) => {\r\n          setcode(e.target.value);\r\n        }}\r\n      />\r\n      {iserror === true ? (\r\n        <span className=\"error\">please enter valid code</span>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mt-3 p-2\"\r\n        style={{ width: \"100%\", borderRadius: 50, fontWeight: \"bold\" }}\r\n        onClick={async () => {\r\n          if (code !== \"\") {\r\n            setiserror(false);\r\n            await dispatch(addme(code));\r\n\r\n            props.hide(false);\r\n          } else {\r\n            setiserror(true);\r\n          }\r\n        }}\r\n      >\r\n        Use Code\r\n      </button>  <h6 style={{ textAlign: \"center\", marginTop: \"10px\" }}>OR</h6> */}\r\n\r\n      <br />\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mt-1 p-2 createevent\"\r\n        style={{\r\n          width: \"100%\",\r\n          borderRadius: 50,\r\n          fontWeight: \"bold\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n        onClick={() => {\r\n          history.push(\"/MyEvents/add-event\");\r\n        }}\r\n      >\r\n        Create Event\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowSchedule.js",["722","723","724","725","726"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"./Invitations.css\"\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport BlankSchedule from \"../../Assets/BlankSchedule.svg\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport history from \"../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function ShowSchedule(props) {\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([])\r\n  const [base, setbase] = useState(\"\")\r\n\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/schedule/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.event\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id][props.match.params.event].Schedule);\r\n        await setbase(\"MyEvents\");\r\n      } else {\r\n        await setEventdata(myInvitations[props.match.params.id][props.match.params.event].Schedule);\r\n        await setbase(\"inv\");\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={false} md={2}></Grid>\r\n        <Grid item xs={12} md={10}>\r\n          <Row\r\n            style={{\r\n              marginTop: 20,\r\n              marginRight: 3,\r\n              marginLeft: 3,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Schedules\r\n            </p>\r\n          </Row>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{ padding: '18px' }}>\r\n          {Eventdata.length > 0 ? (\r\n            <>\r\n              {Eventdata.map((eve, index) => (<>\r\n                <Grid item xs={false} md={2} />\r\n                <Grid item xs={12} md={8} className=\"card-shadow m-b-10 p-15px m-5px schedule_main\" style={{ borderRadius: '13px' }}>\r\n                  <Grid container spacing={0}>\r\n                    <>\r\n                      <Grid\r\n                        container\r\n                        spacing={0}\r\n                        className=\"padding-left-7 p-10-p \"\r\n                      >\r\n                        <Grid item xs={12}>\r\n                          <div className=\"ScheduleName l-black-t m-0\">\r\n                            {eve.Name}\r\n                          </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {eve.Venue}\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"dtime l-blue-t\" style={{ fontWeight: 'bold' }}>\r\n                          {eve.datetime.split(\"T\")[0] +\r\n                            \" \" +\r\n                            eve.datetime.split(\"T\")[1]}\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"mt-10px\" style={{ fontSize: 13, color: 'grey', height: '32px', overflow: 'scroll' }}>\r\n                          {eve.description}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={false} md={2} />\r\n              </>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <img src={BlankSchedule} className=\"blank-img\" />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\BlankPages\\404.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\hoxinvitation.js",["727","728","729","730","731","732","733","734","735"],"import React, { useState, useEffect } from \"react\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport \"./InvitationMain/InvitaionMain.css\"\r\nimport { Container, Row, Col, Carousel, Form } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header\"\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../Helpers/DesktopNav/DesktopNav\";\r\nimport axios from \"axios\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport SendIcon from \"../../Assets/ic-send.png\";\r\nimport { AiOutlineLike, AiOutlineSync } from \"react-icons/ai\"\r\nimport { GoCalendar, GoLocation } from \"react-icons/go\"\r\nimport CommentIcon from \"../../Assets/comment-dot.png\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport Location from \"../../Assets/Location.png\";\r\nimport history from \"../../Utils/History\";\r\nimport LIKE from \"../../Assets/LIKE.png\";\r\nimport RSVP from \"../../Assets/RSVP.png\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport './Invitations.css'\r\nimport './InvitationMain/InvitaionMain.css'\r\nimport { addEvent } from '../../Redux/DispatchFuncitons/CodeFunctions'\r\nexport default function Hoxinvitation(props) {\r\n  const [Invitations, setInvitations] = useState([]);\r\n  const [show, setshow] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => {\r\n    debugger\r\n    if (Auth.isLoggedIn === false) {\r\n      if (props.match.params.maincode !== undefined && props.match.params.Code !== \"\") {\r\n        await dispatch(addEvent(props.match.params.Code, props.match.params.maincode))\r\n        // await dispatch(GetInvitations());\r\n        // history.push(\"/\");\r\n      }\r\n    }\r\n    else {\r\n      await dispatch(GetInvitations());\r\n      myInvitations.map((invite, index) => {\r\n        console.log(invite);\r\n        if (invite[0].MainCode === props.match.params.maincode) {\r\n          history.push(\"/inv/eventpage/\" + index);\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  }, [Auth.isLoggedIn]);\r\n  useEffect(async () => {\r\n    if (props.match.params.Name === undefined) {\r\n      console.log(props.match.params.maincode);\r\n      await axios\r\n        .post(url + \"event/viewinvite\", {\r\n          MainCode: props.match.params.maincode,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.Status === \"success\") {\r\n            setInvitations(res.data.Events);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    } else {\r\n      await axios\r\n        .post(url + \"event/viewEvent\", {\r\n          maincode: props.match.params.maincode,\r\n          Code: props.match.params.Code\r\n        })\r\n        .then(async (res) => {\r\n          debugger;\r\n          if (res.data.Status === \"success\") {\r\n            await dispatch(addEvent(res.data.Events[0].code, res.data.Events[0].maincode))\r\n            setInvitations(res.data.Events);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav />\r\n      <Popup\r\n        component={LoginSignup}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n      />\r\n      <Carousel controls={false} interval={99999999999999} className=\"mb-10\">\r\n        {Invitations &&\r\n          Invitations.map((eve, index) => (\r\n            <Carousel.Item\r\n              onClick={() => {\r\n                setshow(true);\r\n              }}\r\n            >\r\n              <Container className=\"upper-menu\">\r\n                <Row\r\n                  style={{\r\n                    marginTop: 20,\r\n                    marginRight: 3,\r\n                    marginLeft: 3,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p style={{ fontWeight: \"bold\", fontSize: 20, color: \"white\" }}>\r\n                    <IoArrowBackCircleOutline\r\n                      style={{ backgroundColor: '#313131', borderRadius: '50px' }}\r\n                      size={40} />\r\n                  </p>\r\n                  <Col></Col>\r\n                  <FaUserFriends\r\n                    size={30}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"black\",\r\n                      borderRadius: 20,\r\n                      padding: \"0.1em 0.4em\",\r\n                    }} />\r\n                </Row>\r\n              </Container>\r\n              <Container className=\"container-event\">\r\n                <Image src={eve.file} className=\"fullimagemain\" />\r\n                <Container className=\"box-event\" fluid style={{ marginTop: \"5vh\" }}>\r\n\r\n                  <UserDataUrl\r\n                    Phone={eve.Host[0]}\r\n                    showIcon={true}\r\n                    className=\"m-10px\"\r\n                  />\r\n                  <div style={{ position: \"relative\", float: \"right\" }}>\r\n                    <Image src={SendIcon} style={{\r\n                      height: \"20px\",\r\n                      width: \"20px\",\r\n                      marginRight: \"1.5vh\",\r\n                    }} />\r\n\r\n                    <Image src={CommentIcon} className=\"go-chat\" />\r\n                  </div>\r\n                  <h4 className=\"avatar-name\">\r\n                    <UserDataUrl Phone={eve.Host[0]} showName={true} />\r\n                  </h4>\r\n                  <Form.Control\r\n                    size=\"sm\"\r\n                    placeholder=\"Write Comment\"\r\n                    className=\"form-control\"\r\n                    style={{\r\n                      border: 0,\r\n                      width: \"auto\",\r\n                      height: \"20px\",\r\n                      marginLeft: \"60px\",\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <center>\r\n                        <span className=\"Like-count\">0</span>\r\n\r\n                        <AiOutlineLike size=\"25\" className=\"info-icon\"\r\n                          style={{ color: \"#4e4e4e\" }} />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <AiOutlineSync size=\"25\"\r\n                          style={{ color: \"#4e4e4e\" }} />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <GoCalendar\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\" />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <GoLocation\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\" />\r\n                      </center>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n\r\n                  <h3 className=\"event-date\">{eve.Date + \" \" + eve.Time}</h3>\r\n                  <p className=\"event-des\">{eve.Description}</p>\r\n                  <a href=\"#\" className=\"invitationmain_link\">Read More</a>\r\n                </Container>\r\n              </Container>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      <NavMobile />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitaionviewToggler.js",["736","737","738","739"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport InvitaionRSVP from \"./InvitaionRSVP/InvitaionRSVP\";\r\nimport InvitaionMain from \"./InvitationMain/InvitaionMain\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nexport default function InvitaionviewToggler(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Eventdata, setEventdata] = useState(true)\r\n  const [base, setbase] = useState(\"\")\r\n\r\n  const [dataloading, setdataloading] = useState(true)\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n    debugger\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n\r\n    } else {\r\n\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/\" + props.match.params.id && MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n        await setbase(\"MyEvents\");\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/\" + props.match.params.id && myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n        await setbase(\"inv\");\r\n      }\r\n      setdataloading(false)\r\n    }\r\n  }, [MyEvents, myInvitations])\r\n\r\n\r\n  const [evno, setevno] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [hasallrsvps, sethasallrsvps] = useState(false);\r\n  const [rsvpnumber, setrsvpnumber] = useState(0);\r\n  useEffect(() => {\r\n    if (Eventdata && evno < Eventdata.length) {\r\n      let EVcount = 0;\r\n      for (let i = 0; i < Eventdata.length; i++) {\r\n        if (Eventdata[i].RSVPList.length > 0) {\r\n          let RSVPList = Eventdata[i].RSVPList;\r\n\r\n          for (let j = 0; j < RSVPList.length; j++) {\r\n            if (RSVPList[j].By === Auth.Phone) {\r\n              EVcount++;\r\n            } else {\r\n              setrsvpnumber(i);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (EVcount === Eventdata.length) {\r\n        sethasallrsvps(true);\r\n      } else {\r\n      }\r\n    }\r\n    console.log(Eventdata);\r\n    console.log(props);\r\n  }, [Eventdata]);\r\n  return (\r\n    <>{dataloading === false ? <div>\r\n      {hasallrsvps === false ? (\r\n        <InvitaionRSVP\r\n          Eventdata={Eventdata}\r\n          setevno={setevno}\r\n          id={props.match.params.id}\r\n          sethasallrsvps={sethasallrsvps}\r\n          toggle={true}\r\n          base={base}\r\n        />\r\n      ) : (\r\n        <InvitaionMain\r\n          Eventdata={Eventdata}\r\n          id={props.match.params.id}\r\n          base={base}\r\n        />\r\n      )}\r\n    </div> : <CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} />}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Notifications\\Notification.js",["740","741","742","743","744","745","746","747","748","749","750"],"import { Button, Modal } from \"react-bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport \"./Notifications.css\"\r\nimport { useSelector } from \"react-redux\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport NoNotfcations from '../../Assets/NoNotifications.svg'\r\nexport default function Notification(props) {\r\n  const Notifications = useSelector((state) => state.Notifications);\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  useEffect(() => {\r\n    console.log(props)\r\n    Notifications.map(notes => {\r\n      console.log(notes.MainCode)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Notificationportion-strt p-2 \">\r\n        <div className=\"Notifications-header d-flex flex-row\" style={{ marginTop: -15 }}>\r\n          <h4\r\n            className=\"font-weight-bold pr-5 pt-2\"\r\n            style={{ marginRight: \"0%\" }}\r\n          >\r\n            Notifications\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      {Notifications.length > 0 ? (\r\n        <div className=\"ofh \" style={{ marginTop: \"13px\", height: '40vh' }}>\r\n          {Notifications.map((note, index) =>\r\n            note.by === Auth.Phone ? <></> : (props.MainCode && note.MainCode === props.MainCode ?\r\n              <div className=\"media  mb-3\">\r\n                <Avatar className=\"mr-3\" src={note.img} alt=\"img\" style={{ top: '4px' }} />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0 font-weight-bold small\">\r\n                    {note.Notification}\r\n                  </h5>\r\n                  <p className=\"text-secondary time_notification\">{note.date.split('T')[0] + ' ' + ' ' + note.date.split('T')[1].substring(0, 5)}</p>\r\n                </div>\r\n              </div> : <></>)\r\n          )}\r\n        </div>) :\r\n        <>\r\n          <img src={NoNotfcations} className=\"w-100\" />\r\n          <br />\r\n          <h4 className=\"tac\">No Notification</h4>\r\n        </>\r\n      }\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowStory.js",["751","752","753","754","755","756","757","758","759","760"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./OurStory.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport MobileNav from \"../Helpers/NavMobile/NavMobile\";\r\nimport { Container, Card, Button, Row, Col, Figure } from \"react-bootstrap\";\r\nimport { FcCalendar, FcLike } from \"react-icons/fc\";\r\nimport BlankSchedule from \"../../Assets/NoStory.svg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    GetEvents,\r\n    GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function ShowStory(props) {\r\n    const [Eventdata, setEventdata] = useState([]);\r\n    const [base, setbase] = useState(\"\");\r\n    const [images, setimages] = useState([]);\r\n    const dispatch = useDispatch();\r\n    let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n\r\n    let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n    useEffect(async () => {\r\n        debugger;\r\n        if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n            await dispatch(GetEvents());\r\n            await dispatch(GetInvitations());\r\n        } else {\r\n            if (\r\n                props.location.pathname ===\r\n                \"/MyEvents/story/\" + props.match.params.id &&\r\n                MyEvents.length > 0\r\n            ) {\r\n                console.log(MyEvents[props.match.params.id][0]);\r\n                await setEventdata(MyEvents[props.match.params.id][0].InvId.Story);\r\n                await setbase(\"MyEvents\");\r\n            } else if (\r\n                props.location.pathname === \"/inv/story/\" + props.match.params.id &&\r\n                myInvitations.length > 0\r\n            ) {\r\n                console.log(myInvitations[0]);\r\n                await setEventdata(myInvitations[props.match.params.id][0].InvId.Story);\r\n                await setbase(\"inv\");\r\n            }\r\n        }\r\n    }, [MyEvents, myInvitations]);\r\n    return (\r\n        <div>\r\n            <div className=\"desktop-only w-100\">\r\n                <Header className=\"desktop-only\" />\r\n            </div>\r\n            <MobileNav id={props.match.params.id} base={base} />\r\n            <Container fluid className=\"p-0\">\r\n                {Eventdata.length > 0 ? (\r\n                    Eventdata.map((stry, index) => (\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 mt-3\" style={{ padding: '30px', paddingTop: 'inherit', paddingBottom: 'inherit' }}>\r\n                                <div\r\n                                    className=\"card\"\r\n                                    style={{ boxShadow: \"1px 1px 7px 1px #b9b9b9\" }}\r\n                                >\r\n                                    <div className=\"card-horizontal\">\r\n                                        <div className=\"card-body\">\r\n                                            <Row>\r\n                                                <Col xs={4} style={{ margin: \"auto\" }}>\r\n                                                    <img src={stry.file} className=\"w-100 card_image\" />\r\n                                                </Col>\r\n                                                <Col xs={8}>\r\n                                                    <h4 className=\"card-title ourstory_heading\">\r\n                                                        {stry.Name}\r\n                                                    </h4>\r\n                                                    <p\r\n                                                        className=\"card-text ourstory_text\"\r\n                                                        style={{ fontSize: 13, color: 'grey', height: '32px', overflow: 'scroll' }}\r\n                                                    >\r\n                                                        {stry.description}\r\n                                                    </p>\r\n                                                    {/* <p className=\"card-text\"><FcLike size=\"30\" /> 20</p> */}\r\n                                                    <p className=\"card-text ourstory_date\" style={{ color: '#007bff' }}>\r\n                                                        <FcCalendar size=\"20\" /> {stry.datetime}\r\n                                                    </p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <>\r\n                        {\" \"}\r\n                        <img src={BlankSchedule} className=\"blank-img\" />\r\n                        <br />\r\n                        <h3 className=\"tac\">Story not Added yet </h3>\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\RSVP\\Rsvp.js",["761","762","763","764","765"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import \"../EventInfo/EventInfo.css\";\r\nimport { Carousel, Button } from \"react-bootstrap\";\r\nimport eventimg from \"../../../Assets/eventimg.png\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport history from \"../../../Utils/History\";\r\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport \"./Rsvp.css\";\r\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\r\nexport default function Rsvp(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [base, setbase] = useState(\"\");\r\n  const Eventdata1 = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  const Eventdata2 = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  useEffect(async () => {\r\n    if (props.location.pathname === \"/MyEvents/rsvp/\" + props.match.params.id) {\r\n      await setbase(\"MyEvents\");\r\n      setEventdata(Eventdata2);\r\n    } else {\r\n      await setbase(\"inv\");\r\n      setEventdata(Eventdata1);\r\n    }\r\n  }, []);\r\n  const Next = async (i) => {\r\n    debugger;\r\n    if (Eventdata && Eventdata.length > 0) {\r\n      console.log(i, Eventdata.length);\r\n      if (i < Eventdata.length) {\r\n        setindex(i);\r\n        setdirection(\"next\");\r\n      } else {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n        await dispatch(getNotification())\r\n        history.goBack()\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const [index, setindex] = useState(0);\r\n\r\n  const [direction, setdirection] = useState(\"\");\r\n\r\n  const handleSelect = (index) => {\r\n    let newIndex = index + 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav />\r\n      <Toggler />\r\n      <Carousel\r\n        controls={false}\r\n        direction={direction}\r\n        onSelect={(i) => {\r\n          handleSelect(i);\r\n        }}\r\n        activeIndex={index}\r\n        interval={99999999999999}\r\n      >\r\n        {base === \"inv\"\r\n          ? Eventdata1 &&\r\n          Eventdata1.map((eve, index) => (\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block rsvpimage\"\r\n                src={eve.file}\r\n                alt=\"First slide\"\r\n              />\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain \"\r\n                    onClick={async () => {\r\n\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))\r\n          : Eventdata2 &&\r\n          Eventdata2.map((eve, index) => (\r\n            <Carousel.Item>\r\n              {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  className=\"d-block rsvpimage\"\r\n                  src={eve.file}\r\n                  alt=\"First slide\"\r\n                />) : (\r\n                <video\r\n                  muted\r\n                  type=\"video/mp4\"\r\n                  autoPlay={true}\r\n                  src={\r\n                    eve.file\r\n                  }\r\n                  preload=\"none\"\r\n                  className=\"d-block rsvpimage\"\r\n                />\r\n              )}\r\n\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain \"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      {/* <NavMobile className=\"footnavmobile\" base={base} id={props.match.params.id} /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\ShowAlbum.js",["766","767","768","769","770","771","772","773","774","775","776","777","778","779","780"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./AlbumStyle.css\";\r\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport { IoChevronBackCircleOutline } from \"react-icons/io5\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ImageGallery from 'react-image-gallery';\r\nimport Header from \"../Helpers/Header/Header\"\r\nimport MobileNav from \"../Helpers/NavMobile/NavMobile.js\";\r\nimport DesktopNav from \"../Helpers/DesktopNav/DesktopNav.js\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport BlankSchedule from \"../../Assets/NOAlbums.svg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { uploadfiletoalbum } from '../../Redux/DispatchFuncitons/Eventfunctions'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport Addtoalbum from './Addtoalbum'\r\nimport Swiper from \"react-id-swiper\";\r\n\r\nexport default function ShowAlbum(props) {\r\n    const [isUploaded, setisUploaded] = useState(false)\r\n    const [Eventdata, setEventdata] = useState([])\r\n    const [Name, setName] = useState(\"\")\r\n    const [IsAdmin, setIsAdmin] = useState(false)\r\n    const [MainCode, setMainCode] = useState(\"\")\r\n    const [base, setbase] = useState(\"\")\r\n    const [images, setimages] = useState([])\r\n    const [Prevfiles, setPrevfiles] = useState([])\r\n    const dispatch = useDispatch();\r\n    const [Type, setType] = useState(\"\")\r\n    const [show, setshow] = useState(false);\r\n    let MyEvents = useSelector(\r\n        (state) => state.Eventdata.myEvents\r\n    );\r\n    const Auth = useSelector(state => state.Auth)\r\n    let myInvitations = useSelector(\r\n        (state) => state.Eventdata.myInvitations\r\n    );\r\n\r\n    const params = {\r\n        spaceBetween: 30,\r\n        centeredSlides: true,\r\n        autoplay: {\r\n            delay: 2500,\r\n            disableOnInteraction: false\r\n        },\r\n        pagination: {\r\n            el: '.swiper-pagination',\r\n            clickable: true\r\n        },\r\n        navigation: {\r\n            nextEl: '.swiper-button-next',\r\n            prevEl: '.swiper-button-prev'\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        debugger\r\n        if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n            await dispatch(GetEvents());\r\n            await dispatch(GetInvitations());\r\n        } else {\r\n            if (\r\n                props.location.pathname ===\r\n                \"/MyEvents/albums/\" +\r\n                props.match.params.id\r\n                && MyEvents.length > 0\r\n            ) {\r\n                console.log(MyEvents[0])\r\n                await setEventdata(MyEvents[props.match.params.id][0].InvId.Album);\r\n                await setbase(\"MyEvents\");\r\n                await setType(MyEvents[props.match.params.id][0].InvId.Type)\r\n                await setName(MyEvents[props.match.params.id][0].Name)\r\n                await setMainCode(MyEvents[props.match.params.id][0].MainCode)\r\n                await setIsAdmin(MyEvents[props.match.params.id][0].Host.includes(Auth.Phone))\r\n            } else if (\r\n                props.location.pathname ===\r\n                \"/inv/albums/\" +\r\n                props.match.params.id\r\n                && myInvitations.length > 0\r\n            ) {\r\n                console.log(myInvitations[0])\r\n                await setEventdata(myInvitations[props.match.params.id][0].InvId.Album);\r\n                await setbase(\"inv\");\r\n                await setType(myInvitations[props.match.params.id][0].InvId.Type)\r\n                await setName(myInvitations[props.match.params.id][0].Name)\r\n                await setMainCode(myInvitations[props.match.params.id][0].MainCode)\r\n                await setIsAdmin(myInvitations[props.match.params.id][0].Host.includes(Auth.Phone))\r\n            }\r\n            console.log(Eventdata)\r\n        }\r\n    }, [MyEvents, myInvitations])\r\n    useEffect(() => {\r\n        let imagescpy = []\r\n        let Prevfilescpy = []\r\n\r\n        if (Eventdata.length > 0) {\r\n            Eventdata.map(eve => {\r\n                Prevfilescpy.push({ file: eve.file, type: eve.type })\r\n                imagescpy.push({\r\n                    file: eve.file,\r\n                    type: eve.type\r\n                })\r\n            })\r\n\r\n        }\r\n        setimages(imagescpy)\r\n\r\n        setPrevfiles(Prevfilescpy)\r\n        console.log(images)\r\n    }, [Eventdata])\r\n    const save = async () => {\r\n        let Album = []\r\n        let uniqueurl =\r\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\" + \"Album/\" + props.match.params.id + Eventdata[0].Name;\r\n        images.map(async (fildeata, index) => {\r\n            if (index > Prevfiles.length) {\r\n                let newurl = await uploadString(fildeata.file, uniqueurl + \".\" + fildeata.type)\r\n                Album.push({ file: newurl, type: fildeata.type })\r\n            } else {\r\n                Album.push({ file: fildeata.file, type: fildeata.type })\r\n            }\r\n        })\r\n        console.log(Album)\r\n        await dispatch(uploadfiletoalbum(Album, Eventdata[0].MainCode))\r\n        setisUploaded(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"desktop-only w-100\" >\r\n                <Header className=\"desktop-only\" />\r\n            </div>\r\n            <Addtoalbum\r\n                toggleShowPopup={setshow}\r\n                showPopup={show}\r\n                images={Prevfiles}\r\n                _id={props.match.params.id}\r\n                eventname={Name}\r\n                Type={Type}\r\n                MainCode={MainCode}\r\n            />\r\n            <DesktopNav id={props.match.params.id} base={base} />\r\n            <MobileNav id={props.match.params.id} base={base} />\r\n            <Container style={{ margin: 0, padding: 0, marginTop: 0 }} fluid>\r\n                <Row className=\"p-0 m-0\">\r\n                    <Col xs={10}>  <h3 className=\"p-5px\">    Albums</h3></Col>\r\n                    <Col xs={2}>\r\n                        {IsAdmin === true ?\r\n                            <IconButton onClick={() => { setshow(true) }} style={{ float: 'right' }}>\r\n                                <AddPhotoAlternateIcon color=\"primary\" style={{ fontSize: 25 }} />\r\n                            </IconButton>\r\n                            : <></>}\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                {images.length === 0 ? <> <img src={BlankSchedule} className=\"blank-img\" />\r\n                \r\n                    <br />\r\n                    <h3 className=\"tac\">Add Albums😍 Now!</h3>\r\n                \r\n                    </>\r\n                    :\r\n                    <Swiper {...params}>\r\n                        {images.map(img => (\r\n                            <div>\r\n                                <Image alt=\"img\" src={img.file} fluid className=\"image-gallery-image\" />\r\n                            </div>\r\n                        ))}\r\n\r\n                    </Swiper>}\r\n\r\n            </Container>\r\n        </div >\r\n    )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js",["781","782","783","784","785","786","787","788","789","790","791","792","793","794","795"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./InvitaionMain.css\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport SendIcon from \"../../../Assets/ic-send.png\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CalendarIcon from \"../../../Assets/Calender.png\";\r\nimport { GrSync } from \"react-icons/gr\";\r\nimport LIKE from \"../../../Assets/LIKE.png\";\r\nimport RSVP from \"../../../Assets/RSVP.png\";\r\nimport { HiHome } from \"react-icons/hi\";\r\nimport { GoCalendar, GoLocation } from \"react-icons/go\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport CommentIcon from \"../../../Assets/comment-dot.png\";\r\nimport UserDataUrl from \"../../Helpers/UserData/UserDatajustUrl\";\r\nimport Location from \"../../../Assets/Location.png\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { AiOutlineLike, AiOutlineSync } from \"react-icons/ai\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  like_event,\r\n  comment_event,\r\n  GetInvitations,\r\n  GetEvents,\r\n} from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport history from \"../../../Utils/History\";\r\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nexport default function InvitaionMain(props) {\r\n  const dispatch = useDispatch();\r\n  const [comment, setcomment] = useState(\"\");\r\n  const [likeCount, setlikeCount] = useState([]);\r\n  const [MainCode, setmaincode] = useState();\r\n  const [commentcountplus, setcommentcountplus] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const checkiflike = (index) => {\r\n    let likeCountCopy = [...likeCount];\r\n    if (likeCount.length > 0) {\r\n      if (likeCount[index].me === true) {\r\n        likeCountCopy[index].me = false;\r\n        likeCountCopy[index].count -= 1;\r\n      } else {\r\n        likeCountCopy[index].me = true;\r\n        likeCountCopy[index].count += 1;\r\n      }\r\n    } else {\r\n      likeCountCopy[index].me = true;\r\n      likeCountCopy[index].count = 1;\r\n    }\r\n    setlikeCount(likeCountCopy);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    console.log(props.Eventdata);\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      await setmaincode(props.Eventdata[0].MainCode);\r\n      let countarray = [];\r\n      let liked = false;\r\n      for (let i = 0; i < props.Eventdata.length; i++) {\r\n        if (props.Eventdata[i].LikeList.length <= 0) {\r\n          countarray.push({ count: 0, me: false });\r\n        } else {\r\n          for (let j = 0; j < props.Eventdata[i].LikeList.length; j++) {\r\n            if (props.Eventdata[i].LikeList.LikeBy === Auth.Phone) {\r\n              liked = true;\r\n            } else {\r\n            }\r\n          }\r\n          countarray.push({\r\n            count: props.Eventdata[i].LikeList.length,\r\n            me: liked,\r\n          });\r\n          liked = false;\r\n        }\r\n      }\r\n      console.log(countarray);\r\n      setlikeCount(countarray);\r\n    }\r\n    setcommentcountplus(0);\r\n  }, [props.Eventdata]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav\r\n        id={props.id}\r\n        MainCode={MainCode}\r\n        base={props.base}\r\n        Eventdata={props.Eventdata}\r\n\r\n      />\r\n      {/*  <Toggler /> */}\r\n\r\n      <Carousel controls={false} interval={99999999999999} className=\"mb-10\">\r\n        {props.Eventdata &&\r\n          props.Eventdata.map((eve, index) => (\r\n            <Carousel.Item>\r\n              <Container className=\"upper-menu\">\r\n                <Row\r\n                  style={{\r\n                    marginTop: 20,\r\n                    marginRight: 3,\r\n                    marginLeft: 3,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p style={{ color: \"black\" }}>\r\n                    <HiHome\r\n                      style={{ backgroundColor: \"white\", borderRadius: \"50px\" }}\r\n                      size={30}\r\n                      onClick={() => {\r\n                        history.push(\"/\" + props.base);\r\n                      }}\r\n                    />\r\n\r\n                  </p>\r\n                  <Col></Col>\r\n                  <FaUserFriends\r\n                    size={30}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"black\",\r\n                      borderRadius: 20,\r\n                      padding: \"0.1em 0.4em\",\r\n                    }}\r\n                    onClick={() => {\r\n                      history.push(\r\n                        \"/\" +\r\n                        props.base +\r\n                        \"/guestlist/\" +\r\n                        props.id +\r\n                        \"/\" +\r\n                        index\r\n                      );\r\n                    }}\r\n                  />\r\n                </Row>\r\n              </Container>\r\n              <Container className=\"container-event\">\r\n                {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\r\n                  <Image src={eve.file} className=\"fullimagemain\" />) : (\r\n                  <video\r\n                    muted\r\n                    type=\"video/mp4\"\r\n                    autoPlay={true}\r\n                    src={eve.file}\r\n                    preload=\"none\"\r\n                    className=\"w-100\"\r\n                  />\r\n                )}\r\n                <Container\r\n                  className=\"box-event\"\r\n                  fluid\r\n                  style={{ marginTop: \"5vh\" }}\r\n                >\r\n                  <div\r\n                    style={{ position: \"relative\", left: \"10px\", top: \"3px\" }}\r\n                  >\r\n                    <UserDataUrl\r\n                      Phone={eve.Host[0]}\r\n                      showIcon={true}\r\n                      className=\"m-10px\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"event-chat-buttons\"\r\n                    style={{ marginTop: \"1vh\" }}\r\n                  >\r\n\r\n                    <Image\r\n                      src={SendIcon}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"20px\",\r\n                        marginRight: \"1.5vh\",\r\n                      }}\r\n                      onClick={async () => {\r\n                        if (comment !== \"\") {\r\n                          await dispatch(comment_event(eve._id, comment));\r\n                          setcomment(\"\");\r\n\r\n                          await setcommentcountplus(commentcountplus + 1)\r\n                        }\r\n                      }}\r\n                    /><>\r\n                      <span className=\"Like-count comment_like\">\r\n                        {eve.CommentList\r\n                          ? eve.CommentList.length + commentcountplus\r\n                          : 0 + commentcountplus}\r\n                      </span>\r\n                      <Image\r\n                        src={CommentIcon}\r\n                        className=\"go-chat\"\r\n                        onClick={() => {\r\n                          history.push(\r\n                            \"/\" + props.base + \"/comments/\" + props.id + \"/\" + eve._id\r\n                          );\r\n                        }}\r\n                      /></>\r\n                  </div>\r\n                  <h4 className=\"avatar-name\">\r\n                    <UserDataUrl Phone={eve.Host[0]} showName={true} />\r\n                  </h4>\r\n                  <Form.Control\r\n                    size=\"sm\"\r\n                    placeholder=\"Write Comment\"\r\n                    className=\"form-control\"\r\n                    value={comment}\r\n                    onChange={(e) => {\r\n                      setcomment(e.target.value);\r\n                    }}\r\n                    style={{\r\n                      border: 0,\r\n                      width: \"auto\",\r\n                      height: \"20px\",\r\n                      marginLeft: \"60px\",\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <Row style={{ marginTop: 10 }}>\r\n                    <Col>\r\n                      <center>\r\n                        <span className=\"Like-count\">\r\n                          {likeCount[index] != undefined\r\n                            ? likeCount[index].count\r\n                            : 0}\r\n                        </span>\r\n                        <AiOutlineLike\r\n                          size=\"25\"\r\n                          className=\"info-icon\"\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          onClick={() => {\r\n                            checkiflike(index);\r\n                            dispatch(like_event(eve._id));\r\n                          }}\r\n                        />\r\n                      </center>\r\n                    </Col>\r\n                    <Col\r\n                      onClick={() => {\r\n                        history.push(\"/\" + props.base + \"/rsvp/\" + props.id);\r\n                      }}\r\n                    >\r\n                      <center>\r\n                        <div>\r\n                          <IsRsvp RSVPList={eve.RSVPList} />\r\n                          <AiOutlineSync\r\n                            size=\"25\"\r\n                            style={{ color: \"#4e4e4e\" }}\r\n                          />\r\n                          {/* <Image\r\n                            src={RSVP}\r\n\r\n                            className=\"info-icon\"\r\n                          /> */}\r\n                        </div>\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n                        <GoCalendar\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\"\r\n                          onClick={() => {\r\n                            history.push(\r\n                              \"/\" +\r\n                              props.base +\r\n                              \"/schedule/\" +\r\n                              props.id +\r\n                              \"/\" +\r\n                              index\r\n                            );\r\n                          }} />\r\n                        {/*  <Image\r\n                          src={CalendarIcon}\r\n                          \r\n                        /> */}\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n                        <GoLocation\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\"\r\n                          onClick={() => {\r\n                            history.push(\r\n                              \"/\" +\r\n                              props.base +\r\n                              \"/location/\" +\r\n                              props.id +\r\n                              \"/\" +\r\n                              index\r\n                            );\r\n                          }} />\r\n                        {/*  <Image\r\n                          src={Location}\r\n                          \r\n                        /> */}\r\n                      </center>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <h2 className=\"event-date\">{eve.Name}</h2>\r\n                  <h3 className=\"event-date\">{eve.Date + \" \" + eve.Time}</h3>\r\n                  <p className=\"event-des\">{eve.Description}</p>\r\n                  <a href=\"#\" className=\"invitationmain_link\">\r\n                    Read More\r\n                  </a>\r\n                </Container>\r\n              </Container>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      <NavMobile\r\n        className=\"footnavmobile\"\r\n        id={props.id}\r\n        MainCode={MainCode}\r\n        base={props.base}\r\n        Eventdata={props.Eventdata}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport function IsRsvp(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [showicon, setshowicon] = useState(\"\");\r\n  useEffect(() => {\r\n    debugger;\r\n    for (let i = 0; i < props.RSVPList.length; i++) {\r\n      if (\r\n        props.RSVPList[i].By === Auth.Phone &&\r\n        props.RSVPList[i].Status === \"Accept\"\r\n      ) {\r\n        setshowicon(\"Accept\");\r\n      } else if (\r\n        props.RSVPList[i].By === Auth.Phone &&\r\n        props.RSVPList[i].Status === \"May Be\"\r\n      ) {\r\n        setshowicon(\"May Be\");\r\n      } else if (\r\n        props.RSVPList[i].By === Auth.Phone &&\r\n        props.RSVPList[i].Status === \"Decline\"\r\n      ) {\r\n        setshowicon(\"Decline\");\r\n      } else {\r\n      }\r\n    }\r\n    console.log(showicon);\r\n  }, [props.RSVPList]);\r\n  return (\r\n    <span className=\"RSVP-count\">\r\n      {showicon === \"Accept\" ? (\r\n        <CheckCircleIcon style={{ color: \"Green\" }} />\r\n      ) : showicon === \"Decline\" ? (\r\n        <CancelIcon color=\"secondary\" />\r\n      ) : showicon === \"May Be\" ? (\r\n        <ErrorIcon style={{ color: \"#dec509\" }} />\r\n      ) : (\r\n        <HelpIcon color=\"primary\" />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Location Offline\\LocationOffline.js",["796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Accordion, Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport \"../Location Offline/LocationOffline.css\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { json } from \"body-parser\";\r\nimport vcimage from \"../../Assets/videocall.png\";\r\nimport history from \"../../Utils/History\";\r\nimport { GoogleMapsAPI } from \"../../Utils/Config\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nconst libraries = [\"places\"];\r\n\r\nconst options = {\r\n  // styles: mapStyles,\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  gestureHandling: \"cooperative\",\r\n};\r\n\r\nexport default function Location(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GoogleMapsAPI,\r\n    libraries,\r\n  });\r\n  // const Eventdata = useSelector(\r\n  //   (state) =>\r\n  //     state.Eventdata.myInvitations[props.match.params.id][\r\n  //       props.match.params.event\r\n  //     ]\r\n  // );\r\n\r\n  let Eventdata = [];\r\n  let base = \"\";\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  console.log(props.location.pathname);\r\n  if (\r\n    props.location.pathname ===\r\n    \"/MyEvents/location/\" +\r\n    props.match.params.id +\r\n    \"/\" +\r\n    props.match.params.event\r\n  ) {\r\n    Eventdata = MyEvents[props.match.params.event];\r\n    base = \"MyEvents\";\r\n  } else {\r\n    Eventdata = myInvitations[props.match.params.event];\r\n    base = \"inv\";\r\n  }\r\n\r\n  let center = {};\r\n  if (Eventdata.VenueType === \"Both\" || Eventdata.VenueType === \"Offline\") {\r\n    let locationdata = JSON.parse(Eventdata.Location);\r\n    center = {\r\n      lat: locationdata.lat,\r\n      lng: locationdata.lng,\r\n    };\r\n  } else {\r\n    center = {\r\n      lat: 20.5937,\r\n      lng: 78.9629,\r\n    };\r\n  }\r\n\r\n  const mapContainerStyle = {\r\n    height: \"400px\",\r\n    width: \"100%\",\r\n    border: \"solid\",\r\n    display:\r\n      Eventdata.VenueType === \"Offline\" || Eventdata.VenueType === \"Both\"\r\n        ? \"block\"\r\n        : \"none\",\r\n  };\r\n  console.log(Eventdata);\r\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\r\n\r\n  Geocode.setLanguage(\"en\");\r\n\r\n  const [marker, setMarker] = useState(center);\r\n  const [selected, setSelected] = useState(null);\r\n  const [adderss, setAddress] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    let location = JSON.stringify({ lat, lng });\r\n    console.log(location);\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(70);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <Col className=\"mt-15px\">\r\n        <p style={{ fontWeight: 700, fontSize: 23 }}>\r\n          <IoArrowBackCircleOutline\r\n            size={40}\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}\r\n          />\r\n          Location\r\n        </p>\r\n      </Col>\r\n      <img\r\n        src={vcimage}\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"70vh\",\r\n          objectFit: \"contain\",\r\n          display:\r\n            Eventdata.VenueType === \"Online\" ||\r\n              Eventdata.VenueType === \"Online-Inapp\"\r\n              ? \"block\"\r\n              : \"none\",\r\n        }}\r\n      />\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={5}\r\n        center={center}\r\n        options={options}\r\n        // onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n        options={{ scrollwheel: false }}\r\n      >\r\n        <Marker\r\n          key={`${marker.lat}-${marker.lng}`}\r\n          position={{ lat: marker.lat, lng: marker.lng }}\r\n          onClick={() => {\r\n            setSelected(marker);\r\n          }}\r\n        />\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{adderss}</h2>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n\r\n      <Accordion>\r\n        <Card>\r\n          <Card.Header\r\n            style={{\r\n              display:\r\n                Eventdata.VenueType === \"Offline\" ||\r\n                  Eventdata.VenueType === \"Both\"\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            <a\r\n              href={\"http://maps.google.com?q=\" + center.lat + \",\" + center.lng}\r\n            >\r\n              <Accordion.Toggle\r\n                eventKey=\"-1\"\r\n                style={{\r\n                  color: \"skyblue\",\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  border: \"none\",\r\n                  background: \"none\",\r\n                  color: \"#000\",\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                <LocationOnOutlinedIcon style={{ color: \"skyblue\" }} />\r\n                Directions\r\n              </Accordion.Toggle>\r\n            </a>\r\n          </Card.Header>\r\n\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body\r\n              style={{\r\n                margin: 0,\r\n                padding: 0,\r\n                display:\r\n                  Eventdata.VenueType === \"Offline\" ||\r\n                    Eventdata.VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            ></Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Card.Header\r\n            style={{\r\n              display:\r\n                Eventdata.VenueType === \"Online\" ||\r\n                  Eventdata.VenueType === \"Both\" ||\r\n                  Eventdata.VenueType === \"Online-Inapp\"\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            <Accordion.Toggle\r\n              eventKey=\"1\"\r\n              style={{\r\n                color: \"skyblue\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                border: \"none\",\r\n                background: \"none\",\r\n                color: \"#000\",\r\n                textAlign: \"left\",\r\n              }}\r\n              onClick={() => {\r\n                if (Eventdata.VenueType === \"Online\") {\r\n                  window.open(Eventdata.Link);\r\n                } else if (\r\n                  Eventdata.VenueType === \"Online-Inapp\" ||\r\n                  Eventdata.VenueType === \"Both\"\r\n                ) {\r\n                  history.push(\"/inv/videoconf/\" + Eventdata.eventCode);\r\n                }\r\n              }}\r\n            >\r\n              <VideocamIcon style={{ color: \"skyblue\" }} /> Join Meeting\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body\r\n              style={{\r\n                display:\r\n                  Eventdata.VenueType === \"Online\" ||\r\n                    Eventdata.VenueType === \"Both\" ||\r\n                    Eventdata.VenueType === \"Online-Inapp\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            ></Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Card.Header\r\n            style={{\r\n              display:\r\n                Eventdata.VenueType === \"Offline\" ||\r\n                  Eventdata.VenueType === \"Both\"\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            <Accordion.Toggle\r\n              eventKey=\"2\"\r\n              style={{\r\n                color: \"skyblue\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                border: \"none\",\r\n                background: \"none\",\r\n                color: \"#000\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <LocationOnOutlinedIcon style={{ color: \"skyblue\" }} /> Other\r\n              <KeyboardArrowDownIcon\r\n                style={{ float: \"right\", color: \"skyblue\" }}\r\n              />\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body\r\n              style={{\r\n                display:\r\n                  Eventdata.VenueType === \"Offline\" ||\r\n                    Eventdata.VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry. Lorem Ipsum has been the industry's standard dummy text\r\n              ever since the 1500s, when an unknown printer took a galley of\r\n              type and scrambled it to make a type specimen book. It has\r\n              survived not only five centuries, but also the leap into\r\n              electronic typesetting, remaining essentially unchanged. It was\r\n              popularised in the 1960s with the release of Letraset sheets\r\n              containing Lorem Ipsum passages, and more recently with desktop\r\n              publishing software like Aldus PageMaker including versions of\r\n              Lorem Ipsum. Why do we use it? It is a long established fact that\r\n              a reader will be distracted by the readable content of a page when\r\n              looking at its layout. The point of using Lorem Ipsum is that it\r\n              has a more-or-less normal distribution of letters, as opposed to\r\n              using 'Content here, content here', making it look like readable\r\n              English. Many desktop publishing packages and web page editors now\r\n              use Lorem Ipsum as their default model text, and a search for\r\n              'lorem ipsum' will uncover many web sites still in their infancy.\r\n              Various versions have evolved over the years, sometimes by\r\n              accident, sometimes on purpose (injected humour and the like).\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Guest\\ManageGuest.js",["813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Tab,\r\n  Tabs,\r\n  Button,\r\n  ListGroup,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport \"../Guest/Guest.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport Userdataurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport {\r\n  change_event,\r\n  update_participants,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { ReactExcel, readFile, generateObjects } from \"@ramonak/react-excel\";\r\nexport default function ManageGuest(props) {\r\n  const dispatch = useDispatch();\r\n  const [isDisable, setDisabled] = useState(true);\r\n  const [list, setlist] = useState([]);\r\n  const [guestList, setguestList] = useState([]);\r\n  const [isMobile, SetIsMobile] = useState(false);\r\n  const [_id, Set_id] = useState(\"\");\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  let supported = \"\";\r\n  const [base, setbase] = useState(\"\");\r\n\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  let attribute = [\"name\", \"tel\"];\r\n  const opts = { multiple: true };\r\n\r\n  useEffect(async () => {\r\n    supported = \"contacts\" in navigator && \"ContactsManager\" in window;\r\n    if (supported === true) {\r\n      SetIsMobile(true);\r\n    } else {\r\n      SetIsMobile(false);\r\n    }\r\n  }, []);\r\n\r\n  const readExcel = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n\r\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n\r\n        const wsname = wb.SheetNames[0];\r\n\r\n        const ws = wb.Sheets[wsname];\r\n\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n        resolve(data);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        console.log(error);\r\n        reject(error);\r\n      };\r\n    });\r\n\r\n    promise.then((d) => {\r\n      console.log(d);\r\n      let result = d.map((data) => data.Contact);\r\n\r\n      console.log(result);\r\n      let Status = \"\";\r\n      result = result.map((data) => {\r\n        if (typeof data === \"string\") {\r\n          if (data.includes(\"+\")) {\r\n          } else {\r\n            data = \"+91\" + data;\r\n          }\r\n        } else {\r\n          data = \"+91\" + data;\r\n        }\r\n        let jdata = { By: data, Status: Status };\r\n        return jdata;\r\n      });\r\n      console.log(result);\r\n      setguestList([...guestList, ...result]);\r\n      setlist([...guestList, ...result]);\r\n      setDisabled(false);\r\n    });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    debugger;\r\n    let Listcpy = [];\r\n    let accept = [];\r\n    let decline = [];\r\n    let maybe = [];\r\n    let RSVPList = []\r\n    let all = [];\r\n    let Participants = [];\r\n    if (\r\n      props.location.pathname ===\r\n      \"/MyEvents/Manage-GuestList/\" +\r\n      props.match.params.id +\r\n      \"/\" +\r\n      props.match.params.invno\r\n    ) {\r\n      await setEventdata(MyEvents[props.match.params.id]);\r\n      await setbase(\"MyEvents\");\r\n      await Set_id(MyEvents[props.match.params.id][props.match.params.invno]._id);\r\n      await setguestList(MyEvents[props.match.params.id][props.match.params.invno].RSVPList);\r\n      RSVPList = MyEvents[props.match.params.id][props.match.params.invno].RSVPList;\r\n      Participants = MyEvents[props.match.params.id][props.match.params.invno].Participants\r\n    } else {\r\n      await setEventdata(myInvitations[props.match.params.id]);\r\n      await setbase(\"inv\");\r\n      await Set_id(myInvitations[props.match.params.id][props.match.params.invno]._id);\r\n      await setguestList(myInvitations[props.match.params.id][props.match.params.invno].RSVPList);\r\n      RSVPList = myInvitations[props.match.params.id][props.match.params.invno].RSVPList;\r\n      Participants = MyEvents[props.match.params.id][props.match.params.invno].Participants\r\n    }\r\n    RSVPList.map((rsvp) => {\r\n      if (rsvp.Status === \"Accept\") {\r\n        accept.push(rsvp);\r\n      }\r\n      if (rsvp.Status === \"Decline\") {\r\n        decline.push(rsvp);\r\n      }\r\n      if (rsvp.Status === \"May Be\") {\r\n        maybe.push(rsvp);\r\n      }\r\n    });\r\n\r\n    let allrsvp = accept.concat(decline);\r\n    allrsvp = allrsvp.concat(maybe);\r\n    let Status = \"invited\";\r\n    for (let j = 0; j < Participants.length; j++) {\r\n      let Status = \"invited\";\r\n      let found = false;\r\n      for (let k = 0; k < allrsvp.length; k++) {\r\n        if (\r\n          allrsvp[k].By === Participants[j] ||\r\n          allrsvp[k].By === \"+91\" + Participants[j]\r\n        ) {\r\n          Status = allrsvp[k].Status;\r\n          found = true;\r\n          break;\r\n        } else {\r\n        }\r\n      }\r\n\r\n      if (Participants[j].toString().startsWith(\"+\")) {\r\n        Listcpy.push(Participants[j]);\r\n        all.push({ By: Participants[j], Status: Status });\r\n      } else {\r\n        Listcpy.push(\"+91\" + Participants[j]);\r\n        all.push({ By: \"+91\" + Participants[j], Status: Status });\r\n      }\r\n      found = false;\r\n    }\r\n    setlist(all);\r\n    setguestList(all);\r\n  }, [MyEvents]);\r\n\r\n  const deleteparticipant = async (by) => {\r\n    let all = guestList;\r\n\r\n    all = all.filter((allcontact) => {\r\n      return by != allcontact.By;\r\n    });\r\n    console.log(all);\r\n    await setguestList([]);\r\n    await setguestList(all);\r\n  };\r\n  const removeall = () => {\r\n    setguestList([]);\r\n    setDisabled(false);\r\n  };\r\n  const openContactPicker = async () => {\r\n    try {\r\n      let ldata = [];\r\n      let number = \"\";\r\n      const contacts = await navigator.contacts.select(attribute, opts);\r\n\r\n      contacts.map(async (contact) => {\r\n        if (contact.tel.length > 1) {\r\n          if (contact.tel[0].includes(\"+\")) {\r\n            await ldata.push(contact.tel[0]);\r\n          } else {\r\n            await ldata.push('+91' + contact.tel[0]);\r\n          }\r\n\r\n\r\n        } else {\r\n          await ldata.push(contact.tel[0]);\r\n        }\r\n      });\r\n\r\n      console.log(ldata);\r\n      let Status = \"\";\r\n      ldata = ldata.map((data) => {\r\n        if (typeof data === \"string\") {\r\n          if (data.startsWith(\"+\")) {\r\n          } else {\r\n            data = \"+91\" + data;\r\n          }\r\n        } else {\r\n          data = \"+91\" + data;\r\n        }\r\n        let jdata = { By: data, Status: Status };\r\n        return jdata;\r\n      });\r\n      console.log(ldata);\r\n      setguestList([...guestList, ...ldata]);\r\n      setlist(ldata);\r\n      setDisabled(false);\r\n      await setlist([...ldata]);\r\n      console.log(_id);\r\n      let participants = [...ldata];\r\n      // await dispatch(update_participants(_id, participants));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  function save() {\r\n    let listdata = [];\r\n    guestList.map((data) => {\r\n      listdata.push(data.By);\r\n    });\r\n    setguestList(guestList);\r\n    setlist(guestList);\r\n    setDisabled(true);\r\n    console.log(listdata);\r\n    dispatch(update_participants(_id, listdata));\r\n  }\r\n  function cancelchanges() {\r\n    setguestList(list);\r\n    setDisabled(true);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        animation={false}\r\n        className=\"delete-modal\"\r\n      >\r\n        {/* <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\"></Modal.Title>\r\n      </Modal.Header> */}\r\n        <Modal.Body>\r\n          <p> Do You Want to Remove all Participants ?</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleClose} variant=\"danger\">\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} variant=\"success\">\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Container className=\"guest-box\">\r\n        <Row style={{ marginTop: 30, marginRight: 3, marginLeft: 3 }}>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            />\r\n            Manage Guest\r\n          </p>\r\n        </Row>\r\n        <Row className=\"m-1\">\r\n          <Col xs={false} md={6}></Col>\r\n          <Col>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"w-100 label\"\r\n              onClick={() => {\r\n                removeall();\r\n              }}\r\n            >\r\n              Remove All\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              variant=\"info\"\r\n              className=\"w-100 label\"\r\n              style={{ display: isMobile === true ? \"block\" : \"none\" }}\r\n              onClick={() => {\r\n                openContactPicker();\r\n              }}\r\n            >\r\n              Add Participants\r\n            </Button>\r\n            <>\r\n              <label\r\n                htmlFor=\"input\"\r\n                className=\"btn btn-info label\"\r\n                style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n              >\r\n                Add Participants\r\n              </label>\r\n              <input\r\n                id=\"input\"\r\n                type=\"file\"\r\n                accept=\".xlsx\"\r\n                onChange={(e) => {\r\n                  const file = e.target.files[0];\r\n                  readExcel(file);\r\n                }}\r\n                placeholder=\"Add Participants\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginLeft: \"auto\" }}>\r\n          <Col>\r\n            <ListGroup className=\"list-data\">\r\n              {guestList.map((guest, index) => (\r\n                <ListGroup.Item className=\"m-1\">\r\n                  <Row className=\"m-0 \">\r\n                    <Col xs={2} md={1}>\r\n                      <Userdataurl\r\n                        showIcon={true}\r\n                        Phone={guest.By}\r\n                        key={index}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={8} md={10}>\r\n                      <Row className=\"m-0 \">\r\n                        <Userdataurl showName={true} Phone={guest.By} />\r\n                      </Row>\r\n                      <Row className=\"m-0 \">\r\n                        <span\r\n                          className={\r\n                            \"status \" + guest.Status === \"Accept\"\r\n                              ? \"user-accept \"\r\n                              : guest.Status === \"Decline\"\r\n                                ? \"user-decline\"\r\n                                : guest.Status === \"May Be\"\r\n                                  ? \"user-maybe\"\r\n                                  : \"user-invited\"\r\n                          }\r\n                        >\r\n                          {guest.Status || \"\"}\r\n                        </span>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={2} md={1}>\r\n                      <HighlightOffRoundedIcon\r\n                        color=\"error\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          setDisabled(false);\r\n                          deleteparticipant(guest.By);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n              {/* {list.map((item) => (\r\n                <ListGroup.Item className=\"m-1\">\r\n                  <Row className=\"m-0 \">\r\n                    <Col xs={2} md={1}>\r\n                      <Userdataurl showIcon={true} Phone={item} />\r\n                    </Col>\r\n                    <Col xs={8} md={10}>\r\n                      <Row className=\"m-0 \">\r\n                        <Userdataurl showName={true} Phone={item} />\r\n                      </Row>\r\n                      <Row className=\"m-0 \"></Row>\r\n                    </Col>\r\n                    <Col xs={2} md={1}>\r\n                      <HighlightOffRoundedIcon color=\"error\" fontSize=\"large\" />\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))} */}\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n        {isDisable === true ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"lg\"\r\n              className=\"fr label\"\r\n              onClick={() => {\r\n                cancelchanges();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              className=\"fr label\"\r\n              onClick={() => {\r\n                save();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Sidebar\\AdminSidebar.js",["835","836","837","838"],"import React from \"react\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Component } from \"react\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nexport default function AdminSidebar(props) {\r\n  let Eventdata = [];\r\n  let base = \"\";\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  if (props.location.pathname === \"/MyEvents/admin/\" + props.match.params.id) {\r\n    Eventdata = MyEvents;\r\n    base = \"MyEvents\";\r\n  } else {\r\n    Eventdata = myInvitations;\r\n    base = \"inv\";\r\n  }\r\n  console.log(Eventdata);\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\r\n        <Row>\r\n          <Col>\r\n            <p style={{\r\n                fontWeight: 600,\r\n                fontSize: 20,\r\n                paddingLeft: \"10px\",\r\n                marginBottom: 20,\r\n                marginTop: 20,\r\n            \r\n              }}>\r\n              <IoArrowBackCircleOutline\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Admin\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        {Eventdata &&\r\n          Eventdata.map((eventdata, index) => (\r\n            <a\r\n              className=\"linkto-rows\"\r\n              onClick={() => {\r\n                history.push(\r\n                  \"/\" + base + \"/admin/\" + props.match.params.id + \"/\" + index\r\n                );\r\n              }}\r\n            >\r\n              <Row className=\"sidebar-rows\">\r\n                <Col style={{ margin: \"auto\", padding: \"10px\" }}>{eventdata.Name}</Col>\r\n                <Col>\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </Col>\r\n              </Row>\r\n            </a>\r\n          ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Guest\\Guest.js",["839","840","841","842","843","844","845"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Image, Tab, Tabs } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"../Guest/Guest.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport Userdataurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Guest(props) {\r\n  const [Events, setEvents] = useState([]);\r\n  const [guestList, setguestList] = useState([]);\r\n  const [guestListaccept, setguestListaccept] = useState([]);\r\n  const [guestListdecline, setguestListdecline] = useState([]);\r\n  const [guestListmaybe, setguestListmaybe] = useState([]);\r\n  const [isAdmin, setisAdmin] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [base, setbase] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n    debugger;\r\n    let RSVPList = []\r\n    let Participants = []\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/guestlist/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.invno && MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n        await setbase(\"MyEvents\");\r\n        await setEvents(Eventdata);\r\n        console.log(MyEvents[props.match.params.id][props.match.params.invno].RSVPList);\r\n        await setguestList([...MyEvents[props.match.params.id][props.match.params.invno].RSVPList,\r\n        ...MyEvents[props.match.params.id][props.match.params.invno].Host]);\r\n        RSVPList = MyEvents[props.match.params.id][props.match.params.invno].RSVPList;\r\n        if (MyEvents[props.match.params.id][props.match.params.invno].Host.includes(Auth.Phone)) {\r\n          setisAdmin(true);\r\n        } else {\r\n          setisAdmin(false);\r\n        }\r\n        let data = MyEvents[props.match.params.id][props.match.params.invno]\r\n        Participants = [...data.Participants,\r\n        ...data.Host];\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/guestlist/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.invno && myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n        await setbase(\"inv\");\r\n        await setEvents(Eventdata);\r\n        await setguestList([...myInvitations[props.match.params.id][props.match.params.invno].RSVPList,\r\n        ...myInvitations[props.match.params.id][props.match.params.invno].Host]);\r\n        RSVPList = myInvitations[props.match.params.id][props.match.params.invno].RSVPList;\r\n        if (myInvitations[props.match.params.id][props.match.params.invno].Host.includes(Auth.Phone)) {\r\n          setisAdmin(true);\r\n        } else {\r\n          setisAdmin(false);\r\n        }\r\n        let data = myInvitations[props.match.params.id][props.match.params.invno]\r\n        Participants = [...data.Participants,\r\n        ...data.Host];\r\n\r\n      }\r\n\r\n      let accept = [];\r\n      let decline = [];\r\n      let maybe = [];\r\n\r\n      RSVPList.map((rsvp) => {\r\n        if (rsvp.Status === \"Accept\") {\r\n          accept.push(rsvp);\r\n        }\r\n        if (rsvp.Status === \"Decline\") {\r\n          decline.push(rsvp);\r\n        }\r\n        if (rsvp.Status === \"May Be\") {\r\n          maybe.push(rsvp);\r\n        }\r\n      });\r\n\r\n      let all = [];\r\n      debugger;\r\n\r\n\r\n      let allrsvp = accept.concat(decline);\r\n      allrsvp = allrsvp.concat(maybe);\r\n      let Status = \"Invited\";\r\n      for (let j = 0; j < Participants.length; j++) {\r\n        let Status = \"Invited\";\r\n        let found = false;\r\n        for (let k = 0; k < allrsvp.length; k++) {\r\n          if (\r\n            allrsvp[k].By === Participants[j] ||\r\n            allrsvp[k].By === \"+91\" + Participants[j]\r\n          ) {\r\n            Status = allrsvp[k].Status;\r\n            found = true;\r\n            break;\r\n          } else {\r\n            console.log(\"x\");\r\n          }\r\n        }\r\n\r\n        if (Participants[j].toString().startsWith(\"+\")) {\r\n          all.push({ By: Participants[j], Status: Status });\r\n        } else {\r\n          all.push({ By: \"+91\" + Participants[j], Status: Status });\r\n        }\r\n        found = false;\r\n      }\r\n      setguestList(all);\r\n      setguestListaccept(accept);\r\n      setguestListdecline(decline);\r\n      setguestListmaybe(maybe);\r\n    }\r\n  }, [myInvitations, MyEvents]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <Container className=\"guest-box\">\r\n        <Row\r\n          style={{\r\n            marginTop: 30,\r\n            marginRight: 3,\r\n            marginLeft: 3,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Col xs={9}>\r\n            <p style={{ fontWeight: \"bold\", fontSize: 20 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={32}\r\n                onClick={() => {\r\n                  console.log(\r\n                    \"/\" + base + \"/eventpage/\" + props.match.params.id\r\n                  );\r\n                  history.push(\r\n                    \"/\" + base + \"/eventpage/\" + props.match.params.id\r\n                  );\r\n                }}\r\n              />\r\n              View Guest\r\n            </p>\r\n          </Col>\r\n          <Col>\r\n            {isAdmin === true ? (\r\n              <span\r\n                style={{ fontWeight: \"500\", fontSize: 20 }}\r\n                onClick={() => {\r\n                  history.push(\r\n                    \"/MyEvents\" +\r\n                    \"/Manage-GuestList/\" +\r\n                    props.match.params.id +\r\n                    \"/\" +\r\n                    props.match.params.invno\r\n                  );\r\n                }}\r\n              >\r\n                <SupervisedUserCircleIcon />\r\n                <span className=\"manage_guest\">Manage Guests</span>\r\n              </span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ marginLeft: \"auto\" }}>\r\n          <Col>\r\n            <Tabs defaultActiveKey=\"All\">\r\n              <Tab eventKey=\"All\" title=\"All\">\r\n                {guestList.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept\"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n\r\n              <Tab eventKey=\"Accept\" title=\"Accept\">\r\n                {guestListaccept.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n              <Tab eventKey=\"Decline\" title=\"Decline\">\r\n                {guestListdecline.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n              <Tab eventKey=\"Maybe\" title=\"Maybe\">\r\n                {guestListmaybe.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Admin\\EventAdmin.js",["846","847","848","849","850","851","852","853","854","855","856","857","858"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport Toggler from \"../Helpers/EventInvitoggler/Toggler.js\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"./EventAdmin.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport axios from \"axios\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function EventAdmin(props) {\r\n  const dispatch = useDispatch();\r\n  const [options, setoptions] = useState({\r\n    labels: [\"Yes\", \"No\", \"Maybe\", \"N/A\"],\r\n    colors: [\"#008744\", \"#E74D5F\", \"#FFA700\", \"#0000fa\"],\r\n  });\r\n  const [series, setseries] = useState([1, 1, 1, 1]);\r\n  const [comment, setcomment] = useState(\"\");\r\n  const [base, setbase] = useState(\"\")\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [Eventdata, setEventdata] = useState(\"\")\r\n  const [Rsvplist, setRsvplist] = useState([])\r\n  let MyEvents = useSelector(\r\n    (state) =>\r\n      state.Eventdata.myEvents\r\n  );\r\n\r\n  useEffect(async () => {\r\n    debugger\r\n    if (MyEvents && MyEvents.length > 0) {\r\n      let Rsvplistcpy = []\r\n      let accept = [];\r\n      let decline = [];\r\n      let maybe = [];\r\n      let Participants = []\r\n      let Host = []\r\n      let all = []\r\n      await setEventdata(MyEvents[props.match.params.id][props.match.params.eid])\r\n      await setRsvplist(MyEvents[props.match.params.id][props.match.params.eid])\r\n      await setRsvplist(MyEvents[props.match.params.id][props.match.params.eid].RSVPList)\r\n      Participants = MyEvents[props.match.params.id][props.match.params.eid].Participants;\r\n      Host = MyEvents[props.match.params.id][props.match.params.eid].Host;\r\n      if (MyEvents[props.match.params.id][props.match.params.eid].RSVPList !== undefined || MyEvents[props.match.params.id][props.match.params.eid].RSVPList.length > 0) {\r\n        Rsvplistcpy = [...MyEvents[props.match.params.id][props.match.params.eid].RSVPList] || [];\r\n\r\n        Rsvplistcpy.map((rsvp) => {\r\n          if (!Host.includes(rsvp.By)) {\r\n            if (rsvp.Status === \"Accept\") {\r\n              accept.push(rsvp);\r\n            }\r\n            if (rsvp.Status === \"Decline\") {\r\n              decline.push(rsvp);\r\n            }\r\n            if (rsvp.Status === \"May Be\") {\r\n              maybe.push(rsvp);\r\n            }\r\n          }\r\n\r\n        });\r\n        let allrsvp = accept.concat(decline);\r\n        allrsvp = allrsvp.concat(maybe);\r\n        for (let j = 0; j < Participants.length; j++) {\r\n          let Status = \"invited\";\r\n          let found = false;\r\n          for (let k = 0; k < allrsvp.length; k++) {\r\n            if (\r\n              allrsvp[k].By === Participants[j] ||\r\n              allrsvp[k].By === \"+91\" + Participants[j]\r\n            ) {\r\n              Status = allrsvp[k].Status;\r\n              found = true;\r\n              break;\r\n            } else {\r\n              console.log(\"x\");\r\n            }\r\n          }\r\n\r\n          if (Participants[j].toString().startsWith(\"+\")) {\r\n            all.push({ By: Participants[j], Status: Status });\r\n          } else {\r\n            all.push({ By: \"+91\" + Participants[j], Status: Status });\r\n          }\r\n          found = false;\r\n        }\r\n        setseries([accept.length, decline.length, maybe.length, Participants.length - (accept.length + decline.length + maybe.length)]);\r\n        console.log(90, [accept.length, decline.length, maybe.length, Participants.length - (accept.length + decline.length + maybe.length)])\r\n      }\r\n      else {\r\n        setseries([0, 0, 0, Participants.length]);\r\n        console.log(94, [0, 0, 0, Participants.length])\r\n      }\r\n    } else {\r\n      await dispatch(GetEvents());\r\n\r\n    }\r\n\r\n  }, [MyEvents])\r\n  const submit = () => {\r\n    if (comment !== \"\") {\r\n      console.log({\r\n        message: comment,\r\n        Participants: Eventdata.Participants,\r\n        by: Auth.Phone,\r\n        img: Eventdata.file,\r\n        Eid: Eventdata._id,\r\n        Maincode: Eventdata.MainCode,\r\n      });\r\n\r\n      axios\r\n        .post(url + \"notification/sendNotifications\", {\r\n          message: comment,\r\n          Participants: Eventdata.Participants,\r\n          by: Auth.Phone,\r\n          img: Eventdata.file,\r\n          Eid: Eventdata._id,\r\n          Maincode: Eventdata.MainCode,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.data) {\r\n            console.log(res.data.data);\r\n            setcomment(\"\");\r\n            alert(\"message Sent as Notification\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"message failed \");\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container style={{ marginTop: 25 }}>\r\n        <Row>\r\n          <Col>\r\n            <p style={{ fontWeight: 700, fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Event\r\n            </p>\r\n          </Col>\r\n          <Col>\r\n            {/* <Button\r\n                  variant=\"dark\"\r\n                  style={{ float: \"right\", borderRadius: 20 }}\r\n                  className=\"edit-eventbtn\"\r\n                  onClick={() => {\r\n                    history.push(\r\n                      \"/\" + base + \"/Manage-Event/\" +\r\n                      props.match.params.id +\r\n                      \"/\" +\r\n                      props.match.params.eid\r\n                    );\r\n                  }}\r\n                >\r\n                  Edit Event\r\n                </Button> */}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Chart\r\n          options={options}\r\n          series={series}\r\n          type=\"donut\"\r\n          width=\"400\"\r\n          style={{\r\n            margin: \"auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        />\r\n        <Row style={{ justifyContent: \"center\" }}>\r\n          <Col>\r\n            {Eventdata && Eventdata.EntryWay === \"Code\" ? <>\r\n\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className=\"tac m-b-25px clipboard\"\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(\r\n                    \"https://mobillyinvite.com/MyInvitations/\" + Eventdata.MainCode + \"/\" + Eventdata.code\r\n                  );\r\n                }}\r\n              >\r\n                <Grid container spacing={0} >\r\n                  <Grid item xs={10} md={11} className=\"link\" >\r\n                    {\"https://mobillyinvite.com/MyInvitations/xxxxx\"\r\n                    }\r\n\r\n                  </Grid>\r\n                  <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                    <FileCopyIcon className=\"v-t\" />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n            </> : <> <Grid\r\n              item\r\n              xs={12}\r\n              className=\"tac m-b-25px clipboard\"\r\n              onClick={() => {\r\n                navigator.clipboard.writeText(\r\n                  \"https://mobillyinvite.com/MyInvitations/\" +\r\n                  Eventdata.MainCode\r\n                );\r\n              }}\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={10} md={11} className=\"link\">\r\n                  {\"https://mobillyinvite.com/xxxxx\"}\r\n                </Grid>\r\n                <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                  <FileCopyIcon className=\"v-t\" />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid></>}\r\n\r\n          </Col>\r\n        </Row>\r\n        {/* <Row className=\"messageboard\">\r\n          <h3 className=\"messageboard-txt\">Message Board</h3>\r\n        </Row>\r\n        <Row style={{ justifyContent: \"center\" }}>\r\n          {\" \"}\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={6}\r\n            placeholder=\"Write text here\"\r\n            style={{ marginTop: 10 }}\r\n            onChange={(e) => {\r\n              setcomment(e.target.value);\r\n            }}\r\n            value={comment}\r\n          />\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            style={{ width: \"40vh\", borderRadius: 20, marginTop: 30 }}\r\n            onClick={() => {\r\n              submit();\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Row> */}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\jitsi\\Jitsivc.js",["859"],"import React from \"react\";\r\nimport Jitsi from \"react-jitsi\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Jutsu } from \"react-jutsu\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nexport default function Jitsivc(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Jutsu\r\n        roomName={props.match.params.id}\r\n        displayName={Auth.Name}\r\n        onMeetingEnd={() => history.goBack()}\r\n        loadingComponent={<p>loading ...</p>}\r\n        errorComponent={<p>Oops, something went wrong</p>}\r\n        // domain=\"live.mobillyinvite.com\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\EditEvent\\EditEvent.js",["860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./EditEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Map from \"../Helpers/Maps/Places\";\r\nimport AddImg from \"../../Assets/AddImage.svg\";\r\nimport { Grid, InputLabel, Select, FormControl } from \"@material-ui/core\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\nimport Eventnamebox from \"../AddEvent/CreateEvent/EventNameBox\";\r\nimport history from \"../../Utils/History\";\r\nimport { json } from \"body-parser\";\r\nimport { update_events } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { deletefile, uploadString } from \"../../Utils/FileUpload_Download\";\r\nexport default function EditEvent(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"lightgrey !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [base, setbase] = useState(\"\");\r\n  const [maincode, setmaincode] = useState(\"\");\r\n  const [IsSubmitted, setIsSubmitted] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n  const [isfileChanged, setisfileChanged] = useState(false);\r\n  const [changedfiles, setchangedfiles] = useState([\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n  ]);\r\n  const [urltype, seturltype] = useState(\"\");\r\n  const [selectedEvent, setselectedEvent] = useState(null);\r\n  const [_id, Set_id] = useState(\"\");\r\n  const [Type, SetType] = useState(\"Event\");\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [Fileurl, setFile] = useState(\"\");\r\n  const [Filetype, setFiletype] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Date, setDate] = useState(\"\");\r\n  const [Time, setTime] = useState(\"\");\r\n  const [VenueType, setVenueType] = useState(\"\");\r\n  const [Link, setLink] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [datacopy, setdatacopy] = useState([]);\r\n  const [urls, seturls] = useState([]);\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n\r\n  const [uniqueurl, setuniqueurl] = useState(\"\")\r\n  const checkIfEventEmpty = async () => {\r\n    debugger;\r\n    if (Type === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    }\r\n    console.log(Eventdata);\r\n    let Eventcpy = [...Eventdata];\r\n    let result = true;\r\n    let incompleteeventnumber = null;\r\n    //check for event first\r\n    Eventcpy = { ...Eventdata[selectedEvent] };\r\n    if (Eventcpy.Name === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Date === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Time === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Description === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (\r\n      Eventcpy.VenueType === \"Both\" &&\r\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n    ) {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.file === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.filetype === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    }\r\n\r\n    for (let i = 0; i < Eventdata.length; i++) {\r\n      incompleteeventnumber = i;\r\n      Eventcpy = { ...Eventdata[i] };\r\n      if (Eventcpy.Name === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Date === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Time === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Description === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (\r\n        Eventcpy.VenueType === \"Both\" &&\r\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n      ) {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.file === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.filetype === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    // console.log({ status: true, selectedEvent: null, component: \"\" });\r\n    setisError(false);\r\n    return 1;\r\n    // return { status: true, selectedEvent: null, component: \"\" };\r\n  };\r\n\r\n  useEffect(async () => {\r\n    grabdata();\r\n  }, []);\r\n\r\n  async function grabdata() {\r\n    await setselectedEvent(null);\r\n    if (\r\n      props.location.pathname ===\r\n      \"/MyEvents/Manage-Event/\" +\r\n      props.match.params.id +\r\n      \"/\" +\r\n      props.match.params.invno\r\n    ) {\r\n      await setEventdata(MyEvents);\r\n      await setmaincode(MyEvents[0].MainCode);\r\n      console.log(MyEvents[0].MainCode);\r\n      await setdatacopy(JSON.stringify({ MyEvents }));\r\n      await setbase(\"MyEvents\");\r\n      await SetType(MyEvents[0].InvId.Type);\r\n      await grabUrsl(MyEvents)\r\n    } else {\r\n      await setEventdata(myInvitations);\r\n      await setmaincode(myInvitations[0].MainCode);\r\n      await setdatacopy(JSON.stringify({ myInvitations }));\r\n      await setbase(\"inv\");\r\n      await SetType(myInvitations[0].InvId.Type);\r\n      await grabUrsl(myInvitations)\r\n    }\r\n\r\n    await setselectedEvent(0);\r\n  }\r\n  useEffect(() => {\r\n    console.log(Eventdata);\r\n    if (Eventdata.length !== 0 && selectedEvent !== null) {\r\n      setName(Eventdata[selectedEvent].Name);\r\n      setFile(Eventdata[selectedEvent].file);\r\n      setFiletype(Eventdata[selectedEvent].filetype);\r\n      setDate(Eventdata[selectedEvent].Date);\r\n      setTime(Eventdata[selectedEvent].Time);\r\n      setVenueType(Eventdata[selectedEvent].VenueType);\r\n      setLink(Eventdata[selectedEvent].Link);\r\n      if (Eventdata[selectedEvent].Location !== \"\") {\r\n        console.log(\r\n          Eventdata[selectedEvent].Location.split(\":\")[3]\r\n            .split('\"}')[0]\r\n            .split('\"')[1]\r\n        );\r\n\r\n        setaddress(\r\n          Eventdata[selectedEvent].Location.split(\":\")[3]\r\n            .split('\"}')[0]\r\n            .split('\"')[1]\r\n        );\r\n      }\r\n      setLocation(Eventdata[selectedEvent].Location);\r\n      setDescription(Eventdata[selectedEvent].Description);\r\n    }\r\n  }, [selectedEvent]);\r\n  const addevent = () => {\r\n    let events = {\r\n      Name: \"\",\r\n      Participants: [],\r\n      file: \"\",\r\n      filetype: \"\",\r\n      Date: \"\",\r\n      Time: \"\",\r\n      VenueType: \"Online\",\r\n      Location: \"\",\r\n      Link: \"\",\r\n      Description: \"\",\r\n      GuestInvite: false,\r\n      Host: \"\",\r\n      Co_Host: [],\r\n      Schedule: [],\r\n    };\r\n    let Eventdatacpy = [...Eventdata];\r\n    if (Eventdatacpy.length < 4) {\r\n      Eventdatacpy.push(events);\r\n      setEventdata(Eventdatacpy);\r\n    }\r\n  };\r\n  const removeevent = () => {\r\n    let Eventdatacpy = [...Eventdata];\r\n    if (Eventdatacpy.length > 1) {\r\n      Eventdatacpy.pop();\r\n      setEventdata(Eventdatacpy);\r\n    }\r\n  };\r\n  const save = async () => {\r\n    // console.log(Eventdata);\r\n    // console.log(changedfiles);\r\n    debugger\r\n    await preserve(selectedEvent);\r\n    let ischecked = await checkIfEventEmpty();\r\n    if (ischecked === 0) {\r\n      alert(\"something is missing\");\r\n    } else {\r\n      let Eventdatacpy = [...Eventdata];\r\n\r\n      //saveuploadedfiles\r\n\r\n      //  uniqueurl = Type + Math.floor(100000 + Math.random() * 900000) + \"/\";\r\n      for (let i = 0; i < Eventdatacpy.length; i++) {\r\n        console.log(Eventdatacpy[i])\r\n        console.log(changedfiles[i])\r\n        if (changedfiles[i].ischanged === true) {\r\n          alert(\"file at index \" + i + \" has changed\");\r\n          if (urls[i] === undefined) {\r\n            alert(\"url not found\")\r\n\r\n            let newurl = await uploadString(\r\n              changedfiles[i].fileurl,\r\n              urltype + uniqueurl + \"Event_image/\" + i + Eventdatacpy[i].Name.replaceAll(\" \", '')\r\n            );\r\n            Eventdatacpy[i].file = newurl;\r\n            console.log(newurl);\r\n          } else {\r\n            alert(\"url  found\")\r\n            console.log(\"uploading file\")\r\n            let newurl = await uploadString(\r\n              changedfiles[i].fileurl,\r\n              urls[i]\r\n            );\r\n            Eventdatacpy[i].file = newurl;\r\n            console.log(newurl);\r\n            console.log(urls[i])\r\n          }\r\n        } else {\r\n        }\r\n      }\r\n\r\n      await setEventdata(Eventdatacpy);\r\n      console.log(Eventdata);\r\n      dispatch(update_events(Type, Eventdata, maincode));\r\n    }\r\n  };\r\n\r\n  const preserve = async (i) => {\r\n    let Eventdatacpy = [...Eventdata];\r\n    Eventdatacpy[selectedEvent].Name = Name;\r\n    Eventdatacpy[selectedEvent].file = Fileurl;\r\n    Eventdatacpy[selectedEvent].filetype = Filetype;\r\n    Eventdatacpy[selectedEvent].Date = Date;\r\n    Eventdatacpy[selectedEvent].Time = Time;\r\n    Eventdatacpy[selectedEvent].VenueType = VenueType;\r\n    Eventdatacpy[selectedEvent].Link = Link;\r\n    Eventdatacpy[selectedEvent].Location = Location;\r\n    Eventdatacpy[selectedEvent].Description = Description;\r\n    await setEventdata(Eventdatacpy);\r\n    await setselectedEvent(i);\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    setisfileChanged(true);\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    setFiletype(type[1]);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let filedata = reader.result;\r\n      await setFile(filedata);\r\n      // uploadfile(filedata, type);\r\n      // console.log(filedata, type);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  async function uploadfile(fileurl, type, selectedEvent) {\r\n    debugger\r\n    let changedfilescpy = [...changedfiles];\r\n    console.log(selectedEvent);\r\n    if (fileurl.includes(\"https://firebasestorage\") || fileurl === \"\") {\r\n      return false;\r\n    }\r\n    if (selectedEvent === null) {\r\n      if (!changedfilescpy[0].fileurl.includes(\"https://firebasestorage\")) {\r\n        changedfilescpy[0].fileurl = fileurl;\r\n        changedfilescpy[0].type = type;\r\n        changedfilescpy[0].ischanged = true;\r\n        changedfilescpy[0].selectedEvent = 0\r\n      }\r\n\r\n    } else {\r\n      if (!changedfilescpy[selectedEvent].fileurl.includes(\"https://firebasestorage\")) {\r\n        changedfilescpy[selectedEvent].fileurl = fileurl;\r\n        changedfilescpy[selectedEvent].type = type;\r\n        changedfilescpy[selectedEvent].ischanged = true;\r\n        changedfilescpy[selectedEvent].selectedEvent = selectedEvent\r\n      }\r\n\r\n    }\r\n    console.log(changedfilescpy)\r\n    await setchangedfiles(changedfilescpy);\r\n  }\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  async function grabUrsl(eventdata) {\r\n    debugger\r\n    let urlscpy = [];\r\n    let fileurl = \"\"\r\n    let unuls = \"\"\r\n    eventdata.map((data, index) => {\r\n      console.log(data.file)\r\n      fileurl = data.file.split(\"https://firebasestorage.googleapis.com/v0/b/mobilly-invite.appspot.com/o/\")[1].split(\"?\")[0];\r\n      fileurl = fileurl.replaceAll(\"%2F\", \"/\");\r\n      fileurl = fileurl.split(\"Mob-invited/\")[1];\r\n      console.log(fileurl);\r\n      unuls = fileurl\r\n      setuniqueurl(fileurl.split(\"/Event_image\")[0].match(/\\d+/g)[0]);\r\n      seturltype(fileurl.split(\"/Event_image\")[0].match(/[a-zA-Z]+/g)[0]);\r\n      urlscpy.push(fileurl)\r\n    })\r\n    urlscpy = urlscpy.reverse()\r\n    await seturls(urlscpy)\r\n    console.log(urlscpy)\r\n  }\r\n  useEffect(async () => {\r\n    await uploadfile(Fileurl, Filetype, selectedEvent, selectedEvent)\r\n  }, [Fileurl])\r\n  return (\r\n    <div>\r\n      {/* <Header /> */}\r\n      <Container>\r\n        <Row style={{ marginTop: 30, marginRight: 3, marginLeft: 3 }}>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            />\r\n            Edit Events\r\n          </p>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              className=\"w-100-p  m-b-10 \"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.notchedOutline,\r\n                },\r\n              }}\r\n            >\r\n              <Select\r\n                native\r\n                value={Type}\r\n                onChange={(e) => SetType(e.target.value)}\r\n                className=\"selectboxblue\"\r\n              >\r\n                <option value={Type}>{Type}</option>\r\n                {Type !== \"Wedding\" ? (\r\n                  <option value=\"Wedding\">Wedding</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Birthday\" ? (\r\n                  <option value=\"Birthday\">Birthday</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Wedding Anniversary\" ? (\r\n                  <option value=\"Wedding Anniversary\">\r\n                    Wedding Anniversary\r\n                  </option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Get Together\" ? (\r\n                  <option value=\"Get Together\">Get Together</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Formal Event\" ? (\r\n                  <option value=\"Formal Event\">Formal Event</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Select>\r\n              {IsSubmitted === true && Type === \"\" ? (\r\n                <span className=\"error p-l-5px\">please enter Type</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </FormControl>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <div className=\"noe r4vw \">\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={false} sm={1} md={2} />\r\n                <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\r\n                  Number Of Events\r\n                </Grid>\r\n                <Grid item xs={5} sm={5} md={4}>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"Cirlce tar  fl\">\r\n                        <AddCircleOutlineIcon\r\n                          className=\"l-blue-t\"\r\n                          fontSize=\"large\"\r\n                          onClick={() => {\r\n                            addevent();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"white box  fl\">{Eventdata.length}</div>\r\n                      <div className=\"Cirlce tal  fl\">\r\n                        <RemoveCircleOutlineIcon\r\n                          className=\"l-blue-t \"\r\n                          fontSize=\"large\"\r\n                          onClick={() => {\r\n                            removeevent();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Container>\r\n          <Row>\r\n            <Eventnamebox\r\n              data={Eventdata}\r\n              SelectedEvent={selectedEvent}\r\n              SelectEvent={preserve}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12}>\r\n              {Fileurl === \"\" ? (\r\n                <center>\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <img\r\n                      src={AddImg}\r\n                      className={\"add-Img \"}\r\n                    // onClick={() => {\r\n                    //   toggleShowPopup(true);\r\n                    // }}\r\n                    />{\" \"}\r\n                  </div>\r\n                </center>\r\n              ) : Fileurl !== undefined && Filetype !== undefined ? (\r\n                Filetype === \"png\" ||\r\n                  Filetype === \"jpg\" ||\r\n                  Filetype === \"jpeg\" ? (\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <img\r\n                      src={Fileurl}\r\n                      className={\"notTransparent uploaded-file w-100\"}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <video\r\n                      muted\r\n                      type=\"video/mp4\"\r\n                      autoPlay={true}\r\n                      src={Fileurl}\r\n                      preload=\"none\"\r\n                      className={\"notTransparent w-100\"}\r\n                    />\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {IsSubmitted === true && Fileurl === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <span className=\"label\">Name</span>\r\n            <TextField\r\n              id=\"outlined-basics\"\r\n              variant=\"outlined\"\r\n              className=\"w-100-p\"\r\n              size=\"small\"\r\n              value={Name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.notchedOutline,\r\n                },\r\n              }}\r\n            />\r\n            {IsSubmitted === true && Name === \"\" ? (\r\n              <span className=\"error p-l-5px\">please enter Name</span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Row>\r\n          <Row>\r\n            <Col xs={6} md={6} className=\"p-5px\">\r\n              <span className=\"label\">Time</span>\r\n              <TextField\r\n                id=\"time\"\r\n                // label=\"Time\"\r\n                variant=\"outlined\"\r\n                type=\"time\"\r\n                size=\"small\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                className=\"w-100-p \"\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                ampm={false}\r\n                value={Time}\r\n                onChange={(e) => {\r\n                  setTime(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Time === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={6} md={6} className=\"p-5px\">\r\n              <span className=\"label\">Date</span>\r\n              <TextField\r\n                id=\"date\"\r\n                // label=\"Date\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size=\"small\"\r\n                className=\"w-100-p\"\r\n                value={Date}\r\n                onChange={(e) => {\r\n                  setDate(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Date === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={6} className=\"p-5px\">\r\n              <span className=\"label\">Type</span>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                className=\"w-100-p selectboxblue pob0\"\r\n                value={VenueType}\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n                size=\"small\"\r\n              >\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Online-Inapp\");\r\n                  }}\r\n                  value=\"Online-Inapp\"\r\n                >\r\n                  Online-Inapp\r\n                </MenuItem>\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Online\");\r\n                  }}\r\n                  value=\"Online\"\r\n                >\r\n                  Online\r\n                </MenuItem>\r\n\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Offline\");\r\n                  }}\r\n                  value=\"Offline\"\r\n                >\r\n                  Offline\r\n                </MenuItem>\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Both\");\r\n                  }}\r\n                  value=\"Both\"\r\n                >\r\n                  Both\r\n                </MenuItem>\r\n              </Select>\r\n              {IsSubmitted === true && VenueType === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col\r\n              xs={6}\r\n              className=\"p-5px\"\r\n              style={{\r\n                display:\r\n                  VenueType === \"Online\" || VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              <span className=\"label\">Change Links </span>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className=\"w-100-p \"\r\n                value={Link}\r\n                onChange={(e) => {\r\n                  setLink(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Link === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col\r\n              xs={VenueType === \"Offline\" ? 6 : 12}\r\n              className=\"p-5px\"\r\n              style={{\r\n                display:\r\n                  VenueType === \"Offline\" || VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              <Map\r\n                setLocation={setLocation}\r\n                location={address}\r\n                setaddress={setaddress}\r\n                type={\"Offline\"}\r\n              />\r\n              {IsSubmitted === true && address === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={12} className=\"p-5px\">\r\n              <span className=\"label\">Description</span>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                // label=\"Description\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className=\"w-100-p m-7px \"\r\n                value={Description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Description === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n      <div className=\"update\">\r\n        <center>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"update-buttons\"\r\n            onClick={() => {\r\n              save();\r\n              setIsSubmitted(true);\r\n            }}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            className=\"update-buttons\"\r\n            onClick={() => {\r\n              //reload();\r\n              history.goBack();\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Sidebar\\SidebarMore.js",["883","884","885","886","887","888","889","890","891","892","893","894","895"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { IoArrowBackCircleOutline, IoCall } from \"react-icons/io5\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { Component } from \"react\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport DancingImg from \"../../Assets/DancingImg.png\";\r\nimport { GoBook } from \"react-icons/go\";\r\nimport { IoImagesSharp, IoPowerSharp } from \"react-icons/io5\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { logout } from '../../Redux/DispatchFuncitons/AuthFunctions'\r\nexport default function SidebarMore(props) {\r\n  const [base, setbase] = useState(\"\");\r\n  const [ishost, setishost] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (props.location.pathname === \"/MyEvents/more/\" + props.match.params.id && MyEvents.length > 0) {\r\n        await setEventdata(MyEvents[props.match.params.id])\r\n        await setbase(\"MyEvents\");\r\n        console.log(Eventdata)\r\n        var Host = MyEvents[props.match.params.id][0].InvId.Host;\r\n        for (var i = 0; i < Host.length; i++) {\r\n          if (Host[i] === Auth.Phone) {\r\n            await setishost(true);\r\n            console.log(ishost)\r\n          }\r\n        }\r\n      } else if (props.location.pathname === \"/inv/more/\" + props.match.params.id && myInvitations.length > 0) {\r\n\r\n        await setEventdata(myInvitations[props.match.params.id])\r\n        await setbase(\"inv\");\r\n        console.log(Eventdata)\r\n        var Host = myInvitations[props.match.params.id][0].InvId.Host;\r\n        for (var i = 0; i < Host.length; i++) {\r\n          if (Host[i] === Auth.Phone) {\r\n            await setishost(true);\r\n            console.log(ishost)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [myInvitations, MyEvents]);\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\r\n        <Row>\r\n          <Col>\r\n            <p\r\n              style={{\r\n                fontWeight: 600,\r\n                fontSize: 20,\r\n                paddingLeft: \"10px\",\r\n                marginBottom: 20,\r\n                marginTop: 20,\r\n                \r\n              }}\r\n            >\r\n              <IoArrowBackCircleOutline\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              More\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Image src={DancingImg} className=\"sidebar_img\" />\r\n        <a\r\n          className=\"linkto-rows\"\r\n          onClick={() => {\r\n            history.push(\"../\" + \"story/\" + props.match.params.id);\r\n          }}\r\n        >\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <GoBook size=\"25\" /> Our Story\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n\r\n        {/* <a\r\n          className=\"linkto-rows\"\r\n          onClick={() => {\r\n            history.push(\"../\" + \"albums/\" + props.match.params.id);\r\n          }}\r\n        >\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                {\" \"}\r\n                <IoImagesSharp size=\"25\" /> Albums\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n        {ishost === true ? (\r\n          <a\r\n            className=\"linkto-rows\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/\" + \"admin/\" + props.match.params.id);\r\n            }}\r\n          >\r\n            <Row className=\"sidebar-rows\">\r\n              <Col>\r\n                <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                  <FaUserAlt size=\"20\" /> Admin\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p>\r\n                  {\" \"}\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {/* \r\n        <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Templates</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        {/*  <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Articles</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        {/*  <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>About Us</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <IoCall size=\"25\" /> Contact Us\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        <a className=\"linkto-rows\" onClick={() => { dispatch(logout()) }}>\r\n          <Row className=\"sidebar-rows\">\r\n\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <IoPowerSharp size=\"25\" /> Logout\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n\r\n        {/* <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Recommendaton</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        {/*  <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Prices</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\FD\\Fd.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Settings\\AlertNotif\\AlertNotif.js",["896"],"import { Button, Modal } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nclass AlertNotif extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showHide: false,\r\n    };\r\n  }\r\n\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"primary\" onClick={() => this.handleModalShowHide()}>\r\n          Alert Notification\r\n        </Button>\r\n        <Modal show={this.state.showHide}>\r\n          <CancelIcon\r\n            onClick={() => this.handleModalShowHide()}\r\n            color=\"secondary\"\r\n            className=\"popup-close\"\r\n            style={{\r\n              float: \"left\",\r\n              height: 40,\r\n              width: 40,\r\n              marginLeft: 430,\r\n              marginTop: 10,\r\n            }}\r\n          />\r\n          <Modal.Body>\r\n            <div className=\"NotificationsAlerts p-5\">\r\n              <h4 className=\"pb-3\" style={{ fontWeight: \"bold\" }}>\r\n                Notifications Alerts\r\n              </h4>\r\n              <br />\r\n              <div\r\n                className=\"Alerts-box1  p-3 mb-3\"\r\n                style={{\r\n                  boxShadow: \"0px 0px 10px 4px #f0efef\",\r\n                  borderRadius: 10,\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 col-6\">\r\n                    <h6>All</h6>\r\n                  </div>\r\n                  <div className=\"col-md-6 col-6\">\r\n                    <label className=\"radio-inline\" style={{ float: \"right\" }}>\r\n                      <input type=\"radio\" name=\"notifalert\" />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"Alerts-box1  p-3 mb-3\"\r\n                style={{\r\n                  boxShadow: \"0px 0px 10px 4px #f0efef\",\r\n                  borderRadius: 10,\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 col-6\">\r\n                    <h6>Admin</h6>\r\n                  </div>\r\n                  <div className=\"col-md-6 col-6\">\r\n                    <label className=\"radio-inline\" style={{ float: \"right\" }}>\r\n                      <input type=\"radio\" name=\"notifalert\" />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"Alerts-box1  p-3 mb-3\"\r\n                style={{\r\n                  boxShadow: \"0px 0px 10px 4px #f0efef\",\r\n                  borderRadius: 10,\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 col-6\">\r\n                    <h6>Only Me</h6>\r\n                  </div>\r\n                  <div className=\"col-md-6 col-6\">\r\n                    <label className=\"radio-inline\" style={{ float: \"right\" }}>\r\n                      <input\r\n                        className=\"buttonwrap\"\r\n                        type=\"radio\"\r\n                        name=\"notifalert\"\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <a href=\"#\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mt-3 p-2\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    borderRadius: 50,\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              </a>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertNotif;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\HomePage.js",["897","898"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport MainBanner from \"./MainBanner\";\r\nimport Contact from \"./ContactUs\";\r\nimport Footer from \"./Footer\";\r\nimport Testimonials from \"./Testimonials\";\r\nimport Features from \"./Features\";\r\nimport Additionals from \"./Additionals\";\r\nimport AboutBanner from \"./AboutBanner\";\r\nimport CompanySlide from \"./CompanySlide\";\r\nimport ChatWidget from \"./ChatWidget\";\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        \r\n        <MainBanner />\r\n        <ChatWidget />\r\n        <Features />\r\n        <AboutBanner />\r\n        <Additionals />\r\n        {/* <Testimonials />\r\n        <CompanySlide /> */}\r\n        <Contact />\r\n        <Footer />\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\ReducerCombiner.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Auth\\LoginSignup.js",["899"],"import React, { useState, useEffect } from \"react\";\r\nimport Login from \"../../Assets/Auth.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Auth.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport Timer from \"../Helpers/timer/timer\";\r\nimport {\r\n  loginuser,\r\n  getopt,\r\n  verifyotp,\r\n} from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport history from '../../Utils/History'\r\nexport default function LoginSignup() {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const [todo, settodo] = useState(0);\r\n  const [step, setStep] = useState(0);\r\n  const [number, setnumber] = useState(0);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [OTP, SetOPT] = useState();\r\n  const [Phone, setPhone] = useState(\"\");\r\n  let phone = \"\";\r\n  const handleClick = (e) => {\r\n    phone = \"+\" + number.toString();\r\n    if (phone.length < 9) {\r\n      setError(\"Invalid Phone Number\");\r\n    } else {\r\n      dispatch(getopt(phone));\r\n      setPhone(phone);\r\n      setStep(1);\r\n    }\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    dispatch(verifyotp(Phone, OTP));\r\n  };\r\n  useEffect(() => {\r\n    if (Auth.isLoggedIn === true) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [Auth.isLoggedIn])\r\n\r\n  useEffect(() => {\r\n    if (Auth.OTPStatus === true) {\r\n      if (Auth.isVerified === true) {\r\n        dispatch(loginuser(Phone));\r\n      } else if (Auth.isVerified === false) {\r\n        // setStep(1);\r\n      } else {\r\n        setError(\"please check the input\");\r\n      }\r\n    }\r\n  }, [Auth.isVerified, Auth.OTPStatus]);\r\n\r\n  if (step === 0) {\r\n    return (\r\n      <div>\r\n        <div id=\"sign-in-button\"></div>\r\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            Login\r\n            <p className=\"modal-title-description\">\r\n              Enter your Mobile Number and Verify to login\r\n            </p>\r\n            <p className=\"phno-text\" style={{ fontSize: 17, marginTop: 24 }}>\r\n              {\" \"}\r\n              Phone Number\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <PhoneInput\r\n              country={\"in\"}\r\n              value={number}\r\n              onChange={(phone) => setnumber(phone)}\r\n            />\r\n            <p className=\"error\">{Auth.Message || error}</p>\r\n\r\n            <button\r\n              onClick={(e) => {\r\n                handleClick(e);\r\n              }}\r\n              className=\"get-otp-button\"\r\n            >\r\n              Request OTP\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else if (step === 1) {\r\n    return (\r\n      <div>\r\n        <div id=\"recaptcha-container\" size=\"invisible\"></div>\r\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            Authorized OTP\r\n            <p className=\"modal-title-description\">\r\n              Enter the code you recieved on your number\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <span style={{ fontSize: 13, color: \"#727272\" }}>\r\n              Enter One Time Password (OTP)\r\n            </span>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <OtpInput\r\n              className=\"OTP\"\r\n              value={OTP}\r\n              onChange={(otp) => SetOPT(otp)}\r\n              numInputs={6}\r\n              separator={<span></span>}\r\n              inputStyle=\"Otp-block\"\r\n              isInputNum={true}\r\n            />\r\n            <p className=\"error\">{Auth.Message}</p>\r\n            <Row style={{ margin: \"auto\" }}>\r\n              <Col>\r\n                <button\r\n                  onClick={(e) => {\r\n                    handleCheck();\r\n                  }}\r\n                  className={todo ? \"resend-otp\" : \"get-otp-button\"}\r\n                >\r\n                  Verify\r\n                </button>\r\n              </Col>\r\n              <Col>\r\n                <button\r\n                  onClick={(e) => {\r\n                    handleClick(e);\r\n                  }}\r\n                  className={todo ? \"get-otp-button\" : \"resend-otp\"}\r\n                >\r\n                  Resend OTP\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <p\r\n              className=\"label w-100 tac\"\r\n              style={{ marginTop: 10, color: \"#727272\" }}\r\n            >\r\n              <Timer setStep={setStep} settodo={settodo} />\r\n            </p>\r\n          </Grid>\r\n          <p style={{ fontSize: 9, color: \"#727272\" }}>\r\n            By Continuing ,you agree to Mobillyinvite's{\" \"}\r\n            <b style={{ color: \"black\" }}>\r\n              Terms {\"&\"} Conditions, Privacy policy\r\n            </b>{\" \"}\r\n            and receving updated through WhatsAPP.\r\n          </p>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Banner.js",["900"],"import React, { useState } from \"react\";\r\nimport ModalVideo from \"react-modal-video\";\r\n\r\nimport BannerShape from \"../../Assets/shapes/banner-shape-1-1.png\";\r\nimport BannerBG from \"../../Assets/resources/banner-image-1-1.jpg\";\r\nimport BannerMoc from \"../../Assets/resources/banner-moc-1-1.png\";\r\n\r\nconst Banner = (props) => {\r\n  const [open, setOpen] = useState({\r\n    isOpen: false,\r\n  });\r\n  // const openModal = () => {\r\n  //   setOpen({\r\n  //     isOpen: true,\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <section className=\"banner-one\" id=\"home\">\r\n      <img src={BannerShape} className=\"banner-one__bg-shape-1\" alt=\"\" />\r\n      <div\r\n        className=\"banner-one__bg\"\r\n        style={{ backgroundImage: `url(${BannerBG})` }}\r\n      ></div>\r\n      <div className=\"container\">\r\n        <ModalVideo\r\n          channel=\"youtube\"\r\n          isOpen={open.isOpen}\r\n          videoId=\"Kl5B6MBAntI\"\r\n          onClose={() => setOpen({ isOpen: false })}\r\n        />\r\n        <div className=\"banner-one__video video-popup\">\r\n          <i className=\"fa fa-play\"></i>\r\n        </div>\r\n        <div className=\"banner-one__moc\">\r\n          <img\r\n            src={BannerMoc}\r\n            className=\"wow fadeInUp\"\r\n            data-wow-duration=\"1500ms\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-7\">\r\n            <div className=\"banner-one__content\">\r\n              <form\r\n                className=\"banner-one__mc-form mc-form\"\r\n                data-url=\"phone-number\"\r\n              >\r\n                {/* <input\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  pattern=\"[0-9]{10}\"\r\n                  required\r\n                /> */}\r\n                <button\r\n                  className=\"thm-btn banner-one__mc-btn\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    props.toggleShowPopup(true);\r\n                  }}\r\n                >\r\n                  <span>Sign In</span>\r\n                </button>\r\n              </form>\r\n              <div className=\"mc-form__response\"></div>\r\n              <h3>\r\n                A Smarter Way <br /> To Attend <br /> Events\r\n              </h3>\r\n              <p>\r\n                Invite people to celebrate your occasion. <br />\r\n                So easy and convinient.\r\n              </p>\r\n              <a href=\"#\" className=\"thm-btn banner-one__btn\">\r\n                <span>Discover More</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Clients.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\CTAOne.js",["901"],"import React from \"react\";\r\nimport BlockTitle from \"./BlockTitle\";\r\n\r\nimport CtaShape1 from \"../../Assets/shapes/cta-1-shape-1.png\";\r\nimport CtaShape2 from \"../../Assets/shapes/cta-1-shape-2.png\";\r\nimport CtaMoc1 from \"../../Assets/resources/cta-1-moc-1.png\";\r\n\r\nconst CTAOne = () => {\r\n  return (\r\n    <section className=\"cta-one\">\r\n      <img src={CtaShape1} className=\"cta-one__bg-shape-1\" alt=\"\" />\r\n      <img src={CtaShape2} className=\"cta-one__bg-shape-2\" alt=\"\" />\r\n      <div className=\"container\">\r\n        <div className=\"cta-one__moc wow fadeInLeft\" data-wow-duration=\"1500ms\">\r\n          <img src={CtaMoc1} className=\"cta-one__moc-img\" alt=\"\" />\r\n        </div>\r\n        <div className=\"row justify-content-end\">\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"cta-one__content\">\r\n              <BlockTitle\r\n                textAlign=\"left\"\r\n                paraText=\"More Features\"\r\n                titleText={`Manage Multiple Events \\n Simultaneously`}\r\n              />\r\n              <div className=\"cta-one__text\">\r\n                <p>\r\n                  Personal Events, Birthdays, Weddings, Destination Events and\r\n                  in Just One Platform.\r\n                </p>\r\n              </div>\r\n              <ul className=\"list-unstyled cta-one__list\">\r\n                <li>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                  Easy to Create in 5 Minutes\r\n                </li>\r\n                <li>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                  Social Timeline for Events\r\n                </li>\r\n                <li>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                  Customise and Invite at GO\r\n                </li>\r\n              </ul>\r\n              <a href=\"#\" className=\"thm-btn cta-one__btn\">\r\n                <span>Create Events</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CTAOne;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Contact.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\FAQ.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Footer.js",["902","903","904","905","906","907","908","909","910","911","912","913","914"],"import React from \"react\";\r\n\r\nimport FooterLogo from \"../../Assets/logo-1-1.png\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <footer className=\"site-footer\">\r\n        <div className=\"site-footer__upper\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"footer-widget footer-widget__about\">\r\n                  <a href=\"index.html\">\r\n                    <img src={FooterLogo} width=\"129\" alt=\"\" />\r\n                  </a>\r\n                  <p>\r\n                    Lorem Ipsum is simply dummy text the <br /> printing and\r\n                    setting industry. Lorm Ipsum\r\n                    <br /> has been the text ever.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-5\">\r\n                <div className=\"footer-widget__links-wrap\">\r\n                  <div className=\"footer-widget\">\r\n                    <h3 className=\"footer-widget__title\">Company</h3>\r\n                    <ul className=\"list-unstyled footer-widget__links-list\">\r\n                      <li>\r\n                        <a href=\"#\">About</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Our Team</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Contact</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"footer-widget\">\r\n                    <h3 className=\"footer-widget__title\">Explore</h3>\r\n                    <ul className=\"list-unstyled footer-widget__links-list\">\r\n                      <li>\r\n                        <a href=\"#\">News</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Features</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Free Trial</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"footer-widget\">\r\n                    <h3 className=\"footer-widget__title\">Links</h3>\r\n                    <ul className=\"list-unstyled footer-widget__links-list\">\r\n                      <li>\r\n                        <a href=\"#\">Help</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Privacy Policy</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Terms of Use</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 d-flex align-items-center justify-content-xl-end justify-content-lg-end justify-content-md-center justify-content-sm-center\">\r\n                <div className=\"footer-widget\">\r\n                  <div className=\"footer-widget__social\">\r\n                    <a href=\"#\">\r\n                      <i className=\"fab fa-facebook-square\"></i>\r\n                    </a>\r\n                    <a href=\"#\">\r\n                      <i className=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                    <a href=\"#\">\r\n                      <i className=\"fab fa-instagram\"></i>\r\n                    </a>\r\n                    <a href=\"#\">\r\n                      <i className=\"fab fa-pinterest-p\"></i>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"site-footer__bottom\">\r\n          <div className=\"container text-center\">\r\n            <p>© copyright 2020- Mobilly Invite</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Header.js",["915"],"import React, { useState, useEffect } from \"react\";\r\nimport NavLinks from \"./NavLinks\";\r\n\r\nimport LogoImage from \"../../Assets/logo-1-1.png\";\r\n\r\nconst HeaderHome = (props) => {\r\n  const [sticky, setSticky] = useState(false);\r\n\r\n  const handleScroll = () => {\r\n    if (window.scrollY > 70) {\r\n      setSticky(true);\r\n    } else if (window.scrollY < 70) {\r\n      setSticky(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    mobileMenu();\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n\r\n  const mobileMenu = () => {\r\n    document\r\n      .querySelector(\".side-menu__toggler\")\r\n      .addEventListener(\"click\", function (e) {\r\n        document.querySelector(\".side-menu__block\").classList.toggle(\"active\");\r\n        e.preventDefault();\r\n      });\r\n\r\n    //Close Mobile Menu\r\n    let sideMenuCloser = document.querySelectorAll(\r\n      \".side-menu__close-btn, .side-menu__block-overlay\"\r\n    );\r\n\r\n    sideMenuCloser.forEach((sideMenuCloserBtn) => {\r\n      sideMenuCloserBtn.addEventListener(\"click\", function (e) {\r\n        document.querySelector(\".side-menu__block\").classList.remove(\"active\");\r\n        e.preventDefault();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header\r\n      className={`site-header-one stricky  ${props.extraClassName} ${\r\n        sticky === true ? \"stricky-fixed stricked-menu\" : \" \"\r\n      }`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <div className=\"site-header-one__logo\">\r\n          <a href=\"/\">\r\n            <img src={LogoImage} width=\"129\" alt=\"\" />\r\n          </a>\r\n          <span className=\"side-menu__toggler\">\r\n            <i className=\"fa fa-bars\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"main-nav__main-navigation\">\r\n          <NavLinks />\r\n        </div>\r\n        <div className=\"main-nav__right\">\r\n          <a\r\n            className={`thm-btn ${props.btnClass}`}\r\n            onClick={() => {\r\n              props.toggleShowPopup(true);\r\n            }}\r\n          >\r\n            <span>SignUp/Login</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderHome;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Layout.js",["916"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst Layout = (props) => {\r\n  const [scrollTop, setScrollTop] = useState(false);\r\n\r\n  const handleScrollTop = () => {\r\n    if (window.scrollY > 70) {\r\n      setScrollTop(true);\r\n    } else if (window.scrollY < 70) {\r\n      setScrollTop(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScrollTop);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScrollTop);\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"page-wrapper\">{props.children}</div>\r\n\r\n      {scrollTop === true ? (\r\n        <ScrollLink\r\n          to=\"home\"\r\n          smooth={true}\r\n          duration={500}\r\n          className=\"scroll-to-top\"\r\n        >\r\n          <i className=\"fa fa-angle-up\"></i>\r\n        </ScrollLink>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Services.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\MobileMenu.js",["917","918","919","920","921"],"import React from \"react\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport CloseBtn from \"../../Assets/shapes/close-1-1.png\";\r\n\r\nconst MobileMenu = () => {\r\n  return (\r\n    <div className=\"side-menu__block\">\r\n      <div className=\"side-menu__block-overlay custom-cursor__overlay\">\r\n        <div className=\"cursor\"></div>\r\n        <div className=\"cursor-follower\"></div>\r\n      </div>\r\n      <div className=\"side-menu__block-inner \">\r\n        <div className=\"side-menu__top justify-content-end\">\r\n          <a href=\"#\" className=\"side-menu__toggler side-menu__close-btn\">\r\n            <img src={CloseBtn} alt=\"\" />\r\n          </a>\r\n        </div>\r\n\r\n        <nav className=\"mobile-nav__container\">\r\n          <NavLinks />\r\n        </nav>\r\n        <div className=\"side-menu__sep\"></div>\r\n        <div className=\"side-menu__content\">\r\n          <p>\r\n            Lorem Ipsum is simply dummy text the printing and setting industry.\r\n            Lorm Ipsum has been the industry's stanard dummy text ever.\r\n          </p>\r\n          <p>\r\n            <a href=\"mailto:teammobillyinvite@gmail.com\">\r\n              teammobillyinvite@gmail.com\r\n            </a>\r\n            <br />\r\n            <a href=\"tel:9348689987\">+91-9348689987</a>\r\n          </p>\r\n          <div className=\"side-menu__social\">\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-facebook-square\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-pinterest-p\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileMenu;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\CTATwo.js",["922"],"import React from \"react\";\r\nimport BlockTitle from \"./BlockTitle\";\r\n\r\nimport CTAImage1 from \"../../Assets/resources/cta-2-moc-1.png\";\r\nimport CTAImage2 from \"../../Assets/resources/cta-2-moc-2.png\";\r\nimport CTAImage3 from \"../../Assets/resources/cta-2-moc-3.png\";\r\n\r\nconst CTATwo = () => {\r\n  return (\r\n    <section className=\"cta-two\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"cta-two__content\">\r\n              <BlockTitle\r\n                textAlign=\"left\"\r\n                paraText=\"Feature List\"\r\n                titleText={`Minvitd Providing You \\n Best Features`}\r\n              />\r\n              <div className=\"cta-two__icon-wrap\">\r\n                <div className=\"cta-two__icon-single\">\r\n                  <div className=\"cta-two__icon\">\r\n                    <i className=\"far fa-comment-alt\"></i>\r\n                  </div>\r\n                  <h3>\r\n                    In App <br /> Messages\r\n                  </h3>\r\n                </div>\r\n                <div className=\"cta-two__icon-single\">\r\n                  <div className=\"cta-two__icon\">\r\n                    <i className=\"fas fa-hashtag\"></i>\r\n                  </div>\r\n                  <h3>\r\n                    Social <br /> Media\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"cta-two__text\">\r\n                <p>\r\n                  Engage with your events members with ease, with social media\r\n                  like timeline and high-quality video conferencing. More\r\n                  features to be discover by you ;)\r\n                </p>\r\n              </div>\r\n              <a href=\"#\" className=\"thm-btn cta-two__btn\">\r\n                <span>Discover More</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6 \">\r\n            <div className=\"cta-two__images d-flex justify-content-end align-items-end flex-column\">\r\n              <img\r\n                src={CTAImage1}\r\n                className=\"wow fadeInUp\"\r\n                data-wow-duration=\"1500ms\"\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                src={CTAImage2}\r\n                className=\"wow fadeInUp\"\r\n                data-wow-duration=\"1500ms\"\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                src={CTAImage3}\r\n                className=\"wow fadeInUp\"\r\n                data-wow-duration=\"1500ms\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CTATwo;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Pricing.js",["923","924","925","926","927","928"],"import React, { useState } from \"react\";\r\nimport BlockTitle from \"./BlockTitle\";\r\nimport { Grid } from \"@material-ui/core\";\r\nconst Pricing = (props) => {\r\n  const [plan, setPlan] = useState(false);\r\n  return (\r\n    <section className=\"pricing-one\" id=\"pricing\">\r\n      <Grid container spacing={0}>\r\n        <Grid xs={12} md={12}>\r\n          <BlockTitle\r\n            textAlign=\"center\"\r\n            paraText=\"Pricing Tables\"\r\n            titleText={`Choose Pricing Plans Which \\n Suits Your Needs`}\r\n          />\r\n          <ul\r\n            className=\"list-inline text-center switch-toggler-list\"\r\n            role=\"tablist\"\r\n            id=\"switch-toggle-tab\"\r\n          >\r\n            <li className={`month ${plan === false ? \"active\" : \"\"}`}>\r\n              <a\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setPlan(false);\r\n                }}\r\n              >\r\n                Paid\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <label\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setPlan(!plan);\r\n                }}\r\n                className={`switch ${plan === true ? \"off\" : \"on\"}`}\r\n              >\r\n                <span className=\"slider round\"></span>\r\n              </label>\r\n            </li>\r\n            <li className={`year ${plan === true ? \"active\" : \"\"}`}>\r\n              <a\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setPlan(true);\r\n                }}\r\n              >\r\n                Free\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </Grid>\r\n        <Grid item xs={false} md={1}></Grid>\r\n        <Grid xs={10}>\r\n          {plan === true ? (\r\n            <div id=\"yearly\">\r\n              <Grid container spacing={2}>\r\n                <Grid xs={false} md={4} item />\r\n                <Grid xs={12} md={4} item>\r\n                  <div className=\"pricing-one__single\">\r\n                    <div className=\"pricing-one__circle\"></div>\r\n                    <div className=\"pricing-one__inner\">\r\n                      <p>Free</p>\r\n                      <h3>₹0</h3>\r\n                      <ul className=\"list-unstyled pricing-one__list\">\r\n                        <li>Basic features</li>\r\n                        <li>Limit 15 Members</li>\r\n                        <li>Upgrade Option</li>\r\n                        <li>Limited Features</li>\r\n                      </ul>\r\n                      <a href=\"#\" className=\"thm-btn pricing-one__btn\">\r\n                        <span>Choose Plan</span>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ) : (\r\n            <div id=\"month\">\r\n              <Grid container spacing={2}>\r\n                <Grid xs={12} md={4} item>\r\n                  <div className=\"pricing-one__single\">\r\n                    <div className=\"pricing-one__circle\"></div>\r\n                    <div className=\"pricing-one__inner\">\r\n                      <p>Bronze</p>\r\n                      <h3>₹200</h3>\r\n                      <ul className=\"list-unstyled pricing-one__list\">\r\n                        <li>Upto 50 Members</li>\r\n                        <li>Free Support</li>\r\n                        <li>Free In App Messages</li>\r\n                        <li>Full access</li>\r\n                      </ul>\r\n                      <a href=\"#\" className=\"thm-btn pricing-one__btn\">\r\n                        <span>Choose Plan</span>\r\n                      </a>\r\n\r\n                      <span>No hidden charges!</span>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid xs={12} md={4} item>\r\n                  <div className=\"pricing-one__single\">\r\n                    <div className=\"pricing-one__circle\"></div>\r\n                    <div className=\"pricing-one__inner\">\r\n                      <p>Silver</p>\r\n                      <h3>₹500</h3>\r\n                      <ul className=\"list-unstyled pricing-one__list\">\r\n                        <li>Upto 200 Members</li>\r\n                        <li>Lifetime free support</li>\r\n                        <li>Multiple Events</li>\r\n                        <li>Full access</li>\r\n                      </ul>\r\n                      <a href=\"#\" className=\"thm-btn pricing-one__btn\">\r\n                        <span>Choose Plan</span>\r\n                      </a>\r\n\r\n                      <span>No hidden charges!</span>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid xs={12} md={4}>\r\n                  <div className=\"pricing-one__single\">\r\n                    <div className=\"pricing-one__circle\"></div>\r\n                    <div className=\"pricing-one__inner\">\r\n                      <p>Gold</p>\r\n                      <h3>₹999</h3>\r\n                      <ul className=\"list-unstyled pricing-one__list\">\r\n                        <li>Extra features</li>\r\n                        <li>Lifetime free support</li>\r\n                        <li>Super User</li>\r\n                        <li>Full access</li>\r\n                      </ul>\r\n                      <a href=\"#\" className=\"thm-btn pricing-one__btn\">\r\n                        <span>Choose Plan</span>\r\n                      </a>\r\n\r\n                      <span>No hidden charges!</span>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\VideoOne.js",["929"],"import React, { useState } from \"react\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport BlockTitle from \"./BlockTitle\";\r\nimport videoBG from \"../../Assets/resources/video-bg-1-1.jpg\";\r\n\r\nconst VideoOne = () => {\r\n  const [open, setOpen] = useState({\r\n    isOpen: false,\r\n  });\r\n  // const openModal = (e) => {\r\n  //   e.preventDefault();\r\n  //   setOpen({\r\n  //     isOpen: true,\r\n  //   });\r\n  // };\r\n  return (\r\n    <section className=\"video-one\">\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ backgroundImage: `url(${videoBG})` }}\r\n      >\r\n        <div\r\n          className=\"video-one__content wow fadeInLeft\"\r\n          data-wow-duration=\"1500ms\"\r\n        >\r\n          <BlockTitle\r\n            textAlign=\"left\"\r\n            paraText=\"How it Works\"\r\n            titleText={`Watch Now \\n Our Video \\n For More`}\r\n          />\r\n        </div>\r\n        <ModalVideo\r\n          channel=\"youtube\"\r\n          isOpen={open.isOpen}\r\n          videoId=\"USccSZnS8MQ\"\r\n          onClose={() => setOpen({ isOpen: false })}\r\n        />\r\n        <a className=\"video-one__btn video-popup\">\r\n          <i className=\"fa fa-play\"></i>\r\n        </a>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default VideoOne;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\Testimonials.js",["930","931","932"],"import React from \"react\";\r\nimport SwiperCore, { Pagination, Thumbs, Controller } from \"swiper\";\r\n\r\nimport Swiper from \"react-id-swiper\";\r\nimport BlockTitle from \"./BlockTitle\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TestiQoute from \"../../Assets/shapes/testi-qoute-1-1.png\";\r\nimport TestiImageOne from \"../../Assets/resources/testi-1-1.jpg\";\r\nimport TestiImageTwo from \"../../Assets/resources/testi-1-2.jpg\";\r\nimport TestiImageThree from \"../../Assets/resources/testi-1-3.jpg\";\r\nSwiperCore.use([Pagination, Thumbs, Controller]);\r\nconst Testimonials = (props) => {\r\n  const paramsTwo = {\r\n    observer: true,\r\n    observeParents: true,\r\n    speed: 1400,\r\n    mousewheel: false,\r\n    autoplay: {\r\n      delay: 3000,\r\n      disableOnInteraction: false,\r\n    },\r\n    pagination: {\r\n      el: \".testimonials-one__pagination-wrap .swiper-pagination\",\r\n      clickable: true,\r\n    },\r\n  };\r\n\r\n  const paramsOne = {\r\n    slidesPerView: 1,\r\n    spaceBetween: 0,\r\n    effect: \"fade\",\r\n    speed: 1400,\r\n    watchSlidesVisibility: true,\r\n    watchSlidesProgress: true,\r\n    loop: true,\r\n    autoplay: {\r\n      delay: 3000,\r\n      disableOnInteraction: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"testimonials-one\">\r\n      <Grid container spacing={12}>\r\n        <Grid item md={6}>\r\n          <div className=\"testimonials-one__thumb-carousel-wrap\">\r\n            <div className=\"testimonials-one__icon\">\r\n              <div className=\"testimonials-one__icon-inner\">\r\n                <img src={TestiQoute} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"testimonials-one__thumb-carousel\">\r\n              <Swiper {...paramsOne}>\r\n                <div className=\"swiper-slide\">\r\n                  <div className=\"testimonials-one__image\">\r\n                    <img src={TestiImageOne} alt=\"Awesome Image\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"swiper-slide\">\r\n                  <div className=\"testimonials-one__image\">\r\n                    <img src={TestiImageTwo} alt=\"Awesome Image\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"swiper-slide\">\r\n                  <div className=\"testimonials-one__image\">\r\n                    <img src={TestiImageThree} alt=\"Awesome Image\" />\r\n                  </div>\r\n                </div>\r\n              </Swiper>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6} className=\"d-flex\">\r\n          <div className=\"my-auto\">\r\n            <BlockTitle\r\n              textAlign=\"left\"\r\n              paraText=\"Our Testimonials\"\r\n              titleText={`What Our Customers Are \\n Talking About`}\r\n            />\r\n            <div className=\"testimonials-one__carousel\">\r\n              <Swiper {...paramsTwo}>\r\n                <div className=\"swiper-slide\">\r\n                  <div className=\"testimonials-one__single\">\r\n                    <p className=\"testimonials-one__text\">\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      Vivamus tristique eros ante. Pellentesque ultrices\r\n                      scelerisque eros tristique interdum. Donec imperdiet\r\n                      tincidunt massa, eget viverra turpis facilisis ac.\r\n                    </p>\r\n\r\n                    <h3 className=\"testimonials-one__title\">Soubhagya</h3>\r\n                  </div>\r\n                </div>\r\n                <div className=\"swiper-slide\">\r\n                  <div className=\"testimonials-one__single\">\r\n                    <p className=\"testimonials-one__text\">\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      Vivamus tristique eros ante. Pellentesque ultrices\r\n                      scelerisque eros tristique interdum. Donec imperdiet\r\n                      tincidunt massa, eget viverra turpis facilisis ac.\r\n                    </p>\r\n\r\n                    <h3 className=\"testimonials-one__title\">Soubhagya</h3>\r\n                  </div>\r\n                </div>\r\n                <div className=\"swiper-slide\">\r\n                  <div className=\"testimonials-one__single\">\r\n                    <p className=\"testimonials-one__text\">\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      Vivamus tristique eros ante. Pellentesque ultrices\r\n                      scelerisque eros tristique interdum. Donec imperdiet\r\n                      tincidunt massa, eget viverra turpis facilisis ac.\r\n                    </p>\r\n\r\n                    <h3 className=\"testimonials-one__title\">Soubhagya</h3>\r\n                  </div>\r\n                </div>\r\n              </Swiper>\r\n              <div className=\"testimonials-one__pagination-wrap\">\r\n                <div className=\"swiper-pagination\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js",["933"],"import {\r\n  LOGINSUCCESS,\r\n  LOGINFAIL,\r\n  GOTOTP,\r\n  OPTEXPIRED,\r\n  OTPVERIFIED,\r\n  SAVEUSER,\r\n  LOGOUT,\r\n} from \"../Actions/AuthActions\";\r\nimport setAuthToken from \"../../Utils/Login\";\r\nimport axios from \"axios\";\r\nimport { url, testmode } from \"../../Utils/Config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport history from \"../../Utils/History\";\r\nexport function getopt(Phone) {\r\n  return (dispatch) => {\r\n    const userData = {\r\n      Phone,\r\n    };\r\n    if (Phone !== \"\") {\r\n      if (testmode === true) {\r\n        dispatch(loginuser(Phone))\r\n      } else {\r\n        axios.post(url + \"auth/send-otp\", userData).then((res) => {\r\n          console.log(res);\r\n          if (res.data.status === \"pending\") {\r\n            dispatch({\r\n              type: GOTOTP,\r\n            });\r\n          } else {\r\n          }\r\n        });\r\n      }\r\n\r\n    }\r\n  };\r\n}\r\nexport function verifyotp(Phone, code) {\r\n  return async (dispatch) => {\r\n    if (code !== \"\") {\r\n      await axios\r\n        .post(url + \"auth/verify-otp\", { Phone, code })\r\n        .then(async (res) => {\r\n          await console.log(res);\r\n          if (\r\n            res.data.status === \"checked\" &&\r\n            res.data.response === \"approved\"\r\n          ) {\r\n            console.log(res.data.data);\r\n            dispatch({\r\n              type: OTPVERIFIED,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: OPTEXPIRED,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n}\r\nexport function loginuser(Phone) {\r\n  return (dispatch) => {\r\n    const userData = {\r\n      Phone,\r\n    };\r\n    if (Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/login\", userData)\r\n        .then((res) => {\r\n          if (res.data.token) {\r\n            const token = res.data.token;\r\n            const decoded = jwt_decode(token);\r\n            setAuthToken(token);\r\n            //checkfor codeed Events\r\n            dispatch({\r\n              type: LOGINSUCCESS,\r\n              payload: res.data,\r\n            });\r\n            // history.push(\"/home\");\r\n            return \"loggedin\";\r\n          } else if (res.data.status === \"-1\") {\r\n            dispatch({\r\n              type: LOGINFAIL,\r\n              payload: res.data.message,\r\n            });\r\n          } else if (res.data.details[0].message) {\r\n            dispatch({\r\n              type: LOGINFAIL,\r\n              payload: res.data.details[0].message,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      alert(\"Auth falied\");\r\n    }\r\n  };\r\n}\r\nexport function logout(Phone) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n}\r\nexport function saveuserinfo(Name, Gender, DOB, Image, nurl) {\r\n  return (dispatch) => {\r\n    console.log(\"/\" + nurl);\r\n    const userData = {\r\n      Name: Name,\r\n      Gender: Gender,\r\n      DOB: DOB,\r\n      Image: Image,\r\n    };\r\n    if (Name !== \"\" && Gender !== \"\") {\r\n      axios\r\n        .post(url + \"auth/userinfo\", userData)\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            console.log(res.data.user);\r\n            dispatch({\r\n              type: SAVEUSER,\r\n              payload: res.data.user,\r\n            });\r\n            if (nurl !== \"\") {\r\n              history.push(\"/\" + nurl);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n}\r\nexport function getuserdata(Phone) {\r\n  const userData = {\r\n    Phone: Phone,\r\n  };\r\n  if (Phone !== \"\") {\r\n    axios\r\n      .get(url + \"auth/userinfo\", userData)\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log(res.data.user);\r\n          return res.data.user;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return { err: \"error 404\" };\r\n      });\r\n  }\r\n}\r\nexport function checktoken() {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + \"auth/verify\")\r\n      .then((res) => {\r\n        if (res.data.status !== \"valid\") {\r\n          dispatch({\r\n            type: LOGOUT,\r\n          });\r\n          history.push(\"\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: LOGOUT,\r\n        });\r\n      });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js",["934","935"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport {\r\n  EVENTSAVED,\r\n  EVENTSAVEFAIL,\r\n  GOTMYEVENTS,\r\n  GETMYINVITAITONS, DELETEALBUM, DELETESTORY\r\n} from \"../Actions/EventActions\";\r\nimport { deleteEvent } from './CodeFunctions';\r\nimport history from \"../../Utils/History\";\r\nexport function saveEvent(edata) {\r\n  return (dispatch) => {\r\n    console.log(edata);\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    edata.date = dateTime;\r\n    axios.post(url + \"event/create\", edata).then(async (res) => {\r\n      console.log(res);\r\n      await dispatch({\r\n        type: DELETEALBUM\r\n      })\r\n      await dispatch({\r\n        type: DELETESTORY\r\n      })\r\n      history.push(\"/MyEvents/event-create-success/\" + res.data.MainCode);\r\n    });\r\n  };\r\n}\r\nexport function addme(code, maincode) {\r\n  return (dispatch) => {\r\n    console.log(code);\r\n    axios\r\n      .post(url + \"event/addme\", { code: code, maincode: maincode })\r\n      .then(async (res) => {\r\n\r\n        if (res.data.status === 'status') {\r\n          await dispatch(deleteEvent());\r\n          await dispatch(GetEvents());\r\n          await dispatch(GetInvitations());\r\n          alert(\"Event added\");\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        return 0;\r\n      });\r\n  };\r\n}\r\nexport function GetEvents() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"event/getmyEvents\").then((res) => {\r\n      dispatch({\r\n        type: GOTMYEVENTS,\r\n        payload: res.data.MyEvents,\r\n      });\r\n      return true\r\n    });\r\n  };\r\n}\r\n\r\nexport function GetInvitations() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"event/getmyInvitaion\").then((res) => {\r\n      dispatch({\r\n        type: GETMYINVITAITONS,\r\n        payload: res.data.Invitations,\r\n      });\r\n      console.log(res);\r\n      return true\r\n    });\r\n  };\r\n}\r\nexport function rsvp_event(id, status, Phone) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/rsvp\", { id: id, status: status, Phone: Phone, date: dateTime })\r\n      .then((res) => {\r\n        // dispatch(GetInvitations());\r\n        // dispatch(GetEvents());\r\n        console.log(res);\r\n        return 1\r\n      });\r\n  };\r\n}\r\nexport function like_event(id) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"event/like\", { id: id, dateTime: dateTime }).then((res) => {\r\n      dispatch(GetInvitations());\r\n      dispatch(GetEvents());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function comment_event(id, comment) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/comment\", { id: id, comment: comment, date: dateTime })\r\n      .then(async (res) => {\r\n\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n        return 1;\r\n      });\r\n  };\r\n}\r\nexport function change_event(id, type, data) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateevents\", { id: id, type: type, data: data, date: dateTime })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function add_participants(id, data) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/add_participants\", { id: id, data: data, date: dateTime })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function update_participants(id, data) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/UpdateParticipants\", { id: id, data: data, date: dateTime })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function update_events(Type, Eventdata, maincode) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateevents\", {\r\n        Type: Type,\r\n        Eventdata: Eventdata,\r\n        maincode: maincode,\r\n        date: dateTime\r\n      })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function uploadfiletoalbum(Album, MainCode) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/addalbum\", {\r\n        Album: Album, _id: MainCode, date: dateTime\r\n      })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js",["936","937","938"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport history from \"../../Utils/History\";\r\nimport { SAVECHATS, GOTCHATS, UPDATECHAT } from \"../Actions/ChatActions\";\r\nexport function savechats(DATA) {\r\n  return (dispatch) => {\r\n    dispatch({ type: SAVECHATS, payload: DATA });\r\n  };\r\n}\r\nexport function creategroup(Name, room, Participants, GrpPhoto, Type) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"chatgroup/createroom\", {\r\n        Name: Name,\r\n        room: room,\r\n        Participants: Participants,\r\n        GrpPhoto: GrpPhoto,\r\n        Type: Type,\r\n      })\r\n      .then((res) => {\r\n        dispatch(getChats());\r\n      });\r\n  };\r\n}\r\nexport function updatechat(data, room) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATECHAT,\r\n      payload: {\r\n        data,\r\n        room,\r\n      },\r\n    });\r\n  };\r\n}\r\nexport function getChats() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"chatgroup/getmyrooms\").then((res) => {\r\n      dispatch({ type: SAVECHATS, payload: res.data.Chatgroup });\r\n      console.log(res);\r\n      return true\r\n    });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\postfunctions.js",["939"],"import { GOTPOST } from \"../Actions/PostActions\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { GetEvents } from './Eventfunctions'\r\nimport { getNotification } from './NotificationFunctions'\r\nexport function getposts() {\r\n  return (dispatch) => {\r\n\r\n    axios.get(url + \"post/getposts\").then((res) => {\r\n      dispatch({\r\n        type: GOTPOST,\r\n        payload: res.data.data,\r\n      });\r\n      return true\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function likepost(id, by, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"post/like\", { id: id, by: by, date: dateTime, MainCode: MainCode }).then((res) => {\r\n      dispatch(getNotification());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function likecomment(id, by, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"event/likecomment\", { id: id, by: by, date: dateTime, MainCode: MainCode }).then((res) => {\r\n      dispatch(GetEvents());\r\n      dispatch(getNotification());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function addcomments(id, by, comment, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"post/comment\", { id: id, by: by, comment: comment, date: dateTime, MainCode: MainCode })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch(GetEvents());\r\n        dispatch(getNotification());\r\n        return 1;\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function addpost(id, by, furl, type, tags, caption) {\r\n  return (dispatch) => {\r\n    console.log(\"alling\");\r\n    axios\r\n      .post(url + \"post/add\", {\r\n        id: id,\r\n        by: by,\r\n        furl: furl,\r\n        type: type,\r\n        tags: tags,\r\n        caption: caption,\r\n      })\r\n      .then((res) => {\r\n        // dispatch(getposts());\r\n        dispatch(getNotification());\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js",["940"],"import { GOTNOTIFICATIONS } from \"../Actions/NotificationAction\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nexport function getNotification() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"notification/getNotifications\").then((res) => {\r\n      dispatch({\r\n        type: GOTNOTIFICATIONS,\r\n        payload: res.data.data,\r\n      });\r\n      return true\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\CodeEventReducer.js",["941","942"],"const initialState = {\r\n    Maincode: \"\",\r\n    Code: \"\"\r\n};\r\n\r\nconst CodeEvent = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADDCODEDEVENT\":\r\n            return action.payload\r\n            break;\r\n        case \"DELETECODEDEVENT\":\r\n            return initialState;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default CodeEvent;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\PostReducer.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\NotificatonReducer.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\ChatReducer.js",["943"],"const initialState = {\r\n  groups: [],\r\n  chats: [],\r\n};\r\n\r\nconst Chatdata = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GOTCHATS\":\r\n      return {\r\n        ...state,\r\n        chats: action.payload,\r\n      };\r\n    case \"SAVECHAT\":\r\n      return {\r\n        ...state,\r\n        groups: action.payload,\r\n      };\r\n    case \"UPDATECHAT\":\r\n      let groupscpy = [...state.groups];\r\n      groupscpy.map((grp) => {\r\n        if (grp.room === action.payload.room) {\r\n          grp.chats.push(action.payload.data);\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        groups: groupscpy,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Chatdata;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\EventReducer.js",["944"],"import { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nconst initialState = {\r\n  ALBUM: [],\r\n  STORY: [],\r\n  myEvents: [],\r\n  myInvitations: [],\r\n};\r\n\r\nconst Eventdata = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SAVEALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: action.payload,\r\n      };\r\n    case \"DELETEALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: [],\r\n      };\r\n    case \"SAVESTORY\":\r\n      return {\r\n        ...state,\r\n        STORY: action.payload,\r\n      };\r\n    case \"DELETESTORY\":\r\n      return {\r\n        ...state,\r\n        STORY: [],\r\n      };\r\n    case \"GOTMYEVENTS\":\r\n      let datacopy = [];\r\n      let tracker = [];\r\n      let mcindex = 0;\r\n      //get similar events in single array\r\n      console.log(action.payload);\r\n      let payload = [];\r\n      if (action.payload !== undefined) {\r\n        payload = [...action.payload];\r\n      } else {\r\n        payload = [];\r\n      }\r\n      for (let i = 0; i < payload.length; i++) {\r\n        if (tracker.length === 0) {\r\n          datacopy[0] = [action.payload[i]];\r\n          tracker.push(action.payload[i].MainCode);\r\n        } else {\r\n          mcindex = tracker.includes(action.payload[i].MainCode);\r\n          if (mcindex === true) {\r\n            let key = tracker.findIndex(\r\n              (track) => track === action.payload[i].MainCode\r\n            );\r\n            console.log(key);\r\n            datacopy[key] = [...datacopy[key], action.payload[i]];\r\n          } else {\r\n            tracker.push(action.payload[i].MainCode);\r\n            datacopy.push([action.payload[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        myEvents: datacopy,\r\n      };\r\n    case \"GETMYINVITAITONS\": {\r\n      let datacopy = [];\r\n      let tracker = [];\r\n      let mcindex = 0;\r\n      //get similar events in single array\r\n      console.log(action.payload);\r\n      let payload = [];\r\n      if (action.payload !== undefined) {\r\n        payload = [...action.payload];\r\n      } else {\r\n        payload = [];\r\n      }\r\n\r\n      for (let i = 0; i < payload.length; i++) {\r\n        if (tracker.length === 0) {\r\n          datacopy[0] = [action.payload[i]];\r\n          tracker.push(action.payload[i].MainCode);\r\n        } else {\r\n          mcindex = tracker.includes(action.payload[i].MainCode);\r\n          if (mcindex === true) {\r\n            let key = tracker.findIndex(\r\n              (track) => track === action.payload[i].MainCode\r\n            );\r\n            console.log(key);\r\n            datacopy[key] = [...datacopy[key], action.payload[i]];\r\n          } else {\r\n            tracker.push(action.payload[i].MainCode);\r\n            datacopy.push([action.payload[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        myInvitations: datacopy,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Eventdata;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\CreateEventFormReducer.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Reducers\\AuthReducer.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\ChatWidget.js",["945"],"import React from 'react';\r\nimport \"./styles.css\"\r\nimport { FaWhatsapp } from 'react-icons/fa'\r\n\r\nexport default function ChatWidget() {\r\n    return (\r\n        <div className=\"zap_widget\">\r\n            <a className=\"blantershow-chat\" title=\"Show Chat\" href=\"https://api.whatsapp.com/send?phone=919873971865&text=Hii%21%20There.\"><i className=\"fab fa-whatsapp\" />Contact Us</a>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\CompanySlide.js",["946"],"import React from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\nimport BrandImage from \"../../Assets/resources/brand-1-1.png\";\r\nimport './styles.css'\r\nimport ZoomIcon from \"../../Assets/logo_zoom.png\";\r\n\r\n\r\nexport default function CompanySlide() {\r\n  const params = {\r\n    speed: 1000,\r\n    spaceBetween: 100,\r\n    autoplay: {\r\n      delay: 3000,\r\n      disableOnInteraction: false,\r\n    },\r\n    slidesPerView: 5,\r\n    rebuildOnUpdate: true,\r\n    // Responsive breakpoints\r\n    breakpoints: {\r\n      0: {\r\n        spaceBetween: 30,\r\n        slidesPerView: 2,\r\n      },\r\n      767: {\r\n        spaceBetween: 30,\r\n        slidesPerView: 3,\r\n      },\r\n      991: {\r\n        spaceBetween: 50,\r\n        slidesPerView: 4,\r\n      },\r\n      1499: {\r\n        slidesPerView: 5,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"brand-one\">\r\n\r\n      <Swiper className=\"brand-one__carousel\" {...params}>\r\n        <div>\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n      </Swiper>\r\n\r\n    </section>\r\n  )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Additionals.js",["947","948","949","950","951","952"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport PictureIcon from \"../../Assets/PictureIcon.png\"\r\nimport EngageIcon from \"../../Assets/EngageIcon.png\"\r\nimport AlbumsIcon from \"../../Assets/AlbumsIcon.png\"\r\nimport CustomIcon from \"../../Assets/CustomIcon.png\"\r\nimport PrivateIcon from \"../../Assets/PrivateIcon.png\"\r\nimport InviteIcon from \"../../Assets/InviteIcon.png\"\r\nimport EasyIcon from \"../../Assets/EasyIcon.png\"\r\nimport DestinIcon from \"../../Assets/DestinIcon.png\"\r\nimport MobilePro from \"../../Assets/MobilePro.png\"\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\n\r\nexport default function Additionals() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"additional_part py-75\">\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 mb-4\">\r\n                <h2 className=\"font-weight-bold text-color text-left mb-0\">\r\n                  Additionals\r\n                </h2>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={PictureIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Pictures and Videos</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={EngageIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Engagement</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={AlbumsIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Albums</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={CustomIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Customize</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={PrivateIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Private / Secure</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={InviteIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Invite at GO</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={EasyIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">\r\n                    Easy to create in 5 Minutes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={DestinIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Destination Event</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 text-left\">\r\n                <button className=\"addition_btn\" onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}>Create an Invite</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"Additionals_img\">\r\n              <img\r\n                src={MobilePro}\r\n                className=\"img-fluid\"\r\n                alt=\"img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\AboutBanner.js",["953","954","955","956"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport DanceIcon from \"../../Assets/DanceIcon.png\"\r\nimport Swiper from \"react-id-swiper\";\r\nimport HappyIcon from \"../../Assets/Group 4317.png\"\r\nimport celebrateslide from \"../../Assets/celebrateslide.jpg\"\r\nimport birthdayslide from \"../../Assets/birthdayslide.jpg\"\r\n\r\n\r\nexport default function AboutBanner() {\r\n  return (\r\n    <Swiper>\r\n      <div className=\"personal_area py-75\" style={{ marginTop: 20 }}>\r\n        <div className=\"container\">\r\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\r\n            <div className=\"item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    src={celebrateslide}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\" font-weight-bold\">Personal Events</h2>\r\n                  <p className=\"text-secondary\">\r\n                  Invite your guests now digitally on a DIY Platform with no\r\n                      hassle and also share your excitement by bringing them on\r\n                      the same platform, with lot more features to keep them all\r\n                      engaged. You can also share your memories/album with all\r\n                      the guests at a go and keep them all updated\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"personal_area py-75\">\r\n        <div className=\"container\">\r\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\r\n            <div className=\"item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    src={birthdayslide}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\"font-weight-bold\">Video Conferencing</h2>\r\n                  <p className=\"text-secondary\">\r\n                  Excited about your child birthday? Now share your excitement with all your guests digitally. A smart tracker for RSVP and managing your guests. Also, keep your memories with you forever with digital albums. \r\n<br /><br />\r\n<span style={{textAlign:\"center\"}}>Create Invite Now!😊</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Swiper>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Features.js",["957","958","959","960"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport PeopleIcon from \"../../Assets/PeopleIcon.png\"\r\nimport RSVPIcon from \"../../Assets/RSVPIcon.png\"\r\nimport LocationIcon from \"../../Assets/LocationIcon.png\"\r\nimport MobileIcon from \"../../Assets/MobileIcon.png\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nexport default function Features() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: 25 }}>\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 mb-4\">\r\n          <h2 className=\"font-weight-bold text-color text-center mb-0 our_feature\">\r\n            Our Features\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={MobileIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">No App Required</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={PeopleIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">Unlimited Guests</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={RSVPIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">RSVP</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={LocationIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">Schedule Location</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 text-center mt-5\">\r\n          <button className=\"feature_btn\" onClick={() => {\r\n            toggleShowPopup(true);\r\n          }}>Create an Invite</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Testimonials.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Footer.js",["961","962","963","964","965"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport { FaTwitter, FaFacebookF, FaWhatsapp, FaInstagram } from \"react-icons/fa\"\r\n\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer\r\n      className=\"footer_wrap p-4 mt-3\"\r\n      style={{ background: \"#1F1F1F\", marginTop: 50 }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-5 text-md-left text-center mb-2 mb-md-0\">\r\n            <p className=\"text-white mb-0\">\r\n              Copyright @ 2021, All Rights Reserved for Mobilly Invite\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-2 text-center\">\r\n            {\" \"}\r\n            <a href=\"#\" className=\"text-white\">\r\n              Terms &amp; Conditions\r\n            </a>{\" \"}\r\n          </div>\r\n          <div className=\"col-md-3 text-center\">\r\n            {\" \"}\r\n            <a href=\"#\" className=\"text-white\">\r\n              Privacy &amp; Policy\r\n            </a>{\" \"}\r\n          </div>\r\n          <div className=\"col-md-2 text-right\">\r\n            <div className=\"justify-content-center justify-content-md-end d-flex flex-row\">\r\n              <a href=\"https://www.facebook.com/Minvitd/\" className=\"ml-3 text-white\">\r\n                <FaFacebookF size='20' />\r\n              </a>\r\n   {/*            <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaTwitter size='20' />\r\n              </a>\r\n              <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaWhatsapp size='20' />\r\n              </a>\r\n              <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaInstagram size='20' />\r\n              </a> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\ContactUs.js",["966","967"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport ContactImg from \"../../Assets/ContactImg.png\";\r\nimport { db } from \"./Firebase\";\r\n\r\nconst ContactUs = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    db.collection(\"contacts\")\r\n      .add({\r\n        name: name,\r\n        email: email,\r\n        message: message,\r\n      })\r\n      .then(() => {\r\n        setLoader(false);\r\n        alert(\"Your message has been submitted👍\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n        setLoader(false);\r\n      });\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact_us py-75\" style={{ marginTop: 50 }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 align-self-end\">\r\n            <img src={ContactImg} alt=\"img\" className=\"img-fluid\" />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h2 className=\"font-weight-bold mb-4\">Contact Us</h2>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Name\"\r\n                >\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"form-control contact_field\"\r\n                  value={name}\r\n                  placeholder=\"Enter your Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Email\"\r\n                >\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"form-control contact_field\"\r\n                  value={email}\r\n                  placeholder=\"Enter your Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Message\"\r\n                >\r\n                  Message\r\n                </label>\r\n                <textarea\r\n                  rows={5}\r\n                  className=\"form-control contact_field\"\r\n                  value={message}\r\n                  placeholder=\"Enter your Message\"\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 py-2 rounded-pill mt-3\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\MainBanner.js",["968","969","970","971","972","973","974"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Button, Form, Image, Col } from \"react-bootstrap\";\r\nimport Logo from \"../../Assets/LightLogo.png\";\r\n\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport Swiper, { Autoplay } from \"react-id-swiper\";\r\nimport SecondSlide from \"../../Assets/SecondSlide.png\";\r\nimport DancingImg from \"../../Assets/DancingImg.jpg\";\r\nimport DarkLogo from \"../../Assets/DarkLogo.png\";\r\nimport { Provider, LikeButton } from \"@lyket/react\";\r\n\r\n\r\nexport default function MainBanner() {\r\n  const loop = {\r\n    loop: true,\r\n    Autoplay: {\r\n      delay: 3000,\r\n      slidesPerView:1,\r\n      autoplayDisableOnInteraction: false\r\n    },\r\n   \r\n  };\r\n\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let ischeck = reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = reactLocalStorage.get(\"Phone\");\r\n    // let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === false || ischeck === undefined || ischeck === \"\") {\r\n      console.log(\"push\");\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"loginuser\");\r\n      dispatch(loginuser(Phone));\r\n    }\r\n  }, []);\r\n  return (\r\n    <Swiper {...loop}>\r\n      {/* Slider One */}\r\n      <Container fluid className=\"wrapper\">\r\n        <Popup\r\n          toggleShowPopup={toggleShowPopup}\r\n          showPopup={showPopup}\r\n          component={LoginSignup}\r\n        />\r\n        <Row>\r\n          <img src={Logo} style={{ margin: \"auto\" }} />\r\n        </Row>\r\n        <Container className=\"header_containmain\">\r\n          <Row>\r\n            <h3 className=\"header_heading\" style={{ marginTop: \"auto\" }}>\r\n              A Smarter way to invite\r\n            </h3>\r\n          </Row>\r\n          <Row style={{ marginTop: 10 }}>\r\n            <p className=\"header_slogan\">\r\n              Invite people to celebrate your occasion\r\n            </p>\r\n          </Row>\r\n          <Row\r\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}\r\n          >\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Working on it\"\r\n              className=\"phonenumber_text\"\r\n              disabled\r\n            />\r\n          </Row>\r\n          <Row style={{ marginTop: 13 }}>\r\n            <Button\r\n              variant=\"primary mobile_numberbtn\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Try Now\r\n            </Button>\r\n          </Row>\r\n          <Row className=\"row_down\">\r\n            <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\r\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\r\n            </Provider>\r\n            <div className=\"addthis_inline_share_toolbox\">\r\n            </div>\r\n          </Row>\r\n          <Row className=\"alignthat_btnh\">\r\n            <Button\r\n              variant=\"light mybutton_here\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Login / Signup\r\n            </Button>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n\r\n      {/*  Slider two */}\r\n      <Container fluid className=\"wrapper second_slide\">\r\n        <Popup\r\n          toggleShowPopup={toggleShowPopup}\r\n          showPopup={showPopup}\r\n          component={LoginSignup}\r\n        />\r\n        <Row>\r\n          <Col style={{display: 'flex', justifyContent: \"center\"}}>\r\n            <img src={DarkLogo} style={{ margin: \"auto\" }} />\r\n          </Col>\r\n        </Row>\r\n        <Container className=\"header_slidertwo\">\r\n          <Row>\r\n            <h3 className=\"secondslide_heading\">\r\n              Multiple <br />\r\n              Events\r\n            </h3>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"secondslide_par\">\r\n              Manage Multiple Events Simultaneously\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <Image src={SecondSlide} className=\"image_secondslide\" />\r\n          </Row>\r\n          <Row style={{ marginTop: 20 }}>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Working on it\"\r\n              className=\"phonenumber_text\"\r\n              disabled\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              variant=\"primary slide_numberbtn\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Try Now\r\n            </Button>\r\n          </Row>\r\n\r\n          <Row className=\"row_down\">\r\n          <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\r\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\r\n            </Provider>\r\n            <div className=\"addthis_inline_share_toolbox\"></div>\r\n          </Row>\r\n          <Row className=\"alignthat_btnh\">\r\n            <Button\r\n              variant=\"light mybutton_here\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Login / Signup\r\n            </Button>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n\r\n      {/*  Slider 3 */}\r\n      <Container fluid className=\"wrapper third_slide\">\r\n        <Popup\r\n          toggleShowPopup={toggleShowPopup}\r\n          showPopup={showPopup}\r\n          component={LoginSignup}\r\n        />\r\n        <Row>\r\n        <Col style={{display: 'flex', justifyContent: \"center\"}}>\r\n            <img src={DarkLogo} style={{ margin: \"auto\" }} />\r\n          </Col>\r\n        </Row>\r\n        <Container style={{ float: \"right\" }}>\r\n          <Row>\r\n            <h3 className=\"secondslide_heading\">\r\n              Video <br />\r\n              Invitation\r\n            </h3>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"secondslide_par\">\r\n              Invite people to celebrate your occasion online via Zoom or Meet\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            {\" \"}\r\n            <p className=\"thirdslide_extra\">Unlimited Timeless Conferencing*</p>\r\n          </Row>\r\n\r\n          <Row style={{ marginTop: 20 }}>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Working on it\"\r\n              className=\"phonenumber_text\"\r\n              disabled\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              variant=\"primary slide_numberbtn\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Try Now\r\n            </Button>\r\n          </Row>\r\n          <Row className=\"row_down\">\r\n          <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\r\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\r\n            </Provider>\r\n            <div className=\"addthis_inline_share_toolbox\"></div>\r\n          </Row>\r\n\r\n          <Row className=\"alignthat_btnh\">\r\n            <Button\r\n              variant=\"light mybutton_here\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Login/Signup\r\n            </Button>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    </Swiper>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\FileUpload_Download.js",["975"],"import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nexport async function uploadString(filedata, urlref) {\r\n  let dataurl = \"\";\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyA5Hi5O5ODsGzQuLsj__E3LecmmoSTRzek\",\r\n      authDomain: \"mobilly-invite.firebaseapp.com\",\r\n      projectId: \"mobilly-invite\",\r\n      storageBucket: \"mobilly-invite.appspot.com\",\r\n      messagingSenderId: \"828075682004\",\r\n      appId: \"1:828075682004:web:5a35293a7657af72b1f341\",\r\n      measurementId: \"G-KX6SQRPLCB\",\r\n    });\r\n  }\r\n\r\n  const ref = await firebase.storage().ref(\"/Mob-invited/\" + urlref);\r\n  await ref.putString(filedata, \"data_url\").then(async (snapshot) => {\r\n    console.log(\"fileuploaded\");\r\n    await ref.getDownloadURL().then((url) => {\r\n      dataurl = url;\r\n    });\r\n  });\r\n  return dataurl;\r\n}\r\nexport async function getString(urlref) {\r\n  var url = await firebase\r\n    .storage()\r\n    .ref(\"/Mob-invited/\" + urlref)\r\n    .getDownloadURL();\r\n  return url;\r\n}\r\nexport async function deletefile(urlref) {\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyA5Hi5O5ODsGzQuLsj__E3LecmmoSTRzek\",\r\n      authDomain: \"mobilly-invite.firebaseapp.com\",\r\n      projectId: \"mobilly-invite\",\r\n      storageBucket: \"mobilly-invite.appspot.com\",\r\n      messagingSenderId: \"828075682004\",\r\n      appId: \"1:828075682004:web:5a35293a7657af72b1f341\",\r\n      measurementId: \"G-KX6SQRPLCB\",\r\n    });\r\n  }\r\n  var storage = firebase.storage().ref();\r\n  var fileRef = await storage\r\n    .refFromURL(urlref)\r\n    .delete()\r\n    .then(function () {\r\n      // File deleted successfully\r\n      console.log(\"File Deleted\");\r\n    })\r\n    .catch(function (error) {\r\n      // Some Error occurred\r\n    });\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js",["976","977"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function EventNameBox(props) {\r\n  const handleClick = (index) => {\r\n    props.SelectEvent(index);\r\n  };\r\n  const [rdata, setData] = useState(props.data);\r\n\r\n  useEffect(() => {\r\n    setData(props.data);\r\n  }, [props.data, props.SelectedEvent]);\r\n\r\n  return (\r\n    <Grid container spacing={1} className=\"eventslider\">\r\n      {rdata.map((d, index) => (\r\n        <Grid\r\n          item\r\n          xs={12 / rdata.length}\r\n          sm={12 / rdata.length}\r\n          md={12 / rdata.length}\r\n          key={index + \"k\"}\r\n        >\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={() => {\r\n              handleClick(index);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={\r\n              props.SelectedEvent === index\r\n                ? \"event-buttons current\"\r\n                : \"event-buttons \"\r\n            }\r\n          >\r\n            {d.Name === \"\" ? \"Event \" + (index + 1) : d.Name}\r\n          </Button>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Popups\\Popup.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Header\\Header.js",["978"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Header.css\";\r\nimport Headings from \"../../../Utils/Headings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { logout } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notification from \"../../Notifications/Notification\";\r\nimport Popup from \"../Popups/Popup\";\r\n\r\nexport default function Header(props) {\r\n  const dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  useEffect(() => {\r\n    if (Auth.isExpired === true) {\r\n      dispatch(logout());\r\n    }\r\n  }, [Auth.isExpired]);\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton\r\n          aria-label=\"show 4 new mails\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          <InfoOutlinedIcon />\r\n        </IconButton>\r\n        <span className=\"menu-option\">Info</span>\r\n      </MenuItem>\r\n      {props.showextra === true ? (\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleMenuClose(true);\r\n            toggleShowPopup(true);\r\n          }}\r\n        >\r\n          <IconButton\r\n            aria-label=\"show 4 new mails\"\r\n            color=\"inherit\"\r\n            className=\"p-0\"\r\n          >\r\n            <NotificationsIcon />\r\n          </IconButton>\r\n          <span className=\"menu-option\">Notification</span>\r\n        </MenuItem>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <SearchIcon className=\"search-button\" />\r\n        </IconButton>\r\n        <p>Search</p>\r\n      </MenuItem> */}\r\n      <MenuItem\r\n        onClick={(e) => {\r\n          handleProfileMenuOpen(e);\r\n          dispatch(logout());\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          <PowerSettingsNewIcon color=\"secondary\" className=\"search-button\" />\r\n        </IconButton>\r\n        <span className=\"menu-option\">Logout</span>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={props.ismobile !== undefined ? props.ismobile : \"grow\"}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"menuButton\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            {/* <MenuIcon /> */}\r\n          </IconButton>\r\n\r\n          <Headings url={props.url} />\r\n\r\n          <InputBase\r\n            className=\"inputRoot inputInput\"\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n\r\n          <div className=\"grow\" />\r\n          <div className=\"sectionDesktop\">\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <SearchIcon className=\"search-button\" />\r\n            </IconButton> */}\r\n            {Auth.isLoggedIn === true ? (\r\n              <>\r\n                <IconButton\r\n                  aria-label=\"show 4 new mails\"\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                >\r\n                  <InfoOutlinedIcon color=\"primary\" />\r\n                </IconButton>\r\n                {props.showextra === true ? (\r\n                  <IconButton\r\n                    aria-label=\"show 4 new mails\"\r\n                    color=\"inherit\"\r\n                    className=\"Nav-icon\"\r\n                    onClick={() => {\r\n                      toggleShowPopup(true);\r\n                    }}\r\n                  >\r\n                    <NotificationsIcon color=\"default\" />\r\n                  </IconButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                >\r\n                  {Auth.Profile === \"\" ? (\r\n                    <AccountCircle />\r\n                  ) : (\r\n                    <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n                  )}\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"show 4 new mails\"\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                  onClick={() => {\r\n                    dispatch(logout());\r\n                  }}\r\n                >\r\n                  <PowerSettingsNewIcon color=\"secondary\" />\r\n                </IconButton>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"sectionMobile\">\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {Auth.isLoggedIn === true ? renderMobileMenu : <></>}\r\n      {Auth.isLoggedIn === true ? renderMenu : <></>}\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={Notification}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\FootMenu\\FootMenu.js",["979","980","981","982","983","984"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, AppBar, Fab } from \"@material-ui/core\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"./FooterMenu.css\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport UserProfile from \"../../UserPorfile/UserProfile\";\r\nimport Entercode from \"../../Entercode/Entercode\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\",\r\n    background: \"#3897F1\",\r\n    color: \"#fff\",\r\n    padding: \"33px\",\r\n  },\r\n}));\r\n\r\nexport default function FootMenu(props) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      color=\"primary\"\r\n      className={classes.appBar}\r\n      color=\"default\"\r\n    >\r\n      <Toolbar>\r\n        <Fab\r\n          aria-label=\"add\"\r\n          className={classes.fabButton}\r\n          onClick={() => {\r\n            if (Auth.Name === \"\" || Auth.Name === undefined) {\r\n              setuserInfopopup(true);\r\n            } else {\r\n              history.push(\"MyEvents/add-event\");\r\n            }\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Grid container spacing={0} className={classes.grow}>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            className={props.menu === 0 ? \"menubox activemenu\" : \"menubox\"}\r\n            onClick={() => {\r\n              props.setMenu(0);\r\n              history.push(\"/inv\");\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;Invitations&nbsp;&nbsp;\r\n          </Grid>\r\n          <Grid xs={2}></Grid>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            className={props.menu === 1 ? \"menubox activemenu\" : \"menubox\"}\r\n            onClick={() => {\r\n              props.setMenu(1);\r\n              history.push(\"/MyEvents\");\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;My Events&nbsp;&nbsp;\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <Popup\r\n        component={UserProfile}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n        url={\"MyEvents/add-event\"}\r\n      />\r\n      {/* <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={Entercode}\r\n        url={\"MyEvents/add-event\"}\r\n      /> */}\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Places.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\BlockTitle.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Config.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js",["985","986","987"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { ADDCODEDEVENT, DELETECODEDEVENT } from \"../Actions/CodeAction\";\r\nimport history from \"../../Utils/History\";\r\nexport function addEvent(Code, Maincode) {\r\n    return (dispatch) => {\r\n        dispatch({ type: ADDCODEDEVENT, payload: { Code: Code, Maincode: Maincode } });\r\n    };\r\n}\r\nexport function deleteEvent() {\r\n    return (dispatch) => {\r\n        dispatch({ type: DELETECODEDEVENT });\r\n    };\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\HomePage\\Firebase.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\PostActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\NotificationAction.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\ChatActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\EventActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Headings.js",["988"],"// import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"../Assets/Logo.svg\";\r\nimport history from \"./History\";\r\nimport MobileLogo from \"../Assets/MobileLogo.png\"\r\nexport default function Headings(props) {\r\n  // const [url, seturl] = useState(\"\");\r\n  // useEffect(() => {\r\n  //   let urlstr = props.url.split(\"/\");\r\n  //   seturl(urlstr[1]);\r\n  // }, []);\r\n\r\n  return (\r\n    <span className=\"black-t title-name\">\r\n      <img\r\n        src={MobileLogo}\r\n        className=\"Logo\"\r\n        alt=\"logo\"\r\n        width=\"30\"\r\n                height=\"30\"\r\n        onClick={() => history.push(\"/home\")}\r\n      />\r\n    </span>\r\n  );\r\n\r\n  //return <span className=\"black-t\">{props.url}123</span>;\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\UserPorfile\\UserProfile.js",["989","990","991","992","993"],"import React, { useState, useCallback } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport male from \"../../Assets/Male.svg\";\r\nimport female from \"../../Assets/Female.svg\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { saveuserinfo } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport \"./userProfile.css\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nexport default function UserProfile(props) {\r\n  const [showerror, setshowerror] = useState(false);\r\n  const [Name, setName] = useState(\"\");\r\n  const [DOB, setDOB] = useState(\"\");\r\n  const [Gender, setGender] = useState(\"\");\r\n  const [Image, setImage] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    type = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let url = await uploadString(\r\n        reader.result,\r\n        \"Profile/\" + Auth.Phone + \".\" + type\r\n      );\r\n      await setImage(url);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n  });\r\n  const save = () => {\r\n    if (Name === \"\" || DOB === \"\" || Gender === \"\") {\r\n      setshowerror(true);\r\n    } else {\r\n      dispatch(saveuserinfo(Name, Gender, DOB, Image, props.url));\r\n      setshowerror(false);\r\n      props.hide(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0} style={{ padding: \"15px\" }}>\r\n      <Grid item xs={12} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <center>\r\n          {Image == \"\" ? (\r\n            <img src={male} className=\"Profile\" />\r\n          ) : (\r\n            <img src={Image} className=\"Profile\" />\r\n          )}\r\n        </center>\r\n      </Grid>\r\n\r\n      {/*       <Grid item xs={6}>\r\n        <center\r\n         \r\n        >\r\n          <BiMale\r\n           \r\n          />{\" \"}\r\n          Male\r\n        </center>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <center\r\n        \r\n        >\r\n          <BiFemale\r\n            \r\n          />\r\n          Female\r\n        </center>\r\n      </Grid> */}\r\n\r\n      <Grid item xs={12}>\r\n        <span>Name</span>\r\n        <br />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className=\"w-100 m-b-5px \"\r\n          value={Name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          error={showerror === true && Name === \"\" ? true : false}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <span>DOB</span>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className=\"w-100 m-b-5px \"\r\n          type=\"date\"\r\n          defaultValue=\"2017-05-24\"\r\n          value={DOB}\r\n          onChange={(e) => {\r\n            setDOB(e.target.value);\r\n          }}\r\n          error={showerror === true && DOB === \"\" ? true : false}\r\n        />\r\n      </Grid>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Gender</FormLabel>\r\n        <RadioGroup\r\n          row\r\n          aria-label=\"position\"\r\n          name=\"position\"\r\n          defaultValue=\"top\"\r\n        >\r\n          <FormControlLabel\r\n            value=\"male\"\r\n            src={Gender === \"M\" && Image !== \"\" ? Image : male}\r\n            className={\r\n              Image === \"\"\r\n                ? showerror === true\r\n                  ? \"no-proifle \"\r\n                  : \" Profile\"\r\n                : \"Profile\"\r\n            }\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"Male\"\r\n            onClick={() => {\r\n              setGender(\"M\");\r\n            }}\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"female\"\r\n            control={<Radio color=\"primary\" />}\r\n            onClick={() => {\r\n              setGender(\"F\");\r\n            }}\r\n            label=\"Female\"\r\n            src={Gender === \"F\" && Image !== \"\" ? Image : female}\r\n            className={\r\n              Image === \"\"\r\n                ? showerror === true\r\n                  ? \"no-proifle \"\r\n                  : \" Profile\"\r\n                : \"Profile\"\r\n            }\r\n            labelPlacement=\"start\"\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <Grid item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{\r\n            backgroundColor: \"#3897F1\",\r\n            borderRadius: 25,\r\n            marginTop: 10,\r\n          }}\r\n          className=\"w-100 m-b-5px\"\r\n          onClick={() => {\r\n            save();\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Utils\\Login.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\AuthActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\NavLinks.js",["994","995","996"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst NavLinks = () => {\r\n  const [dropdownStatus, setDropdownStatus] = useState(false);\r\n  const handleDropdownStatus = () => {\r\n    setDropdownStatus(!dropdownStatus);\r\n    console.log(dropdownStatus);\r\n  };\r\n  return (\r\n    <ul className=\"main-nav__navigation-box\">\r\n      <li>{/* <Link href=\"/\">\r\n          <a>Home</a>\r\n        </Link> */}</li>\r\n      <li>\r\n        <ScrollLink\r\n          activeClass=\"current\"\r\n          to=\"features\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Features\r\n        </ScrollLink>\r\n      </li>\r\n      <li>\r\n        <ScrollLink\r\n          activeClass=\"current\"\r\n          to=\"pricing\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Pricing\r\n        </ScrollLink>\r\n      </li>\r\n      <li>\r\n        <ScrollLink\r\n          activeClass=\"current\"\r\n          to=\"contactme\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Contact\r\n        </ScrollLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\LandingPage\\AccordionItem.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\CodeAction.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\timer\\timer.js",["997","998"],"import React, { useState, useEffect } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nexport default function Timer(props) {\r\n  const [datetimer, setdatetime] = useState(Date.now() + 60000);\r\n\r\n  const renderer = ({ hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      props.settodo(1);\r\n      return <></>;\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <>\r\n          OTP will expire in : {hours}:{minutes}:{seconds}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return <Countdown date={datetimer} renderer={renderer} />;\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js",["999","1000","1001","1002","1003"],"import React, { useState, useEffect } from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getuserdata } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { url } from \"../../../Utils/Config\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function UserDataUrl(props) {\r\n  const [User, setUser] = useState({});\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (props.Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            setUser(res.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (props.Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            setUser(res.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, [props.Phone]);\r\n  return (\r\n    <>\r\n      {props.showIcon === true ? (\r\n        User.Pic !== undefined && User.Pic !== \"\" ? (\r\n          <Avatar alt=\"Profile Picture\" src={User.Pic} />\r\n        ) : (\r\n          <AccountCircle style={{ height: \"40px\", width: \"40px\" }} />\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showName && props.showName === true ? (\r\n        <span className=\"name\">\r\n          {User.Name === undefined || User.Name === \"\"\r\n            ? props.Phone\r\n            : User.Name}\r\n        </span>\r\n      ) : (\r\n        <span className=\"name\"></span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js",["1004","1005","1006","1007","1008","1009","1010"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IoChatbubbleEllipsesOutline } from \"react-icons/io5\";\r\nimport { BiNews } from \"react-icons/bi\";\r\nimport { AiOutlineBell } from \"react-icons/ai\";\r\nimport { Container, Row, Col, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport Notifications from \"../../Notifications/Notification\";\r\nimport { GoBook } from \"react-icons/go\";\r\nimport { IoImagesSharp, IoPowerSharp } from \"react-icons/io5\";\r\nexport default function DesktopNav(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const useStyles = makeStyles({});\r\n  const [ishost, setishost] = useState(false);\r\n  const [show, setshow] = useState(false);\r\n  useEffect(() => {\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      debugger\r\n      console.log(props.Eventdata)\r\n      var Host = props.Eventdata[0].InvId.Host;\r\n      for (var i = 0; i < Host.length; i++) {\r\n        if (Host[i] === Auth.Phone) {\r\n          setishost(true);\r\n        }\r\n      }\r\n    }\r\n    console.log(props.base);\r\n  }, [props.Eventdata]);\r\n\r\n  return (\r\n    <Container className=\"navigation-box\" fluid>\r\n      <Row>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            history.push(\"../albums/\" + props.id);\r\n          }}\r\n        >\r\n          <IoImagesSharp size={30} />\r\n          <a>Album</a>\r\n        </Col>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            history.push(\"./feed/\" + props.id);\r\n          }}\r\n        >\r\n          <BiNews size={30} />\r\n          Feed\r\n        </Col>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            setshow(true);\r\n          }}\r\n        >\r\n          <AiOutlineBell size={30} />\r\n          Notifications\r\n        </Col>\r\n        <Col md={2} className=\"tac\">\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"More\">\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/\" + props.base + \"/story/\" + props.id);\r\n              }}\r\n            >\r\n              Our Story\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/\" + props.base + \"/albums/\" + props.id);\r\n              }}\r\n            >\r\n              Albums\r\n            </Dropdown.Item>\r\n            {ishost === true ? (\r\n              <Dropdown.Item\r\n                as=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/MyEvents/admin/\" + props.id);\r\n                }}\r\n              >\r\n                Admin\r\n              </Dropdown.Item>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </DropdownButton>\r\n        </Col>\r\n      </Row>\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={props.MainCode}\r\n        showinvitaions={true}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\NavMobile\\NavMobile.js",["1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029"],"import React, { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { MdEvent } from \"react-icons/md\";\r\nimport { IoImagesSharp, IoPowerSharp } from \"react-icons/io5\";\r\nimport { GoBook } from \"react-icons/go\";\r\nimport { GrGallery } from \"react-icons/gr\";\r\nimport { BiNews, BiHomeAlt, BiPhotoAlbum } from \"react-icons/bi\";\r\nimport { AiOutlineBell } from \"react-icons/ai\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport \"./NavMobile.css\";\r\nimport { Container, Row, Col, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { BiChevronDown } from \"react-icons/bi\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport Notifications from \"../../Notifications/Notification\";\r\nexport default function NavMobile(props) {\r\n  const [show, setshow] = useState(false);\r\n  const [maincode, setmaincode] = useState(\"\");\r\n  const [eventcode, seteventcode] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [ishost, setishost] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      props.Eventdata[0].InvId.Host.map((host) => {\r\n        if (host === Auth.Phone) {\r\n          setishost(true);\r\n        }\r\n      });\r\n      console.log(props.Eventdata[0].InvId.Host);\r\n    }\r\n  }, [props.Eventdata]);\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg=\"light\"\r\n        variant=\"light\"\r\n        style={{\r\n          position: \"fixed\",\r\n          left: 0,\r\n          bottom: 0,\r\n          width: \"100vw\",\r\n          zIndex: 255\r\n\r\n        }}\r\n        className=\"deskhide-nav\"\r\n      >\r\n        <Nav\r\n          style={{\r\n            margin: \"auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            columnGap: \"23px\",\r\n            height: '4.5vh'\r\n          }}\r\n          className=\"navigation_mobile\"\r\n        >\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + '/eventpage/' + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiHomeAlt size={25} className=\"reacticons_align\" />\r\n            <p className=\"mobilebar_text\">Home</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + '/albums/' + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiPhotoAlbum size={25} />\r\n            <p className=\"mobilebar_text\">Gallery</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + '/eventpage/' + \"feed/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiNews size={25} />\r\n            <p className=\"mobilebar_text\">Feed</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              setshow(true);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <AiOutlineBell size={25} style={{marginLeft:'8px'}} />\r\n            <p className=\"mobilebar_text_notif\">Notifications</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + \"/more/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BsThreeDots size={25} />\r\n            <p className=\"mobilebar_text\">More</p>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={props.MainCode}\r\n        showinvitaions={true}\r\n        eventcode={eventcode}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\Addtoalbum.js",["1030","1031","1032","1033","1034","1035","1036"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../Assets/ChooseFromGallery.svg\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"../AddEvent/Extras/Extras.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"../Helpers/Popups/Popup.css\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { uploadString } from '../../Utils/FileUpload_Download'\r\nimport { uploadfiletoalbum } from '../../Redux/DispatchFuncitons/Eventfunctions'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nexport default function Addtoalbum(props) {\r\n    const dispatch = useDispatch();\r\n    const [album, setAlbum] = useState();\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        debugger\r\n        let bkpalbum = [];\r\n        let filetype = [];\r\n\r\n        for (let i = 0; i < acceptedFiles.length; i++) {\r\n            if (acceptedFiles[i].size > 5259265) {\r\n            } else {\r\n                let type = acceptedFiles[i].type.split(\"/\");\r\n                type = type[1];\r\n                await getBase64(acceptedFiles[i]).then(async (data) => {\r\n                    await bkpalbum.push({ file: data, type: type });\r\n                    await filetype.push(type);\r\n                });\r\n            }\r\n        }\r\n        await setAlbum([...bkpalbum]);\r\n        return true;\r\n    }, []);\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: \"image/jpeg, image/png, image/jpg\",\r\n    });\r\n    const cancel = () => {\r\n        setAlbum([]);\r\n    };\r\n    const deleteimage = (i) => {\r\n        let albumcpy = [...album];\r\n        albumcpy = albumcpy.filter((item, index) => i !== index);\r\n        setAlbum([...albumcpy]);\r\n    };\r\n    const save = async () => {\r\n        debugger\r\n        let albumcopy = [...props.images]\r\n        let uniqueurl =\r\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\" + \"Album/\";\r\n        for (let i = 0; i < album.length; i++) {\r\n            let newurl = await uploadString(album[i].file, uniqueurl + i + \".\" + album[i].type)\r\n            await albumcopy.push({ file: newurl, type: album[i].type })\r\n        }\r\n        console.log(albumcopy)\r\n        await dispatch(uploadfiletoalbum(albumcopy, props.MainCode))\r\n        props.toggleShowPopup(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"modal\"\r\n                open={props.showPopup}\r\n            >\r\n                <div className=\"modal-card\">\r\n                    <IconButton\r\n                        className=\"popup-close\"\r\n                        onClick={() => {\r\n                            props.toggleShowPopup(false);\r\n                        }}\r\n                    >\r\n                        <CancelIcon color=\"secondary\" fontSize=\"large\" />\r\n                    </IconButton>\r\n\r\n                    <div {...getRootProps()} style={{ width: '100%' }}>\r\n                        <input {...getInputProps()} />\r\n                        <img src={Gallery} className=\"w-100 uploadhere\" />\r\n                    </div>\r\n                    <Grid item xs={12} className=\"ofh view\">\r\n                        <Grid container spacing={4}>\r\n                            {album && album.length > 0\r\n                                ? album.map((image, index) => (\r\n                                    <Grid item xs={4} md={2} key={\"img\" + index}>\r\n                                        <CancelIcon\r\n                                            onClick={() => {\r\n                                                deleteimage(index);\r\n                                            }}\r\n                                            color=\"secondary\"\r\n                                            className=\"delete-img\"\r\n                                        />\r\n                                        <img src={image.file} className=\"w-100 preview\" />\r\n                                    </Grid>\r\n                                ))\r\n                                : Array.from({ length: 30 }, (value, key) => (\r\n                                    <Grid\r\n                                        item\r\n                                        xs={2}\r\n                                        md={1}\r\n                                        key={\"img\" + key}\r\n                                        className=\"w-100 preview grey m-5px\"\r\n                                    ></Grid>\r\n                                ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} className=\"submit jcc\">\r\n                        <button\r\n                            onClick={() => {\r\n                                save();\r\n                            }}\r\n                            className=\"add-album  \"\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </Grid>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js",["1037","1038","1039"],"import React, { useState } from \"react\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./InvitaionRSVP.css\";\r\nimport { Carousel, Button } from \"react-bootstrap\";\r\n\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport history from \"../../../Utils/History\";\r\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\r\nexport default function InvitaionRSVP(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  const Next = async (i) => {\r\n    console.log(i, props.Eventdata.length);\r\n    if (i < props.Eventdata.length) {\r\n      props.setevno(i);\r\n      setindex(i);\r\n      setdirection(\"next\");\r\n    } else {\r\n      props.sethasallrsvps(true);\r\n      await dispatch(GetInvitations());\r\n      await dispatch(GetEvents());\r\n      await dispatch(getNotification())\r\n    }\r\n  };\r\n\r\n  const [index, setindex] = useState(0);\r\n  const [direction, setdirection] = useState(\"\");\r\n\r\n  const handleSelect = (index) => {\r\n    let newIndex = index + 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <DesktopNav id={props.id} base={props.base} />\r\n      <Toggler id={props.id} />\r\n      <Carousel\r\n        controls={false}\r\n        direction={direction}\r\n        onSelect={(i) => {\r\n          handleSelect(i);\r\n        }}\r\n        activeIndex={index}\r\n        interval={99999999999999}\r\n      >\r\n        {props.Eventdata && props.Eventdata.length > 0 &&\r\n          props.Eventdata.map((eve, index) => (\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block fullimage\"\r\n                src={eve.file}\r\n                alt=\"First slide\"\r\n              />\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(rsvp_event(eve._id, \"Accept\", Auth.Phone));\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(rsvp_event(eve._id, \"May Be\", Auth.Phone));\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      {/* <NavMobile className=\"footnavmobile\" id={props.id} base={props.base} /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\Chatbox.js",["1040","1041","1042","1043","1044","1045","1046","1047","1048","1049"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport axios from \"axios\";\r\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"96%\",\r\n    marginLeft: \"1%\",\r\n    background: \" #f5f0f0\",\r\n    borderRadius: \"500px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function Chatbox(props) {\r\n  const classes = useStyles();\r\n  const [chats, setchat] = useState([]);\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    type = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let url = props.SelectedGroup.room + \"/\" + Date.now() + \".\" + type;\r\n      // console.log(url);\r\n      let filedata = await uploadString(reader.result, url);\r\n      props.sendImage({\r\n        sender: Auth.Phone,\r\n        type: \"image\",\r\n        content: filedata,\r\n        room: props.SelectedGroup.room,\r\n        _id: props.SelectedGroup._id,\r\n      });\r\n      console.log({\r\n        sender: Auth.Phone,\r\n        type: \"image\",\r\n        content: filedata,\r\n        room: props.SelectedGroup.room,\r\n        _id: props.SelectedGroup._id,\r\n      });\r\n    };\r\n    reader.onerror = function (error) {\r\n      // console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, \",\r\n  });\r\n  useEffect(async () => {\r\n    const interval = setInterval(() => {\r\n      if (props.SelectedGroup._id !== \"\") {\r\n        getChats(props.SelectedGroup._id);\r\n      }\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  useEffect(async () => {\r\n    props.setIsSubmit(false);\r\n  }, [props.SelectedGroup.chats, props.IsSubmit]);\r\n\r\n  const getChats = (_id) => {\r\n    axios\r\n      .post(url + \"chatgroup/getchat\", { _id: _id })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        if (response.data.status === \"success\") {\r\n          setchat(response.data.chatdata);\r\n          console.log(response.data.chatdata);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n  return (\r\n    <Grid container spacing={0} className=\"h100\">\r\n      <Grid item xs={12} className=\"h7 white\">\r\n        <List className=\"p-0 m-0\">\r\n          <ListItem className=\" m-0\">\r\n            {props.fullscreen === false ? (\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.setshow(0);\r\n                }}\r\n              >\r\n                <ArrowBackIosIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {props.SelectedGroup !== \"\" ? (\r\n              props.SelectedGroup.Type === \"GRP\" ? (\r\n                <>\r\n                  <ListItemIcon>\r\n                    <Avatar src={props.SelectedGroup.GrpPhoto} />\r\n                  </ListItemIcon>\r\n                  <ListItemText>{props.SelectedGroup.Name}</ListItemText>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ListItemAvatar>\r\n                    <UserDatajustUrl\r\n                      showIcon={true}\r\n                      Phone={\r\n                        props.SelectedGroup.Name === Auth.Phone ||\r\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\r\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\r\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Admin\r\n                            : \"+91\" + props.SelectedGroup.Admin\r\n                          : typeof props.SelectedGroup.Name === \"string\" &&\r\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Name.toString()\r\n                            : \"+91\" + props.SelectedGroup.Name\r\n                      }\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText>\r\n                    <UserDatajustUrl\r\n                      showName={true}\r\n                      Phone={\r\n                        props.SelectedGroup.Name === Auth.Phone ||\r\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\r\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\r\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Admin\r\n                            : \"+91\" + props.SelectedGroup.Admin\r\n                          : typeof props.SelectedGroup.Name === \"string\" &&\r\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Name.toString()\r\n                            : \"+91\" + props.SelectedGroup.Name\r\n                      }\r\n                    />\r\n                  </ListItemText>\r\n                </>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </ListItem>\r\n        </List>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} className=\"chat\">\r\n        {chats &&\r\n          chats.map((chat) => (\r\n            <>\r\n              {chat.sender === Auth.Phone ? (\r\n                <div className=\"sender\">\r\n                  {chat.type === \"text\" ? (\r\n                    chat.content\r\n                  ) : chat.type === \"image\" ? (\r\n                    <img src={chat.content} className=\"chat-img\" />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"recieved\">\r\n                  {chat.type === \"text\" ? (\r\n                    <>\r\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\r\n                      :\r\n                      <br />\r\n                      {chat.content}\r\n                    </>\r\n                  ) : chat.type === \"image\" ? (\r\n                    <>\r\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\r\n                      :\r\n                      <br />\r\n                      <img src={chat.content} className=\"chat-img\" />\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </>\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className=\"inputbox\"\r\n        style={{ display: props.SelectedGroup !== \"\" ? \"block\" : \"none\" }}\r\n      >\r\n        <Paper\r\n          component=\"form\"\r\n          className={classes.root}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n              <AttachFileIcon className=\"tilt\" />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <InputBase\r\n            className={classes.input}\r\n            placeholder=\"hi...\"\r\n            inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            value={props.text}\r\n            onChange={(e) => {\r\n              props.settext(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Divider className={classes.divider} orientation=\"vertical\" />\r\n          <IconButton\r\n            color=\"primary\"\r\n            className={classes.iconButton}\r\n            aria-label=\"directions\"\r\n            onClick={() => {\r\n              props.submit();\r\n              props.settext(\"\");\r\n            }}\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\List.js",["1050","1051","1052","1053","1054","1055","1056"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport history from \"../../Utils/History\";\r\nimport {\r\n  Paper,\r\n  InputBase,\r\n  Tabs,\r\n  IconButton,\r\n  Tab,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport SelectParticipant from \"./SelectParticipant\";\r\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabroot: {\r\n    flexGrow: 1,\r\n  },\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    borderRadius: \"500px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\nexport default function CList(props) {\r\n  const [value, setValue] = useState(0);\r\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  // console.log(Auth.Phone);\r\n  const [show, setshow] = useState(false);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const [Groups, setGroups] = useState([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    let grpcopy = [];\r\n    AllGroups.map((sgrpup) => {\r\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\r\n        grpcopy.push(sgrpup);\r\n      }\r\n    });\r\n    setGroups(grpcopy);\r\n  }, []);\r\n  useEffect(() => {\r\n    let grpcopy = [];\r\n    AllGroups.map((sgrpup) => {\r\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\r\n        grpcopy.push(sgrpup);\r\n      }\r\n    });\r\n    setGroups(grpcopy);\r\n  }, [AllGroups]);\r\n  return (\r\n    <div className=\"h100 vlgrey\">\r\n      <Grid container spacing={0} className=\"h7 white\">\r\n        <Grid item xs={10} className=\"h7 white\">\r\n          <h2 className=\"chatheadertitle\">\r\n            {/* <ArrowBackIosIcon\r\n              onClick={() => {\r\n                // console.log(props.pushto);\r\n                history.goBack();\r\n              }}\r\n            /> */}\r\n            Chat\r\n          </h2>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <AddCircleOutlineIcon\r\n            fontSize={\"large\"}\r\n            color={\"primary\"}\r\n            className=\"m-5px\"\r\n            onClick={() => {\r\n              setshow(true);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.tabroot}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Direct\" />\r\n            <Tab label=\"Group\" />\r\n          </Tabs>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search for Participants\"\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n\r\n            <IconButton\r\n              color=\"default\"\r\n              className={classes.iconButton}\r\n              aria-label=\"directions\"\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} className=\" w-90-p\">\r\n          <List>\r\n            {Groups.map((grp) => (\r\n              <ListItem\r\n                className=\" m-5px\"\r\n                onClick={() => {\r\n                  // console.log(grp);\r\n                  props.setSelectedGroup(grp);\r\n                  props.setchat(grp.chats);\r\n                  props.updateName();\r\n                  props.setshow(1);\r\n                }}\r\n              >\r\n                {value === 1 && grp.Type === \"GRP\" ? (\r\n                  <>\r\n                    <ListItemAvatar>\r\n                      <Avatar alt=\"Profile Picture\" src={grp.GrpPhoto} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={grp.Name} />\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {value === 0 && grp.Type === \"INDV\" ? (\r\n                  <>\r\n                    <ListItemAvatar>\r\n                      <UserDatajustUrl\r\n                        showIcon={true}\r\n                        Phone={\r\n                          grp.Name === Auth.Phone ||\r\n                            \"+91\" + grp.Name === Auth.Phone\r\n                            ? typeof grp.Admin === \"string\" &&\r\n                              grp.Admin.toString().startsWith(\"+\")\r\n                              ? grp.Admin\r\n                              : \"+91\" + grp.Admin\r\n                            : typeof grp.Name === \"string\" &&\r\n                              grp.Name.toString().startsWith(\"+\")\r\n                              ? grp.Name.toString()\r\n                              : \"+91\" + grp.Name\r\n                        }\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText>\r\n                      <UserDatajustUrl\r\n                        showName={true}\r\n                        Phone={\r\n                          grp.Name === Auth.Phone ||\r\n                            \"+91\" + grp.Name === Auth.Phone\r\n                            ? typeof grp.Admin === \"string\" &&\r\n                              grp.Admin.toString().startsWith(\"+\")\r\n                              ? grp.Admin\r\n                              : \"+91\" + grp.Admin\r\n                            : typeof grp.Name === \"string\" &&\r\n                              grp.Name.toString().startsWith(\"+\")\r\n                              ? grp.Name.toString()\r\n                              : \"+91\" + grp.Name\r\n                        }\r\n                      />\r\n                    </ListItemText>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Popup\r\n        component={SelectParticipant}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        url={props.allparticipants}\r\n        showall={value}\r\n        MainCode={props.MainCode}\r\n        Groups={Groups}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\AddPost.js",["1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zoomicon from \"../../Assets/zoomicon.png\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { IoCameraOutline } from \"react-icons/io5\";\r\nimport { FaTag } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { InputTags } from \"react-bootstrap-tagsinput\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport history from \"../../Utils/History\";\r\nimport FeedComments from \"./FeedComments\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Media from \"./Media\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport AddTags from \"./AddTags\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport {\r\n    GetEvents,\r\n    GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function AddPost(props) {\r\n    const Auth = useSelector((state) => state.Auth);\r\n\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        if (acceptedFiles[0].size > 5259265) {\r\n            alert(\"Max file size 5mb\");\r\n            return false;\r\n        }\r\n        let url = \"\";\r\n        let ftype = acceptedFiles[0].type.split(\"/\");\r\n        console.log(ftype)\r\n        props.settype(ftype[0]);\r\n        var reader = await new FileReader();\r\n        reader.onload = async function () {\r\n            url = reader.result;\r\n            props.setimageurl(url);\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log(\"Error: \", error);\r\n        };\r\n        await reader.readAsDataURL(acceptedFiles[0]);\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        multiple: false,\r\n        accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n    });\r\n\r\n    return (\r\n        <Container\r\n            className=\"addpost-event  \"\r\n            style={{ marginTop: 10, marginBottom: 10 }}\r\n            fluid\r\n        >\r\n            <Row className=\"commentinp\">\r\n                <Col xs={2} md={1}>\r\n                    <UserData Phone={Auth.Phone} showIcon={true} />\r\n                </Col>\r\n                <Col xs={8} md={10}>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            props.setcaption(e.target.value);\r\n                        }}\r\n                        value={props.caption}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"w-100\"\r\n                        placeholder=\"Add comment\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            outline: \"none\",\r\n                            border: \"none\",\r\n                            background: \"#f6f6f6\",\r\n                            height: \"100%\",\r\n                            fontSize: 14,\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col xs={2} md={1}>\r\n                    {props.isSubmit === false ? (\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                props.submit();\r\n                            }}\r\n                        >\r\n                            <SendIcon style={{ color: \"black\" }} />\r\n                        </IconButton>\r\n                    ) : (\r\n                        <IconButton>\r\n                            <CircularProgress style={{ color: \"black\" }} />\r\n                        </IconButton>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"addmedia-tag\" style={{ marginTop: 20 }}>\r\n                <Col className=\"btn t-blue ll-blue btn-rnd m-5px\" {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <a style={{ color: \"#007bff\" }}>\r\n                        <IoCameraOutline size={20} /> Add Media\r\n                    </a>\r\n                </Col>\r\n                <Col className=\"btn t-blue ll-blue btn-rnd m-5px\">\r\n                    <a\r\n                        style={{ color: \"#007bff\" }}\r\n                        onClick={() => {\r\n                            props.setShowTagQuery(true);\r\n                        }}\r\n                    >\r\n                        <FaTag size={17} /> Tag\r\n                    </a>\r\n                    {/* )} */}\r\n                </Col>\r\n            </Row>\r\n            {props.imageurl !== \"\" ? (\r\n                props.type !== \"mp4\" ? (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <img\r\n                                    src={props.imageurl}\r\n                                    className=\"w-100\"\r\n                                    style={{ height: \"30vh\" }}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    <Row>\r\n                        <center>\r\n                            <video\r\n                                src={props.imageurl}\r\n                                type=\"video/mp4\"\r\n                                controls={true}\r\n                                preload=\"none\"\r\n                                height={260}\r\n                                width={window.innerWidth > 400 ? 800 : window.innerWidth}\r\n                                autoPlay=\"true\"\r\n                            />\r\n                        </center>\r\n                    </Row>\r\n                )\r\n\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Posts.js",["1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zoomicon from \"../../Assets/zoomicon.png\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { IoCameraOutline } from \"react-icons/io5\";\r\nimport { FaTag } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { InputTags } from \"react-bootstrap-tagsinput\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport history from \"../../Utils/History\";\r\nimport FeedComments from \"./FeedComments\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Media from \"./Media\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport AddTags from \"./AddTags\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport {\r\n    GetEvents,\r\n    GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function Postrender(props) {\r\n    const [Posts, setPosts] = useState([])\r\n    useEffect(() => {\r\n        if (props.filter === 'All') {\r\n            setPosts(props.data)\r\n        } else {\r\n            setPosts(props.filterdata)\r\n        }\r\n\r\n    }, [props.data, props.filter, props.filterdata])\r\n    return (\r\n        <div>\r\n            <>\r\n                {Posts.map((post, index) => (\r\n                    <Container\r\n                        className=\"main-feed \"\r\n                        style={{\r\n                            marginTop: 10,\r\n                            padding: 20,\r\n\r\n                        }}\r\n                    >\r\n                        <Row className=\"m-0\">\r\n                            <Col xs={2} md={1} fluid>\r\n                                <UserData showIcon={true} Phone={post.by} className=\"fl\" />\r\n                            </Col>\r\n                            <Col className=\"m-0 p-0\">\r\n                                <p className=\" m-5px fs-14\">\r\n                                    <b>\r\n                                        <UserDataUrl Phone={post.by} showName={true} />\r\n                                    </b>\r\n                                    {post.tags.length > 0 ? (\r\n                                        <>\r\n                                            {\" \"}\r\n                                            is with:{\" \"}\r\n                                            <b>\r\n                                                <UserDataUrl Phone={post.tags[0]} showName={true} />\r\n                                            </b>\r\n                                            {post.tags.length >= 2 ? (\r\n                                                <> and {post.tags.length - 1} other(s)</>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n                                            :\r\n                                        </>\r\n                                    ) : (\r\n                                        <></>\r\n                                    )}\r\n                                </p>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <p className=\" m-5px fs-14\">{post.caption}</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {post.fileurl !== \"\" ? (\r\n                            post.filetype === \"image\" ? (\r\n                                <Image src={post.fileurl} fluid />\r\n                            ) : (\r\n                                <center>\r\n                                    {\" \"}\r\n                                    <video\r\n                                        height=\"360\"\r\n                                        width={window.innerWidth > 500 ? 800 : window.innerWidth}\r\n                                        autoplay={false}\r\n                                        src={post.fileurl}\r\n                                        type=\"video/mp4\"\r\n                                        controls={true}\r\n                                        preload=\"none\"\r\n                                    />\r\n                                </center>\r\n                            )\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                        <Row className=\"m-0 p-0\">\r\n                            <Col xs={6} className=\"mt-10px\">\r\n                                <center>\r\n                                    <a\r\n                                        style={{ color: \"rgb(244 67 54)\" }}\r\n                                        onClick={() => {\r\n                                            props.getposts();\r\n                                        }}\r\n                                    >\r\n                                        <Like\r\n                                            index={index}\r\n                                            LikeList={post.LikeList}\r\n                                            _id={post._id}\r\n                                            getposts={props.getposts}\r\n                                            maincode={props.Eventdata[0].MainCode}\r\n                                        />\r\n                                    </a>\r\n                                </center>\r\n                            </Col>\r\n                            <Col xs={6} className=\"mt-10px\">\r\n                                <center>\r\n                                    <a\r\n                                        style={{ color: \"#007bff\" }}\r\n                                        onClick={async () => {\r\n                                            console.log(props.showcommmentforpost)\r\n                                            console.log(!props.showcommment)\r\n                                            console.log(!props.showcommment)\r\n                                            if (props.showcommmentforpost === post._id) {\r\n                                                props.setshowcommment(!props.showcommment);\r\n                                                props.setshowcommmentforpost(post._id);\r\n                                                await props.getposts();\r\n                                            } else {\r\n                                                props.setshowcommment(true);\r\n                                                props.setshowcommmentforpost(post._id);\r\n                                                await props.getposts();\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <FaRegCommentDots size={25} style={{ marginLeft: 30 }} />\r\n\r\n                                        {post.CommentList.length}\r\n                                    </a>\r\n                                </center>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Col>\r\n                            {props.showcommment === true && props.showcommmentforpost === post._id ? (\r\n                                <FeedComments\r\n                                    id={post._id}\r\n                                    getposts={props.getposts}\r\n                                    data={post.CommentList}\r\n                                    maincode={props.Eventdata[0].MainCode}\r\n                                    post={post}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </Col>\r\n                    </Container>\r\n                ))}\r\n            </>\r\n        </div>\r\n    )\r\n}\r\nexport function Like(props) {\r\n    const dispatch = useDispatch();\r\n    const Auth = useSelector((state) => state.Auth);\r\n    const [isLike, setisLike] = useState(false);\r\n    const [count, setcount] = useState(0);\r\n    useEffect(() => {\r\n        props.LikeList.map((likedata) => {\r\n            if (likedata.LikeBy === Auth.Phone) {\r\n                setisLike(true);\r\n            }\r\n        });\r\n        setcount(props.LikeList.length);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLike === false ? (\r\n                <FcLikePlaceholder\r\n                    size={30}\r\n                    onClick={async () => {\r\n                        await dispatch(likepost(props._id, Auth.Phone, props.maincode));\r\n                        await setisLike(true);\r\n                        // await props.getposts(props.maincode);\r\n                        await setcount(count + 1);\r\n                    }}\r\n                />\r\n            ) : (\r\n                <FcLike\r\n                    size={30}\r\n                    onClick={async () => {\r\n                        await dispatch(likepost(props._id, Auth.Phone, props.maincode));\r\n                        await setisLike(false);\r\n                        // await props.getposts(props.maincode);\r\n                        await setcount(count - 1);\r\n                    }}\r\n                />\r\n            )}\r\n            {count}\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\AddTags.js",["1125","1126","1127","1128","1129"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport './Feed.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\nexport default function AddTags(props) {\r\n    const [Tags, setTags] = useState(props.url)\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        setTags([...props.url])\r\n        console.log(props.MainCode)\r\n    }, [props.url])\r\n\r\n    const addTags = (data) => {\r\n        setTags([...Tags, data])\r\n    }\r\n    const removeTags = (data) => {\r\n        let Tagscpy = [...Tags];\r\n        Tagscpy = Tagscpy.filter((tag) => {\r\n            return data != tag;\r\n        });\r\n        setTags([...Tagscpy])\r\n    }\r\n\r\n    return (\r\n        <div><h3>Add Tags</h3>\r\n\r\n            <List className={classes.root}>\r\n                {props.MainCode.map(Participant => (\r\n                    <ListItem alignItems=\"flex-start\" className={Tags.includes(Participant) ? \"selected m-5px\" : \"m-5px\"}\r\n                        onClick={() => { Tags.includes(Participant) ? removeTags(Participant) : addTags(Participant) }}>\r\n                        <ListItemAvatar>\r\n                            <UserDataUrl showIcon={true} Phone={Participant} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={<UserDataUrl showName={true} Phone={Participant} />}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n\r\n                                    </Typography>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                ))}\r\n\r\n\r\n            </List>\r\n            <button className=\"btn btn-primary\" onClick={() => { props.showall([...Tags]); props.hide(false) }}\r\n            style={{ width: \"100%\", borderRadius: 20 }}>\r\n                Save\r\n            </button>\r\n        </div >\r\n    );\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\Media.js",["1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141"],"import React, { useState, useEffect } from 'react'\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport HorizontalSlider from 'react-horizontal-slider'\r\nimport './Feed.css'\r\nexport default function Media(props) {\r\n    const [currentmedia, setcurrentmedia] = useState(0);\r\n    const [allmedia, setallmedia] = useState([]);\r\n    useEffect(async () => {\r\n        debugger\r\n        let isselected = false;\r\n        for (let i = 0; i < props.currentPosts.length; i++) {\r\n            if (isselected === false) {\r\n                if (props.popuptype === \"Photo\" && props.currentPosts[i].filetype === \"image\") {\r\n                    await setcurrentmedia(i)\r\n                    console.log(props.currentPosts[i])\r\n                    console.log(i)\r\n                    isselected = true;\r\n                } else if (props.popuptype === \"Videos\" && props.currentPosts[i].filetype === \"video\") {\r\n                    await setcurrentmedia(i)\r\n                    isselected = true;\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [])\r\n    return (\r\n        <Container fluid >\r\n            <Row style={{ marginleft: 30, position: 'absolute', top: 0, zIndex: 99999 }}>\r\n                <IoArrowBackCircleOutline\r\n                    size={40}\r\n                    style={{ color: \"black\" }}\r\n                    onClick={() => props.toggleShowPopup(false)}\r\n                />\r\n                <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n                    {props.popuptype}\r\n                </h3>\r\n            </Row>\r\n            <Row style={{ marginTop: 0, position: 'fixed', top: 0, outline: 'none', left: 0, margin: 0 }}>\r\n                {props.currentPosts.map((post, index) => (\r\n\r\n                    post.fileurl !== \"\" && index === currentmedia ?\r\n                        (props.popuptype === \"Photo\" && post.filetype === \"image\") ?\r\n                            <img className=\"Media\" src={post.fileurl} key={index} onClick={() => { setcurrentmedia(index) }} />\r\n                            : (props.popuptype === \"Videos\" && post.filetype === \"video\") ? <>\r\n                                <video className=\"Media\" src={post.fileurl} type=\"video/mp4\"\r\n                                    controls={true} autoplay='true'\r\n                                    preload=\"none\" height={window.innerWidth - 150} width={window.innerWidth > 400 ? 800 : window.innerWidth} />\r\n                            </> :\r\n                                <></>\r\n                        : <></>\r\n\r\n\r\n                ))}\r\n\r\n            </Row>\r\n            <Row style={{ marginTop: 5, position: 'fixed', bottom: 0, overflowX: 'scroll', width: '100vw', margin: 0, left: 0 }}>\r\n                {props.currentPosts.map((post, index) => (\r\n                    post.fileurl !== \"\" ?\r\n                        (props.popuptype === \"Photo\" && post.filetype === \"image\") ?\r\n                            <img className=\"item-options\" src={post.fileurl} key={index} onClick={() => { setcurrentmedia(index) }} />\r\n                            : (props.popuptype === \"Videos\" && post.filetype === \"video\") ?\r\n                                <video className=\"item-options\" width={50} height={50} src={post.fileurl} type=\"video/mp4\"\r\n                                    autoPlay={false} preload=\"none\" onClick={() => { setcurrentmedia(index) }} />\r\n                                :\r\n                                <></>\r\n                        : <></>\r\n\r\n                ))}\r\n\r\n\r\n            </Row>\r\n\r\n        </Container >\r\n    )\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserData.js",["1142","1143","1144"],"import React, { useState, useEffect } from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getuserdata } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { url } from \"../../../Utils/Config\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function UserData(props) {\r\n  const [User, setUser] = useState({});\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(props.Phone);\r\n    if (props.Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            console.log(res.data.user);\r\n\r\n            setUser(res.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, [props.Phone]);\r\n  return (\r\n    <div className=\"w-100\">\r\n      {props.showIcon === true ? (\r\n        User.Pic !== undefined && User.Pic !== \"\" ? (\r\n          <div className=\"fl\">\r\n            <Avatar alt=\"Profile Picture\" src={User.Pic} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"fl\">\r\n            <AccountCircle />\r\n          </div>\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showName === true ? (\r\n        <div className=\"fl  fs-bold \">{User.Name} </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Feed\\FeedComments.js",["1145","1146","1147","1148","1149"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { addcomments } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nexport default function FeedComments(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [comment, setcomment] = useState(\"\");\r\n  const [comments, setcomments] = useState([]);\r\n  const [isError, setisError] = useState(false);\r\n  const submit = async () => {\r\n    if (comment !== \"\") {\r\n      await dispatch(addcomments(props.id, Auth.Phone, comment, props.maincode));\r\n\r\n      let commentscpy = [...comments]\r\n      await commentscpy.push({ CommentBy: Auth.Phone, Comment: comment })\r\n      console.log(commentscpy)\r\n      await setcomments(commentscpy)\r\n      await setisError(false);\r\n      await setcomment(\"\")\r\n      await props.getposts(props.maincode)\r\n    } else {\r\n      setisError(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(props.data)\r\n    setcomments(props.data)\r\n  }, [props.post])\r\n\r\n  return (\r\n    <Container fluid className=\"mt-5px p-0\">\r\n      <Row className=\"commentinp\">\r\n        <Col xs={2} md={1} className=\"m-0 p-0\">\r\n          <UserDataUrl showIcon={true} Phone={Auth.Phone} />\r\n        </Col>\r\n        <Col xs={8} className=\"p-0 \">\r\n          <input\r\n            type='text'\r\n            value={comment}\r\n            onChange={(e) => setcomment(e.target.value)}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className=\"w-100\"\r\n            placeholder=\"Add comment\"\r\n            error={isError}\r\n            style={{ width: '100%', outline: 'none', border: 'none', background: '#f6f6f6', height: '100%', fontSize: 14 }}\r\n          />\r\n        </Col>\r\n        <Col xs={2} className=\"\">\r\n          <IconButton onClick={() => {\r\n            submit();\r\n          }}>\r\n            <SendIcon style={{ color: 'black' }} />\r\n          </IconButton >\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"p-5px m-5px\">\r\n        {comments &&\r\n          comments.map((cmt) => (\r\n            <Row\r\n              style={{\r\n                margin: 0,\r\n                marginTop: '10px !important',\r\n                width: '100%'\r\n              }}\r\n              md={2}\r\n            >\r\n              <Col xs={2} md={1} className=\"fs-14\">\r\n                <UserDataUrl showIcon={true} Phone={cmt.CommentBy} />\r\n              </Col>\r\n              <Col xs={10} md={9}>\r\n                <h5 className=\"m-0 p-0 fs-14\">\r\n                  <UserDataUrl showName={true} Phone={cmt.CommentBy} />\r\n                </h5>\r\n\r\n                <span className=\"t-grey fs-14\">{cmt.Comment}</span>\r\n              </Col>\r\n\r\n\r\n            </Row>\r\n          ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js",["1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  FormControl,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\nimport EventNameBox from \"./EventNameBox\";\r\nimport AddImg from \"../../../Assets/AddImage.svg\";\r\nimport Uploading from \"../../../Assets/Uploading.svg\";\r\nimport EventDetails from \"./EventDetails\";\r\nimport ImageSelectionModal from \"./ImageSelectionModal\";\r\nimport \"./CreateEvent.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nexport default function CreateEvent(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"#3897f1 !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const [disablesave, setDisablesave] = useState(false);\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  const [erroring, seterroring] = useState(false);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [url, seturl] = useState(AddImg);\r\n  useEffect(() => {\r\n    if (\r\n      props.Events[props.SelectedEvent] !== undefined &&\r\n      props.Events[props.SelectedEvent].file !== \"\"\r\n    ) {\r\n      if (props.Events[props.SelectedEvent].file === \"uploading\") {\r\n        seturl(Uploading);\r\n      } else {\r\n        seturl(props.Events[props.SelectedEvent].file);\r\n      }\r\n    } else {\r\n      seturl(AddImg);\r\n    }\r\n  }, [\r\n    props.Events[props.SelectedEvent] !== undefined\r\n      ? props.Events[props.SelectedEvent].file\r\n      : \"\",\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={0} className=\"m-0  p-15px pt-0 pb-0\">\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className=\"w-100-p  m-b-10 \"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            <Select\r\n              native\r\n              value={props.Type}\r\n              onChange={props.handleChange}\r\n              error={erroring}\r\n              className=\"selectboxblue\"\r\n              displayEmpty\r\n            >\r\n              <option value=\"Wedding\">Wedding</option>\r\n              <option value=\"Birthday\">Birthday</option>\r\n              <option value=\"Wedding Anniversary\">Wedding Anniversary</option>\r\n              <option value=\"Get Together\">Get Together</option>\r\n              <option value=\"Formal Event\">Formal Event</option>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <div className=\"noe\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={false} sm={1} md={2} />\r\n              <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\r\n                Number Of Events\r\n              </Grid>\r\n              <Grid item xs={5} sm={5} md={4}>\r\n                <Grid container spacing={0}>\r\n                  <Grid item xs={12}>\r\n                    <div className=\"Cirlce tar  fl\">\r\n                      <RemoveCircleOutlineIcon\r\n                        className=\"l-blue-t \"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.removeAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"white box  fl\">{props.Events.length}</div>\r\n                    <div className=\"Cirlce tal  fl\">\r\n\r\n                      <AddCircleOutlineIcon\r\n                        className=\"l-blue-t\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.addAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"event-Names m-b-10 p-15px pb-0 pt-0\">\r\n        <EventNameBox\r\n          data={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectEvent={props.SelectEvent}\r\n          SelectedEvent={props.SelectedEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n        />\r\n      </div>\r\n\r\n      <Grid item xs={12}>\r\n        <EventDetails\r\n          Events={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectedEvent={props.SelectedEvent}\r\n          SelectEvent={props.SelectEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n          setDisablesave={setDisablesave}\r\n          disablesave={disablesave}\r\n          albumdata={props.albumdata}\r\n          setStory={props.setStory}\r\n          setalbumdata={props.setalbumdata}\r\n          Story={props.Story}\r\n          template={props.template}\r\n          handleNext={props.handleNext}\r\n          Type={props.Type}\r\n          seterroring={seterroring}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <button\r\n          className={\r\n            disablesave === false ? \"save-events disabled\" : \"save-events \"\r\n          }\r\n          onClick={() => {\r\n            if (disablesave === true) {\r\n              props.handleNext();\r\n            }\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Plan\\Plan.js",["1164","1165","1166","1167","1168"],"import React, { useState } from \"react\";\r\nimport \"./Plan.css\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nfunction Plancard(props) {\r\n  return (\r\n    <Paper\r\n      className=\"plancard\"\r\n      onClick={() => {\r\n        props.selectplan(props.plani);\r\n      }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} className={\"upperplan \" + props.plan}>\r\n          <Grid xs={12} className=\"tac t-white pfsmall\">\r\n            {props.plan}\r\n          </Grid>\r\n          <Grid xs={12} className=\"tac t-white pflarge\">\r\n            {props.invites}\r\n            <br />\r\n            Invites\r\n          </Grid>\r\n          <Grid xs={12} className=\"tac t-white pfmed\">\r\n            {props.cost}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} className=\"lowerplan\">\r\n          <ul class=\"a\">\r\n            <li>Multiple Events</li>\r\n            <li>Albums</li>\r\n            <li>Schedule</li>\r\n            <li>Ousr Story</li>\r\n            <li>Location</li>\r\n            <li>Multiple Admin</li>\r\n          </ul>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\nexport default function Plan(props) {\r\n  const [selectedplan, selectplan] = useState(0);\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <div className=\"planheadbottom\"></div>\r\n        <div className=\"planheadtop\"></div>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"plancardholder\">\r\n        <Plancard\r\n          plan={\"Free\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 00 / Month\"}\r\n          invites={\"50\"}\r\n          plani={0}\r\n        />\r\n\r\n        <Plancard\r\n          plan={\"Bronze\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 99 / Month\"}\r\n          invites={\"200\"}\r\n          plani={1}\r\n        />\r\n\r\n        <Plancard\r\n          plan={\"Silver\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 299 / Month\"}\r\n          invites={\"400\"}\r\n          plani={2}\r\n        />\r\n\r\n        <Plancard\r\n          plan={\"Gold\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 499 / Month\"}\r\n          invites={\"400+\"}\r\n          plani={3}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Plan Amount\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              {selectedplan === 0 ? \"Rs 00\" : <></>}\r\n              {selectedplan === 1 ? \"Rs 99\" : <></>}\r\n              {selectedplan === 2 ? \"Rs 299\" : <></>}\r\n              {selectedplan === 3 ? \"Rs 499\" : <></>}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Extra Template\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              Rs 00\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Coupon Discount\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              Rs 00\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Total Amount\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <b>\r\n                <u>\r\n                  {selectedplan === 0 ? \"Rs 00\" : <></>}\r\n                  {selectedplan === 1 ? \"Rs 99\" : <></>}\r\n                  {selectedplan === 2 ? \"Rs 299\" : <></>}\r\n                  {selectedplan === 3 ? \"Rs 499\" : <></>}\r\n                </u>\r\n              </b>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"m-7px\">\r\n        <button\r\n          className=\"custom-file-upload\"\r\n          onClick={() => props.handleNext()}\r\n        >\r\n          Make Payment\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Stepper\\Stepper.js",["1169","1170","1171","1172","1173","1174","1175","1176"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"\", \"\", \"\"];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"\";\r\n    case 1:\r\n      return \"\";\r\n    case 2:\r\n      return \"\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper(props) {\r\n  const classes = useStyles();\r\n\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    // <div className={classes.root}>\r\n    //   <Stepper activeStep={props.activeStep}>\r\n    //     {steps.map((label, index) => {\r\n    //       const stepProps = {};\r\n    //       const labelProps = {};\r\n\r\n    //       return (\r\n    //         // <Step key={index} {...stepProps} c>\r\n    //         //   <StepLabel {...labelProps} className=\"l-blue-t\">\r\n    //         //     {label}\r\n    //         //   </StepLabel>\r\n    //         // </Step>\r\n    //\r\n    //       );\r\n    //     })}\r\n    //   </Stepper>\r\n    //   <div>\r\n    //     <div>\r\n    //       <Typography className={classes.instructions}>\r\n    //         {getStepContent(props.activeStep)}\r\n    //       </Typography>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n    <div className=\"w-100 p-10px\"></div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js",["1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207"],"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Access from \"../../../Assets/AddAccess.svg\";\r\nimport \"../AddEvent.css\";\r\nimport { Grid, Switch, Modal } from \"@material-ui/core\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveEvent } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { uploadString } from \"../../../Utils/FileUpload_Download\";\r\nimport EventNameBox from \"../CreateEvent/EventNameBox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AddCode from \"./AddCode\";\r\nimport { ReactExcel, readFile, generateObjects } from \"@ramonak/react-excel\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Button,\r\n    ListGroup,\r\n    Tabs,\r\n    Tab,\r\n    Col,\r\n    Spinner,\r\n} from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\n\r\nimport * as XLSX from \"xlsx\";\r\nimport { json } from \"body-parser\";\r\nimport Addformultiple from './Addformultiple'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"solid 1px grey\",\r\n    },\r\n}));\r\nexport default function NewAddParticipants(props) {\r\n    const classes = useStyles();\r\n    const [eventKey, setKey] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const Eventdata = useSelector((state) => state.Eventdata);\r\n    let supported = \"\";\r\n    let attribute = [\"name\", \"tel\"];\r\n    const opts = { multiple: true };\r\n    let Eventscpy = [...props.Events];\r\n    const [EntryWay, setEntryWay] = useState(\"Contact\");\r\n    const [code, setCodes] = useState([]);\r\n    const [isMobile, SetIsMobile] = useState(false);\r\n    const [isSaving, setisSaving] = useState(false);\r\n    const [openModal, setopenModal] = useState(false);\r\n    const [participants, setParticipants] = useState([]);\r\n    let Albumcpy = [];\r\n    let Storycpy = [];\r\n    useEffect(async () => {\r\n        supported = \"contacts\" in navigator && \"ContactsManager\" in window;\r\n        if (supported === true) {\r\n            SetIsMobile(true);\r\n        } else {\r\n            SetIsMobile(false);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const readExcel = async (file) => {\r\n        debugger;\r\n        const fileReader = new FileReader();\r\n        await fileReader.readAsArrayBuffer(file);\r\n        fileReader.onload = async (e) => {\r\n            const bufferArray = e.target.result;\r\n            const wb = await XLSX.read(bufferArray, { type: \"buffer\" });\r\n            const wsname = await wb.SheetNames[0];\r\n            const ws = await wb.Sheets[wsname];\r\n            const data = await XLSX.utils.sheet_to_json(ws);\r\n            await saveparticipantsfromexcel(data)\r\n        };\r\n        fileReader.onerror = (error) => {\r\n            console.log(error);\r\n        };\r\n    };\r\n\r\n    const saveparticipantsfromexcel = async (d) => {\r\n        debugger\r\n        let result = d.map((cdata) => {\r\n            if (cdata.Contact) {\r\n                return cdata.Contact\r\n            } else {\r\n                return (cdata)\r\n            }\r\n        });\r\n        for (let i = 0; i < result.length; i++) {\r\n            if (typeof result[i] === \"string\") {\r\n                if (result[i].startsWith(\"+\")) {\r\n                } else {\r\n                    result[i] = \"+91\" + result[i];\r\n                }\r\n            } else {\r\n                result[i] = \"+91\" + result[i];\r\n            }\r\n\r\n        }\r\n        let particpantscpy = [...participants];\r\n        particpantscpy[eventKey] = [...result];\r\n        await setParticipants([...particpantscpy]);\r\n        return 1;\r\n    }\r\n    const openContactPicker = async () => {\r\n        try {\r\n            let ldata = [];\r\n            let number = \"\";\r\n            const contacts = await navigator.contacts.select(attribute, opts);\r\n            contacts.map(async (contact) => {\r\n                await ldata.push(contact.tel[0])\r\n            });\r\n            await saverecipeients(ldata);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    const saverecipeients = async (data) => {\r\n        let particpantscpy = [...participants];\r\n        let contactlist = [];\r\n        let clist = [];\r\n        data.map(contact => {\r\n            clist.push(contact)\r\n            if (typeof contact === \"string\") {\r\n                if (contact.startsWith(\"+\")) {\r\n                } else {\r\n                    contact = \"+91\" + contact;\r\n                }\r\n            } else {\r\n                contact = \"+91\" + contact;\r\n            }\r\n            contact = contact.replaceAll(' ', '');\r\n            contactlist.push(contact)\r\n        })\r\n\r\n        particpantscpy[eventKey] = [...contactlist];\r\n        await setParticipants([...particpantscpy]);\r\n    };\r\n    const save = async () => {\r\n        debugger;\r\n        setisSaving(true);\r\n        let EventCpy = [...props.Events];\r\n        if (participants.length === 0 && EntryWay !== 'Code') {\r\n            setisSaving(false);\r\n            return false;\r\n        }\r\n        let particpantsCpy = [...participants];\r\n        particpantsCpy.map((listdata, index) => {\r\n            if (listdata.length === 0) {\r\n                alert(\"Please Add Guests to Event no \" + (index + 1));\r\n                setisSaving(false);\r\n                return false;\r\n            } else {\r\n                EventCpy[index].Participants = listdata;\r\n            }\r\n        });\r\n        await create_event();\r\n    };\r\n    const create_event = async () => {\r\n        let uniqueurl =\r\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\";\r\n        let EventCpy = [...props.Events];\r\n        let MainCode = \"\";\r\n        for (let i = 0; i < EventCpy.length; i++) {\r\n            let furl =\r\n                uniqueurl + \"Event_image/\" + i + EventCpy[i].Name.replaceAll(\" \", \"\");\r\n            let url = await uploadString(EventCpy[i].file, furl);\r\n            EventCpy[i].file = url;\r\n        }\r\n        await props.setEvents(EventCpy);\r\n        if (Eventdata && Eventdata.ALBUM && Eventdata.ALBUM.length > 0) {\r\n            Albumcpy = [];\r\n            for (let i = 0; i < Eventdata.ALBUM.length; i++) {\r\n                let shurl = uniqueurl + \"Album/\" + i + \".\" + Eventdata.ALBUM[i].type;\r\n\r\n                let url = await uploadString(Eventdata.ALBUM[i].data, shurl);\r\n                Eventdata.ALBUM[i].file = url;\r\n                await Albumcpy.push({ file: url, type: Eventdata.ALBUM[i].type });\r\n            }\r\n        }\r\n        if (Eventdata && Eventdata.STORY && Eventdata.STORY.length > 0) {\r\n            Storycpy = [];\r\n            for (let i = 0; i < Eventdata.STORY.length; i++) {\r\n                let shurl = uniqueurl + \"Story/\" + i + \".\" + Eventdata.STORY[i].type;\r\n\r\n                let url = await uploadString(Eventdata.STORY[i].file, shurl);\r\n                Eventdata.STORY[i].file = url;\r\n                await Storycpy.push({\r\n                    ...Eventdata.STORY[i],\r\n                    file: url,\r\n                    type: Eventdata.STORY[i].type,\r\n                });\r\n            }\r\n        }\r\n        await dispatch(\r\n            saveEvent({\r\n                Type: props.Type,\r\n                Events: EventCpy,\r\n                Album: Albumcpy,\r\n                Story: Storycpy,\r\n                code: code,\r\n                EntryWay: EntryWay,\r\n            })\r\n        );\r\n        setisSaving(false);\r\n    };\r\n    return (<>\r\n        <Modal\r\n\r\n            className=\"f-s-modal\"\r\n            open={openModal}\r\n        >\r\n            <div className=\"f-s-modal-card\">\r\n                <Addformultiple\r\n                    Name=\"Schedule\"\r\n                    className=\"modal-component\"\r\n                    open={setopenModal}\r\n                    participants={participants}\r\n                    eventKey={eventKey}\r\n                    setParticipants={setParticipants}\r\n                    setKey={setKey}\r\n                    Events={props.Events}\r\n                    isMobile={isMobile}\r\n                    openContactPicker={openContactPicker}\r\n                    saveparticipantsfromexcel={saveparticipantsfromexcel}\r\n                    isSaving={isSaving}\r\n\r\n                />\r\n            </div>\r\n\r\n        </Modal>\r\n        <Grid container spacing={0}>\r\n\r\n            {isSaving === true ? <CircularProgress className=\"Progress\" /> : <></>}\r\n            <img src={Access} className=\"access-logo \" />\r\n            <b className=\"tac w-100 b theme-font \">\r\n                Give access to your guest or Upload CSV with for group access\r\n            </b>\r\n            <Grid item xs={12}>\r\n                <p className=\"w-100 tac theme-font\">\r\n                    <b>\r\n                        <u>Note</u>\r\n                    </b>\r\n                    :{\"CSV can only be accessed by using website \"}\r\n                </p>\r\n            </Grid>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <button\r\n                        className=\" btn custom-file-upload t-white l-blue mt-5px\"\r\n                        style={{ display: isMobile === true ? \"block\" : \"none\" }}\r\n                        onClick={() => {\r\n                            if (props.Events.length === 1) {\r\n                                openContactPicker();\r\n                            } else {\r\n                                setopenModal(true)\r\n                            }\r\n\r\n                        }}\r\n                    >\r\n                        PhoneBook\r\n                    </button>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <label\r\n                        htmlfor=\"input1\"\r\n                        className=\"btn excel-file-upload  t-white l-blue mt-5px\"\r\n                        style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n                        onClick={(e) => {\r\n                            if (props.Events.length > 1) {\r\n                                alert(\"clicked>\")\r\n                                console.log(\"done 2\")\r\n                                e.preventDefault();\r\n                                setopenModal(true);\r\n                            } else {\r\n                                alert(\"clicked<\")\r\n                            }\r\n                        }}\r\n                    >\r\n                        {props.Events.length === 1 ? \" Upload Excel\" : \"Add Participants\"}\r\n\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"input1\"\r\n                        className=\"upload-excel mt-10px\"\r\n\r\n                        onChange={(e) => {\r\n                            if (props.Events.length < 2) {\r\n                                readExcel(e.target.files[0]);\r\n                                console.log(\"done 1\")\r\n                            }\r\n                        }}\r\n                        style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n                        multiple={false}\r\n                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <AddCode\r\n                    Events={props.Events}\r\n                    code={code}\r\n                    setCodes={setCodes}\r\n                    setEntryWay={setEntryWay}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <button\r\n                    className=\"btn next mt-10px t-blue\"\r\n                    onClick={() => {\r\n                        props.handleBack();\r\n                    }}\r\n                >\r\n                    Back\r\n                </button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <button\r\n                    className=\"btn next mt-10px l-blue t-white p-5px\"\r\n                    onClick={() => {\r\n                        save();\r\n                    }}\r\n                >\r\n                    Next\r\n                </button>\r\n            </Grid>\r\n        </Grid ></>\r\n    )\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Invitations\\Invitation.js",["1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Invitations.css\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport NotificationsOffIcon from \"@material-ui/icons/NotificationsOff\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport history from \"../../Utils/History\";\r\nimport Notifications from \"../Notifications/Notification\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UserProfile from \"../UserPorfile/UserProfile\";\r\n\r\nexport default function Invitation(props) {\r\n  const [data, setData] = useState(props.data);\r\n  const [show, setshow] = useState(false);\r\n  const [MainCode, setmaincode] = useState(\"\");\r\n  const Auth = useSelector(state => state.Auth)\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  useEffect(async () => {\r\n    console.log(props.data);\r\n    let datacpy = [...props.data];\r\n\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={0} className=\"mb-100 invitation_mobile\" >\r\n      <Popup\r\n        component={UserProfile}\r\n        setuserInfopopup={setuserInfopopup}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n        url={\"MyEvents/add-event\"}\r\n      />\r\n      <Popup\r\n        component={Notifications}\r\n        setuserInfopopup={setshow}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={MainCode}\r\n        showinvitaions={true}\r\n\r\n      />\r\n      {data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={6}\r\n          className=\"InvitationCard\"\r\n          key={\"InvitationCard\" + index}\r\n\r\n        >\r\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\r\n            src={inv[0].file}\r\n            className=\"inv-img\"\r\n            onClick={() => {\r\n              console.log(Auth.Name)\r\n              Auth.Name == \"\" || Auth.Name == undefined ?\r\n                setuserInfopopup(true)\r\n                :\r\n                history.push(\"/inv/eventpage/\" + index);\r\n            }}\r\n          />) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                inv[0].file\r\n              }\r\n              onClick={() => {\r\n                console.log(Auth.Name)\r\n                Auth.Name == \"\" || Auth.Name == undefined ?\r\n                  setuserInfopopup(true)\r\n                  :\r\n                  history.push(\"/inv/eventpage/\" + index);\r\n              }}\r\n              preload=\"none\"\r\n              className='w-100 inv-img'\r\n            />\r\n          )}\r\n\r\n          <NotificationsNoneIcon\r\n            className=\"card-button Notifyme t-white\"\r\n            onClick={async () => {\r\n              if (Auth.Name !== \"\" || Auth.Name !== undefined) {\r\n                await setmaincode(inv[0].MainCode)\r\n                await setshow(true)\r\n              } else {\r\n                setuserInfopopup(true)\r\n              }\r\n            }}\r\n          />\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\">\r\n                    {inv[0].Name}\r\n                  </Grid>\r\n                  <Grid item xs={12} className=\"fs-small t-white \">\r\n                    {inv[0].Date} {inv[0].Time}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <button\r\n                  className=\"card-button rsvp-button \"\r\n                  onClick={(e) => {\r\n                    console.log(Auth.Name)\r\n                    Auth.Name == \"\" || Auth.Name == undefined ?\r\n                      setuserInfopopup(true)\r\n                      :\r\n                      history.push(\"/inv/rsvp/\" + index);\r\n                    e.preventDefault();\r\n                  }}\r\n                >\r\n                  RSVP\r\n                </button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Events\\Eventlist.js",["1225","1226","1227","1228","1229"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Eventlist.css\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport Notifications from \"../Notifications/Notification\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport history from \"../../Utils/History\";\r\nexport default function EventList(props) {\r\n  const [show, setshow] = useState(false);\r\n  const [MainCode, setmaincode] = useState(\"\");\r\n\r\n  const [data, setData] = useState(props.data);\r\n  useEffect(async () => {\r\n    console.log(props.data);\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n  return (\r\n    <Grid container className=\"mb-100 contain-main\" >\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={MainCode}\r\n        showinvitaions={true}\r\n      // eventCode={eventCode}\r\n      />\r\n      {data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={6}\r\n          className=\"InvitationCard\"\r\n          key={\"invContainer\" + index}\r\n\r\n\r\n        >\r\n\r\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\r\n            src={inv[0].file}\r\n            className=\"inv-img\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/eventpage/\" + index);\r\n            }}\r\n          />) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                inv[0].file\r\n              }\r\n              onClick={() => {\r\n                history.push(\"/MyEvents/eventpage/\" + index);\r\n              }}\r\n              preload=\"none\"\r\n              className='w-100 inv-img'\r\n            />\r\n          )}\r\n          <NotificationsNoneIcon\r\n            className=\"card-button Notifyme t-white\"\r\n            onClick={async () => {\r\n              await setmaincode(inv[0].MainCode);\r\n              // await seteventcode(inv[index].eventCode);\r\n              await setshow(true);\r\n            }}\r\n          />\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\">\r\n                    {inv[0].Name}\r\n                  </Grid>\r\n                  <Grid item xs={12} className=\"fs-small t-white \">\r\n                    {inv[0].Date} {inv[0].Time}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Chat\\SelectParticipant.js",["1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  List,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  TextField,\r\n  Avatar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Userurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport AddImg from \"../../Assets/AddImage.svg\";\r\nimport { creategroup } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nexport function Participant(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  return (\r\n    <Grid container spacing={2} className=\"mt-10px ofh\">\r\n      <Grid item xs={12}>\r\n        <h5>Select Contact</h5>\r\n      </Grid>\r\n      <List>\r\n        {props.url.map((grp) =>\r\n          grp !== Auth.Phone ? (\r\n            <ListItem\r\n              onClick={async () => {\r\n                await props.setParticipants([grp]);\r\n                console.log([grp]);\r\n                await props.setgroupName(grp + \"\");\r\n                await props.create();\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Userurl\r\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                  showIcon={true}\r\n                />\r\n              </ListItemAvatar>\r\n              <Userurl\r\n                Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                showName={true}\r\n              />\r\n            </ListItem>\r\n          ) : (\r\n            <></>\r\n          )\r\n        )}\r\n      </List>\r\n    </Grid>\r\n  );\r\n}\r\nexport function CreateGroup(props) {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    props.setgroupImagetype(type);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let fileurl = reader.result;\r\n      props.setgroupImage(fileurl);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  const [groupName, setgroupName] = useState(\"\");\r\n  const [participants, setparticipants] = useState([...props.url]);\r\n  function filterparticipant(grp) {\r\n    let Participantcopy = [];\r\n    Participantcopy = participants.filter((sParticipant, i) => {\r\n      return sParticipant !== grp;\r\n    });\r\n    setparticipants(Participantcopy);\r\n  }\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  return (\r\n    <div>\r\n      <h5> Create Group</h5>\r\n\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <img\r\n          src={props.groupImage === \"\" ? AddImg : props.groupImage}\r\n          style={{\r\n            width: \"200px\",\r\n            objectFit: \"cover\",\r\n            height: \"200px\",\r\n            borderRadius: \"100%\",\r\n            margin: \"10px\",\r\n            marginLeft: \"50px\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        label=\"Group Name\"\r\n        size=\"small\"\r\n        className=\"w-100 mt-10px\"\r\n        value={props.groupName}\r\n        onChange={(e) => {\r\n          props.setgroupName(e.target.value);\r\n        }}\r\n      />\r\n      <Grid container spacing={2} className=\"mt-10px ofh\">\r\n        <List>\r\n          {props.url.map((grp) =>\r\n            grp !== Auth.Phone ? (\r\n              <ListItem\r\n                onClick={async () => {\r\n                  await props.setParticipants([...props.Participants, grp]);\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Userurl\r\n                    Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                    showIcon={true}\r\n                  />\r\n                </ListItemAvatar>\r\n                <Userurl\r\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                  showName={true}\r\n                />\r\n              </ListItem>\r\n            ) : (\r\n              <></>\r\n            )\r\n          )}\r\n        </List>\r\n      </Grid>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"w-100\"\r\n        onClick={async () => {\r\n          await props.create();\r\n          props.show(false);\r\n        }}\r\n      >\r\n        Create Group\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function SelectParticipant(props) {\r\n  const [createGroup, setcreateGroup] = useState(props.showall);\r\n  const [Participants, setParticipants] = useState([]);\r\n  const [groupName, setgroupName] = useState(\"\");\r\n  const [groupImage, setgroupImage] = useState(\"\");\r\n  const [groupImagetype, setgroupImagetype] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const create = async () => {\r\n    let fileurl = \"\";\r\n    if (Participants.length > 0 && groupName !== \"\") {\r\n      let participants = [...new Set(Participants)];\r\n      await setParticipants(participants);\r\n      console.log(\r\n        groupName,\r\n        props.MainCode + groupName,\r\n        groupImage,\r\n        createGroup === 0 ? \"INDV\" : \"GRP\"\r\n      );\r\n      if (groupImage !== \"\") {\r\n        fileurl = await uploadString(\r\n          groupImage,\r\n          \"Groups/\" + props.MainCode + \"/\" + groupName + \".\" + groupImagetype\r\n        );\r\n        await setgroupImage(fileurl);\r\n      }\r\n      await dispatch(\r\n        creategroup(\r\n          groupName,\r\n          props.MainCode + groupName,\r\n          Participants,\r\n          fileurl,\r\n          createGroup === 0 ? \"INDV\" : \"GRP\"\r\n        )\r\n      );\r\n      props.hide(false);\r\n    } else {\r\n      console.log(groupName);\r\n      console.log(Participants);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {createGroup === 0 ? (\r\n        <>\r\n          <Participant\r\n            url={props.url}\r\n            setParticipants={setParticipants}\r\n            setgroupName={setgroupName}\r\n            create={create}\r\n            show={props.hide}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CreateGroup\r\n            url={props.url}\r\n            Participants={Participants}\r\n            setParticipants={setParticipants}\r\n            setgroupImage={setgroupImage}\r\n            setgroupName={setgroupName}\r\n            groupName={groupName}\r\n            groupImage={groupImage}\r\n            create={create}\r\n            show={props.hide}\r\n            setgroupImagetype={setgroupImagetype}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js",["1242","1243","1244","1245","1246"],"import React, { useState, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport Tenmplate from \"../../../Assets/TemplateNone.svg\";\r\nexport default function ImageSelectionModal(props) {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 10259265) {\r\n      alert(\"Max file size 10 mb\");\r\n      return false;\r\n    }\r\n\r\n    console.log(props.data);\r\n\r\n    let EventsCpy = await { ...props.CurrentEventDetails };\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    EventsCpy.filetype = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      EventsCpy.file = reader.result;\r\n      await props.SetCurrentEventDetails(EventsCpy);\r\n      props.show(false);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4\",\r\n  });\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <h2 className=\"tac\">Upload Your Picture</h2>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          <img src={Gallery} className=\"w-100\" />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <img src={Tenmplate} className=\"w-100\" />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js",["1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControl,\r\n  Paper,\r\n  Modal,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./CreateEvent.css\";\r\nimport AddImg from \"../../../Assets/AddImage.svg\";\r\nimport Scehedule from \"../../../Assets/schedule.svg\";\r\nimport Storyimg from \"../../../Assets/AddStory.svg\";\r\nimport Albumsimg from \"../../../Assets/gallery.svg\";\r\nimport Map from \"../../Helpers/Maps/Maps\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport Album from \"../Extras/Album\";\r\nimport Story from \"../Extras/Story\";\r\nimport AddSchedule from \"../Extras/Schedule\";\r\nimport ImageSelectionModal from \"./ImageSelectionModal\";\r\nimport AddDetails from \"../AddDetails/AddDetails\";\r\nimport { editform } from \"../../../Redux/DispatchFuncitons/EventCreationFormFunction\";\r\nimport { SAVEFORM } from \"../../../Redux/Actions/EventCreationFormActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nexport default function EventDetails(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      // borderColor: \"#3897f1 !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n      fontSize: \"12px !important\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [processing, setProcessing] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [CurrentEventDetails, SetCurrentEventDetails] = useState({\r\n    ...props.Events[props.SelectedEvent],\r\n  });\r\n  const [IsSubmitted, setSubmit] = useState(false);\r\n  const [shedulevisible, SetScheduleVisible] = useState(false);\r\n  const [storyvisible, SetStoryVisible] = useState(false);\r\n  const [albumvisible, SetAlbumVisible] = useState(false);\r\n  const [Link, setLink] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  const [isEditLocation, setisEditLocation] = useState(false);\r\n  const [address, setaddress] = useState(\"\");\r\n  useEffect(() => {\r\n    if (props.Events[props.SelectedEvent] !== undefined) {\r\n      SetCurrentEventDetails(props.Events[props.SelectedEvent]);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    debugger;\r\n    props.setDisablesave(false);\r\n    if (props.Events[props.SelectedEvent] !== undefined) {\r\n      SetCurrentEventDetails(props.Events[props.SelectedEvent]);\r\n    }\r\n\r\n    if (\r\n      CurrentEventDetails !== {} &&\r\n      CurrentEventDetails.Location !== undefined\r\n    ) {\r\n      if (CurrentEventDetails.Location === \"\") {\r\n        setaddress(\"\");\r\n      } else {\r\n        try {\r\n          if (JSON.parse(CurrentEventDetails.Location === {})) {\r\n            throw \"unwanted\";\r\n          } else {\r\n            setaddress(JSON.parse(CurrentEventDetails.Location).address);\r\n            setLocation(JSON.parse(CurrentEventDetails.Location).address);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    } else {\r\n      setaddress(\"\");\r\n    }\r\n  }, [props.SelectedEvent]);\r\n\r\n  var gapi = window.gapi;\r\n  /* \r\n    Update with your own Client Id and Api key \r\n  */\r\n  var CLIENT_ID =\r\n    \"271872414479-lumfn9dkcqh1k1et8dfau81dkcng81s4.apps.googleusercontent.com\";\r\n  var API_KEY = \"AIzaSyCdk1XolxNow08BXLxbzCeDReSrNTTlXCo\";\r\n  var clientSecret = \"GpxXOinOWEyYdsbnVjolU9is\";\r\n  var DISCOVERY_DOCS = [\r\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\r\n  ];\r\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\r\n\r\n  const save = async () => {\r\n    let eventscpy = props.Events;\r\n    let currentEvent = props.SelectedEvent;\r\n    console.log(CurrentEventDetails);\r\n    eventscpy[props.SelectedEvent] = CurrentEventDetails;\r\n\r\n    await props.setEvents(eventscpy);\r\n    // await props.SelectEvent(0);\r\n\r\n    let result = await props.checkIfEventEmpty(\r\n      eventscpy,\r\n      props.Type,\r\n      props.seterroring,\r\n      props.SelectedEvent\r\n    );\r\n    await setSubmit(true);\r\n    if (result.status === true && props.Type !== \"\") {\r\n      let EventsCopy = [...props.Events];\r\n      await props.setDisablesave(true);\r\n\r\n      props.handleNext();\r\n    } else {\r\n      console.log(\"result false\");\r\n      console.log(IsSubmitted);\r\n      await props.SelectEvent(result.index);\r\n      console.log(result.index);\r\n    }\r\n  };\r\n\r\n  const changevenue = () => {\r\n    if (\r\n      CurrentEventDetails.VenueType === \"Online\" ||\r\n      CurrentEventDetails.VenueType === \"Both\"\r\n    ) {\r\n      // CreateMeeting();\r\n      SetCurrentEventDetails({\r\n        ...CurrentEventDetails,\r\n        Location: \"\",\r\n      });\r\n    }\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  // const updatereduxform = async (data) => {\r\n  //   await dispatch({\r\n  //     type: SAVEFORM,\r\n  //     payload: data,\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <Grid container spacing={1} className=\"p-15px pt-0\">\r\n      <Grid item xs={12} sm={12}>\r\n        {CurrentEventDetails !== undefined &&\r\n          CurrentEventDetails.file === \"\" ? (\r\n          <center>\r\n            <img\r\n              src={AddImg}\r\n              className={\r\n                IsSubmitted === true ? \"add-Img error-box\" : \"add-Img \"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            />\r\n          </center>\r\n        ) : CurrentEventDetails !== undefined &&\r\n          CurrentEventDetails.filetype !== undefined ? (\r\n          CurrentEventDetails.filetype === \"png\" ||\r\n            CurrentEventDetails.filetype === \"jpg\" ||\r\n            CurrentEventDetails.filetype === \"jpeg\" ? (\r\n            <img\r\n              src={\r\n                CurrentEventDetails !== undefined\r\n                  ? CurrentEventDetails.file\r\n                  : \" \"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n              className={\r\n                processing === true\r\n                  ? \"transparent uploaded-file w-100 \"\r\n                  : \"notTransparent uploaded-file w-100 \"\r\n              }\r\n            />\r\n          ) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                CurrentEventDetails !== undefined\r\n                  ? CurrentEventDetails.file\r\n                  : \" \"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n              preload=\"none\"\r\n              className={\r\n                processing === true\r\n                  ? \" transparent w-100 \"\r\n                  : \"notTransparent w-100 \"\r\n              }\r\n            />\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className=\"modal\"\r\n            open={showPopup}\r\n            onClose={() => {\r\n              toggleShowPopup(false);\r\n            }}\r\n          >\r\n            <div className=\"modal-card\">\r\n              <CancelIcon\r\n                onClick={() => {\r\n                  toggleShowPopup(false);\r\n                }}\r\n                color=\"secondary\"\r\n                className=\"popup-close\"\r\n                fontSize=\"large\"\r\n                style={{ bottom: \"10px\", position: \"inherit\" }}\r\n              />\r\n\r\n              <ImageSelectionModal\r\n                className=\"modal-component\"\r\n                data={props.Events}\r\n                setEvents={props.setEvents}\r\n                SelectEvent={props.SelectEvent}\r\n                SelectedEvent={props.SelectedEvent}\r\n                processing={processing}\r\n                setDisablesave={props.setDisablesave}\r\n                CurrentEventDetails={CurrentEventDetails}\r\n                SetCurrentEventDetails={SetCurrentEventDetails}\r\n                show={toggleShowPopup}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <span className=\"label\">Enter Event Name</span>\r\n        <TextField\r\n          placeholder=\"Name\"\r\n          id=\"outlined-basics\"\r\n          variant=\"outlined\"\r\n          className=\"w-100-p \"\r\n          size=\"small\"\r\n          value={CurrentEventDetails.Name}\r\n          onChange={async (e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Name: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Name === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={5}>\r\n        <span className=\"label\">Time</span>\r\n        <TextField\r\n          id=\"time\"\r\n          // label=\"Time\"\r\n          variant=\"outlined\"\r\n          type=\"time\"\r\n          size=\"small\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          className=\"w-100-p \"\r\n          inputProps={{\r\n            step: 300, // 5 min\r\n          }}\r\n          ampm={false}\r\n          value={CurrentEventDetails.Time}\r\n          onChange={(e) => {\r\n            console.log(e.target.value);\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Time: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Time === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <span className=\"label\">Date</span>\r\n        <TextField\r\n          id=\"date\"\r\n          // label=\"Date\"\r\n          type=\"date\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          size=\"small\"\r\n          className=\"w-100-p \"\r\n          value={\r\n            CurrentEventDetails.Date === \"\"\r\n              ? \"01-01/2020\"\r\n              : CurrentEventDetails.Date\r\n          }\r\n          placeholder=\"DD-MM-YY\"\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Date: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Date === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          style={{ fontSize: \"12px\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className=\"w-100-p \"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        >\r\n          <span className=\"label\">Type</span>\r\n          <Select\r\n            className=\"w-100-p selectboxblue\"\r\n            value={CurrentEventDetails.VenueType}\r\n            error={\r\n              IsSubmitted === true && CurrentEventDetails.VenueType === \"\"\r\n                ? true\r\n                : false\r\n            }\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              classes: {\r\n                notchedOutline: classes.notchedOutline,\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          >\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Online-Inapp\",\r\n                });\r\n              }}\r\n              value=\"Online-Inapp\"\r\n            >\r\n              Online-Inapp\r\n            </MenuItem>\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Online\",\r\n                });\r\n              }}\r\n              value=\"Online\"\r\n            >\r\n              Online\r\n            </MenuItem>\r\n\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Offline\",\r\n                });\r\n              }}\r\n              value=\"Offline\"\r\n            >\r\n              Offline\r\n            </MenuItem>\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Both\",\r\n                });\r\n              }}\r\n              value=\"Both\"\r\n            >\r\n              Both\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <>\r\n        <Grid\r\n          item\r\n          xs={7}\r\n          className={\r\n            CurrentEventDetails.VenueType === \"Offline\" ? \"hide\" : \"show\"\r\n          }\r\n        >\r\n          <span className=\"label \"> Link </span>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            className=\"w-100-p \"\r\n            placeholder=\"Add Link Below\"\r\n            value={\r\n              CurrentEventDetails.VenueType === \"Online\" ||\r\n                CurrentEventDetails.VenueType === \"Both\"\r\n                ? CurrentEventDetails.Link\r\n                : \"Meeting Created\"\r\n            }\r\n            disabled={\r\n              CurrentEventDetails.VenueType === \"Online\" ||\r\n                CurrentEventDetails.VenueType === \"Both\"\r\n                ? false\r\n                : true\r\n            }\r\n            onChange={(e) => {\r\n              SetCurrentEventDetails({\r\n                ...CurrentEventDetails,\r\n                Link: e.target.value,\r\n                Location: \"\",\r\n              });\r\n            }}\r\n            error={\r\n              IsSubmitted === true && CurrentEventDetails.Link === \"\"\r\n                ? true\r\n                : false\r\n            }\r\n            InputProps={{\r\n              classes: {\r\n                notchedOutline: classes.notchedOutline,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={CurrentEventDetails.VenueType === \"Offline\" ? 7 : 12}\r\n          sm={CurrentEventDetails.VenueType === \"Offline\" ? 7 : 12}\r\n          className={\r\n            CurrentEventDetails.VenueType === \"Online\" ||\r\n              CurrentEventDetails.VenueType === \"Online-Inapp\"\r\n              ? \"hide\"\r\n              : \"show\"\r\n          }\r\n        >\r\n          {isEditLocation}\r\n          {isEditLocation === true ? (\r\n            <>\r\n              <Map\r\n                SetCurrentEventDetails={SetCurrentEventDetails}\r\n                CurrentEventDetails={CurrentEventDetails}\r\n                center={{ lat: 20.5937, lng: 78.9629 }}\r\n                height=\"300px\"\r\n                zoom={12}\r\n                setLocation={setLocation}\r\n                Location={Location}\r\n                type={\"Offline\"}\r\n                setisEditLocation={setisEditLocation}\r\n                setaddress={setaddress}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Grid container spacing={0} style={{ width: \"100%\" }}>\r\n              <Grid xs={12}>\r\n                <span className=\"label \" style={{ width: \"100%\" }}>\r\n                  Location\r\n                </span>\r\n              </Grid>\r\n              <Grid xs={12}>\r\n                <div\r\n                  className=\"fs-14\"\r\n                  onClick={() => setisEditLocation(true)}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    border: \"Solid 2px #3897f1\",\r\n                    borderRadius: \"150px\",\r\n                    padding: \"8px\",\r\n                    position: 'relative',\r\n                    bottom: '6px'\r\n                  }}\r\n                >\r\n                  {Location === \"\"\r\n                    ? \"Please Enter A location\"\r\n                    : Location.length > 25\r\n                      ? Location.substring(0, 25)\r\n                      : Location}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <span\r\n            className={\r\n              IsSubmitted === true && CurrentEventDetails.Location === \"\"\r\n                ? \"error\"\r\n                : \"hide\"\r\n            }\r\n            style={{ width: '100%' }}\r\n          >\r\n            Please add Location\r\n          </span>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={isEditLocation === true ? 1 : false}\r\n          sm={isEditLocation === true ? 1 : false}\r\n          className={\r\n            CurrentEventDetails.VenueType === \"Online\" ||\r\n              CurrentEventDetails.VenueType === \"Online-Inapp\"\r\n              ? \"hide\"\r\n              : \"show\"\r\n          }\r\n        >\r\n          {isEditLocation === true ? (\r\n            <SaveIcon\r\n              onClick={() => {\r\n                setisEditLocation(false);\r\n              }}\r\n              style={{ position: \"relative\", top: \"30px\", color: \"green\" }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Grid>\r\n      </>\r\n\r\n      <Grid item xs={12}>\r\n        <span className=\"label\">Description</span>\r\n        {/* <TextField\r\n          id=\"standard-name\"\r\n          label=\"Name\"\r\n          className={classes.textField}\r\n          value={this.state.name}\r\n          onChange={this.handleChange('name')}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            classes: {\r\n              root: classes.cssLabel,\r\n              focused: classes.cssFocused,\r\n            },\r\n          }}\r\n          InputProps={{\r\n            classes: {\r\n              root: classes.cssOutlinedInput,\r\n              focused: classes.cssFocused,\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n            inputMode: \"numeric\"\r\n          }}\r\n        /> */}\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          // label=\"Description\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          className=\"w-100-p   \"\r\n          value={CurrentEventDetails.Description}\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Description: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Description === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          // InputProps={{\r\n          //   classes: {\r\n          //     notchedOutline: classes.notchedOutline,\r\n          //   },\r\n          // }}\r\n          multiline={true}\r\n          rows={2}\r\n        />\r\n      </Grid>\r\n      \r\n      {/* <Grid item xs={8} className=\"talc fs-bold m-b-25px label\">\r\n        Guest can Invite (max 3)\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Switch\r\n          checked={CurrentEventDetails.GuestInvite}\r\n          color=\"primary\"\r\n          name=\"checkedB\"\r\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          className=\"fr\"\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              GuestInvite: !CurrentEventDetails.GuestInvite,\r\n            });\r\n          }}\r\n        />\r\n      </Grid> */}\r\n\r\n\r\n{/* Album, Schdedule and Story Commented Below */}\r\n\r\n\r\n {/*      <Grid\r\n        item\r\n        xs={props.SelectedEvent === 0 ? 4 : 12}\r\n        md={props.SelectedEvent === 0 ? 4 : 12}\r\n      >\r\n        <Paper\r\n          elevation={3}\r\n          className=\"schedule-card\"\r\n          onClick={() => {\r\n            SetScheduleVisible(true);\r\n          }}\r\n        >\r\n          <center>\r\n            <img src={Scehedule} alt=\"schedule\" className=\"schedule-icon\" />\r\n\r\n            <button className=\"add-schedule theme-font\">Schedule</button>\r\n          </center>\r\n        </Paper>\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className=\"f-s-modal\"\r\n            open={shedulevisible}\r\n            onClose={() => {\r\n              SetScheduleVisible(false);\r\n            }}\r\n          >\r\n            <div className=\"f-s-modal-card\">\r\n              <AddDetails\r\n                Name=\"Schedule\"\r\n                className=\"modal-component\"\r\n                data={props.Events}\r\n                setEvents={props.setEvents}\r\n                SelectEvent={props.SelectEvent}\r\n                SelectedEvent={props.SelectedEvent}\r\n                CurrentEventDetails={CurrentEventDetails}\r\n                Events={props.Events}\r\n                SelectedEvent={props.SelectedEvent}\r\n                SetCurrentEventDetails={SetCurrentEventDetails}\r\n                SetScheduleVisible={SetScheduleVisible}\r\n                open={SetScheduleVisible}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Grid>\r\n      {props.SelectedEvent === 0 ? (\r\n        <>\r\n          <Grid item xs={4} md={4}>\r\n            <Paper\r\n              elevation={3}\r\n              className=\"schedule-card\"\r\n              onClick={() => {\r\n                SetStoryVisible(true);\r\n              }}\r\n            >\r\n              <center>\r\n                <img src={Storyimg} alt=\"schedule\" className=\"schedule-icon\" />\r\n\r\n                <button className=\"add-schedule theme-font\">Story</button>\r\n              </center>\r\n            </Paper>\r\n            <div>\r\n              <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"f-s-modal\"\r\n                open={storyvisible}\r\n                onClose={() => {\r\n                  SetStoryVisible(false);\r\n                }}\r\n              >\r\n                <div className=\"f-s-modal-card\">\r\n                  <AddDetails\r\n                    Name=\"Story\"\r\n                    className=\"modal-component\"\r\n                    data={props.Events}\r\n                    setEvents={props.setEvents}\r\n                    SelectEvent={props.SelectEvent}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    CurrentEventDetails={CurrentEventDetails}\r\n                    Events={props.Events}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    SetCurrentEventDetails={SetCurrentEventDetails}\r\n                    SetScheduleVisible={SetScheduleVisible}\r\n                    open={SetStoryVisible}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Paper\r\n              elevation={3}\r\n              className=\"schedule-card\"\r\n              onClick={() => {\r\n                SetAlbumVisible(true);\r\n              }}\r\n            >\r\n              <center>\r\n                <img src={Albumsimg} alt=\"schedule\" className=\"schedule-icon\" />\r\n\r\n                <button className=\"add-schedule theme-font\">Albums</button>\r\n              </center>\r\n            </Paper>\r\n            <div>\r\n              <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"f-s-modal\"\r\n                open={albumvisible}\r\n                onClose={() => {\r\n                  SetAlbumVisible(false);\r\n                }}\r\n              >\r\n                <div className=\"f-s-modal-card\">\r\n                  <AddDetails\r\n                    Name=\"Album\"\r\n                    className=\"modal-component\"\r\n                    data={props.Events}\r\n                    setEvents={props.setEvents}\r\n                    SelectEvent={props.SelectEvent}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    CurrentEventDetails={CurrentEventDetails}\r\n                    Events={props.Events}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    SetCurrentEventDetails={SetCurrentEventDetails}\r\n                    SetScheduleVisible={SetScheduleVisible}\r\n                    open={SetAlbumVisible}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )} */}\r\n\r\n      <Grid item xs={12}>\r\n        <button\r\n          className={\r\n            props.disablesave === false\r\n              ? \"btn save-event \"\r\n              : \"btn save-event  disabled\"\r\n          }\r\n          onClick={() => {\r\n            if (props.disablesave === false) {\r\n              save();\r\n            }\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js",["1287","1288","1289","1290","1291","1292","1293","1294"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Container,\r\n    Row,\r\n    Button,\r\n    ListGroup,\r\n    Tabs,\r\n    Tab,\r\n    Col,\r\n    Spinner,\r\n} from \"react-bootstrap\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { BsFillPeopleFill } from \"react-icons/bs\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport default function Addformultiple(props) {\r\n    const [participants, setparticipants] = useState([])\r\n    const [width, setwidth] = useState('100%')\r\n    useEffect(async () => {\r\n        console.log(props)\r\n        await setparticipants(props.participants)\r\n        await setwidth(100 / props.Events.length + \"vw\")\r\n    }, [props.participants])\r\n    const readExcel = async (file) => {\r\n        debugger;\r\n        const fileReader = new FileReader();\r\n        await fileReader.readAsArrayBuffer(file);\r\n        fileReader.onload = async (e) => {\r\n            const bufferArray = e.target.result;\r\n            const wb = await XLSX.read(bufferArray, { type: \"buffer\" });\r\n            const wsname = await wb.SheetNames[0];\r\n            const ws = await wb.Sheets[wsname];\r\n            const data = await XLSX.utils.sheet_to_json(ws);\r\n            await props.saveparticipantsfromexcel(data)\r\n        };\r\n        fileReader.onerror = (error) => {\r\n            console.log(error);\r\n        };\r\n    };\r\n    const DeleteThisContact = (index) => {\r\n        let particpantscpy = [...props.participants];\r\n        let NexteventKey = parseInt(props.eventKey) + 1;\r\n        particpantscpy[props.eventKey] = particpantscpy[props.eventKey].filter((word, i) => index !== i);\r\n        props.setParticipants(particpantscpy);\r\n    };\r\n\r\n    const copyToNext = () => {\r\n        let particpantscpy = [...props.participants];\r\n        if (particpantscpy.length === 0) {\r\n            alert(\"Please add contacts to this event Firts\");\r\n        } else {\r\n            if (props.eventKey < 3 && props.eventKey < props.Events.length - 1) {\r\n\r\n                let NexteventKey = parseInt(props.eventKey) + 1;\r\n                particpantscpy[NexteventKey] = particpantscpy[props.eventKey];\r\n                console.log(particpantscpy);\r\n                props.setParticipants(particpantscpy);\r\n            } else {\r\n                alert(\"No more Events to copy\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className=\"p-0\">\r\n                <h3 className=\"p-15px\">Add Guests</h3>\r\n\r\n                <Tabs\r\n                    activeKey={props.eventKey}\r\n                    onSelect={(k) => {\r\n                        console.log(k);\r\n                        props.setKey(k);\r\n                    }}\r\n                >\r\n                    {props.Events &&\r\n                        props.Events.map((eve, index) => (\r\n                            <Tab eventKey={index} title={eve.Name.substring(1, 4) + \"...\"} style={{ width: width }}>\r\n                                <ListGroup style={{ margin: \"auto\" }} className=\"listitems_box\">\r\n                                    {participants && participants[props.eventKey] && participants[props.eventKey].map((listdata, i) => (\r\n                                        <ListGroup.Item>\r\n                                            {listdata}\r\n                                            <AiFillCloseCircle\r\n                                                size=\"25\"\r\n                                                style={{ float: \"right\", color: \"red\" }}\r\n                                                onClick={() => {\r\n                                                    DeleteThisContact(i);\r\n                                                }}\r\n                                            />\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            </Tab>\r\n                        ))}\r\n                </Tabs>\r\n                <Row>\r\n                    {\r\n                        props.isMobile === true ? (\r\n                            <Button\r\n                                variant=\"outline-primary\"\r\n                                className=\"addcontacts_btn\"\r\n                                style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\r\n                                onClick={() => {\r\n                                    props.openContactPicker();\r\n                                }}\r\n                            >\r\n                                <BsFillPeopleFill /> Add Contacts mob\r\n                            </Button>\r\n                        ) : (\r\n                            <>\r\n                                <label\r\n                                    htmlFor=\"input2\"\r\n                                    className=\"addcontacts_btn btn btn-outline-primary\"\r\n                                    style={{ display: props.isMobile === false ? \"block\" : \"none\" }}\r\n                                    style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\r\n                                    onClick={() => { console.log(\"done 3\") }}\r\n                                >\r\n                                    <BsFillPeopleFill /> Add Contacts\r\n                                </label>\r\n                                <input\r\n                                    id=\"input2\"\r\n                                    type=\"file\"\r\n                                    accept=\".xlsx\"\r\n                                    onChange={(e) => {\r\n                                        console.log(\"done 4\")\r\n                                        const file = e.target.files[0];\r\n                                        readExcel(file);\r\n\r\n                                    }}\r\n                                    placeholder=\"Add Participants\"\r\n                                    style={{ display: \"none\" }}\r\n                                />\r\n                            </>\r\n                        )\r\n\r\n                    }\r\n                    <Button\r\n                        variant=\"outline-primary\"\r\n                        style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\r\n\r\n                        onClick={() => {\r\n                            copyToNext();\r\n                        }}\r\n                        style={{ display: props.eventKey == props.Events.length - 1 ? 'none' : 'block' }}\r\n                        className=\"addcontacts_btn\"\r\n                    >\r\n                        {props.eventKey}  Copy to Next Event{props.Events.length - 1}\r\n                        <FaArrowRight />\r\n                    </Button>\r\n                </Row>\r\n                <Button\r\n                    variant=\"outline-primary\"\r\n                    style={{\r\n                        float: \"right\",\r\n                        width: \"20%\",\r\n                        borderRadius: 20,\r\n                        marginTop: 50,\r\n                    }}\r\n                    className=\"addcontacts_btn\"\r\n                    onClick={() => { props.open(false) }}\r\n                >Close</Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    style={{\r\n                        float: \"right\",\r\n                        width: \"20%\",\r\n                        borderRadius: 20,\r\n                        marginTop: 50,\r\n                    }}\r\n                    className=\"addcontacts_btn\"\r\n                    onClick={() => {\r\n                        props.eventKey == props.Events.length - 1\r\n                            ? props.open(false)\r\n                            : props.setKey(parseInt(props.eventKey) + 1);\r\n                    }}\r\n                    disabled={props.isSaving}\r\n                >\r\n                    {props.isSaving === true ? (\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Saving...</span>\r\n                        </Spinner>\r\n                    ) : (\r\n                        <>\r\n                            {props.eventKey === props.Events.length - 1 ? (\r\n                                \"Save\"\r\n                            ) : (\r\n                                <>\r\n                                    Save\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </Button>\r\n            </Container>\r\n        </>\r\n    );\r\n}","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js",["1295"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button, Modal, Container, Row, Col, Form } from \"react-bootstrap\";\r\nexport default function AddCode(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [codes, setCodes] = useState([]);\r\n  const [usercode, setusercode] = useState([]);\r\n  var codescpy = [];\r\n  var usercodecpy = [];\r\n  function randomString(length, chars) {\r\n    var result = \"\";\r\n    for (var i = length; i > 0; --i)\r\n      result += chars[Math.floor(Math.random() * chars.length)];\r\n    return result;\r\n  }\r\n  useEffect(() => {\r\n    if (show === true && props.code.length !== props.Events.length) {\r\n      for (var i = 0; i < props.Events.length; i++) {\r\n        codescpy.push({\r\n          Name: props.Events[i].Name,\r\n          code: randomString(\r\n            8,\r\n            \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n          ),\r\n        });\r\n        usercodecpy.push(codescpy[i].code);\r\n      }\r\n      console.log(codescpy);\r\n      setCodes(codescpy);\r\n      setusercode(usercodecpy);\r\n    }\r\n  }, [show]);\r\n  return (\r\n    <div>\r\n      <button className=\" next btn btn-dark mt-10px\" onClick={handleShow}>\r\n        Use Code\r\n      </button>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        style={{ position: \"absolute\", top: \"0vh\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Code For Events</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container fluid style={{ padding: '5px' }}>\r\n            <Row className=\"m-0 m-5px\">\r\n              <Col xs={5} md={3}>\r\n                <b>Name</b>\r\n              </Col>\r\n              <Col xs={7} md={9}>\r\n                <b>Code</b>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            {codes.map((code, index) => (\r\n              <Row className=\"m-0 mt-5px\" key={code.code}>\r\n                <Col xs={5} md={3} className=\"m-0 mt-5px\">\r\n                  {code.Name + \":\"}\r\n                </Col>\r\n                <Col xs={7} md={9} className=\"m-0 mt-5px\"  style={{paddingBottom: '10px'}}>\r\n                  <Form.Control\r\n                    disabled={true}\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    style={{ borderRadius: 20 }}\r\n                    value={usercode[index]}\r\n                    onChange={(e) => {\r\n                      usercodecpy[index] = e.target.value;\r\n                      setusercode(usercodecpy);\r\n                    }}\r\n                    maxLength={4}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n            <br />\r\n            <Row className=\"m-0\">\r\n              <Button\r\n                variant=\"success\"\r\n                style={{ borderRadius: 20, backgroundColor: \"#3897f1\" }}\r\n                className=\"w-100 mt-10px\"\r\n                onClick={() => {\r\n                  props.setEntryWay(\"Code\");\r\n                  props.setCodes(usercode);\r\n                  handleClose(false);\r\n                }}\r\n              >\r\n                Done\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Album.js",["1296","1297","1298","1299","1300","1301","1302","1303"],"import React, { useState, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"./Extras.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SAVEALBUM, DELETEALBUM } from \"../../../Redux/Actions/EventActions\";\r\nexport default function Album(props) {\r\n  const dispatch = useDispatch();\r\n  const Eventdata = useSelector((state) => state.Eventdata);\r\n  let bkpalbum = [];\r\n  let filetype = [];\r\n  const [album, setAlbum] = useState([...Eventdata.ALBUM]);\r\n\r\n  const save = async () => {\r\n    dispatch({\r\n      type: SAVEALBUM,\r\n      payload: album,\r\n    });\r\n    props.open(false);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setAlbum([]);\r\n  };\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    bkpalbum = [];\r\n    filetype = [];\r\n\r\n    for (let i = 0; i < acceptedFiles.length; i++) {\r\n      if (acceptedFiles[i].size > 5259265) {\r\n      } else {\r\n        let type = acceptedFiles[i].type.split(\"/\");\r\n        type = type[1];\r\n        await getBase64(acceptedFiles[i]).then(async (data) => {\r\n          await bkpalbum.push({ data: data, type: type });\r\n          await filetype.push(type);\r\n        });\r\n      }\r\n    }\r\n    await setAlbum(bkpalbum);\r\n    return true;\r\n  }, []);\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n  });\r\n\r\n  const deleteimage = (i) => {\r\n    let albumcpy = [...album];\r\n    albumcpy = albumcpy.filter((item, index) => i !== index);\r\n    setAlbum([...albumcpy]);\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          <img src={Gallery} className=\"w-100 uploadhere\" />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"ofh view\">\r\n        <Grid container spacing={4}>\r\n          {album.length > 0\r\n            ? album.map((image, index) => (\r\n              <Grid item xs={4} md={2} key={\"img\" + index}>\r\n                <CancelIcon\r\n                  onClick={() => {\r\n                    deleteimage(index);\r\n                  }}\r\n                  color=\"secondary\"\r\n                  className=\"delete-img\"\r\n                />\r\n                <img src={image.data} className=\"w-100 preview\" />\r\n              </Grid>\r\n            ))\r\n            : Array.from({ length: 30 }, (value, key) => (\r\n              <Grid\r\n                item\r\n                xs={2}\r\n                md={1}\r\n                key={\"img\" + key}\r\n                className=\"w-100 preview grey m-5px\"\r\n              ></Grid>\r\n            ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"submit jcc\">\r\n        <button\r\n          onClick={() => {\r\n            save();\r\n          }}\r\n          className=\"add-album  \"\r\n        >\r\n          Save\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Maps.js",["1304","1305","1306","1307","1308"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport { formatRelative } from \"date-fns\";\r\nimport \"./Maps.css\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Geocode from \"react-geocode\";\r\nlet mapStyles = [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        weight: \"2.00\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#9c9c9c\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#f2f2f2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape.man_made\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        saturation: -100,\r\n      },\r\n      {\r\n        lightness: 45,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#eeeeee\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#7b7b7b\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#46bcec\",\r\n      },\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#c8d7d4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#070707\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"400px\",\r\n  width: \"100%\",\r\n  border: \"solid\",\r\n  display: \"none\",\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  gestureHandling: \"cooperative\",\r\n};\r\nconst center = {\r\n  lat: 20.5937,\r\n  lng: 78.9629,\r\n};\r\n\r\nexport default function Map(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\",\r\n    libraries,\r\n  });\r\n\r\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\r\n\r\n  Geocode.setLanguage(\"en\");\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [adderss, setAddress] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  useEffect(() => {\r\n    try {\r\n      let data = JSON.parse(props.CurrentEventDetails.location);\r\n      setAddress(data.Location);\r\n      setLocation(data.Location);\r\n    } catch (err) {\r\n      setLocation(\"\");\r\n    }\r\n  }, []);\r\n\r\n  const onMapClick = useCallback(async (e) => {\r\n    let lat = e.latLng.lat();\r\n    let long = e.latLng.lng();\r\n    setMarkers((current) => [\r\n      {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ]);\r\n    Geocode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(\r\n      (response) => {\r\n        const faddress = response.results[0].formatted_address;\r\n\r\n        setAddress(faddress);\r\n\r\n        let location = JSON.stringify({ lat, long, faddress });\r\n        console.log({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n        // props.setLocation(location);\r\n        // if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //     Link: \"\",\r\n        //   });\r\n        // } else {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //   });\r\n        // }\r\n\r\n        console.log(faddress);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    let location = JSON.stringify({ lat, lng });\r\n    console.log(location);\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(20);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <h1></h1>\r\n\r\n      <Search\r\n        panTo={panTo}\r\n        Location={Location}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n        setLocation={props.setLocation}\r\n      />\r\n\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={5}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n        options={{ scrollwheel: false }}\r\n        style={{ display: \"none\" }}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={`${marker.lat}-${marker.lng}`}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{adderss}</h2>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  console.log(props);\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\r\n      radius: 100 * 1000,\r\n    },\r\n  });\r\n\r\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\r\n\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setValue(address, false);\r\n    clearSuggestions();\r\n\r\n    try {\r\n      debugger\r\n      const results = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n      props.panTo({ lat, lng });\r\n      console.log(results);\r\n      let location = await JSON.stringify({ lat, lng, address });\r\n\r\n      if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n          Link: \"\",\r\n        });\r\n      } else {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n      }\r\n      props.setisEditLocation(false)\r\n    } catch (error) {\r\n      console.log(\"😱 Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-90\">\r\n      <Combobox\r\n        onSelect={async (address) => { await handleSelect(address); await props.setLocation(address) }}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        setCurrentEventDetails={props.setCurrentEventDetails}\r\n      >\r\n        <span\r\n          className={\r\n            props.CurrentEventDetails.VenueType === \"Offline\"\r\n              ? \"label top-5\"\r\n              : \"label\"\r\n          }\r\n        >\r\n          Location\r\n        </span>\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={handleInput}\r\n          disabled={!ready}\r\n          Placeholder=\"Search your location\"\r\n          className={\"locationSearch\"}\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div >\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\EventCreationFormFunction.js",["1309"],"import { SAVEFORM } from \"../Actions/EventCreationFormActions\";\r\nexport function editform(data) {\r\n  return (dispatch) => {\r\n    console.log(\"SAVEFORM\");\r\n    console.log(data);\r\n    dispatch({ action: \"SAVEFORM\", payload: data });\r\n  };\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Story.js",["1310","1311","1312","1313","1314","1315","1316","1317"],"import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport { Grid, TextField, IconButton } from \"@material-ui/core\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SAVESTORY, DELETESTORY } from \"../../../Redux/Actions/EventActions\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nexport default function Story(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const Eventdata = useSelector((state) => state.Eventdata);\r\n  const [subStory, setsubStory] = useState(Eventdata.STORY);\r\n  const [subname, setsubname] = useState(\"\");\r\n  const [file, setfile] = useState(\"\");\r\n  const [filetype, setfiletype] = useState(\"\");\r\n  const [datetime, setdatetime] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [currentedited, setcurrentedited] = useState(null);\r\n  const [add, setadd] = useState(true);\r\n  const [edit, setedit] = useState(false);\r\n  const [isError, setError] = useState(false);\r\n  const save = async () => {\r\n    if (\r\n      subname !== \"\" &&\r\n      datetime !== \"\" &&\r\n      description !== \"\" &&\r\n      file !== \"\"\r\n    ) {\r\n      setError(false);\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        file: file,\r\n        filetype: filetype,\r\n      };\r\n      console.log([...subStory, data]);\r\n      await setsubStory([...subStory, data]);\r\n\r\n      dispatch({\r\n        type: SAVESTORY,\r\n        payload: [...subStory, data],\r\n      });\r\n      Delete();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    let dataurl = \"\";\r\n\r\n    if (acceptedFiles[0].size > 5259265) {\r\n    } else {\r\n      let type = acceptedFiles[0].type.split(\"/\");\r\n      await getBase64(acceptedFiles[0]).then(async (data) => {\r\n        setfile(data);\r\n        setfiletype(type[1]);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n  });\r\n\r\n  const Delete = () => {\r\n    setsubname(\"\");\r\n    setfile(\"\");\r\n    setfiletype(\"\");\r\n    setdatetime(\"\");\r\n    setdescription(\"\");\r\n    setadd(false);\r\n  };\r\n  const Deletesingle = (i) => {\r\n    let subStorycpy = [...subStory];\r\n\r\n    subStorycpy = subStorycpy.filter((eventdata, index) => {\r\n      return index !== i;\r\n    });\r\n    dispatch({\r\n      type: SAVESTORY,\r\n      payload: subStorycpy,\r\n    });\r\n    setsubStory(subStorycpy);\r\n    setedit(false);\r\n    setcurrentedited(null);\r\n  };\r\n  const settoedit = (i) => {\r\n    let data = { ...subStory[i] };\r\n    setsubname(data.Name);\r\n    setfile(data.file);\r\n    setfiletype(data.filetype);\r\n    setdatetime(data.datetime);\r\n    setdescription(data.description);\r\n  };\r\n  const saveedit = async () => {\r\n    let subStorycpy = [...subStory];\r\n    if (\r\n      subname !== \"\" &&\r\n      datetime !== \"\" &&\r\n      description !== \"\" &&\r\n      file !== \"\"\r\n    ) {\r\n      setError(false);\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        file: file,\r\n        filetype: filetype,\r\n      };\r\n      subStorycpy[currentedited] = data;\r\n      await setsubStory([...subStorycpy]);\r\n      dispatch({\r\n        type: SAVESTORY,\r\n        payload: subStory,\r\n      });\r\n      Delete();\r\n      setedit(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12}></Grid>\r\n      <Grid item xs={12}>\r\n        {subStory.map((eve, index) => (\r\n          <Grid\r\n            key={eve.Name + index}\r\n            container\r\n            spacing={0}\r\n            className=\"card-shadow  m-b-10  \"\r\n          >\r\n            <Grid item xs={4} md={3}>\r\n              {edit === true && currentedited === index ? (\r\n                <div {...getRootProps()} className=\"w-100\">\r\n                  <input {...getInputProps()} className=\"w-100\" />\r\n                  {eve.filetype === \"png\" ||\r\n                    eve.filetype === \"jpg\" ||\r\n                    eve.filetype === \"jpeg\" ? (\r\n                    <img\r\n                      src={eve.file === undefined ? \" \" : eve.file}\r\n                      className=\"w-100 story-image\"\r\n                    />\r\n                  ) : (\r\n                    <video\r\n                      src={eve.file === undefined ? \" \" : eve.file}\r\n                      className=\"w-100 story-image\"\r\n                    />\r\n                  )}\r\n                  {isError === true && file === \"\" ? (\r\n                    <span className=\"error\">please add valid image</span>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              ) : eve.filetype === \"png\" ||\r\n                eve.filetype === \"jpg\" ||\r\n                eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  src={eve.file === undefined ? \" \" : eve.file}\r\n                  className=\"w-100  story-image\"\r\n                />\r\n              ) : (\r\n                <video\r\n                  src={eve.file === undefined ? \" \" : eve.file}\r\n                  className=\"w-100  story-image\"\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={8} md={7}>\r\n              <Grid container spacing={0} className=\"m-5px\">\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <TextField\r\n                      className=\"w-100\"\r\n                      label=\"Event Name\"\r\n                      onChange={(e) => {\r\n                        setsubname(e.target.value);\r\n                      }}\r\n                      value={subname}\r\n                      error={isError === true && subname === \"\" ? true : false}\r\n                    />\r\n                  ) : (\r\n                    <h2 className=\"m-0\">{eve.Name}</h2>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <TextField\r\n                      className=\"w-100 m-b-5px \"\r\n                      label=\"Event description\"\r\n                      onChange={(e) => {\r\n                        setdescription(e.target.value);\r\n                      }}\r\n                      value={description}\r\n                      error={\r\n                        isError === true && description === \"\" ? true : false\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <p> {eve.description}</p>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <form noValidate>\r\n                      <TextField\r\n                        id=\"datetime-local\"\r\n                        label=\"Schedule timing\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        className=\"w-100 \"\r\n                        onChange={(e) => {\r\n                          setdatetime(e.target.value);\r\n                        }}\r\n                        value={datetime}\r\n                        error={\r\n                          isError === true && datetime === \"\" ? true : false\r\n                        }\r\n                      />\r\n                    </form>\r\n                  ) : (\r\n                    eve.datetime\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <center>\r\n                {edit === true && currentedited === index ? (\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      saveedit();\r\n                    }}\r\n                  >\r\n                    <CheckCircleOutlineIcon color=\"success\" />\r\n                  </IconButton>\r\n                ) : (\r\n                  <>\r\n                    <IconButton\r\n                      onClick={async () => {\r\n                        setedit(true);\r\n                        setadd(false);\r\n                        Delete();\r\n                        await setcurrentedited(index);\r\n                        await settoedit(index);\r\n                      }}\r\n                    >\r\n                      <CreateIcon\r\n                        color=\"inherit\"\r\n                        fontSize={\"large\"}\r\n                        style={{ color: \"green\" }}\r\n                      />\r\n                    </IconButton>\r\n                  </>\r\n                )}\r\n                <IconButton\r\n                  onClick={() => {\r\n                    Deletesingle(index);\r\n                  }}\r\n                >\r\n                  <DeleteForeverIcon color=\"error\" fontSize={\"large\"} />\r\n                </IconButton>\r\n              </center>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={add === false ? \"hide\" : \"show card-shadow m-b-10 \"}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4} md={2}>\r\n            {file === \"\" ? (\r\n              <div {...getRootProps()} className=\"w-100\">\r\n                <input {...getInputProps()} className=\"w-100\" />\r\n                <img\r\n                  src={Gallery}\r\n                  className=\"w-100 uploadhere\"\r\n                  className=\"w-100\"\r\n                />\r\n              </div>\r\n            ) : filetype === \"png\" ||\r\n              filetype === \"jpg\" ||\r\n              filetype === \"jpeg\" ? (\r\n              <img src={file} className=\"w-100 story-image\" />\r\n            ) : (\r\n              <div {...getRootProps()} className=\"w-100\">\r\n                <input {...getInputProps()} className=\"w-100\" />\r\n                <video src={file} className=\"w-100  story-image\" />\r\n              </div>\r\n            )}\r\n            {isError === true && file === \"\" ? (\r\n              <span className=\"error\">please add valid image</span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={8} md={8} className=\"\">\r\n            <TextField\r\n              className=\"w-100\"\r\n              label=\"Event Name\"\r\n              onChange={(e) => {\r\n                setsubname(e.target.value);\r\n              }}\r\n              value={subname}\r\n              error={isError === true && subname === \"\" ? true : false}\r\n            />\r\n\r\n            <TextField\r\n              className=\"w-100 m-b-5px \"\r\n              label=\"Event description\"\r\n              onChange={(e) => {\r\n                setdescription(e.target.value);\r\n              }}\r\n              value={description}\r\n              error={isError === true && description === \"\" ? true : false}\r\n              inputProps={{ maxLength: 120 }}\r\n            />\r\n\r\n            <form noValidate>\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                label=\"Schedule timing\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24T10:30\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                className=\"w-100 \"\r\n                onChange={(e) => {\r\n                  setdatetime(e.target.value);\r\n                }}\r\n                error={isError === true && datetime === \"\" ? true : false}\r\n                value={datetime}\r\n              />\r\n            </form>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <center>\r\n              <IconButton\r\n                onClick={() => {\r\n                  save();\r\n                }}\r\n              >\r\n                <CheckCircleOutlineIcon\r\n                  color=\"inherit\"\r\n                  fontSize={\"large\"}\r\n                  style={{ color: \"green\" }}\r\n                />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => {\r\n                  Delete();\r\n                }}\r\n              >\r\n                <DeleteForeverIcon color=\"error\" fontSize={\"large\"} />\r\n              </IconButton>\r\n            </center>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <button\r\n          class=\"btn save-event m-5px\"\r\n          onClick={() => {\r\n            props.SetName(\"Album\");\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <center>\r\n          <AddCircleRoundedIcon\r\n            fontSize=\"large\"\r\n            className=\"add-button bottom\"\r\n            onClick={() => {\r\n              Delete();\r\n              setcurrentedited(\"\");\r\n              setedit(false);\r\n              setadd(true);\r\n            }}\r\n          />\r\n        </center>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Redux\\Actions\\EventCreationFormActions.js",[],"C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Schedule.js",["1318","1319","1320","1321","1322","1323","1324"],"import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport { Grid, TextField, IconButton } from \"@material-ui/core\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\";\r\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    wordBreak: \"break-word\",\r\n  },\r\n}));\r\nexport default function AddSchedule(props) {\r\n  const [subEvent, setSubevent] = useState([\r\n    ...props.CurrentEventDetails.Schedule,\r\n  ]);\r\n  const [edit, setedit] = useState(false);\r\n  const [add, setadd] = useState(true);\r\n  const [editselected, settoedit] = useState(null);\r\n  const [subname, setsubname] = useState(\"\");\r\n  const [venue, setvenue] = useState(\"\");\r\n  const [datetime, setdatetime] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [isError, setError] = useState(false);\r\n  const save = async () => {\r\n    if (subname !== \"\" && datetime !== \"\" && description !== \"\") {\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        Venue: venue,\r\n      };\r\n      console.log([...subEvent, data]);\r\n\r\n      await setSubevent([...props.CurrentEventDetails.Schedule, data]);\r\n\r\n      var EventsCopy = { ...props.CurrentEventDetails };\r\n      console.log(EventsCopy);\r\n      EventsCopy.Schedule = [...props.CurrentEventDetails.Schedule, data];\r\n      console.log(props.EventsCopy);\r\n      await props.SetCurrentEventDetails(EventsCopy);\r\n      // props.updatereduxform(EventsCopy);\r\n      console.log(props.Events);\r\n      Delete();\r\n      setadd(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const saveedit = async () => {\r\n    if (subname !== \"\" && datetime !== \"\" && description !== \"\") {\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        Venue: venue,\r\n      };\r\n      let subEventcpy = [...subEvent];\r\n      subEventcpy[editselected] = data;\r\n      await setSubevent(subEventcpy);\r\n      var EventsCopy = { ...props.CurrentEventDetails };\r\n      EventsCopy.Schedule = [...subEventcpy];\r\n      console.log(props.EventsCopy);\r\n      await props.SetCurrentEventDetails(EventsCopy);\r\n      console.log(props.Events);\r\n      // props.updatereduxform(EventsCopy);\r\n      Delete();\r\n      setedit(false);\r\n      settoedit(null);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n  const Delete = () => {\r\n    setsubname(\"\");\r\n    setdatetime(\"\");\r\n    setdescription(\"\");\r\n    setvenue(\"\");\r\n  };\r\n  const Deleteone = async (i) => {\r\n    let subeventcpy = [...subEvent];\r\n    subeventcpy = subeventcpy.filter((sube, index) => {\r\n      return index !== i;\r\n    });\r\n    await setSubevent([...subeventcpy]);\r\n\r\n    var EventsCopy = { ...props.CurrentEventDetails };\r\n    console.log(EventsCopy);\r\n    EventsCopy.Schedule = [...subeventcpy];\r\n    console.log(props.EventsCopy);\r\n    await props.SetCurrentEventDetails(EventsCopy);\r\n    // props.updatereduxform(EventsCopy);\r\n    console.log(props.Events);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        {subEvent.map((eve, index) => (\r\n          <Grid item xs={12} className=\"card-shadow m-b-10 schedule-details\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={8} md={10}>\r\n                {edit === true && editselected === index ? (\r\n                  <>\r\n                    <TextField\r\n                      className=\"w-100 m-7px\"\r\n                      size=\"small\"\r\n                      label=\"Event Name\"\r\n                      onChange={(e) => {\r\n                        setsubname(e.target.value);\r\n                      }}\r\n                      value={subname}\r\n                    />\r\n\r\n                    <form noValidate>\r\n                      <TextField\r\n                        id=\"datetime-local\"\r\n                        label=\"Schedule timing\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        className=\"w-100 m-7px\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={(e) => {\r\n                          setdatetime(e.target.value);\r\n                        }}\r\n                        value={datetime}\r\n                      />\r\n                    </form>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Grid\r\n                      container\r\n                      spacing={0}\r\n                      className=\"padding-left-7 p-10-p \"\r\n                    >\r\n                      <Grid item xs={12}>\r\n                        <div className=\"ScheduleName l-blue-t m-0\">\r\n                          {eve.Name}\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {eve.Venue}\r\n                      </Grid>\r\n                      <Grid item xs={12} className=\"dtime\">\r\n                        {eve.datetime.split(\"T\")[0] +\r\n                          \" \" +\r\n                          eve.datetime.split(\"T\")[1]}\r\n                      </Grid>\r\n                      {/* <Grid item xs={12} className=\"mt-10px\">\r\n                        {eve.description}\r\n                      </Grid> */}\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={4} md={2}>\r\n                {edit === true && editselected === index ? (\r\n                  <center>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        saveedit();\r\n                      }}\r\n                    >\r\n                      <CheckCircleOutlineIcon color=\"success\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        Delete();\r\n                      }}\r\n                    >\r\n                      <DeleteForeverIcon color=\"error\" />\r\n                    </IconButton>\r\n                  </center>\r\n                ) : (\r\n                  <center>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        setsubname(eve.Name);\r\n                        setdatetime(eve.datetime);\r\n                        setdescription(eve.description);\r\n                        setvenue(eve.Venue);\r\n                        setedit(true);\r\n                        settoedit(index);\r\n                        setadd(false);\r\n                      }}\r\n                    >\r\n                      <CreateIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        Deleteone(index);\r\n                      }}\r\n                    >\r\n                      <DeleteForeverIcon color=\"error\" />\r\n                    </IconButton>\r\n                  </center>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={8} md={10}>\r\n                {edit === true && editselected === index ? (\r\n                  <TextField\r\n                    className=\"w-100 m-7px\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Sub-Event description\"\r\n                    onChange={(e) => {\r\n                      setdescription(e.target.value);\r\n                    }}\r\n                    value={description}\r\n                  />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={4} md={2}>\r\n                {/* <center>\r\n                  {props.CurrentEventDetails.VenueType === \"Online\" ? (\r\n                    <ControlPointIcon className=\"schedule-l-icon\" />\r\n                  ) : (\r\n                    <LocationOnRoundedIcon className=\"schedule-l-icon\" />\r\n                  )}\r\n                </center> */}\r\n              </Grid>\r\n            </Grid>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  {eve.description.substring(0, 155)}...\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography className=\"p-10px\">\r\n                  {eve.description.substring(155, 10000000000000)}\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      {add == true ? (\r\n        <Grid item xs={12} className=\"card-shadow mb-100\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={7} md={10}>\r\n              <TextField\r\n                className=\"w-100 m-7px l-blue-t\"\r\n                size=\"small\"\r\n                label=\"Event Name\"\r\n                onChange={(e) => {\r\n                  setsubname(e.target.value);\r\n                }}\r\n                value={subname}\r\n                variant=\"standard\"\r\n                InputProps={{\r\n                  className: \"nounder\",\r\n                }}\r\n              />\r\n\r\n              <form noValidate>\r\n                <TextField\r\n                  id=\"datetime-local\"\r\n                  label=\"Schedule timing\"\r\n                  type=\"datetime-local\"\r\n                  defaultValue=\"2017-05-24T10:30\"\r\n                  className=\"w-100 m-7px\"\r\n                  variant=\"standard\"\r\n                  InputProps={{\r\n                    className: \"nounder\",\r\n                  }}\r\n                  size=\"small\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setdatetime(e.target.value);\r\n                  }}\r\n                  value={datetime}\r\n                />\r\n              </form>\r\n              <TextField\r\n                className=\"w-100 m-7px\"\r\n                variant=\"standard\"\r\n                InputProps={{\r\n                  className: \"nounder\",\r\n                }}\r\n                size=\"small\"\r\n                label=\"Sub-Event description \"\r\n                onChange={(e) => {\r\n                  setdescription(e.target.value);\r\n                }}\r\n                value={description}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5} md={2}>\r\n              <center>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    save();\r\n                  }}\r\n                >\r\n                  <CheckCircleOutlineIcon\r\n                    color=\"inherit\"\r\n                    fontSize={\"large\"}\r\n                    style={{ color: \"green\" }}\r\n                  />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    Delete();\r\n                    setadd(false);\r\n                  }}\r\n                >\r\n                  <DeleteForeverIcon color=\"error\" fontSize={\"large\"} />\r\n                </IconButton>\r\n              </center>\r\n              {/* <center>\r\n                {props.CurrentEventDetails.VenueType === \"Online\" ? (\r\n                  <ControlPointIcon\r\n                    className=\"schedule-l-icon\"\r\n                    fontSize={\"large\"}\r\n                  />\r\n                ) : (\r\n                  <LocationOnRoundedIcon\r\n                    className=\"schedule-l-icon\"\r\n                    fontSize={\"large\"}\r\n                  />\r\n                )}\r\n              </center> */}\r\n            </Grid>\r\n            <Grid item xs={8} md={10}></Grid>\r\n            <Grid item xs={4} md={2}></Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Grid item xs={12} md={12}>\r\n        <center>\r\n          <AddCircleRoundedIcon\r\n            onClick={() => {\r\n              setadd(true);\r\n              setedit(false);\r\n              settoedit(null);\r\n            }}\r\n            fontSize=\"large\"\r\n            className=\"add-button  m-5px \"\r\n          />\r\n        </center>\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <button\r\n          class=\"save-Schedule  bottom\"\r\n          onClick={() => {\r\n            props.SelectedEvent === 0\r\n              ? props.SetName(\"Story\")\r\n              : props.SetScheduleVisible(false);\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Soubhagya\\Desktop\\MobillyInvite\\src\\Components\\AddEvent\\AddDetails\\AddDetails.js",["1325","1326","1327","1328","1329","1330"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddDetails.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport Back from \"../../../Assets/Back.svg\";\r\nimport BackNavBar from \"../../Helpers/BackNavbar/BackNavBar\";\r\nimport AddSchedule from \"../Extras/Schedule\";\r\nimport Album from \"../Extras/Album\";\r\nimport Story from \"../Extras/Story\";\r\nimport history from \"../../../Utils/History\";\r\nexport default function AddDetails(props) {\r\n  const [Name, SetName] = useState(props.Name);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\r\n\r\n      <BackNavBar\r\n        logo={<img src={Back} />}\r\n        Name={\"Add \" + Name}\r\n        functionality={() => {\r\n          props.open(false);\r\n        }}\r\n        icon={\r\n          <button\r\n            className=\"Skip-button\"\r\n            onClick={() => {\r\n              props.open(false);\r\n            }}\r\n          >\r\n            Skip\r\n          </button>\r\n        }\r\n      />\r\n      <Grid container spacing={0} style={{ marginTop: 10 }}>\r\n        <Grid item xs={12} className=\"tab-header\"></Grid>\r\n        <Grid item xs={false} sm={2} md={2} />\r\n\r\n        <Grid item xs={12} sm={8} md={8} className=\"p-15px pt-0\">\r\n          <Grid container spacing={0} className=\"DetailHeader\">\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Schedule\");\r\n              }}\r\n              className={\r\n                Name === \"Schedule\" ? \"l-blue-t tac u theme-font\" : \"tac\"\r\n              }\r\n            >\r\n              Schedule\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Story\");\r\n              }}\r\n              className={\r\n                props.SelectedEvent === 0\r\n                  ? Name === \"Story\"\r\n                    ? \"tac show l-blue-t u theme-font\"\r\n                    : \"tac show theme-font\"\r\n                  : \"tac hide\"\r\n              }\r\n            >\r\n              Our Story\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Album\");\r\n              }}\r\n              className={\r\n                props.SelectedEvent === 0\r\n                  ? Name === \"Album\"\r\n                    ? \"tac show l-blue-t u theme-font\"\r\n                    : \"tac show theme-font\"\r\n                  : \"tac hide\"\r\n              }\r\n            >\r\n              Album\r\n            </Grid>\r\n          </Grid>\r\n          {Name === \"Schedule\" ? (\r\n            <AddSchedule\r\n              data={props.data}\r\n              setEvents={props.setEvents}\r\n              SelectEvent={props.SelectEvent}\r\n              SelectedEvent={props.SelectedEvent}\r\n              CurrentEventDetails={props.CurrentEventDetails}\r\n              Events={props.Events}\r\n              SelectedEvent={props.SelectedEvent}\r\n              SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n              SetScheduleVisible={props.SetScheduleVisible}\r\n              SetName={SetName}\r\n            />\r\n          ) : (\r\n            <>\r\n              {Name === \"Story\" ? (\r\n                <Story\r\n                  data={props.data}\r\n                  setEvents={props.setEvents}\r\n                  SelectEvent={props.SelectEvent}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  CurrentEventDetails={props.CurrentEventDetails}\r\n                  Events={props.Events}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n                  SetScheduleVisible={props.SetScheduleVisible}\r\n                  SetName={SetName}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {Name === \"Album\" ? (\r\n                <Album\r\n                  data={props.data}\r\n                  setEvents={props.setEvents}\r\n                  SelectEvent={props.SelectEvent}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  CurrentEventDetails={props.CurrentEventDetails}\r\n                  Events={props.Events}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n                  open={props.open}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={false} sm={2} md={2} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n",["1331","1332"],{"ruleId":"1333","replacedBy":"1334"},{"ruleId":"1335","replacedBy":"1336"},{"ruleId":"1337","severity":1,"message":"1338","line":11,"column":8,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1341","line":12,"column":8,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1342","line":17,"column":8,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1343","line":18,"column":8,"nodeType":"1339","messageId":"1340","endLine":18,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1344","line":19,"column":8,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1345","line":20,"column":8,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1346","line":24,"column":8,"nodeType":"1339","messageId":"1340","endLine":24,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1347","line":27,"column":8,"nodeType":"1339","messageId":"1340","endLine":27,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1348","line":38,"column":8,"nodeType":"1339","messageId":"1340","endLine":38,"endColumn":10},{"ruleId":"1349","severity":1,"message":"1350","line":17,"column":13,"nodeType":"1351","endLine":30,"endColumn":4},{"ruleId":"1337","severity":1,"message":"1352","line":22,"column":9,"nodeType":"1339","messageId":"1340","endLine":22,"endColumn":14},{"ruleId":"1349","severity":1,"message":"1353","line":30,"column":6,"nodeType":"1354","endLine":30,"endColumn":8,"suggestions":"1355"},{"ruleId":"1349","severity":1,"message":"1350","line":31,"column":13,"nodeType":"1351","endLine":41,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1353","line":41,"column":6,"nodeType":"1354","endLine":41,"endColumn":23,"suggestions":"1356"},{"ruleId":"1337","severity":1,"message":"1357","line":33,"column":9,"nodeType":"1339","messageId":"1340","endLine":33,"endColumn":13},{"ruleId":"1349","severity":1,"message":"1353","line":46,"column":6,"nodeType":"1354","endLine":46,"endColumn":8,"suggestions":"1358"},{"ruleId":"1337","severity":1,"message":"1359","line":13,"column":10,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":18},{"ruleId":"1349","severity":1,"message":"1350","line":22,"column":13,"nodeType":"1351","endLine":43,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1360","line":43,"column":6,"nodeType":"1354","endLine":43,"endColumn":8,"suggestions":"1361"},{"ruleId":"1349","severity":1,"message":"1350","line":44,"column":13,"nodeType":"1351","endLine":52,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1353","line":52,"column":6,"nodeType":"1354","endLine":52,"endColumn":8,"suggestions":"1362"},{"ruleId":"1337","severity":1,"message":"1363","line":11,"column":8,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1364","line":12,"column":8,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1365","line":13,"column":8,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1366","line":17,"column":8,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1367","line":18,"column":8,"nodeType":"1339","messageId":"1340","endLine":18,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1368","line":19,"column":8,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1369","line":20,"column":8,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1370","line":25,"column":20,"nodeType":"1339","messageId":"1340","endLine":25,"endColumn":31},{"ruleId":"1337","severity":1,"message":"1371","line":27,"column":10,"nodeType":"1339","messageId":"1340","endLine":27,"endColumn":14},{"ruleId":"1349","severity":1,"message":"1372","line":57,"column":6,"nodeType":"1354","endLine":57,"endColumn":8,"suggestions":"1373"},{"ruleId":"1374","severity":1,"message":"1375","line":84,"column":15,"nodeType":"1376","endLine":84,"endColumn":54},{"ruleId":"1374","severity":1,"message":"1375","line":152,"column":17,"nodeType":"1376","endLine":152,"endColumn":49},{"ruleId":"1337","severity":1,"message":"1377","line":17,"column":9,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":24},{"ruleId":"1337","severity":1,"message":"1378","line":77,"column":9,"nodeType":"1339","messageId":"1340","endLine":77,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1379","line":121,"column":7,"nodeType":"1339","messageId":"1340","endLine":121,"endColumn":28},{"ruleId":"1380","severity":1,"message":"1381","line":169,"column":33,"nodeType":"1351","messageId":"1382","endLine":169,"endColumn":35},{"ruleId":"1383","severity":1,"message":"1384","line":177,"column":29,"nodeType":"1385","messageId":"1386","endLine":177,"endColumn":30},{"ruleId":"1349","severity":1,"message":"1350","line":185,"column":13,"nodeType":"1351","endLine":187,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1387","line":187,"column":6,"nodeType":"1354","endLine":187,"endColumn":8,"suggestions":"1388"},{"ruleId":"1374","severity":1,"message":"1375","line":245,"column":15,"nodeType":"1376","endLine":245,"endColumn":33},{"ruleId":"1337","severity":1,"message":"1389","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1390","line":4,"column":46,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":50},{"ruleId":"1337","severity":1,"message":"1391","line":8,"column":8,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1392","line":9,"column":8,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1393","line":10,"column":10,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":25},{"ruleId":"1337","severity":1,"message":"1394","line":11,"column":10,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1395","line":13,"column":19,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1396","line":16,"column":10,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1397","line":18,"column":10,"nodeType":"1339","messageId":"1340","endLine":18,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1398","line":19,"column":10,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":26},{"ruleId":"1337","severity":1,"message":"1399","line":20,"column":10,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1400","line":21,"column":10,"nodeType":"1339","messageId":"1340","endLine":21,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1401","line":23,"column":8,"nodeType":"1339","messageId":"1340","endLine":23,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1402","line":28,"column":8,"nodeType":"1339","messageId":"1340","endLine":28,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1403","line":29,"column":10,"nodeType":"1339","messageId":"1340","endLine":29,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1404","line":30,"column":8,"nodeType":"1339","messageId":"1340","endLine":30,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1405","line":31,"column":10,"nodeType":"1339","messageId":"1340","endLine":31,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1406","line":43,"column":7,"nodeType":"1339","messageId":"1340","endLine":43,"endColumn":12},{"ruleId":"1349","severity":1,"message":"1350","line":67,"column":13,"nodeType":"1351","endLine":95,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1407","line":95,"column":6,"nodeType":"1354","endLine":95,"endColumn":31,"suggestions":"1408"},{"ruleId":"1337","severity":1,"message":"1409","line":136,"column":11,"nodeType":"1339","messageId":"1340","endLine":136,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1410","line":136,"column":25,"nodeType":"1339","messageId":"1340","endLine":136,"endColumn":38},{"ruleId":"1337","severity":1,"message":"1411","line":136,"column":40,"nodeType":"1339","messageId":"1340","endLine":136,"endColumn":52},{"ruleId":"1337","severity":1,"message":"1412","line":176,"column":9,"nodeType":"1339","messageId":"1340","endLine":176,"endColumn":24},{"ruleId":"1337","severity":1,"message":"1413","line":186,"column":11,"nodeType":"1339","messageId":"1340","endLine":186,"endColumn":16},{"ruleId":"1349","severity":1,"message":"1414","line":223,"column":6,"nodeType":"1354","endLine":223,"endColumn":17,"suggestions":"1415"},{"ruleId":"1349","severity":1,"message":"1416","line":228,"column":6,"nodeType":"1354","endLine":228,"endColumn":14,"suggestions":"1417"},{"ruleId":"1337","severity":1,"message":"1418","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1419","line":14,"column":10,"nodeType":"1339","messageId":"1340","endLine":14,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1420","line":27,"column":10,"nodeType":"1339","messageId":"1340","endLine":27,"endColumn":15},{"ruleId":"1349","severity":1,"message":"1421","line":54,"column":6,"nodeType":"1354","endLine":54,"endColumn":8,"suggestions":"1422"},{"ruleId":"1349","severity":1,"message":"1350","line":66,"column":13,"nodeType":"1351","endLine":93,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1423","line":74,"column":21,"nodeType":"1424","endLine":74,"endColumn":59},{"ruleId":"1349","severity":1,"message":"1425","line":75,"column":16,"nodeType":"1426","endLine":75,"endColumn":26},{"ruleId":"1337","severity":1,"message":"1427","line":80,"column":9,"nodeType":"1339","messageId":"1340","endLine":80,"endColumn":13},{"ruleId":"1349","severity":1,"message":"1428","line":114,"column":6,"nodeType":"1354","endLine":114,"endColumn":26,"suggestions":"1429"},{"ruleId":"1349","severity":1,"message":"1430","line":214,"column":6,"nodeType":"1354","endLine":214,"endColumn":8,"suggestions":"1431"},{"ruleId":"1337","severity":1,"message":"1432","line":1,"column":38,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":49},{"ruleId":"1337","severity":1,"message":"1433","line":4,"column":3,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":9},{"ruleId":"1337","severity":1,"message":"1363","line":5,"column":3,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":7},{"ruleId":"1337","severity":1,"message":"1364","line":6,"column":3,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":11},{"ruleId":"1337","severity":1,"message":"1434","line":7,"column":3,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1365","line":8,"column":3,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1435","line":9,"column":3,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":8},{"ruleId":"1337","severity":1,"message":"1436","line":10,"column":3,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1437","line":11,"column":3,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":10},{"ruleId":"1337","severity":1,"message":"1405","line":12,"column":3,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1438","line":13,"column":3,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1439","line":26,"column":9,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1440","line":32,"column":10,"nodeType":"1339","messageId":"1340","endLine":32,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1441","line":44,"column":10,"nodeType":"1339","messageId":"1340","endLine":44,"endColumn":18},{"ruleId":"1349","severity":1,"message":"1350","line":58,"column":13,"nodeType":"1351","endLine":88,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1423","line":68,"column":21,"nodeType":"1424","endLine":68,"endColumn":52},{"ruleId":"1380","severity":1,"message":"1381","line":78,"column":35,"nodeType":"1351","messageId":"1382","endLine":78,"endColumn":37},{"ruleId":"1380","severity":1,"message":"1381","line":79,"column":52,"nodeType":"1351","messageId":"1382","endLine":79,"endColumn":54},{"ruleId":"1337","severity":1,"message":"1442","line":95,"column":9,"nodeType":"1339","messageId":"1340","endLine":95,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1443","line":96,"column":9,"nodeType":"1339","messageId":"1340","endLine":96,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1444","line":2,"column":8,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1445","line":6,"column":10,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1446","line":8,"column":10,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1447","line":8,"column":16,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1448","line":9,"column":10,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1449","line":9,"column":19,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1450","line":10,"column":9,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":17},{"ruleId":"1374","severity":1,"message":"1375","line":13,"column":7,"nodeType":"1376","endLine":17,"endColumn":9},{"ruleId":"1337","severity":1,"message":"1451","line":7,"column":8,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":11},{"ruleId":"1337","severity":1,"message":"1427","line":15,"column":10,"nodeType":"1339","messageId":"1340","endLine":15,"endColumn":14},{"ruleId":"1349","severity":1,"message":"1350","line":24,"column":13,"nodeType":"1351","endLine":43,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1452","line":43,"column":6,"nodeType":"1354","endLine":43,"endColumn":8,"suggestions":"1453"},{"ruleId":"1374","severity":1,"message":"1375","line":112,"column":13,"nodeType":"1376","endLine":112,"endColumn":62},{"ruleId":"1337","severity":1,"message":"1454","line":15,"column":8,"nodeType":"1339","messageId":"1340","endLine":15,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1455","line":17,"column":8,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1456","line":18,"column":8,"nodeType":"1339","messageId":"1340","endLine":18,"endColumn":12},{"ruleId":"1349","severity":1,"message":"1350","line":35,"column":13,"nodeType":"1351","endLine":55,"endColumn":4},{"ruleId":"1380","severity":1,"message":"1381","line":46,"column":41,"nodeType":"1351","messageId":"1382","endLine":46,"endColumn":43},{"ruleId":"1349","severity":1,"message":"1457","line":55,"column":6,"nodeType":"1354","endLine":55,"endColumn":23,"suggestions":"1458"},{"ruleId":"1349","severity":1,"message":"1350","line":56,"column":13,"nodeType":"1351","endLine":92,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1459","line":92,"column":6,"nodeType":"1354","endLine":92,"endColumn":8,"suggestions":"1460"},{"ruleId":"1461","severity":1,"message":"1462","line":209,"column":19,"nodeType":"1376","endLine":209,"endColumn":63},{"ruleId":"1349","severity":1,"message":"1350","line":20,"column":13,"nodeType":"1351","endLine":43,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1463","line":43,"column":6,"nodeType":"1354","endLine":43,"endColumn":31,"suggestions":"1464"},{"ruleId":"1337","severity":1,"message":"1465","line":49,"column":10,"nodeType":"1339","messageId":"1340","endLine":49,"endColumn":20},{"ruleId":"1349","severity":1,"message":"1466","line":73,"column":6,"nodeType":"1354","endLine":73,"endColumn":17,"suggestions":"1467"},{"ruleId":"1337","severity":1,"message":"1369","line":1,"column":10,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1468","line":1,"column":18,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1469","line":2,"column":17,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":25},{"ruleId":"1337","severity":1,"message":"1470","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1405","line":4,"column":18,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":28},{"ruleId":"1337","severity":1,"message":"1471","line":7,"column":8,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":24},{"ruleId":"1337","severity":1,"message":"1472","line":8,"column":8,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":21},{"ruleId":"1380","severity":1,"message":"1381","line":16,"column":29,"nodeType":"1351","messageId":"1382","endLine":16,"endColumn":31},{"ruleId":"1349","severity":1,"message":"1473","line":19,"column":6,"nodeType":"1354","endLine":19,"endColumn":8,"suggestions":"1474"},{"ruleId":"1383","severity":1,"message":"1384","line":43,"column":98,"nodeType":"1385","messageId":"1386","endLine":43,"endColumn":99},{"ruleId":"1374","severity":1,"message":"1375","line":49,"column":11,"nodeType":"1376","endLine":49,"endColumn":56},{"ruleId":"1337","severity":1,"message":"1475","line":5,"column":21,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":25},{"ruleId":"1337","severity":1,"message":"1369","line":5,"column":27,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":33},{"ruleId":"1337","severity":1,"message":"1476","line":5,"column":45,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":51},{"ruleId":"1337","severity":1,"message":"1397","line":6,"column":22,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":28},{"ruleId":"1337","severity":1,"message":"1477","line":16,"column":12,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1478","line":16,"column":20,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":29},{"ruleId":"1349","severity":1,"message":"1350","line":21,"column":15,"nodeType":"1351","endLine":44,"endColumn":6},{"ruleId":"1349","severity":1,"message":"1463","line":44,"column":8,"nodeType":"1354","endLine":44,"endColumn":33,"suggestions":"1479"},{"ruleId":"1374","severity":1,"message":"1375","line":64,"column":53,"nodeType":"1376","endLine":64,"endColumn":105},{"ruleId":"1374","severity":1,"message":"1375","line":91,"column":25,"nodeType":"1376","endLine":91,"endColumn":74},{"ruleId":"1337","severity":1,"message":"1480","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1481","line":12,"column":8,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":17},{"ruleId":"1349","severity":1,"message":"1350","line":28,"column":13,"nodeType":"1351","endLine":36,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1482","line":36,"column":6,"nodeType":"1354","endLine":36,"endColumn":8,"suggestions":"1483"},{"ruleId":"1337","severity":1,"message":"1484","line":59,"column":9,"nodeType":"1339","messageId":"1340","endLine":59,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1432","line":1,"column":38,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":49},{"ruleId":"1337","severity":1,"message":"1369","line":3,"column":31,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1485","line":4,"column":10,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1486","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1487","line":15,"column":10,"nodeType":"1339","messageId":"1340","endLine":15,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1488","line":18,"column":8,"nodeType":"1339","messageId":"1340","endLine":18,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1489","line":19,"column":8,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1490","line":24,"column":12,"nodeType":"1339","messageId":"1340","endLine":24,"endColumn":22},{"ruleId":"1349","severity":1,"message":"1350","line":61,"column":15,"nodeType":"1351","endLine":96,"endColumn":6},{"ruleId":"1349","severity":1,"message":"1491","line":96,"column":8,"nodeType":"1354","endLine":96,"endColumn":33,"suggestions":"1492"},{"ruleId":"1380","severity":1,"message":"1381","line":102,"column":31,"nodeType":"1351","messageId":"1382","endLine":102,"endColumn":33},{"ruleId":"1349","severity":1,"message":"1493","line":115,"column":8,"nodeType":"1354","endLine":115,"endColumn":19,"suggestions":"1494"},{"ruleId":"1337","severity":1,"message":"1495","line":116,"column":11,"nodeType":"1339","messageId":"1340","endLine":116,"endColumn":15},{"ruleId":"1383","severity":1,"message":"1384","line":119,"column":76,"nodeType":"1385","messageId":"1386","endLine":119,"endColumn":77},{"ruleId":"1374","severity":1,"message":"1375","line":164,"column":43,"nodeType":"1376","endLine":164,"endColumn":92},{"ruleId":"1337","severity":1,"message":"1496","line":10,"column":8,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1497","line":11,"column":10,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1455","line":12,"column":8,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1456","line":13,"column":8,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1498","line":16,"column":10,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1454","line":20,"column":8,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1499","line":21,"column":10,"nodeType":"1339","messageId":"1340","endLine":21,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1500","line":27,"column":3,"nodeType":"1339","messageId":"1340","endLine":27,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1501","line":28,"column":3,"nodeType":"1339","messageId":"1340","endLine":28,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1502","line":33,"column":8,"nodeType":"1339","messageId":"1340","endLine":33,"endColumn":15},{"ruleId":"1349","severity":1,"message":"1350","line":63,"column":13,"nodeType":"1351","endLine":90,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1503","line":90,"column":6,"nodeType":"1354","endLine":90,"endColumn":23,"suggestions":"1504"},{"ruleId":"1505","severity":1,"message":"1506","line":237,"column":45,"nodeType":"1385","messageId":"1507","endLine":237,"endColumn":47},{"ruleId":"1461","severity":1,"message":"1462","line":319,"column":19,"nodeType":"1376","endLine":319,"endColumn":63},{"ruleId":"1349","severity":1,"message":"1508","line":362,"column":6,"nodeType":"1354","endLine":362,"endColumn":22,"suggestions":"1509"},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1369","line":10,"column":27,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":33},{"ruleId":"1337","severity":1,"message":"1511","line":10,"column":35,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":44},{"ruleId":"1337","severity":1,"message":"1512","line":10,"column":46,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":49},{"ruleId":"1337","severity":1,"message":"1513","line":16,"column":23,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1514","line":17,"column":10,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1427","line":64,"column":5,"nodeType":"1339","messageId":"1340","endLine":64,"endColumn":9},{"ruleId":"1337","severity":1,"message":"1515","line":95,"column":18,"nodeType":"1339","messageId":"1340","endLine":95,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1516","line":97,"column":19,"nodeType":"1339","messageId":"1340","endLine":97,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1517","line":98,"column":10,"nodeType":"1339","messageId":"1340","endLine":98,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1518","line":98,"column":20,"nodeType":"1339","messageId":"1340","endLine":98,"endColumn":31},{"ruleId":"1337","severity":1,"message":"1519","line":105,"column":9,"nodeType":"1339","messageId":"1340","endLine":105,"endColumn":14},{"ruleId":"1374","severity":1,"message":"1375","line":132,"column":7,"nodeType":"1376","endLine":144,"endColumn":9},{"ruleId":"1520","severity":1,"message":"1521","line":153,"column":9,"nodeType":"1522","endLine":153,"endColumn":41},{"ruleId":"1523","severity":1,"message":"1524","line":199,"column":19,"nodeType":"1525","messageId":"1507","endLine":199,"endColumn":24},{"ruleId":"1523","severity":1,"message":"1524","line":243,"column":17,"nodeType":"1525","messageId":"1507","endLine":243,"endColumn":22},{"ruleId":"1523","severity":1,"message":"1524","line":291,"column":17,"nodeType":"1525","messageId":"1507","endLine":291,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1526","line":6,"column":3,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":8},{"ruleId":"1337","severity":1,"message":"1527","line":7,"column":3,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":6},{"ruleId":"1337","severity":1,"message":"1528","line":8,"column":3,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":7},{"ruleId":"1337","severity":1,"message":"1529","line":14,"column":8,"nodeType":"1339","messageId":"1340","endLine":14,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1530","line":22,"column":3,"nodeType":"1339","messageId":"1340","endLine":22,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1531","line":26,"column":10,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1532","line":26,"column":22,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":30},{"ruleId":"1337","severity":1,"message":"1533","line":26,"column":32,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":47},{"ruleId":"1337","severity":1,"message":"1534","line":34,"column":10,"nodeType":"1339","messageId":"1340","endLine":34,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1427","line":36,"column":10,"nodeType":"1339","messageId":"1340","endLine":36,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1535","line":47,"column":9,"nodeType":"1339","messageId":"1340","endLine":47,"endColumn":19},{"ruleId":"1349","severity":1,"message":"1350","line":52,"column":13,"nodeType":"1351","endLine":59,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1536","line":53,"column":17,"nodeType":"1537","endLine":53,"endColumn":71},{"ruleId":"1349","severity":1,"message":"1350","line":111,"column":13,"nodeType":"1351","endLine":182,"endColumn":4},{"ruleId":"1380","severity":1,"message":"1381","line":141,"column":25,"nodeType":"1351","messageId":"1382","endLine":141,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1538","line":155,"column":9,"nodeType":"1339","messageId":"1340","endLine":155,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1539","line":178,"column":7,"nodeType":"1339","messageId":"1340","endLine":178,"endColumn":12},{"ruleId":"1349","severity":1,"message":"1540","line":182,"column":6,"nodeType":"1354","endLine":182,"endColumn":16,"suggestions":"1541"},{"ruleId":"1505","severity":1,"message":"1506","line":188,"column":17,"nodeType":"1385","messageId":"1507","endLine":188,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1542","line":201,"column":11,"nodeType":"1339","messageId":"1340","endLine":201,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1543","line":238,"column":11,"nodeType":"1339","messageId":"1340","endLine":238,"endColumn":23},{"ruleId":"1380","severity":1,"message":"1381","line":246,"column":26,"nodeType":"1351","messageId":"1382","endLine":246,"endColumn":28},{"ruleId":"1337","severity":1,"message":"1513","line":3,"column":23,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1369","line":5,"column":31,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1544","line":6,"column":10,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1545","line":55,"column":13,"nodeType":"1376","endLine":62,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1526","line":2,"column":31,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1546","line":12,"column":10,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":16},{"ruleId":"1349","severity":1,"message":"1350","line":29,"column":13,"nodeType":"1351","endLine":134,"endColumn":4},{"ruleId":"1380","severity":1,"message":"1381","line":87,"column":27,"nodeType":"1351","messageId":"1382","endLine":87,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1538","line":105,"column":11,"nodeType":"1339","messageId":"1340","endLine":105,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1539","line":127,"column":9,"nodeType":"1339","messageId":"1340","endLine":127,"endColumn":14},{"ruleId":"1349","severity":1,"message":"1547","line":134,"column":6,"nodeType":"1354","endLine":134,"endColumn":31,"suggestions":"1548"},{"ruleId":"1337","severity":1,"message":"1502","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1369","line":4,"column":31,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1390","line":4,"column":39,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":43},{"ruleId":"1337","severity":1,"message":"1500","line":12,"column":21,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":35},{"ruleId":"1337","severity":1,"message":"1549","line":17,"column":19,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1427","line":23,"column":10,"nodeType":"1339","messageId":"1340","endLine":23,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1550","line":23,"column":16,"nodeType":"1339","messageId":"1340","endLine":23,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1551","line":26,"column":10,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":18},{"ruleId":"1349","severity":1,"message":"1350","line":32,"column":13,"nodeType":"1351","endLine":101,"endColumn":4},{"ruleId":"1380","severity":1,"message":"1381","line":50,"column":32,"nodeType":"1351","messageId":"1382","endLine":50,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1539","line":87,"column":11,"nodeType":"1339","messageId":"1340","endLine":87,"endColumn":16},{"ruleId":"1349","severity":1,"message":"1552","line":101,"column":6,"nodeType":"1354","endLine":101,"endColumn":16,"suggestions":"1553"},{"ruleId":"1337","severity":1,"message":"1554","line":102,"column":9,"nodeType":"1339","messageId":"1340","endLine":102,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1555","line":2,"column":8,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1389","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1367","line":11,"column":16,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":26},{"ruleId":"1337","severity":1,"message":"1514","line":17,"column":10,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1556","line":19,"column":10,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1427","line":32,"column":10,"nodeType":"1339","messageId":"1340","endLine":32,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1557","line":35,"column":10,"nodeType":"1339","messageId":"1340","endLine":35,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1558","line":36,"column":10,"nodeType":"1339","messageId":"1340","endLine":36,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1559","line":45,"column":10,"nodeType":"1339","messageId":"1340","endLine":45,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1560","line":45,"column":15,"nodeType":"1339","messageId":"1340","endLine":45,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1561","line":58,"column":10,"nodeType":"1339","messageId":"1340","endLine":58,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1378","line":76,"column":9,"nodeType":"1339","messageId":"1340","endLine":76,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1379","line":116,"column":7,"nodeType":"1339","messageId":"1340","endLine":116,"endColumn":28},{"ruleId":"1349","severity":1,"message":"1350","line":170,"column":13,"nodeType":"1351","endLine":172,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1562","line":172,"column":6,"nodeType":"1354","endLine":172,"endColumn":8,"suggestions":"1563"},{"ruleId":"1349","severity":1,"message":"1564","line":227,"column":6,"nodeType":"1354","endLine":227,"endColumn":21,"suggestions":"1565"},{"ruleId":"1337","severity":1,"message":"1411","line":370,"column":40,"nodeType":"1339","messageId":"1340","endLine":370,"endColumn":52},{"ruleId":"1380","severity":1,"message":"1381","line":380,"column":33,"nodeType":"1351","messageId":"1382","endLine":380,"endColumn":35},{"ruleId":"1337","severity":1,"message":"1566","line":386,"column":7,"nodeType":"1339","messageId":"1340","endLine":386,"endColumn":12},{"ruleId":"1349","severity":1,"message":"1350","line":395,"column":13,"nodeType":"1351","endLine":397,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1567","line":397,"column":6,"nodeType":"1354","endLine":397,"endColumn":15,"suggestions":"1568"},{"ruleId":"1520","severity":1,"message":"1521","line":419,"column":15,"nodeType":"1522","endLine":419,"endColumn":33},{"ruleId":"1374","severity":1,"message":"1375","line":518,"column":21,"nodeType":"1376","endLine":524,"endColumn":23},{"ruleId":"1374","severity":1,"message":"1375","line":533,"column":21,"nodeType":"1376","endLine":536,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1544","line":6,"column":10,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1569","line":12,"column":10,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1427","line":20,"column":10,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":14},{"ruleId":"1349","severity":1,"message":"1350","line":28,"column":13,"nodeType":"1351","endLine":59,"endColumn":4},{"ruleId":"1570","severity":1,"message":"1571","line":49,"column":13,"nodeType":"1339","messageId":"1572","endLine":49,"endColumn":17},{"ruleId":"1570","severity":1,"message":"1573","line":50,"column":18,"nodeType":"1339","messageId":"1572","endLine":50,"endColumn":19},{"ruleId":"1349","severity":1,"message":"1574","line":59,"column":6,"nodeType":"1354","endLine":59,"endColumn":31,"suggestions":"1575"},{"ruleId":"1461","severity":1,"message":"1545","line":89,"column":9,"nodeType":"1376","endLine":94,"endColumn":10},{"ruleId":"1383","severity":1,"message":"1384","line":92,"column":32,"nodeType":"1385","messageId":"1386","endLine":92,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1545","line":132,"column":11,"nodeType":"1376","endLine":137,"endColumn":12},{"ruleId":"1383","severity":1,"message":"1384","line":135,"column":41,"nodeType":"1385","messageId":"1386","endLine":135,"endColumn":42},{"ruleId":"1461","severity":1,"message":"1545","line":183,"column":9,"nodeType":"1376","endLine":183,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1545","line":199,"column":9,"nodeType":"1376","endLine":199,"endColumn":75},{"ruleId":"1461","severity":1,"message":"1462","line":99,"column":15,"nodeType":"1376","endLine":99,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1576","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1577","line":10,"column":8,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":20},{"ruleId":"1349","severity":1,"message":"1578","line":57,"column":6,"nodeType":"1354","endLine":57,"endColumn":39,"suggestions":"1579"},{"ruleId":"1461","severity":1,"message":"1462","line":74,"column":15,"nodeType":"1376","endLine":74,"endColumn":63},{"ruleId":"1461","severity":1,"message":"1462","line":45,"column":15,"nodeType":"1376","endLine":45,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1462","line":31,"column":25,"nodeType":"1376","endLine":31,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":34,"column":25,"nodeType":"1376","endLine":34,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":37,"column":25,"nodeType":"1376","endLine":37,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":45,"column":25,"nodeType":"1376","endLine":45,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":48,"column":25,"nodeType":"1376","endLine":48,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":51,"column":25,"nodeType":"1376","endLine":51,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":59,"column":25,"nodeType":"1376","endLine":59,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":62,"column":25,"nodeType":"1376","endLine":62,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":65,"column":25,"nodeType":"1376","endLine":65,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1462","line":74,"column":21,"nodeType":"1376","endLine":74,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1462","line":77,"column":21,"nodeType":"1376","endLine":77,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1462","line":80,"column":21,"nodeType":"1376","endLine":80,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1462","line":83,"column":21,"nodeType":"1376","endLine":83,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1545","line":65,"column":11,"nodeType":"1376","endLine":70,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1580","line":3,"column":47,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":53},{"ruleId":"1461","severity":1,"message":"1462","line":14,"column":11,"nodeType":"1376","endLine":14,"endColumn":75},{"ruleId":"1461","severity":1,"message":"1462","line":36,"column":13,"nodeType":"1376","endLine":36,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":39,"column":13,"nodeType":"1376","endLine":39,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":42,"column":13,"nodeType":"1376","endLine":42,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":45,"column":13,"nodeType":"1376","endLine":45,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":45,"column":15,"nodeType":"1376","endLine":45,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1462","line":21,"column":15,"nodeType":"1376","endLine":27,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1462","line":43,"column":15,"nodeType":"1376","endLine":49,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1462","line":73,"column":23,"nodeType":"1376","endLine":73,"endColumn":72},{"ruleId":"1461","severity":1,"message":"1462","line":96,"column":23,"nodeType":"1376","endLine":96,"endColumn":72},{"ruleId":"1461","severity":1,"message":"1462","line":117,"column":23,"nodeType":"1376","endLine":117,"endColumn":72},{"ruleId":"1461","severity":1,"message":"1462","line":137,"column":23,"nodeType":"1376","endLine":137,"endColumn":72},{"ruleId":"1461","severity":1,"message":"1545","line":38,"column":9,"nodeType":"1376","endLine":38,"endColumn":51},{"ruleId":"1581","severity":1,"message":"1582","line":56,"column":21,"nodeType":"1376","endLine":56,"endColumn":68},{"ruleId":"1581","severity":1,"message":"1582","line":61,"column":21,"nodeType":"1376","endLine":61,"endColumn":68},{"ruleId":"1581","severity":1,"message":"1582","line":66,"column":21,"nodeType":"1376","endLine":66,"endColumn":70},{"ruleId":"1337","severity":1,"message":"1583","line":73,"column":19,"nodeType":"1339","messageId":"1340","endLine":73,"endColumn":26},{"ruleId":"1337","severity":1,"message":"1584","line":4,"column":3,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1585","line":5,"column":3,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1586","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1587","line":4,"column":8,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1588","line":5,"column":21,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":29},{"ruleId":"1589","severity":1,"message":"1590","line":15,"column":7,"nodeType":"1591","messageId":"1592","endLine":15,"endColumn":24},{"ruleId":"1589","severity":1,"message":"1590","line":12,"column":7,"nodeType":"1591","messageId":"1592","endLine":12,"endColumn":24},{"ruleId":"1589","severity":1,"message":"1590","line":10,"column":13,"nodeType":"1593","messageId":"1592","endLine":10,"endColumn":19},{"ruleId":"1589","severity":1,"message":"1590","line":13,"column":13,"nodeType":"1593","messageId":"1592","endLine":13,"endColumn":19},{"ruleId":"1380","severity":1,"message":"1381","line":20,"column":27,"nodeType":"1351","messageId":"1382","endLine":20,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1594","line":1,"column":10,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1595","line":3,"column":10,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1596","line":5,"column":8,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1597","line":13,"column":10,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1594","line":14,"column":10,"nodeType":"1339","messageId":"1340","endLine":14,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1587","line":15,"column":8,"nodeType":"1339","messageId":"1340","endLine":15,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1598","line":16,"column":10,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1450","line":21,"column":9,"nodeType":"1339","messageId":"1340","endLine":21,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1599","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1600","line":5,"column":8,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":17},{"ruleId":"1374","severity":1,"message":"1375","line":19,"column":19,"nodeType":"1376","endLine":22,"endColumn":21},{"ruleId":"1374","severity":1,"message":"1375","line":45,"column":19,"nodeType":"1376","endLine":48,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1511","line":7,"column":10,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1597","line":10,"column":10,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1450","line":13,"column":9,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1601","line":4,"column":10,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1595","line":4,"column":34,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":44},{"ruleId":"1337","severity":1,"message":"1602","line":4,"column":46,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":57},{"ruleId":"1461","severity":1,"message":"1462","line":22,"column":13,"nodeType":"1376","endLine":22,"endColumn":48},{"ruleId":"1461","severity":1,"message":"1462","line":28,"column":13,"nodeType":"1376","endLine":28,"endColumn":48},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1603","line":10,"column":10,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1604","line":11,"column":18,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":26},{"ruleId":"1337","severity":1,"message":"1605","line":13,"column":8,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1357","line":30,"column":9,"nodeType":"1339","messageId":"1340","endLine":30,"endColumn":13},{"ruleId":"1349","severity":1,"message":"1353","line":43,"column":6,"nodeType":"1354","endLine":43,"endColumn":8,"suggestions":"1606"},{"ruleId":"1374","severity":1,"message":"1375","line":54,"column":11,"nodeType":"1376","endLine":54,"endColumn":56},{"ruleId":"1374","severity":1,"message":"1375","line":116,"column":13,"nodeType":"1376","endLine":116,"endColumn":62},{"ruleId":"1374","severity":1,"message":"1375","line":181,"column":13,"nodeType":"1376","endLine":181,"endColumn":62},{"ruleId":"1337","severity":1,"message":"1607","line":47,"column":7,"nodeType":"1339","messageId":"1340","endLine":47,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1608","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1609","line":4,"column":8,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":16},{"ruleId":"1349","severity":1,"message":"1353","line":47,"column":6,"nodeType":"1354","endLine":47,"endColumn":22,"suggestions":"1610"},{"ruleId":"1337","severity":1,"message":"1611","line":11,"column":8,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1612","line":48,"column":10,"nodeType":"1339","messageId":"1340","endLine":48,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1613","line":48,"column":16,"nodeType":"1339","messageId":"1340","endLine":48,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1614","line":51,"column":10,"nodeType":"1339","messageId":"1340","endLine":51,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1615","line":51,"column":21,"nodeType":"1339","messageId":"1340","endLine":51,"endColumn":36},{"ruleId":"1520","severity":1,"message":"1521","line":57,"column":7,"nodeType":"1522","endLine":57,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1616","line":1,"column":8,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1617","line":2,"column":10,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1587","line":4,"column":8,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1618","line":2,"column":8,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":12},{"ruleId":"1349","severity":1,"message":"1619","line":44,"column":6,"nodeType":"1354","endLine":44,"endColumn":8,"suggestions":"1620"},{"ruleId":"1337","severity":1,"message":"1411","line":46,"column":40,"nodeType":"1339","messageId":"1340","endLine":46,"endColumn":52},{"ruleId":"1505","severity":1,"message":"1621","line":66,"column":18,"nodeType":"1385","messageId":"1507","endLine":66,"endColumn":20},{"ruleId":"1374","severity":1,"message":"1375","line":67,"column":13,"nodeType":"1376","endLine":67,"endColumn":51},{"ruleId":"1374","severity":1,"message":"1375","line":69,"column":13,"nodeType":"1376","endLine":69,"endColumn":52},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1580","line":3,"column":47,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":53},{"ruleId":"1337","severity":1,"message":"1622","line":7,"column":9,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1623","line":5,"column":21,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":32},{"ruleId":"1337","severity":1,"message":"1405","line":3,"column":18,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":28},{"ruleId":"1337","severity":1,"message":"1624","line":6,"column":10,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1625","line":8,"column":10,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1450","line":11,"column":9,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":17},{"ruleId":"1349","severity":1,"message":"1626","line":26,"column":6,"nodeType":"1354","endLine":26,"endColumn":8,"suggestions":"1627"},{"ruleId":"1337","severity":1,"message":"1628","line":3,"column":10,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1513","line":8,"column":23,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1629","line":11,"column":10,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1630","line":12,"column":25,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1631","line":15,"column":9,"nodeType":"1339","messageId":"1340","endLine":15,"endColumn":18},{"ruleId":"1349","severity":1,"message":"1632","line":30,"column":6,"nodeType":"1354","endLine":30,"endColumn":23,"suggestions":"1633"},{"ruleId":"1461","severity":1,"message":"1545","line":43,"column":11,"nodeType":"1376","endLine":43,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1634","line":3,"column":10,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1569","line":4,"column":10,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1630","line":4,"column":25,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1629","line":5,"column":10,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1635","line":6,"column":10,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1511","line":11,"column":10,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1512","line":11,"column":21,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":24},{"ruleId":"1337","severity":1,"message":"1451","line":11,"column":26,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1636","line":11,"column":31,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":39},{"ruleId":"1337","severity":1,"message":"1637","line":11,"column":41,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":55},{"ruleId":"1337","severity":1,"message":"1638","line":12,"column":10,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1513","line":14,"column":23,"nodeType":"1339","messageId":"1340","endLine":14,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1639","line":19,"column":10,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1370","line":19,"column":20,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":31},{"ruleId":"1337","severity":1,"message":"1640","line":20,"column":21,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":33},{"ruleId":"1337","severity":1,"message":"1641","line":22,"column":10,"nodeType":"1339","messageId":"1340","endLine":22,"endColumn":16},{"ruleId":"1380","severity":1,"message":"1381","line":26,"column":48,"nodeType":"1351","messageId":"1382","endLine":26,"endColumn":50},{"ruleId":"1349","severity":1,"message":"1503","line":33,"column":6,"nodeType":"1354","endLine":33,"endColumn":23,"suggestions":"1642"},{"ruleId":"1383","severity":1,"message":"1384","line":80,"column":61,"nodeType":"1385","messageId":"1386","endLine":80,"endColumn":62},{"ruleId":"1337","severity":1,"message":"1510","line":2,"column":27,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1597","line":13,"column":10,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1411","line":46,"column":42,"nodeType":"1339","messageId":"1340","endLine":46,"endColumn":54},{"ruleId":"1337","severity":1,"message":"1643","line":50,"column":11,"nodeType":"1339","messageId":"1340","endLine":50,"endColumn":17},{"ruleId":"1383","severity":1,"message":"1384","line":62,"column":76,"nodeType":"1385","messageId":"1386","endLine":62,"endColumn":77},{"ruleId":"1374","severity":1,"message":"1375","line":91,"column":25,"nodeType":"1376","endLine":91,"endColumn":75},{"ruleId":"1374","severity":1,"message":"1375","line":105,"column":41,"nodeType":"1376","endLine":105,"endColumn":91},{"ruleId":"1337","severity":1,"message":"1587","line":11,"column":8,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1481","line":12,"column":8,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1484","line":38,"column":9,"nodeType":"1339","messageId":"1340","endLine":38,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1513","line":15,"column":23,"nodeType":"1339","messageId":"1340","endLine":15,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1644","line":25,"column":10,"nodeType":"1339","messageId":"1340","endLine":25,"endColumn":18},{"ruleId":"1349","severity":1,"message":"1645","line":86,"column":6,"nodeType":"1354","endLine":86,"endColumn":8,"suggestions":"1646"},{"ruleId":"1337","severity":1,"message":"1411","line":87,"column":40,"nodeType":"1339","messageId":"1340","endLine":87,"endColumn":52},{"ruleId":"1349","severity":1,"message":"1350","line":92,"column":13,"nodeType":"1351","endLine":99,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1647","line":99,"column":6,"nodeType":"1354","endLine":99,"endColumn":8,"suggestions":"1648"},{"ruleId":"1349","severity":1,"message":"1350","line":100,"column":13,"nodeType":"1351","endLine":102,"endColumn":4},{"ruleId":"1349","severity":1,"message":"1649","line":102,"column":6,"nodeType":"1354","endLine":102,"endColumn":49,"suggestions":"1650"},{"ruleId":"1374","severity":1,"message":"1375","line":200,"column":21,"nodeType":"1376","endLine":200,"endColumn":68},{"ruleId":"1374","severity":1,"message":"1375","line":219,"column":23,"nodeType":"1376","endLine":219,"endColumn":70},{"ruleId":"1337","severity":1,"message":"1434","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1587","line":8,"column":8,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1651","line":19,"column":8,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":24},{"ruleId":"1380","severity":1,"message":"1381","line":61,"column":28,"nodeType":"1351","messageId":"1382","endLine":61,"endColumn":30},{"ruleId":"1349","severity":1,"message":"1652","line":67,"column":6,"nodeType":"1354","endLine":67,"endColumn":8,"suggestions":"1653"},{"ruleId":"1380","severity":1,"message":"1381","line":70,"column":28,"nodeType":"1351","messageId":"1382","endLine":70,"endColumn":30},{"ruleId":"1349","severity":1,"message":"1654","line":76,"column":6,"nodeType":"1354","endLine":76,"endColumn":17,"suggestions":"1655"},{"ruleId":"1337","severity":1,"message":"1469","line":1,"column":17,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":25},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1389","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1526","line":4,"column":31,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1369","line":4,"column":38,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":44},{"ruleId":"1337","severity":1,"message":"1390","line":4,"column":46,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":50},{"ruleId":"1337","severity":1,"message":"1499","line":5,"column":10,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1513","line":6,"column":23,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1656","line":7,"column":8,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1392","line":9,"column":8,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1616","line":12,"column":8,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1657","line":13,"column":10,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1395","line":13,"column":19,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1658","line":14,"column":10,"nodeType":"1339","messageId":"1340","endLine":14,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1396","line":16,"column":10,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1397","line":18,"column":10,"nodeType":"1339","messageId":"1340","endLine":18,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1398","line":19,"column":10,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":26},{"ruleId":"1337","severity":1,"message":"1399","line":20,"column":10,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1400","line":21,"column":10,"nodeType":"1339","messageId":"1340","endLine":21,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1587","line":22,"column":8,"nodeType":"1339","messageId":"1340","endLine":22,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1401","line":23,"column":8,"nodeType":"1339","messageId":"1340","endLine":23,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1617","line":24,"column":10,"nodeType":"1339","messageId":"1340","endLine":24,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1468","line":25,"column":10,"nodeType":"1339","messageId":"1340","endLine":25,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1659","line":26,"column":8,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1481","line":27,"column":8,"nodeType":"1339","messageId":"1340","endLine":27,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1402","line":28,"column":8,"nodeType":"1339","messageId":"1340","endLine":28,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1403","line":29,"column":10,"nodeType":"1339","messageId":"1340","endLine":29,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1660","line":32,"column":8,"nodeType":"1339","messageId":"1340","endLine":32,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1489","line":33,"column":8,"nodeType":"1339","messageId":"1340","endLine":33,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1501","line":35,"column":5,"nodeType":"1339","messageId":"1340","endLine":35,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1500","line":36,"column":5,"nodeType":"1339","messageId":"1340","endLine":36,"endColumn":19},{"ruleId":"1349","severity":1,"message":"1661","line":61,"column":8,"nodeType":"1354","endLine":61,"endColumn":10,"suggestions":"1662"},{"ruleId":"1337","severity":1,"message":"1411","line":63,"column":42,"nodeType":"1339","messageId":"1340","endLine":63,"endColumn":54},{"ruleId":"1461","severity":1,"message":"1545","line":120,"column":21,"nodeType":"1376","endLine":120,"endColumn":53},{"ruleId":"1461","severity":1,"message":"1545","line":125,"column":21,"nodeType":"1376","endLine":130,"endColumn":22},{"ruleId":"1374","severity":1,"message":"1375","line":142,"column":33,"nodeType":"1376","endLine":146,"endColumn":35},{"ruleId":"1337","severity":1,"message":"1432","line":2,"column":38,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":49},{"ruleId":"1337","severity":1,"message":"1389","line":4,"column":8,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1369","line":5,"column":38,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":44},{"ruleId":"1337","severity":1,"message":"1390","line":5,"column":46,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":50},{"ruleId":"1337","severity":1,"message":"1499","line":6,"column":10,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1656","line":8,"column":8,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1393","line":11,"column":10,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":25},{"ruleId":"1337","severity":1,"message":"1394","line":12,"column":10,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1616","line":13,"column":8,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1657","line":14,"column":10,"nodeType":"1339","messageId":"1340","endLine":14,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1658","line":15,"column":10,"nodeType":"1339","messageId":"1340","endLine":15,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1487","line":16,"column":10,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1396","line":17,"column":10,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1399","line":21,"column":10,"nodeType":"1339","messageId":"1340","endLine":21,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1587","line":23,"column":8,"nodeType":"1339","messageId":"1340","endLine":23,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1617","line":25,"column":10,"nodeType":"1339","messageId":"1340","endLine":25,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1468","line":26,"column":10,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1659","line":27,"column":8,"nodeType":"1339","messageId":"1340","endLine":27,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1481","line":28,"column":8,"nodeType":"1339","messageId":"1340","endLine":28,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1402","line":29,"column":8,"nodeType":"1339","messageId":"1340","endLine":29,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1403","line":30,"column":10,"nodeType":"1339","messageId":"1340","endLine":30,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1404","line":31,"column":8,"nodeType":"1339","messageId":"1340","endLine":31,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1405","line":32,"column":10,"nodeType":"1339","messageId":"1340","endLine":32,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1660","line":33,"column":8,"nodeType":"1339","messageId":"1340","endLine":33,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1489","line":34,"column":8,"nodeType":"1339","messageId":"1340","endLine":34,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1501","line":36,"column":5,"nodeType":"1339","messageId":"1340","endLine":36,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1500","line":37,"column":5,"nodeType":"1339","messageId":"1340","endLine":37,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1663","line":39,"column":8,"nodeType":"1339","messageId":"1340","endLine":39,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1545","line":119,"column":37,"nodeType":"1376","endLine":124,"endColumn":38},{"ruleId":"1461","severity":1,"message":"1545","line":137,"column":37,"nodeType":"1376","endLine":153,"endColumn":38},{"ruleId":"1380","severity":1,"message":"1381","line":187,"column":39,"nodeType":"1351","messageId":"1382","endLine":187,"endColumn":41},{"ruleId":"1349","severity":1,"message":"1664","line":193,"column":8,"nodeType":"1354","endLine":193,"endColumn":10,"suggestions":"1665"},{"ruleId":"1337","severity":1,"message":"1437","line":5,"column":8,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1433","line":8,"column":8,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1391","line":11,"column":8,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":16},{"ruleId":"1349","severity":1,"message":"1654","line":29,"column":8,"nodeType":"1354","endLine":29,"endColumn":19,"suggestions":"1666"},{"ruleId":"1505","severity":1,"message":"1506","line":37,"column":25,"nodeType":"1385","messageId":"1507","endLine":37,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1470","line":2,"column":8,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1451","line":4,"column":26,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1526","line":4,"column":31,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1369","line":4,"column":38,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":44},{"ruleId":"1337","severity":1,"message":"1390","line":4,"column":46,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":50},{"ruleId":"1337","severity":1,"message":"1667","line":5,"column":8,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":24},{"ruleId":"1337","severity":1,"message":"1668","line":9,"column":12,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1669","line":9,"column":22,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":33},{"ruleId":"1349","severity":1,"message":"1350","line":10,"column":15,"nodeType":"1351","endLine":27,"endColumn":6},{"ruleId":"1349","severity":1,"message":"1670","line":27,"column":8,"nodeType":"1354","endLine":27,"endColumn":10,"suggestions":"1671"},{"ruleId":"1374","severity":1,"message":"1375","line":45,"column":29,"nodeType":"1376","endLine":45,"endColumn":128},{"ruleId":"1374","severity":1,"message":"1375","line":62,"column":29,"nodeType":"1376","endLine":62,"endColumn":135},{"ruleId":"1337","severity":1,"message":"1624","line":6,"column":10,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1625","line":8,"column":10,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1450","line":11,"column":9,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1526","line":2,"column":31,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1369","line":2,"column":38,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":44},{"ruleId":"1337","severity":1,"message":"1390","line":2,"column":46,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":50},{"ruleId":"1337","severity":1,"message":"1672","line":3,"column":10,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":19},{"ruleId":"1349","severity":1,"message":"1673","line":34,"column":6,"nodeType":"1354","endLine":34,"endColumn":18,"suggestions":"1674"},{"ruleId":"1337","severity":1,"message":"1367","line":4,"column":3,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1468","line":7,"column":3,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":8},{"ruleId":"1337","severity":1,"message":"1470","line":9,"column":8,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1675","line":17,"column":8,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1676","line":29,"column":9,"nodeType":"1339","messageId":"1340","endLine":29,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1409","line":36,"column":11,"nodeType":"1339","messageId":"1340","endLine":36,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1410","line":36,"column":25,"nodeType":"1339","messageId":"1340","endLine":36,"endColumn":38},{"ruleId":"1337","severity":1,"message":"1411","line":36,"column":40,"nodeType":"1339","messageId":"1340","endLine":36,"endColumn":52},{"ruleId":"1337","severity":1,"message":"1614","line":41,"column":10,"nodeType":"1339","messageId":"1340","endLine":41,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1615","line":41,"column":21,"nodeType":"1339","messageId":"1340","endLine":41,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1677","line":42,"column":10,"nodeType":"1339","messageId":"1340","endLine":42,"endColumn":13},{"ruleId":"1349","severity":1,"message":"1678","line":56,"column":6,"nodeType":"1354","endLine":60,"endColumn":4,"suggestions":"1679"},{"ruleId":"1349","severity":1,"message":"1680","line":57,"column":5,"nodeType":"1681","endLine":59,"endColumn":11},{"ruleId":"1520","severity":1,"message":"1521","line":70,"column":13,"nodeType":"1522","endLine":70,"endColumn":31},{"ruleId":"1337","severity":1,"message":"1363","line":6,"column":3,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":7},{"ruleId":"1337","severity":1,"message":"1364","line":7,"column":3,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":11},{"ruleId":"1337","severity":1,"message":"1434","line":8,"column":3,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1365","line":9,"column":3,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1682","line":11,"column":8,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1469","line":1,"column":17,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":25},{"ruleId":"1337","severity":1,"message":"1683","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1684","line":4,"column":8,"nodeType":"1339","messageId":"1340","endLine":4,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1685","line":5,"column":8,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1686","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1687","line":25,"column":10,"nodeType":"1339","messageId":"1340","endLine":25,"endColumn":24},{"ruleId":"1337","severity":1,"message":"1676","line":39,"column":9,"nodeType":"1339","messageId":"1340","endLine":39,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1688","line":41,"column":9,"nodeType":"1339","messageId":"1340","endLine":41,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1689","line":5,"column":16,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1529","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1690","line":10,"column":8,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1363","line":13,"column":8,"nodeType":"1339","messageId":"1340","endLine":13,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1364","line":14,"column":8,"nodeType":"1339","messageId":"1340","endLine":14,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1365","line":15,"column":8,"nodeType":"1339","messageId":"1340","endLine":15,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1438","line":16,"column":8,"nodeType":"1339","messageId":"1340","endLine":16,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1433","line":17,"column":8,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1691","line":18,"column":8,"nodeType":"1339","messageId":"1340","endLine":18,"endColumn":33},{"ruleId":"1337","severity":1,"message":"1531","line":20,"column":10,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1532","line":20,"column":22,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":30},{"ruleId":"1337","severity":1,"message":"1533","line":20,"column":32,"nodeType":"1339","messageId":"1340","endLine":20,"endColumn":47},{"ruleId":"1337","severity":1,"message":"1511","line":22,"column":5,"nodeType":"1339","messageId":"1340","endLine":22,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1512","line":23,"column":5,"nodeType":"1339","messageId":"1340","endLine":23,"endColumn":8},{"ruleId":"1337","severity":1,"message":"1369","line":24,"column":5,"nodeType":"1339","messageId":"1340","endLine":24,"endColumn":11},{"ruleId":"1337","severity":1,"message":"1692","line":25,"column":5,"nodeType":"1339","messageId":"1340","endLine":25,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1528","line":26,"column":5,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":9},{"ruleId":"1337","severity":1,"message":"1527","line":27,"column":5,"nodeType":"1339","messageId":"1340","endLine":27,"endColumn":8},{"ruleId":"1337","severity":1,"message":"1451","line":28,"column":5,"nodeType":"1339","messageId":"1340","endLine":28,"endColumn":8},{"ruleId":"1337","severity":1,"message":"1693","line":29,"column":5,"nodeType":"1339","messageId":"1340","endLine":29,"endColumn":12},{"ruleId":"1337","severity":1,"message":"1499","line":31,"column":10,"nodeType":"1339","messageId":"1340","endLine":31,"endColumn":34},{"ruleId":"1337","severity":1,"message":"1514","line":34,"column":10,"nodeType":"1339","messageId":"1340","endLine":34,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1676","line":45,"column":11,"nodeType":"1339","messageId":"1340","endLine":45,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1694","line":52,"column":9,"nodeType":"1339","messageId":"1340","endLine":52,"endColumn":18},{"ruleId":"1349","severity":1,"message":"1350","line":61,"column":15,"nodeType":"1351","endLine":68,"endColumn":6},{"ruleId":"1349","severity":1,"message":"1536","line":62,"column":21,"nodeType":"1537","endLine":62,"endColumn":75},{"ruleId":"1337","severity":1,"message":"1542","line":116,"column":17,"nodeType":"1339","messageId":"1340","endLine":116,"endColumn":23},{"ruleId":"1380","severity":1,"message":"1381","line":130,"column":26,"nodeType":"1351","messageId":"1382","endLine":130,"endColumn":28},{"ruleId":"1380","severity":1,"message":"1695","line":156,"column":46,"nodeType":"1351","messageId":"1696","endLine":156,"endColumn":48},{"ruleId":"1337","severity":1,"message":"1697","line":171,"column":13,"nodeType":"1339","messageId":"1340","endLine":171,"endColumn":21},{"ruleId":"1374","severity":1,"message":"1375","line":243,"column":13,"nodeType":"1376","endLine":243,"endColumn":58},{"ruleId":"1337","severity":1,"message":"1435","line":2,"column":16,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1698","line":5,"column":8,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1699","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1700","line":8,"column":8,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":28},{"ruleId":"1337","severity":1,"message":"1701","line":9,"column":8,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1614","line":21,"column":10,"nodeType":"1339","messageId":"1340","endLine":21,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1615","line":21,"column":21,"nodeType":"1339","messageId":"1340","endLine":21,"endColumn":36},{"ruleId":"1349","severity":1,"message":"1350","line":23,"column":13,"nodeType":"1351","endLine":28,"endColumn":4},{"ruleId":"1337","severity":1,"message":"1702","line":25,"column":9,"nodeType":"1339","messageId":"1340","endLine":25,"endColumn":16},{"ruleId":"1374","severity":1,"message":"1375","line":32,"column":12,"nodeType":"1376","endLine":32,"endColumn":50},{"ruleId":"1374","severity":1,"message":"1375","line":62,"column":100,"nodeType":"1376","endLine":72,"endColumn":13},{"ruleId":"1505","severity":1,"message":"1621","line":67,"column":25,"nodeType":"1385","messageId":"1507","endLine":67,"endColumn":27},{"ruleId":"1505","severity":1,"message":"1621","line":67,"column":44,"nodeType":"1385","messageId":"1507","endLine":67,"endColumn":46},{"ruleId":"1505","severity":1,"message":"1621","line":82,"column":27,"nodeType":"1385","messageId":"1507","endLine":82,"endColumn":29},{"ruleId":"1505","severity":1,"message":"1621","line":82,"column":46,"nodeType":"1385","messageId":"1507","endLine":82,"endColumn":48},{"ruleId":"1505","severity":1,"message":"1621","line":120,"column":31,"nodeType":"1385","messageId":"1507","endLine":120,"endColumn":33},{"ruleId":"1505","severity":1,"message":"1621","line":120,"column":50,"nodeType":"1385","messageId":"1507","endLine":120,"endColumn":52},{"ruleId":"1337","severity":1,"message":"1698","line":5,"column":8,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1699","line":6,"column":8,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":20},{"ruleId":"1349","severity":1,"message":"1350","line":16,"column":13,"nodeType":"1351","endLine":19,"endColumn":4},{"ruleId":"1374","severity":1,"message":"1375","line":23,"column":12,"nodeType":"1376","endLine":23,"endColumn":50},{"ruleId":"1374","severity":1,"message":"1375","line":46,"column":100,"nodeType":"1376","endLine":52,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1434","line":6,"column":3,"nodeType":"1339","messageId":"1340","endLine":6,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1365","line":7,"column":3,"nodeType":"1339","messageId":"1340","endLine":7,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1433","line":10,"column":3,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":9},{"ruleId":"1337","severity":1,"message":"1470","line":14,"column":8,"nodeType":"1339","messageId":"1340","endLine":14,"endColumn":18},{"ruleId":"1349","severity":1,"message":"1661","line":75,"column":6,"nodeType":"1354","endLine":75,"endColumn":8,"suggestions":"1703"},{"ruleId":"1337","severity":1,"message":"1411","line":76,"column":40,"nodeType":"1339","messageId":"1340","endLine":76,"endColumn":52},{"ruleId":"1337","severity":1,"message":"1704","line":81,"column":10,"nodeType":"1339","messageId":"1340","endLine":81,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1705","line":81,"column":21,"nodeType":"1339","messageId":"1340","endLine":81,"endColumn":33},{"ruleId":"1337","severity":1,"message":"1706","line":83,"column":12,"nodeType":"1339","messageId":"1340","endLine":83,"endColumn":29},{"ruleId":"1374","severity":1,"message":"1375","line":98,"column":9,"nodeType":"1376","endLine":108,"endColumn":11},{"ruleId":"1337","severity":1,"message":"1707","line":164,"column":23,"nodeType":"1339","messageId":"1340","endLine":164,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1469","line":1,"column":17,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":25},{"ruleId":"1349","severity":1,"message":"1661","line":28,"column":6,"nodeType":"1354","endLine":28,"endColumn":8,"suggestions":"1708"},{"ruleId":"1337","severity":1,"message":"1411","line":30,"column":40,"nodeType":"1339","messageId":"1340","endLine":30,"endColumn":52},{"ruleId":"1374","severity":1,"message":"1375","line":44,"column":11,"nodeType":"1376","endLine":44,"endColumn":50},{"ruleId":"1374","severity":1,"message":"1375","line":48,"column":9,"nodeType":"1376","endLine":48,"endColumn":50},{"ruleId":"1337","severity":1,"message":"1367","line":5,"column":3,"nodeType":"1339","messageId":"1340","endLine":5,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1689","line":8,"column":3,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":9},{"ruleId":"1337","severity":1,"message":"1435","line":10,"column":3,"nodeType":"1339","messageId":"1340","endLine":10,"endColumn":8},{"ruleId":"1337","severity":1,"message":"1369","line":12,"column":3,"nodeType":"1339","messageId":"1340","endLine":12,"endColumn":9},{"ruleId":"1337","severity":1,"message":"1709","line":17,"column":8,"nodeType":"1339","messageId":"1340","endLine":17,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1710","line":18,"column":8,"nodeType":"1339","messageId":"1340","endLine":18,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1711","line":19,"column":8,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":17},{"ruleId":"1337","severity":1,"message":"1712","line":22,"column":8,"nodeType":"1339","messageId":"1340","endLine":22,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1713","line":23,"column":8,"nodeType":"1339","messageId":"1340","endLine":23,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1714","line":24,"column":8,"nodeType":"1339","messageId":"1340","endLine":24,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1715","line":26,"column":8,"nodeType":"1339","messageId":"1340","endLine":26,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1716","line":27,"column":10,"nodeType":"1339","messageId":"1340","endLine":27,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1717","line":28,"column":10,"nodeType":"1339","messageId":"1340","endLine":28,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1718","line":30,"column":8,"nodeType":"1339","messageId":"1340","endLine":30,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1719","line":45,"column":22,"nodeType":"1339","messageId":"1340","endLine":45,"endColumn":35},{"ruleId":"1337","severity":1,"message":"1720","line":51,"column":10,"nodeType":"1339","messageId":"1340","endLine":51,"endColumn":24},{"ruleId":"1337","severity":1,"message":"1721","line":51,"column":26,"nodeType":"1339","messageId":"1340","endLine":51,"endColumn":44},{"ruleId":"1337","severity":1,"message":"1722","line":52,"column":10,"nodeType":"1339","messageId":"1340","endLine":52,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1723","line":52,"column":24,"nodeType":"1339","messageId":"1340","endLine":52,"endColumn":39},{"ruleId":"1337","severity":1,"message":"1724","line":53,"column":10,"nodeType":"1339","messageId":"1340","endLine":53,"endColumn":22},{"ruleId":"1337","severity":1,"message":"1725","line":53,"column":24,"nodeType":"1339","messageId":"1340","endLine":53,"endColumn":39},{"ruleId":"1337","severity":1,"message":"1726","line":54,"column":10,"nodeType":"1339","messageId":"1340","endLine":54,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1727","line":54,"column":16,"nodeType":"1339","messageId":"1340","endLine":54,"endColumn":23},{"ruleId":"1337","severity":1,"message":"1728","line":57,"column":10,"nodeType":"1339","messageId":"1340","endLine":57,"endColumn":17},{"ruleId":"1349","severity":1,"message":"1729","line":62,"column":6,"nodeType":"1354","endLine":62,"endColumn":8,"suggestions":"1730"},{"ruleId":"1731","severity":1,"message":"1732","line":79,"column":13,"nodeType":"1733","messageId":"1734","endLine":79,"endColumn":30},{"ruleId":"1349","severity":1,"message":"1735","line":91,"column":6,"nodeType":"1354","endLine":91,"endColumn":27,"suggestions":"1736"},{"ruleId":"1337","severity":1,"message":"1737","line":93,"column":7,"nodeType":"1339","messageId":"1340","endLine":93,"endColumn":11},{"ruleId":"1337","severity":1,"message":"1738","line":97,"column":7,"nodeType":"1339","messageId":"1340","endLine":97,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1739","line":99,"column":7,"nodeType":"1339","messageId":"1340","endLine":99,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1740","line":100,"column":7,"nodeType":"1339","messageId":"1340","endLine":100,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1741","line":101,"column":7,"nodeType":"1339","messageId":"1340","endLine":101,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1742","line":104,"column":7,"nodeType":"1339","messageId":"1340","endLine":104,"endColumn":13},{"ruleId":"1337","severity":1,"message":"1743","line":108,"column":9,"nodeType":"1339","messageId":"1340","endLine":108,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1744","line":123,"column":11,"nodeType":"1339","messageId":"1340","endLine":123,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1450","line":147,"column":9,"nodeType":"1339","messageId":"1340","endLine":147,"endColumn":17},{"ruleId":"1374","severity":1,"message":"1375","line":162,"column":13,"nodeType":"1376","endLine":170,"endColumn":15},{"ruleId":"1374","severity":1,"message":"1375","line":177,"column":13,"nodeType":"1376","endLine":191,"endColumn":15},{"ruleId":"1520","severity":1,"message":"1521","line":351,"column":11,"nodeType":"1522","endLine":353,"endColumn":13},{"ruleId":"1520","severity":1,"message":"1521","line":362,"column":11,"nodeType":"1522","endLine":362,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1451","line":9,"column":5,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":8},{"ruleId":"1349","severity":1,"message":"1350","line":20,"column":15,"nodeType":"1351","endLine":24,"endColumn":6},{"ruleId":"1349","severity":1,"message":"1745","line":24,"column":8,"nodeType":"1354","endLine":24,"endColumn":28,"suggestions":"1746"},{"ruleId":"1337","severity":1,"message":"1747","line":43,"column":13,"nodeType":"1339","messageId":"1340","endLine":43,"endColumn":25},{"ruleId":"1520","severity":1,"message":"1521","line":116,"column":37,"nodeType":"1522","endLine":116,"endColumn":95},{"ruleId":"1520","severity":1,"message":"1521","line":145,"column":25,"nodeType":"1522","endLine":145,"endColumn":106},{"ruleId":"1505","severity":1,"message":"1621","line":145,"column":58,"nodeType":"1385","messageId":"1507","endLine":145,"endColumn":60},{"ruleId":"1505","severity":1,"message":"1621","line":173,"column":40,"nodeType":"1385","messageId":"1507","endLine":173,"endColumn":42},{"ruleId":"1349","severity":1,"message":"1748","line":34,"column":6,"nodeType":"1354","endLine":34,"endColumn":12,"suggestions":"1749"},{"ruleId":"1337","severity":1,"message":"1750","line":8,"column":21,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":32},{"ruleId":"1337","severity":1,"message":"1643","line":24,"column":9,"nodeType":"1339","messageId":"1340","endLine":24,"endColumn":15},{"ruleId":"1349","severity":1,"message":"1751","line":28,"column":16,"nodeType":"1354","endLine":28,"endColumn":18},{"ruleId":"1349","severity":1,"message":"1752","line":29,"column":16,"nodeType":"1354","endLine":29,"endColumn":18},{"ruleId":"1753","severity":1,"message":"1754","line":36,"column":48,"nodeType":"1351","messageId":"1755","endLine":39,"endColumn":10},{"ruleId":"1337","severity":1,"message":"1411","line":55,"column":40,"nodeType":"1339","messageId":"1340","endLine":55,"endColumn":52},{"ruleId":"1374","severity":1,"message":"1375","line":70,"column":11,"nodeType":"1376","endLine":70,"endColumn":61},{"ruleId":"1374","severity":1,"message":"1375","line":85,"column":17,"nodeType":"1376","endLine":85,"endColumn":67},{"ruleId":"1337","severity":1,"message":"1756","line":19,"column":10,"nodeType":"1339","messageId":"1340","endLine":19,"endColumn":24},{"ruleId":"1349","severity":1,"message":"1757","line":233,"column":6,"nodeType":"1354","endLine":233,"endColumn":8,"suggestions":"1758"},{"ruleId":"1349","severity":1,"message":"1759","line":276,"column":6,"nodeType":"1354","endLine":276,"endColumn":8,"suggestions":"1760"},{"ruleId":"1761","severity":1,"message":"1762","line":296,"column":7,"nodeType":"1376","endLine":296,"endColumn":11},{"ruleId":"1520","severity":1,"message":"1521","line":314,"column":9,"nodeType":"1522","endLine":314,"endColumn":41},{"ruleId":"1337","severity":1,"message":"1717","line":1,"column":10,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":18},{"ruleId":"1337","severity":1,"message":"1763","line":8,"column":21,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":32},{"ruleId":"1337","severity":1,"message":"1764","line":53,"column":9,"nodeType":"1339","messageId":"1340","endLine":53,"endColumn":16},{"ruleId":"1337","severity":1,"message":"1411","line":73,"column":40,"nodeType":"1339","messageId":"1340","endLine":73,"endColumn":52},{"ruleId":"1374","severity":1,"message":"1375","line":155,"column":21,"nodeType":"1376","endLine":158,"endColumn":23},{"ruleId":"1374","severity":1,"message":"1375","line":174,"column":17,"nodeType":"1376","endLine":177,"endColumn":19},{"ruleId":"1374","severity":1,"message":"1375","line":297,"column":17,"nodeType":"1376","endLine":301,"endColumn":19},{"ruleId":"1520","severity":1,"message":"1521","line":300,"column":19,"nodeType":"1522","endLine":300,"endColumn":36},{"ruleId":"1374","severity":1,"message":"1375","line":306,"column":15,"nodeType":"1376","endLine":306,"endColumn":63},{"ruleId":"1337","severity":1,"message":"1432","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":38},{"ruleId":"1337","severity":1,"message":"1487","line":2,"column":10,"nodeType":"1339","messageId":"1340","endLine":2,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1765","line":3,"column":8,"nodeType":"1339","messageId":"1340","endLine":3,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1766","line":8,"column":8,"nodeType":"1339","messageId":"1340","endLine":8,"endColumn":29},{"ruleId":"1337","severity":1,"message":"1767","line":9,"column":8,"nodeType":"1339","messageId":"1340","endLine":9,"endColumn":24},{"ruleId":"1337","severity":1,"message":"1557","line":37,"column":10,"nodeType":"1339","messageId":"1340","endLine":37,"endColumn":17},{"ruleId":"1505","severity":1,"message":"1621","line":263,"column":12,"nodeType":"1385","messageId":"1507","endLine":263,"endColumn":14},{"ruleId":"1337","severity":1,"message":"1510","line":1,"column":27,"nodeType":"1339","messageId":"1340","endLine":1,"endColumn":36},{"ruleId":"1337","severity":1,"message":"1587","line":11,"column":8,"nodeType":"1339","messageId":"1340","endLine":11,"endColumn":15},{"ruleId":"1374","severity":1,"message":"1375","line":21,"column":15,"nodeType":"1376","endLine":21,"endColumn":33},{"ruleId":"1520","severity":1,"message":"1521","line":99,"column":15,"nodeType":"1522","endLine":99,"endColumn":50},{"ruleId":"1520","severity":1,"message":"1521","line":114,"column":19,"nodeType":"1522","endLine":114,"endColumn":54},{"ruleId":"1520","severity":1,"message":"1521","line":130,"column":19,"nodeType":"1522","endLine":130,"endColumn":54},{"ruleId":"1333","replacedBy":"1768"},{"ruleId":"1335","replacedBy":"1769"},"no-native-reassign",["1770"],"no-negated-in-lhs",["1771"],"no-unused-vars","'MobileAuth' is defined but never used.","Identifier","unusedVar","'Landingpage' is defined but never used.","'Notification' is defined but never used.","'EventDone' is defined but never used.","'AlertNotif' is defined but never used.","'EnterCode' is defined but never used.","'Blankpages' is defined but never used.","'InvitaionMain' is defined but never used.","'FD' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1772"],["1773"],"'Auth' is assigned a value but never used.",["1774"],"'getposts' is defined but never used.","React Hook useEffect has missing dependencies: 'CodeEvent.Code', 'CodeEvent.Name', 'dispatch', and 'props.location.pathname'. Either include them or remove the dependency array.",["1775"],["1776"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'Button' is defined but never used.","'setmaincode' is assigned a value but never used.","'mode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Name', 'maincode', and 'props.match.params.id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setcodesharelink' needs the current value of 'maincode'.",["1777"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CreateEventForm' is assigned a value but never used.","'result' is assigned a value but never used.","'incompleteeventnumber' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'addAnEvent'. Either include it or remove the dependency array.",["1778"],"'Header' is defined but never used.","'Form' is defined but never used.","'UserData' is defined but never used.","'UserDataUrl' is defined but never used.","'IoCameraOutline' is defined but never used.","'FaTag' is defined but never used.","'likepost' is defined but never used.","'InputTags' is defined but never used.","'FcLike' is defined but never used.","'FaRegCommentDots' is defined but never used.","'IoMdSend' is defined but never used.","'FcLikePlaceholder' is defined but never used.","'FeedComments' is defined but never used.","'Badge' is defined but never used.","'Multiselect' is defined but never used.","'SendIcon' is defined but never used.","'IconButton' is defined but never used.","'Posts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getposts', 'guestlist', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1779"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'ParticipantsCPY' is assigned a value but never used.","'Phone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getposts'. Either include it or remove the dependency array.",["1780"],"React Hook useEffect has a missing dependency: 'admins'. Either include it or remove the dependency array.",["1781"],"'CommentAvt' is defined but never used.","'FaUserFriends' is defined but never used.","'eveid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getcomments'. Either include it or remove the dependency array.",["1782"],"Assignments to the 'Eventdata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'base' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'base' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.id'. Either include them or remove the dependency array.",["1783"],"React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.likeby'. Either include them or remove the dependency array. If 'setisliked' needs the current value of 'props.likeby', you can also switch to useReducer instead of useState and read 'props.likeby' in the reducer.",["1784"],"'useCallback' is defined but never used.","'Avatar' is defined but never used.","'ListItemIcon' is defined but never used.","'Paper' is defined but never used.","'InputBase' is defined but never used.","'Divider' is defined but never used.","'ListItemAvatar' is defined but never used.","'AllGroups' is assigned a value but never used.","'windowwidth' is assigned a value but never used.","'IndvName' is assigned a value but never used.","'selectedgrpcpr' is assigned a value but never used.","'chat' is assigned a value but never used.","'check' is defined but never used.","'addme' is defined but never used.","'code' is assigned a value but never used.","'setcode' is assigned a value but never used.","'iserror' is assigned a value but never used.","'setiserror' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'MyEvents', 'dispatch', 'myInvitations', 'props.location.pathname', 'props.match.params.event', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1785"],"'Location' is defined but never used.","'LIKE' is defined but never used.","'RSVP' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'myInvitations', 'props.match.params.Code', and 'props.match.params.maincode'. Either include them or remove the dependency array.",["1786"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.match.params.Code', 'props.match.params.Name', and 'props.match.params.maincode'. Either include them or remove the dependency array.",["1787"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1788"],"'rsvpnumber' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'evno', and 'props'. Either include them or remove the dependency array.",["1789"],"'Modal' is defined but never used.","'useState' is defined but never used.","'CancelIcon' is defined but never used.","'InfoOutlinedIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'Notifications' and 'props'. Either include them or remove the dependency array.",["1790"],"'Card' is defined but never used.","'Figure' is defined but never used.","'images' is assigned a value but never used.","'setimages' is assigned a value but never used.",["1791"],"'eventimg' is defined but never used.","'NavMobile' is defined but never used.","React Hook useEffect has missing dependencies: 'Eventdata1', 'Eventdata2', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array.",["1792"],"'newIndex' is assigned a value but never used.","'IoChevronBackCircleOutline' is defined but never used.","'ImageGallery' is defined but never used.","'useDropzone' is defined but never used.","'SaveIcon' is defined but never used.","'Popup' is defined but never used.","'isUploaded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1793"],"React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["1794"],"'save' is assigned a value but never used.","'CalendarIcon' is defined but never used.","'GrSync' is defined but never used.","'AiFillHome' is defined but never used.","'IoArrowBackCircleOutline' is defined but never used.","'GetInvitations' is defined but never used.","'GetEvents' is defined but never used.","'Toggler' is defined but never used.","React Hook useEffect has a missing dependency: 'Auth.Phone'. Either include it or remove the dependency array.",["1795"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'showicon'. Either include them or remove the dependency array.",["1796"],"'useEffect' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'useDispatch' is defined but never used.","'json' is defined but never used.","'setMarker' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'Location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'panTo' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'Image' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'readXlsxFile' is defined but never used.","'change_event' is defined but never used.","'ReactExcel' is defined but never used.","'readFile' is defined but never used.","'generateObjects' is defined but never used.","'Eventdata' is assigned a value but never used.","'handleShow' is assigned a value but never used.","Assignments to the 'supported' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression","'Status' is assigned a value but never used.","'found' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myInvitations', 'props.location.pathname', 'props.match.params.id', and 'props.match.params.invno'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1797"],"'number' is assigned a value but never used.","'participants' is assigned a value but never used.","'Component' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Events' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'props.location.pathname', 'props.match.params.id', and 'props.match.params.invno'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1798"],"'setoptions' is assigned a value but never used.","'setbase' is assigned a value but never used.","'Rsvplist' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.match.params.eid', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1799"],"'submit' is assigned a value but never used.","'Jitsi' is defined but never used.","'deletefile' is defined but never used.","'isError' is assigned a value but never used.","'isfileChanged' is assigned a value but never used.","'_id' is assigned a value but never used.","'Set_id' is assigned a value but never used.","'datacopy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'grabdata'. Either include it or remove the dependency array.",["1800"],"React Hook useEffect has a missing dependency: 'Eventdata'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setName' needs the current value of 'Eventdata'.",["1801"],"'unuls' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Filetype', 'selectedEvent', and 'uploadfile'. Either include them or remove the dependency array.",["1802"],"'IoImagesSharp' is defined but never used.","no-redeclare","'Host' is already defined.","redeclared","'i' is already defined.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'ishost', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1803"],"'Testimonials' is defined but never used.","'CompanySlide' is defined but never used.","React Hook useEffect has missing dependencies: 'Phone' and 'dispatch'. Either include them or remove the dependency array.",["1804"],"'scroll' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'decoded' is assigned a value but never used.","'EVENTSAVED' is defined but never used.","'EVENTSAVEFAIL' is defined but never used.","'jwt_decode' is defined but never used.","'history' is defined but never used.","'GOTCHATS' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","BreakStatement","'reactLocalStorage' is defined but never used.","'FaWhatsapp' is defined but never used.","'ZoomIcon' is defined but never used.","'useSelector' is defined but never used.","'loginuser' is defined but never used.","'DanceIcon' is defined but never used.","'HappyIcon' is defined but never used.","'FaTwitter' is defined but never used.","'FaInstagram' is defined but never used.","'loader' is assigned a value but never used.","'Autoplay' is defined but never used.","'DancingImg' is defined but never used.",["1805"],"'fileRef' is assigned a value but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.",["1806"],"'Entercode' is defined but never used.","'menu' is assigned a value but never used.","'setMenu' is assigned a value but never used.","'showPopup' is assigned a value but never used.","'toggleShowPopup' is assigned a value but never used.","'axios' is defined but never used.","'url' is defined but never used.","'Logo' is defined but never used.","React Hook useCallback has a missing dependency: 'Auth.Phone'. Either include it or remove the dependency array.",["1807"],"Expected '===' and instead saw '=='.","'handleDropdownStatus' is assigned a value but never used.","'setdatetime' is assigned a value but never used.","'getuserdata' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'props.Phone'. Either include it or remove the dependency array.",["1808"],"'IoChatbubbleEllipsesOutline' is defined but never used.","'GoBook' is defined but never used.","'IoPowerSharp' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.base'. Either include them or remove the dependency array.",["1809"],"'MdEvent' is defined but never used.","'GrGallery' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'BiChevronDown' is defined but never used.","'maincode' is assigned a value but never used.","'seteventcode' is assigned a value but never used.","'ishost' is assigned a value but never used.",["1810"],"'cancel' is assigned a value but never used.","'getChats' is defined but never used.","React Hook useCallback has missing dependencies: 'Auth.Phone' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1811"],"React Hook useEffect has a missing dependency: 'props.SelectedGroup._id'. Either include it or remove the dependency array.",["1812"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1813"],"'ArrowBackIosIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'AllGroups' and 'props.MainCode'. Either include them or remove the dependency array.",["1814"],"React Hook useEffect has a missing dependency: 'props.MainCode'. Either include it or remove the dependency array.",["1815"],"'zoomicon' is defined but never used.","'addpost' is defined but never used.","'uploadString' is defined but never used.","'Media' is defined but never used.","'AddTags' is defined but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1816"],"'CircularProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.LikeList'. Either include them or remove the dependency array.",["1817"],["1818"],"'HorizontalSlider' is defined but never used.","'allmedia' is assigned a value but never used.","'setallmedia' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.currentPosts' and 'props.popuptype'. Either include them or remove the dependency array.",["1819"],"'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setcomments' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.",["1820"],"'ImageSelectionModal' is defined but never used.","'classes' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'seturl' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["1821"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","'FiberManualRecordIcon' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Typography' is defined but never used.","'getStepContent' is defined but never used.","'steps' is assigned a value but never used.","'Switch' is defined but never used.","'EventNameBox' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used.","'ListGroup' is defined but never used.","'Spinner' is defined but never used.","'Eventscpy' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'MainCode' is assigned a value but never used.","'LocationOnIcon' is defined but never used.","'LanguageIcon' is defined but never used.","'NotificationsOffIcon' is defined but never used.","'InfoIcon' is defined but never used.","'datacpy' is assigned a value but never used.",["1822"],"'groupName' is assigned a value but never used.","'setgroupName' is assigned a value but never used.","'filterparticipant' is defined but never used.","'setcreateGroup' is assigned a value but never used.",["1823"],"'Scehedule' is defined but never used.","'Storyimg' is defined but never used.","'Albumsimg' is defined but never used.","'Album' is defined but never used.","'Story' is defined but never used.","'AddSchedule' is defined but never used.","'AddDetails' is defined but never used.","'editform' is defined but never used.","'SAVEFORM' is defined but never used.","'CreateIcon' is defined but never used.","'setProcessing' is assigned a value but never used.","'shedulevisible' is assigned a value but never used.","'SetScheduleVisible' is assigned a value but never used.","'storyvisible' is assigned a value but never used.","'SetStoryVisible' is assigned a value but never used.","'albumvisible' is assigned a value but never used.","'SetAlbumVisible' is assigned a value but never used.","'Link' is assigned a value but never used.","'setLink' is assigned a value but never used.","'address' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'SetCurrentEventDetails' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["1824"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has missing dependencies: 'CurrentEventDetails' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1825"],"'gapi' is assigned a value but never used.","'CLIENT_ID' is assigned a value but never used.","'API_KEY' is assigned a value but never used.","'clientSecret' is assigned a value but never used.","'DISCOVERY_DOCS' is assigned a value but never used.","'SCOPES' is assigned a value but never used.","'currentEvent' is assigned a value but never used.","'EventsCopy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["1826"],"'NexteventKey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'codescpy', 'props.Events', 'props.code.length', and 'usercodecpy'. Either include them or remove the dependency array.",["1827"],"'DELETEALBUM' is defined but never used.","Assignments to the 'bkpalbum' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","Assignments to the 'filetype' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'bkpalbum', 'filetype'.","unsafeRefs","'formatRelative' is defined but never used.","React Hook useEffect has a missing dependency: 'props.CurrentEventDetails.location'. Either include it or remove the dependency array.",["1828"],"React Hook useCallback has a missing dependency: 'props.CurrentEventDetails'. Either include it or remove the dependency array.",["1829"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'DELETESTORY' is defined but never used.","'dataurl' is assigned a value but never used.","'Gallery' is defined but never used.","'LocationOnRoundedIcon' is defined but never used.","'ControlPointIcon' is defined but never used.",["1770"],["1771"],"no-global-assign","no-unsafe-negation",{"desc":"1830","fix":"1831"},{"desc":"1832","fix":"1833"},{"desc":"1830","fix":"1834"},{"desc":"1835","fix":"1836"},{"desc":"1830","fix":"1837"},{"desc":"1838","fix":"1839"},{"desc":"1840","fix":"1841"},{"desc":"1842","fix":"1843"},{"desc":"1844","fix":"1845"},{"desc":"1846","fix":"1847"},{"desc":"1848","fix":"1849"},{"desc":"1850","fix":"1851"},{"desc":"1852","fix":"1853"},{"desc":"1854","fix":"1855"},{"desc":"1856","fix":"1857"},{"desc":"1858","fix":"1859"},{"desc":"1860","fix":"1861"},{"desc":"1862","fix":"1863"},{"desc":"1864","fix":"1865"},{"desc":"1860","fix":"1866"},{"desc":"1867","fix":"1868"},{"desc":"1869","fix":"1870"},{"desc":"1871","fix":"1872"},{"desc":"1873","fix":"1874"},{"desc":"1875","fix":"1876"},{"desc":"1877","fix":"1878"},{"desc":"1879","fix":"1880"},{"desc":"1881","fix":"1882"},{"desc":"1883","fix":"1884"},{"desc":"1885","fix":"1886"},{"desc":"1887","fix":"1888"},{"desc":"1889","fix":"1890"},{"desc":"1891","fix":"1892"},{"desc":"1830","fix":"1893"},{"desc":"1894","fix":"1895"},{"desc":"1896","fix":"1897"},{"desc":"1898","fix":"1899"},{"desc":"1900","fix":"1901"},{"desc":"1873","fix":"1902"},{"desc":"1903","fix":"1904"},{"desc":"1905","fix":"1906"},{"desc":"1907","fix":"1908"},{"desc":"1909","fix":"1910"},{"desc":"1909","fix":"1911"},{"desc":"1912","fix":"1913"},{"desc":"1914","fix":"1915"},{"desc":"1916","fix":"1917"},{"desc":"1918","fix":"1919"},{"desc":"1920","fix":"1921"},{"desc":"1922","fix":"1923"},{"desc":"1912","fix":"1924"},{"desc":"1912","fix":"1925"},{"desc":"1922","fix":"1926"},{"desc":"1927","fix":"1928"},{"desc":"1929","fix":"1930"},{"desc":"1931","fix":"1932"},{"desc":"1933","fix":"1934"},{"desc":"1935","fix":"1936"},"Update the dependencies array to be: [dispatch]",{"range":"1937","text":"1938"},"Update the dependencies array to be: [Auth.isLoggedIn, dispatch]",{"range":"1939","text":"1940"},{"range":"1941","text":"1938"},"Update the dependencies array to be: [CodeEvent.Code, CodeEvent.Name, dispatch, props.location.pathname]",{"range":"1942","text":"1943"},{"range":"1944","text":"1938"},"Update the dependencies array to be: [Auth.Name, maincode, props.match.params.id]",{"range":"1945","text":"1946"},"Update the dependencies array to be: [addAnEvent]",{"range":"1947","text":"1948"},"Update the dependencies array to be: [MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.id]",{"range":"1949","text":"1950"},"Update the dependencies array to be: [Eventdata, getposts]",{"range":"1951","text":"1952"},"Update the dependencies array to be: [admins, filter]",{"range":"1953","text":"1954"},"Update the dependencies array to be: [getcomments]",{"range":"1955","text":"1956"},"Update the dependencies array to be: [Auth.Phone, props.id, props.showcommment]",{"range":"1957","text":"1958"},"Update the dependencies array to be: [Auth.Phone, props.likeby]",{"range":"1959","text":"1960"},"Update the dependencies array to be: [MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.event, props.match.params.id]",{"range":"1961","text":"1962"},"Update the dependencies array to be: [Auth.isLoggedIn, dispatch, myInvitations, props.match.params.Code, props.match.params.maincode]",{"range":"1963","text":"1964"},"Update the dependencies array to be: [dispatch, props.match.params.Code, props.match.params.Name, props.match.params.maincode]",{"range":"1965","text":"1966"},"Update the dependencies array to be: [MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",{"range":"1967","text":"1968"},"Update the dependencies array to be: [Auth.Phone, Eventdata, evno, props]",{"range":"1969","text":"1970"},"Update the dependencies array to be: [Notifications, props]",{"range":"1971","text":"1972"},{"range":"1973","text":"1968"},"Update the dependencies array to be: [Eventdata1, Eventdata2, props.location.pathname, props.match.params.id]",{"range":"1974","text":"1975"},"Update the dependencies array to be: [Auth.Phone, Eventdata, MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",{"range":"1976","text":"1977"},"Update the dependencies array to be: [Eventdata, images]",{"range":"1978","text":"1979"},"Update the dependencies array to be: [Auth.Phone, props.Eventdata]",{"range":"1980","text":"1981"},"Update the dependencies array to be: [Auth.Phone, props.RSVPList, showicon]",{"range":"1982","text":"1983"},"Update the dependencies array to be: [MyEvents, myInvitations, props.location.pathname, props.match.params.id, props.match.params.invno]",{"range":"1984","text":"1985"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.invno, Eventdata, Auth.Phone]",{"range":"1986","text":"1987"},"Update the dependencies array to be: [MyEvents, dispatch, props.match.params.eid, props.match.params.id]",{"range":"1988","text":"1989"},"Update the dependencies array to be: [grabdata]",{"range":"1990","text":"1991"},"Update the dependencies array to be: [Eventdata, selectedEvent]",{"range":"1992","text":"1993"},"Update the dependencies array to be: [Filetype, Fileurl, selectedEvent, uploadfile]",{"range":"1994","text":"1995"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Eventdata, Auth.Phone, ishost]",{"range":"1996","text":"1997"},"Update the dependencies array to be: [Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",{"range":"1998","text":"1999"},{"range":"2000","text":"1938"},"Update the dependencies array to be: [Auth.isExpired, dispatch]",{"range":"2001","text":"2002"},"Update the dependencies array to be: [Auth.Phone]",{"range":"2003","text":"2004"},"Update the dependencies array to be: [props.Phone]",{"range":"2005","text":"2006"},"Update the dependencies array to be: [Auth.Phone, props.Eventdata, props.base]",{"range":"2007","text":"2008"},{"range":"2009","text":"1981"},"Update the dependencies array to be: [Auth.Phone, props]",{"range":"2010","text":"2011"},"Update the dependencies array to be: [props.SelectedGroup._id]",{"range":"2012","text":"2013"},"Update the dependencies array to be: [props.SelectedGroup.chats, props.IsSubmit, props]",{"range":"2014","text":"2015"},"Update the dependencies array to be: [AllGroups, props.MainCode]",{"range":"2016","text":"2017"},{"range":"2018","text":"2017"},"Update the dependencies array to be: [props]",{"range":"2019","text":"2020"},"Update the dependencies array to be: [Auth.Phone, props.LikeList]",{"range":"2021","text":"2022"},"Update the dependencies array to be: [props.MainCode, props.url]",{"range":"2023","text":"2024"},"Update the dependencies array to be: [props.currentPosts, props.popuptype]",{"range":"2025","text":"2026"},"Update the dependencies array to be: [props.data, props.post]",{"range":"2027","text":"2028"},"Update the dependencies array to be: [props.Events, props.SelectedEvent]",{"range":"2029","text":"2030"},{"range":"2031","text":"2020"},{"range":"2032","text":"2020"},{"range":"2033","text":"2030"},"Update the dependencies array to be: [CurrentEventDetails, props, props.SelectedEvent]",{"range":"2034","text":"2035"},"Update the dependencies array to be: [props, props.participants]",{"range":"2036","text":"2037"},"Update the dependencies array to be: [codescpy, props.Events, props.code.length, show, usercodecpy]",{"range":"2038","text":"2039"},"Update the dependencies array to be: [props.CurrentEventDetails.location]",{"range":"2040","text":"2041"},"Update the dependencies array to be: [props.CurrentEventDetails]",{"range":"2042","text":"2043"},[1231,1233],"[dispatch]",[1552,1569],"[Auth.isLoggedIn, dispatch]",[1787,1789],[1500,1502],"[CodeEvent.Code, CodeEvent.Name, dispatch, props.location.pathname]",[1769,1771],[2557,2559],"[Auth.Name, maincode, props.match.params.id]",[7431,7433],"[addAnEvent]",[4385,4410],"[MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.id]",[8149,8160],"[Eventdata, getposts]",[8268,8276],"[admins, filter]",[1990,1992],"[getcomments]",[3648,3668],"[Auth.Phone, props.id, props.showcommment]",[6487,6489],"[Auth.Phone, props.likeby]",[1568,1570],"[MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.event, props.match.params.id]",[2359,2376],"[Auth.isLoggedIn, dispatch, myInvitations, props.match.params.Code, props.match.params.maincode]",[3478,3480],"[dispatch, props.match.params.Code, props.match.params.Name, props.match.params.maincode]",[1529,1554],"[MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",[2408,2419],"[Auth.Phone, Eventdata, evno, props]",[771,773],"[Notifications, props]",[1885,1910],[1612,1614],"[Eventdata1, Eventdata2, props.location.pathname, props.match.params.id]",[4128,4153],"[Auth.Phone, Eventdata, MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",[4644,4655],"[Eventdata, images]",[3533,3550],"[Auth.Phone, props.Eventdata]",[13126,13142],"[Auth.Phone, props.RSVPList, showicon]",[5595,5605],"[MyEvents, myInvitations, props.location.pathname, props.match.params.id, props.match.params.invno]",[4970,4995],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.invno, Eventdata, Auth.Phone]",[4027,4037],"[MyEvents, dispatch, props.match.params.eid, props.match.params.id]",[6089,6091],"[grabdata]",[7907,7922],"[Eventdata, selectedEvent]",[13464,13473],"[Filetype, Fileurl, selectedEvent, uploadfile]",[2444,2469],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Eventdata, Auth.Phone, ishost]",[1667,1700],"[Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",[1531,1533],[1889,1905],"[Auth.isExpired, dispatch]",[1737,1739],"[Auth.Phone]",[909,911],"[props.Phone]",[1239,1256],"[Auth.Phone, props.Eventdata, props.base]",[1392,1409],[2470,2472],"[Auth.Phone, props]",[2870,2872],"[props.SelectedGroup._id]",[2939,2982],"[props.SelectedGroup.chats, props.IsSubmit, props]",[1999,2001],"[AllGroups, props.MainCode]",[2225,2236],[2600,2602],"[props]",[9073,9075],"[Auth.Phone, props.LikeList]",[1078,1089],"[props.MainCode, props.url]",[1175,1177],"[props.currentPosts, props.popuptype]",[1323,1335],"[props.data, props.post]",[1918,2038],"[props.Events, props.SelectedEvent]",[2298,2300],[1020,1022],[2324,2326],[3151,3172],"[CurrentEventDetails, props, props.SelectedEvent]",[703,723],"[props, props.participants]",[1157,1163],"[codescpy, props.Events, props.code.length, show, usercodecpy]",[4241,4243],"[props.CurrentEventDetails.location]",[5443,5445],"[props.CurrentEventDetails]"]