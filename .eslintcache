[{"C:\\Projects\\MobillyInvite\\src\\index.js":"1","C:\\Projects\\MobillyInvite\\src\\serviceWorkerRegistration.js":"2","C:\\Projects\\MobillyInvite\\src\\App.js":"3","C:\\Projects\\MobillyInvite\\src\\reportWebVitals.js":"4","C:\\Projects\\MobillyInvite\\src\\Redux\\store.js":"5","C:\\Projects\\MobillyInvite\\src\\Utils\\Routing.js":"6","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\GuestListFunctions.js":"7","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js":"8","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\TemplateFunctions.js":"9","C:\\Projects\\MobillyInvite\\src\\Components\\Home\\Home.js":"10","C:\\Projects\\MobillyInvite\\src\\Utils\\History.js":"11","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddEvent.js":"12","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\Chat.js":"13","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowSchedule.js":"14","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Feed.js":"15","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitaionviewToggler.js":"16","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowAlbum.js":"17","C:\\Projects\\MobillyInvite\\src\\Components\\Comments\\Coments.js":"18","C:\\Projects\\MobillyInvite\\src\\Components\\jitsi\\Jitsivc.js":"19","C:\\Projects\\MobillyInvite\\src\\Components\\Guest\\ManageGuest.js":"20","C:\\Projects\\MobillyInvite\\src\\Components\\Location Offline\\LocationOffline.js":"21","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowStory.js":"22","C:\\Projects\\MobillyInvite\\src\\Components\\Sidebar\\SidebarMore.js":"23","C:\\Projects\\MobillyInvite\\src\\Components\\Admin\\EventAdmin.js":"24","C:\\Projects\\MobillyInvite\\src\\Components\\EditEvent\\EditEvent.js":"25","C:\\Projects\\MobillyInvite\\src\\Components\\Guest\\Guest.js":"26","C:\\Projects\\MobillyInvite\\src\\Components\\Sidebar\\AdminSidebar.js":"27","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\HomePage.js":"28","C:\\Projects\\MobillyInvite\\src\\Components\\Gift\\Gift.js":"29","C:\\Projects\\MobillyInvite\\src\\Components\\EventCreateAndUpdate\\CreateOrUpdate.js":"30","C:\\Projects\\MobillyInvite\\src\\Components\\Templates\\Templates.js":"31","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddEventSucess.js":"32","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\hoxinvitation.js":"33","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\RSVP\\Rsvp.js":"34","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Terms.js":"35","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\ReducerCombiner.js":"36","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\postfunctions.js":"37","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js":"38","C:\\Projects\\MobillyInvite\\src\\Utils\\Config.js":"39","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\Invitation.js":"40","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js":"41","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js":"42","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\List.js":"43","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\Chatbox.js":"44","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\GuestActions.js":"45","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\TemplateActions.js":"46","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js":"47","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Navbar.js":"48","C:\\Projects\\MobillyInvite\\src\\Components\\Templates\\SingleTemplate.js":"49","C:\\Projects\\MobillyInvite\\src\\Components\\Templates\\TempData.js":"50","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\ChatWidget.js":"51","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\TemplateSlider.js":"52","C:\\Projects\\MobillyInvite\\src\\Components\\Gift\\GiftBanner.js":"53","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\AboutBanner.js":"54","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Additionals.js":"55","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Features.js":"56","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\ContactUs.js":"57","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js":"58","C:\\Projects\\MobillyInvite\\src\\Components\\Plan\\Plan.js":"59","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\EventActions.js":"60","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Testimonials.js":"61","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Footer.js":"62","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\MainBanner.js":"63","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Header\\Header.js":"64","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\FootMenu\\FootMenu.js":"65","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\NavMobile\\NavMobile.js":"66","C:\\Projects\\MobillyInvite\\src\\Components\\Events\\Eventlist.js":"67","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Stepper\\Stepper.js":"68","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js":"69","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\TemplatesReducer.js":"70","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\GuestListReducer.js":"71","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js":"72","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js":"73","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\EventReducer.js":"74","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\CodeEventReducer.js":"75","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\NotificatonReducer.js":"76","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\ChatReducer.js":"77","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\CreateEventFormReducer.js":"78","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\AuthReducer.js":"79","C:\\Projects\\MobillyInvite\\src\\Utils\\Login.js":"80","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\AuthActions.js":"81","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\PostActions.js":"82","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\ChatActions.js":"83","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js":"84","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\CodeAction.js":"85","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Firebase.js":"86","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js":"87","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js":"88","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Popups\\Popup.js":"89","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js":"90","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js":"91","C:\\Projects\\MobillyInvite\\src\\Components\\Auth\\LoginSignup.js":"92","C:\\Projects\\MobillyInvite\\src\\Utils\\FileUpload_Download.js":"93","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\DateFormatter\\Dateformatter.js":"94","C:\\Projects\\MobillyInvite\\src\\Components\\Notifications\\Notification.js":"95","C:\\Projects\\MobillyInvite\\src\\Utils\\Headings.js":"96","C:\\Projects\\MobillyInvite\\src\\Components\\UserPorfile\\UserProfile.js":"97","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\timer\\timer.js":"98","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js":"99","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Maps.js":"100","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CanvasEditor.js":"101","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\SelectParticipant.js":"102","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\NotificationAction.js":"103","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js":"104","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Places.js":"105","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\AddStory.js":"106","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\Addtoalbum.js":"107","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js":"108","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\AddTags.js":"109","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Posts.js":"110","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\AddPost.js":"111","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Media.js":"112","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js":"113","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Schedule.js":"114","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserData.js":"115","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\FeedComments.js":"116"},{"size":918,"mtime":1636271981772,"results":"117","hashOfConfig":"118"},{"size":5266,"mtime":1636271981773,"results":"119","hashOfConfig":"118"},{"size":9210,"mtime":1636271981728,"results":"120","hashOfConfig":"118"},{"size":377,"mtime":1636272030671,"results":"121","hashOfConfig":"118"},{"size":368,"mtime":1636272030671,"results":"122","hashOfConfig":"118"},{"size":1662,"mtime":1636272030675,"results":"123","hashOfConfig":"118"},{"size":706,"mtime":1636272030666,"results":"124","hashOfConfig":"118"},{"size":10113,"mtime":1636294418694,"results":"125","hashOfConfig":"118"},{"size":672,"mtime":1636272030666,"results":"126","hashOfConfig":"118"},{"size":2127,"mtime":1636272030648,"results":"127","hashOfConfig":"118"},{"size":87,"mtime":1636272030674,"results":"128","hashOfConfig":"118"},{"size":9934,"mtime":1636272030618,"results":"129","hashOfConfig":"118"},{"size":6755,"mtime":1636272030628,"results":"130","hashOfConfig":"118"},{"size":2828,"mtime":1636272030654,"results":"131","hashOfConfig":"118"},{"size":13346,"mtime":1636271981755,"results":"132","hashOfConfig":"118"},{"size":2998,"mtime":1636272030652,"results":"133","hashOfConfig":"118"},{"size":14470,"mtime":1636294418692,"results":"134","hashOfConfig":"118"},{"size":7711,"mtime":1636272030630,"results":"135","hashOfConfig":"118"},{"size":647,"mtime":1636272030655,"results":"136","hashOfConfig":"118"},{"size":13234,"mtime":1636294418688,"results":"137","hashOfConfig":"118"},{"size":8419,"mtime":1636271981767,"results":"138","hashOfConfig":"118"},{"size":3525,"mtime":1636271981766,"results":"139","hashOfConfig":"118"},{"size":8897,"mtime":1636271981768,"results":"140","hashOfConfig":"118"},{"size":8678,"mtime":1636294418675,"results":"141","hashOfConfig":"118"},{"size":10259,"mtime":1636294418678,"results":"142","hashOfConfig":"118"},{"size":13507,"mtime":1636294418685,"results":"143","hashOfConfig":"118"},{"size":2632,"mtime":1636272030659,"results":"144","hashOfConfig":"118"},{"size":1260,"mtime":1636271981760,"results":"145","hashOfConfig":"118"},{"size":7479,"mtime":1636271981756,"results":"146","hashOfConfig":"118"},{"size":337,"mtime":1636272030632,"results":"147","hashOfConfig":"118"},{"size":882,"mtime":1636271981769,"results":"148","hashOfConfig":"118"},{"size":12369,"mtime":1636294418670,"results":"149","hashOfConfig":"118"},{"size":11702,"mtime":1636294418709,"results":"150","hashOfConfig":"118"},{"size":6705,"mtime":1636271981765,"results":"151","hashOfConfig":"118"},{"size":8789,"mtime":1636271981761,"results":"152","hashOfConfig":"118"},{"size":681,"mtime":1636272030670,"results":"153","hashOfConfig":"118"},{"size":3025,"mtime":1636271981771,"results":"154","hashOfConfig":"118"},{"size":4203,"mtime":1636271981770,"results":"155","hashOfConfig":"118"},{"size":507,"mtime":1636294342750,"results":"156","hashOfConfig":"118"},{"size":5951,"mtime":1636294418690,"results":"157","hashOfConfig":"118"},{"size":428,"mtime":1636272030666,"results":"158","hashOfConfig":"118"},{"size":1149,"mtime":1636272030665,"results":"159","hashOfConfig":"118"},{"size":6786,"mtime":1636272030629,"results":"160","hashOfConfig":"118"},{"size":9053,"mtime":1636272030629,"results":"161","hashOfConfig":"118"},{"size":35,"mtime":1636272030664,"results":"162","hashOfConfig":"118"},{"size":41,"mtime":1636272030664,"results":"163","hashOfConfig":"118"},{"size":478,"mtime":1636272030665,"results":"164","hashOfConfig":"118"},{"size":721,"mtime":1636271981761,"results":"165","hashOfConfig":"118"},{"size":1581,"mtime":1636271981769,"results":"166","hashOfConfig":"118"},{"size":4179,"mtime":1636271981769,"results":"167","hashOfConfig":"118"},{"size":402,"mtime":1636272030648,"results":"168","hashOfConfig":"118"},{"size":5577,"mtime":1636271981761,"results":"169","hashOfConfig":"118"},{"size":1039,"mtime":1636271981756,"results":"170","hashOfConfig":"118"},{"size":2595,"mtime":1636272030648,"results":"171","hashOfConfig":"118"},{"size":4735,"mtime":1636271981759,"results":"172","hashOfConfig":"118"},{"size":2797,"mtime":1636271981759,"results":"173","hashOfConfig":"118"},{"size":3273,"mtime":1636272030649,"results":"174","hashOfConfig":"118"},{"size":5574,"mtime":1636271981747,"results":"175","hashOfConfig":"118"},{"size":4596,"mtime":1636271981768,"results":"176","hashOfConfig":"118"},{"size":348,"mtime":1636272030663,"results":"177","hashOfConfig":"118"},{"size":6086,"mtime":1636272030650,"results":"178","hashOfConfig":"118"},{"size":1981,"mtime":1636271981760,"results":"179","hashOfConfig":"118"},{"size":8546,"mtime":1636271981760,"results":"180","hashOfConfig":"118"},{"size":7046,"mtime":1636272030641,"results":"181","hashOfConfig":"118"},{"size":2986,"mtime":1636272030641,"results":"182","hashOfConfig":"118"},{"size":4079,"mtime":1636271981758,"results":"183","hashOfConfig":"118"},{"size":2706,"mtime":1636271981753,"results":"184","hashOfConfig":"118"},{"size":1702,"mtime":1636272030622,"results":"185","hashOfConfig":"118"},{"size":13008,"mtime":1636294418732,"results":"186","hashOfConfig":"118"},{"size":692,"mtime":1636272030670,"results":"187","hashOfConfig":"118"},{"size":689,"mtime":1636272030668,"results":"188","hashOfConfig":"118"},{"size":1050,"mtime":1636272030637,"results":"189","hashOfConfig":"118"},{"size":1172,"mtime":1636272030640,"results":"190","hashOfConfig":"118"},{"size":3021,"mtime":1636272030668,"results":"191","hashOfConfig":"118"},{"size":403,"mtime":1636272030667,"results":"192","hashOfConfig":"118"},{"size":270,"mtime":1636272030669,"results":"193","hashOfConfig":"118"},{"size":698,"mtime":1636272030667,"results":"194","hashOfConfig":"118"},{"size":509,"mtime":1636272030668,"results":"195","hashOfConfig":"118"},{"size":2246,"mtime":1636272030667,"results":"196","hashOfConfig":"118"},{"size":316,"mtime":1636272030674,"results":"197","hashOfConfig":"118"},{"size":271,"mtime":1636272030662,"results":"198","hashOfConfig":"118"},{"size":35,"mtime":1636272030664,"results":"199","hashOfConfig":"118"},{"size":116,"mtime":1636272030662,"results":"200","hashOfConfig":"118"},{"size":1636,"mtime":1636272030647,"results":"201","hashOfConfig":"118"},{"size":98,"mtime":1636272030663,"results":"202","hashOfConfig":"118"},{"size":430,"mtime":1636272030649,"results":"203","hashOfConfig":"118"},{"size":1194,"mtime":1636272030621,"results":"204","hashOfConfig":"118"},{"size":26212,"mtime":1636294418673,"results":"205","hashOfConfig":"118"},{"size":1291,"mtime":1636272030645,"results":"206","hashOfConfig":"118"},{"size":7142,"mtime":1636272030618,"results":"207","hashOfConfig":"118"},{"size":3540,"mtime":1636271981745,"results":"208","hashOfConfig":"118"},{"size":6450,"mtime":1636271981752,"results":"209","hashOfConfig":"118"},{"size":1761,"mtime":1636272030673,"results":"210","hashOfConfig":"118"},{"size":1038,"mtime":1636272030638,"results":"211","hashOfConfig":"118"},{"size":1826,"mtime":1636272030656,"results":"212","hashOfConfig":"118"},{"size":698,"mtime":1636272030674,"results":"213","hashOfConfig":"118"},{"size":5533,"mtime":1636294418693,"results":"214","hashOfConfig":"118"},{"size":560,"mtime":1636272030646,"results":"215","hashOfConfig":"118"},{"size":6003,"mtime":1636294462615,"results":"216","hashOfConfig":"118"},{"size":9509,"mtime":1636271981758,"results":"217","hashOfConfig":"118"},{"size":5822,"mtime":1636271981746,"results":"218","hashOfConfig":"118"},{"size":6836,"mtime":1636272030630,"results":"219","hashOfConfig":"118"},{"size":53,"mtime":1636272030664,"results":"220","hashOfConfig":"118"},{"size":5018,"mtime":1636294418690,"results":"221","hashOfConfig":"118"},{"size":2752,"mtime":1636272030642,"results":"222","hashOfConfig":"118"},{"size":18735,"mtime":1636271981762,"results":"223","hashOfConfig":"118"},{"size":7446,"mtime":1636272030651,"results":"224","hashOfConfig":"118"},{"size":20031,"mtime":1636301732193,"results":"225","hashOfConfig":"118"},{"size":2880,"mtime":1636271981754,"results":"226","hashOfConfig":"118"},{"size":10403,"mtime":1636294418684,"results":"227","hashOfConfig":"118"},{"size":5844,"mtime":1636294418679,"results":"228","hashOfConfig":"118"},{"size":5686,"mtime":1636294418681,"results":"229","hashOfConfig":"118"},{"size":3897,"mtime":1636271981764,"results":"230","hashOfConfig":"118"},{"size":17723,"mtime":1636271981749,"results":"231","hashOfConfig":"118"},{"size":1513,"mtime":1636272030647,"results":"232","hashOfConfig":"118"},{"size":3068,"mtime":1636272030635,"results":"233","hashOfConfig":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},"16pisjl",{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"236"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"236"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"236"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"236"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"236"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"236"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"236"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"236"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"236"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"236"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"236"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"236"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"236"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"236"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"236"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"236"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"236"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"236"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"236"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"236"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"236"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"236"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"236"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"236"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"236"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"236"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"236"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"236"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"236"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"236"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"236"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"236"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"236"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"236"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"236"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"236"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"236"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"236"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"236"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"236"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"236"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"236"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"236"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"236"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"236"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"236"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"236"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"236"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"236"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"236"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"236"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"236"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"236"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"236"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"236"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"236"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"236"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"236"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"236"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"236"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"236"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"236"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"236"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"236"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"236"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"236"},"C:\\Projects\\MobillyInvite\\src\\index.js",[],["533","534"],"C:\\Projects\\MobillyInvite\\src\\serviceWorkerRegistration.js",[],"C:\\Projects\\MobillyInvite\\src\\App.js",["535","536"],"import \"./App.css\";\r\nimport \"./Colors.css\";\r\nimport \"./Responsive.css\";\r\nimport \"./Scrollbar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"react-modal-video/css/modal-video.min.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactGa from \"react-ga\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport Redirector from \"./Utils/Routing\";\r\nimport history from \"./Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport AddEvent from \"./Components/AddEvent/AddEvent\";\r\nimport Rsvp from \"./Components/Invitations/RSVP/Rsvp\";\r\nimport AddEventSucess from \"./Components/AddEvent/AddEventSucess\";\r\nimport Chat from \"./Components/Chat/Chat\";\r\nimport Feed from \"./Components/Feed/Feed\";\r\nimport Comment from \"./Components/Comments/Coments\";\r\nimport ShowSchedule from \"./Components/Invitations/ShowSchedule\";\r\nimport InvitaionviewToggler from \"./Components/Invitations/InvitaionviewToggler\";\r\nimport Locationofline from \"./Components/Location Offline/LocationOffline\";\r\nimport Jitsi from \"./Components/jitsi/Jitsivc\";\r\nimport GuestList from \"./Components/Guest/Guest\";\r\nimport Hoxinvitation from \"./Components/Invitations/hoxinvitation\";\r\nimport SidebarMore from \"./Components/Sidebar/SidebarMore\";\r\nimport AdminSidebar from \"./Components/Sidebar/AdminSidebar\";\r\nimport EventAdmin from \"./Components/Admin/EventAdmin\";\r\nimport ManageGuest from \"./Components/Guest/ManageGuest\";\r\nimport EditEvent from \"./Components/EditEvent/EditEvent\";\r\nimport HomePage from \"./Components/HomePage/HomePage\";\r\nimport ShowStory from \"./Components/Invitations/ShowStory\";\r\nimport ShowAlbum from \"./Components/Invitations/ShowAlbum\";\r\nimport Gift from \"./Components/Gift/Gift\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"./Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { gettemplate } from \"./Redux/DispatchFuncitons/TemplateFunctions\";\r\nimport CreateOrUpdate from \"./Components/EventCreateAndUpdate/CreateOrUpdate\";\r\nimport { getlist } from \"./Redux/DispatchFuncitons/GuestListFunctions\";\r\nimport Templates from \"./Components/Templates/Templates\";\r\nimport Terms from \"./Components/HomePage/Terms\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [loop, setloop] = useState();\r\n\r\n  const Auth = useSelector((state) => state.Auth);\r\n  useEffect(() => {\r\n    ReactGa.initialize(\"UA-201872924-1\");\r\n    ReactGa.pageview(window.location.pathname + window.location.search);\r\n  }, []);\r\n  let interval;\r\n  useEffect(async () => {\r\n    dispatch(gettemplate());\r\n    if (Auth.isLoggedIn === true) {\r\n      dispatch(gettemplate());\r\n      interval = setInterval(() => {\r\n        dispatch(GetEvents());\r\n        dispatch(GetInvitations());\r\n        dispatch(getlist());\r\n      }, 10000);\r\n      await setloop(interval);\r\n    } else {\r\n      await clearInterval(loop);\r\n      await setloop();\r\n    }\r\n  }, [Auth.isLoggedIn]);\r\n\r\n  if (Auth.isLoggedIn === false) {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode/:Code\"\r\n              component={Hoxinvitation}\r\n            />\r\n\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/templates\" component={Templates} />\r\n            <Route exact path=\"/terms\" component={Terms} />\r\n            <Route exact path=\"/*\" component={Redirector} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  } else {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            {/* <Route\r\n              exact\r\n              path=\"/Profile\"\r\n              component={UserProfile}\r\n            /> */}\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode/:Code\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route exact path=\"/MyEvents/eventpage/chat/:id\" component={Chat} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/GuestList/:id/:invno\"\r\n              component={GuestList}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Manage-GuestList/:id/:invno\"\r\n              component={ManageGuest}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Manage-Event/:id/:invno\"\r\n              component={EditEvent}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Admin/:id/:eid\"\r\n              component={EventAdmin}\r\n            />\r\n\r\n            <Route exact path=\"/MyEvents/admin/:id\" component={AdminSidebar} />\r\n            <Route exact path=\"/MyEvents/More/:id\" component={SidebarMore} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/admin/edit/:id/:eid\"\r\n              component={<div>edit</div>}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Location/:id/:event\"\r\n              component={Locationofline}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/schedule/:id/:event\"\r\n              component={ShowSchedule}\r\n            />\r\n            <Route exact path=\"/MyEvents/rsvp/:id\" component={Rsvp} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/eventpage/:id\"\r\n              component={InvitaionviewToggler}\r\n            />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/eventpage/gift/:id/:MainCode\"\r\n              component={Gift}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/eventpage/feed/:id/:MainCode\"\r\n              component={Feed}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/comments/:id/:_id\"\r\n              component={Comment}\r\n            />\r\n            <Route exact path=\"/MyEvents/albums/:id\" component={ShowAlbum} />\r\n            <Route exact path=\"/MyEvents/story/:id\" component={ShowStory} />\r\n            <Route exact path=\"/inv/albums/:id\" component={ShowAlbum} />\r\n            <Route exact path=\"/inv/story/:id\" component={ShowStory} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Manage-Event/:id/:invno\"\r\n              component={EditEvent}\r\n            />\r\n            <Route exact path=\"/inv/Admin/:id/:eid\" component={EventAdmin} />\r\n            {/* <Route\r\n              exact\r\n              path=\"/inv/Admin/:id/\"\r\n              component={AdminSidebar}\r\n            /> */}\r\n            <Route exact path=\"/inv/More/:id\" component={SidebarMore} />\r\n            <Route exact path=\"/inv/comments/:id/:_id\" component={Comment} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/eventpage/gift/:id/:MainCode\"\r\n              component={Gift}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/eventpage/feed/:id/:MainCode\"\r\n              component={Feed}\r\n            />\r\n            <Route exact path=\"/inv/videoconf/:id/\" component={Jitsi} />\r\n            <Route exact path=\"/inv/eventpage/chat/:id\" component={Chat} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Location/:id/:event\"\r\n              component={Locationofline}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/schedule/:id/:event\"\r\n              component={ShowSchedule}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/GuestList/:id/:invno\"\r\n              component={GuestList}\r\n            />\r\n\r\n            {/* <Route exact path=\"/inv/info/:id\" component={Invitationlist} /> */}\r\n            <Route exact path=\"/inv/rsvp/:id\" component={Rsvp} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/eventpage/:id\"\r\n              component={InvitaionviewToggler}\r\n            />\r\n            <Route exact path=\"/MyEvents\" component={Home} />\r\n            <Route exact path=\"/MyInvitations\" component={Home} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/event-create-success/:id\"\r\n              component={AddEventSucess}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/event-create-success/:id/:Share\"\r\n              component={AddEventSucess}\r\n            />\r\n            <Route exact path=\"/MyEvents/edit/:id\" component={CreateOrUpdate} />\r\n            <Route exact path=\"/add-event\" component={AddEvent} />\r\n            <Route exact path=\"/user-profile\" component={AddEvent} />\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/*\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Projects\\MobillyInvite\\src\\reportWebVitals.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\store.js",[],"C:\\Projects\\MobillyInvite\\src\\Utils\\Routing.js",["537","538","539","540","541","542"],"import React, { useEffect } from \"react\";\r\nimport history from \"./History\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { loginuser } from \"../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getposts } from \"../Redux/DispatchFuncitons/postfunctions\";\r\nimport { getNotification } from \"../Redux/DispatchFuncitons/NotificationFunctions\";\r\nimport { getChats } from \"../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nexport default function Redirector() {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => {\r\n    let ischeck = await reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = await reactLocalStorage.get(\"Phone\");\r\n    let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === \"false\" || ischeck === undefined || ischeck === \"\") {\r\n      console.log(\"logout\");\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"loginuser\");\r\n      await dispatch(loginuser(Phone));\r\n    }\r\n  }, [])\r\n  useEffect(async () => {\r\n    if (Auth.isLoggedIn === true) {\r\n\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n      await dispatch(getNotification());\r\n      await dispatch(getposts());\r\n      // await dispatch(getChats());\r\n      //  await history.goBack();\r\n    }\r\n  }, [Auth.isLoggedIn])\r\n  return <div><CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} /></div>;\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\GuestListFunctions.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js",["543","544"],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\TemplateFunctions.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Home\\Home.js",["545","546","547","548"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport FootMenu from \"../Helpers/FootMenu/FootMenu\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Invitation from \"../Invitations/Invitation\";\r\nimport EventList from \"../Events/Eventlist\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getNotification } from \"../../Redux/DispatchFuncitons/NotificationFunctions\";\r\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport { addme } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Home(props) {\r\n  const dispatch = useDispatch();\r\n  const [Menu, setMenu] = useState(0);\r\n  const CodeEvent = useSelector(state => state.CodeEvent)\r\n  const EventState = useSelector((state) => state.Eventdata);\r\n  useEffect(async () => {\r\n    if (CodeEvent.Code !== \"\") {\r\n      await dispatch(addme(CodeEvent.Code, CodeEvent.Maincode));\r\n    }\r\n\r\n    dispatch(GetEvents());\r\n    dispatch(GetInvitations());\r\n    dispatch(getNotification());\r\n    // dispatch(getChats());\r\n\r\n    if (\r\n      props.location.pathname === \"/inv\" ||\r\n      props.location.pathname === \"/\" ||\r\n      props.location.pathname === \"/home\"\r\n    ) {\r\n      await setMenu(0);\r\n    } else {\r\n      setMenu(1);\r\n    }\r\n\r\n\r\n  }, []);\r\n  useEffect(async () => {\r\n    dispatch(GetEvents());\r\n    dispatch(GetInvitations());\r\n    dispatch(getNotification());\r\n    dispatch(getChats());\r\n  }, []);\r\n\r\n  return (\r\n    <><div className=\"w-100\" >\r\n      <Header url={props.location.pathname} />\r\n    </div>\r\n      {/* <MobileHeader /> */}\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} sm={12} md={12}>\r\n          {Menu === 0 ? (\r\n            <Invitation data={EventState.myInvitations} className=\"w-100\" />\r\n          ) : (\r\n            <EventList data={EventState.myEvents} className=\"w-100\" />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FootMenu menu={Menu} setMenu={setMenu} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Utils\\History.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddEvent.js",["549","550","551","552","553","554","555"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport HorizontalLinearStepper from \"./Stepper/Stepper\";\r\nimport CreateEvent from \"./CreateEvent/CreateEvent\";\r\nimport AddParticipants from \"../AddEvent/AddParticipants/NewAddParticipants\";\r\nimport Toggler from \"../Helpers/EventInvitoggler/Toggler\";\r\nimport BackNavBar from \"../Helpers/BackNavbar/BackNavBar\";\r\nimport Back from \"../../Assets/Back.svg\";\r\nimport history from \"../../Utils/History\";\r\nimport Plan from \"../Plan/Plan\";\r\nexport default function AddEvent(props) {\r\n  const [Type, setType] = useState(\"Wedding\");\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [Events, setEvents] = useState([]);\r\n\r\n  let events = {\r\n    Name: \"\",\r\n    Participants: [],\r\n    file: \"\",\r\n    filetype: \"\",\r\n    Date: \"\",\r\n    Time: \"\",\r\n    VenueType: \"Online\",\r\n    Location: \"\",\r\n    Link: \"\",\r\n    Description: \"\",\r\n    GuestInvite: false,\r\n    Host: \"\",\r\n    Co_Host: [],\r\n    Schedule: [],\r\n    IsPassword: false\r\n  };\r\n  const [SelectedEvent, SelectEvent] = useState(0);\r\n  const [Story, setStory] = useState([]);\r\n  const [albumdata, setalbumdata] = useState([]);\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const addAnEvent = async () => {\r\n    if (Events.length < 4) {\r\n      setEvents([...Events, events]);\r\n    }\r\n  };\r\n  const removeAnEvent = async () => {\r\n    let events = [...Events];\r\n    if (events.length > 1) {\r\n      events = events.slice(0, -1);\r\n      await setEvents(events);\r\n    }\r\n\r\n    if (SelectedEvent > events.length - 1) {\r\n      // console.log(SelectedEvent - 1);\r\n      SelectEvent(SelectedEvent - 1);\r\n      // console.log(SelectedEvent, events.length - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const checkIfEventEmpty = async (eventscpy, Type, seterroring, index) => {\r\n    if (Type === \"\") {\r\n      seterroring(true);\r\n      return { status: false, index: 0, component: \"Type\" };\r\n    }\r\n    // console.log(Events);\r\n    let Eventcpy = [...Events];\r\n    let result = true;\r\n    let incompleteeventnumber = null;\r\n    //check for event first\r\n    Eventcpy = { ...Events[index] };\r\n    if (Eventcpy.Name === \"\") {\r\n      // console.log({ status: false, index: index, component: \"Name\" });\r\n      return { status: false, index: index, component: \"Name\" };\r\n    } else if (Eventcpy.Date === \"\") {\r\n      // console.log({ status: false, index: index, component: \"Date\" });\r\n      return { status: false, index: index, component: \"Date\" };\r\n    } else if (Eventcpy.Time === \"\") {\r\n      // console.log({ status: false, index: index, component: \"Time\" });\r\n      return { status: false, index: index, component: \"Time\" };\r\n    } else if (Eventcpy.Description === \"\") {\r\n      // console.log({ status: false, index: index, component: \"Description\" });\r\n      return { status: false, index: index, component: \"Description\" };\r\n    } else if (Eventcpy.VenueType === \"\") {\r\n      // console.log({ status: false, index: index, component: \"VenueType\" });\r\n      return { status: false, index: index, component: \"VenueType\" };\r\n    } else if (\r\n      Eventcpy.VenueType === \"Both\" &&\r\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n    ) {\r\n      console.log({\r\n        status: false,\r\n        index: index,\r\n        component: \"Both Location Link\",\r\n      });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n      // console.log({ status: false, index: index, component: \"Link\" });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n      // console.log({ status: false, index: index, component: \"Link\" });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.file === \"\") {\r\n      // console.log({ status: false, index: index, component: \"file\" });\r\n      return { status: false, index: index, component: \"file\" };\r\n    } else if (Eventcpy.filetype === \"\") {\r\n      // console.log({ status: false, index: index, component: \"filetype\" });\r\n      return { status: false, index: index, component: \"filetype\" };\r\n    }\r\n\r\n    for (let i = 0; i < Events.length; i++) {\r\n      incompleteeventnumber = i;\r\n      Eventcpy = { ...Events[i] };\r\n      if (Eventcpy.Name === \"\") {\r\n        // console.log({ status: false, index: i, component: \"Name\" });\r\n        return { status: false, index: i, component: \"Name\" };\r\n      } else if (Eventcpy.Date === \"\") {\r\n        // console.log({ status: false, index: i, component: \"Date\" });\r\n        return { status: false, index: i, component: \"Date\" };\r\n      } else if (Eventcpy.Time === \"\") {\r\n        // console.log({ status: false, index: i, component: \"Time\" });\r\n        return { status: false, index: i, component: \"Time\" };\r\n      } else if (Eventcpy.Description === \"\") {\r\n        // console.log({ status: false, index: i, component: \"Description\" });\r\n        return { status: false, index: i, component: \"Description\" };\r\n      } else if (Eventcpy.VenueType === \"\") {\r\n        // console.log({ status: false, index: i, component: \"VenueType\" });\r\n        return { status: false, index: i, component: \"VenueType\" };\r\n      } else if (\r\n        Eventcpy.VenueType === \"Both\" &&\r\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n      ) {\r\n        console.log({\r\n          status: false,\r\n          index: i,\r\n          component: \"Both Location Link\",\r\n        });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n        // console.log({ status: false, index: i, component: \"Link\" });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n        // console.log({ status: false, index: i, component: \"Link\" });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.file === \"\") {\r\n        // console.log({ status: false, index: i, component: \"file\" });\r\n        return { status: false, index: i, component: \"file\" };\r\n      } else if (Eventcpy.filetype === \"\") {\r\n        // console.log({ status: false, index: i, component: \"filetype\" });\r\n        return { status: false, index: i, component: \"filetype\" };\r\n      }\r\n    }\r\n\r\n    // console.log({ status: true, index: null, component: \"\" });\r\n    return { status: true, index: null, component: \"\" };\r\n  };\r\n\r\n  const addfinalDetails = () => {\r\n    let EventsCopy = [...Events];\r\n    EventsCopy.map((eve, index) => {\r\n      if (index === 0) {\r\n        eve.MainCode = \"ME\" + 313213132313;\r\n        eve.eventCode = \"ME\" + 313213132313;\r\n        eve.Link = \"dsd/as3213\";\r\n        //mainevent will give acces to all\r\n      } else {\r\n        eve.MainCode = \"ME\" + 313213132313;\r\n        eve.eventCode = \"E\" + \"randomcode\";\r\n        eve.Link = \"dsd/as3213/sdse\";\r\n        //single event access link\r\n      }\r\n    });\r\n    setEvents(EventsCopy);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    addAnEvent();\r\n  }, []);\r\n\r\n  function StepRender(step) {\r\n    return (\r\n      <>{step.activeStep === 0 ?\r\n        <CreateEvent\r\n          setType={setType}\r\n          Type={Type}\r\n          Events={Events}\r\n          setEvents={setEvents}\r\n          addAnEvent={addAnEvent}\r\n          checkIfEventEmpty={checkIfEventEmpty}\r\n          handleChange={handleChange}\r\n          removeAnEvent={removeAnEvent}\r\n          SelectEvent={SelectEvent}\r\n          SelectedEvent={SelectedEvent}\r\n          handleNext={handleNext}\r\n          handleBack={handleBack}\r\n          addfinalDetails={addfinalDetails}\r\n          albumdata={albumdata}\r\n          setalbumdata={setalbumdata}\r\n          Story={Story}\r\n          setStory={setStory}\r\n          template={events}\r\n          className=\"p-15px\"\r\n        /> :\r\n        step.activeStep === 1 ? <Plan handleNext={handleNext} handleBack={handleBack} /> :\r\n          step.activeStep === 2 ? <AddParticipants\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            Events={Events}\r\n            setEvents={setEvents}\r\n            SelectEvent={SelectEvent}\r\n            SelectedEvent={SelectedEvent}\r\n            addAnEvent={addAnEvent}\r\n            removeAnEvent={removeAnEvent}\r\n            addfinalDetails={addfinalDetails}\r\n            Type={Type}\r\n            Story={Story}\r\n          /> : <></>}</>\r\n    )\r\n    // switch (step.activeStep) {\r\n    //   case 0:\r\n    //     return (\r\n\r\n    //     );\r\n    //   case 1000:\r\n    //     return <Plan handleNext={handleNext} handleBack={handleBack} />;\r\n    //   case 1:\r\n    //     return (\r\n\r\n    //     );\r\n    //   case 3:\r\n    //     return <div></div>;\r\n    //   default:\r\n    //     return <div></div>;\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header url={props.location.pathname} ismobile=\"desktop-only\" />\r\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\r\n      <BackNavBar\r\n        logo={<img src={Back} />}\r\n        Name={\"Create Event\"}\r\n        functionality={() => {\r\n          history.push(\"/MyEvents\");\r\n        }}\r\n      />\r\n      <Grid container spacing={0} className=\" pt-0\">\r\n        <Grid item xs={false} sm={2} md={2} />\r\n\r\n        <Grid item xs={12} sm={8} md={8} className=\" pt-0\">\r\n          <HorizontalLinearStepper\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n          />\r\n          <StepRender activeStep={activeStep} />\r\n        </Grid>\r\n\r\n        <Grid item xs={false} sm={2} md={2} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\Chat.js",["556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport CList from \"./List\";\r\nimport Chatbox from \"./Chatbox\";\r\nimport \"./Chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updatechat } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport NavMobile from '../Helpers/NavMobile/NavMobile'\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Chat(props) {\r\n  const dispatch = useDispatch();\r\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\r\n  let socketurl = url.split(\"api/\");\r\n  // console.log(socketurl);\r\n  let socket = io(socketurl[0], { transports: [\"websocket\"] });\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [show, setshow] = useState(0);\r\n  const [windowwidth, setwindowwidth] = useState(1280);\r\n  const [fullscreen, setfullscreen] = useState(true);\r\n  const [SelectedGroup, setSelectedGroup] = useState(\"\");\r\n  const [inroom, setinroom] = useState(false);\r\n  let Eventdata = [];\r\n  const [base, setbase] = useState(\"\")\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const [MainCode, setMainCode] = useState(\"\");\r\n  const [allparticipants, setallparticipants] = useState([]);\r\n  const [chats, setchat] = useState([]);\r\n  const [text, settext] = useState(\"\");\r\n  const [IndvName, setIndvName] = useState(\"\");\r\n  // console.log(MyEvents);\r\n  const [IsSubmit, setIsSubmit] = useState(false);\r\n  function handleResize() {\r\n    setwindowwidth(window.innerWidth);\r\n    // console.log(window.innerWidth);\r\n    if (window.innerWidth > 959) {\r\n      setfullscreen(true);\r\n      // console.log(true);\r\n    } else {\r\n      setfullscreen(false);\r\n      // console.log(false);\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/chat/\" + props.match.params.id && MyEvents.length > 0\r\n      ) {\r\n        Eventdata = MyEvents[props.match.params.id];\r\n        await setbase(\"MyEvents\");\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/chat/\" + props.match.params.id && myInvitations.length > 0\r\n      ) {\r\n        Eventdata = myInvitations[props.match.params.id];\r\n        await setbase(\"inv\");\r\n      }\r\n      let participants = [];\r\n      Eventdata.map((singleevent) => {\r\n        singleevent.Participants.map((participant) => {\r\n          participants.push(participant);\r\n          setMainCode(singleevent.MainCode);\r\n        });\r\n      });\r\n      // console.log(participants);\r\n      participants = [...new Set(participants)];\r\n      setallparticipants(participants);\r\n    }\r\n  }, [myInvitations, MyEvents]);\r\n  useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let selectedgrpcpr = SelectedGroup;\r\n    let chat = [...chats];\r\n    socket.on(\r\n      \"init\",\r\n      () => {\r\n        socket.emit(\"connectit\", { Phone: Auth.Phone });\r\n        if (inroom === false) {\r\n          // console.log(\"join rooms\");\r\n          socket.emit(\"rooms\", { Phone: Auth.Phone });\r\n          setinroom(true);\r\n        }\r\n      },\r\n      [\"abc\"]\r\n    );\r\n\r\n    socket.on(\"joined\", (rooms) => { });\r\n    socket.once(\"msg_saved\", (data) => {\r\n      dispatch(updatechat(data, data.room));\r\n    });\r\n  });\r\n\r\n  function submit() {\r\n    socket.emit(\"message\", {\r\n      sender: Auth.Phone,\r\n      content: text,\r\n      type: \"text\",\r\n      room: SelectedGroup.room,\r\n      _id: SelectedGroup._id,\r\n    });\r\n    setIsSubmit(true);\r\n  }\r\n  function sendImage(data) {\r\n    socket.emit(\"message\", data);\r\n    setIsSubmit(true);\r\n  }\r\n  const updateName = () => {\r\n    if (SelectedGroup.Name && SelectedGroup.Type === \"INDV\") {\r\n      if (\r\n        SelectedGroup.Admin === Auth.Phone ||\r\n        \"+91\" + SelectedGroup.Admin === Auth.Phone\r\n      ) {\r\n        if (typeof SelectedGroup.Name === \"string\") {\r\n          if (SelectedGroup.Name.startsWith(\"+\")) {\r\n            setIndvName(SelectedGroup.Name);\r\n          } else {\r\n            setIndvName(\"+91\" + SelectedGroup.Name);\r\n          }\r\n        } else {\r\n          setIndvName(\"+91\" + SelectedGroup.Name);\r\n        }\r\n      } else {\r\n        if (typeof SelectedGroup.Admin === \"string\") {\r\n          if (SelectedGroup.Admin.startsWith(\"+\")) {\r\n            setIndvName(SelectedGroup.Admin);\r\n          } else {\r\n            setIndvName(\"+91\" + SelectedGroup.Admin);\r\n          }\r\n        } else {\r\n          setIndvName(\"+91\" + SelectedGroup.Admin);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={3}\r\n        className={\r\n          fullscreen === true ? \"show h93\" : show === 1 ? \"hide\" : \"show h100\"\r\n        }\r\n      >\r\n        <CList\r\n          MyEvents={MyEvents}\r\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\r\n          fullscreen={fullscreen}\r\n          allparticipants={allparticipants}\r\n          MainCode={MainCode}\r\n          setSelectedGroup={setSelectedGroup}\r\n          setshow={setshow}\r\n          chats={chats}\r\n          setchat={setchat}\r\n          updateName={updateName}\r\n          setIsSubmit={setIsSubmit}\r\n          IsSubmit={IsSubmit}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={9}\r\n        className={\r\n          fullscreen === true ? \"show h93\" : show === 0 ? \"hide\" : \"show h100\"\r\n        }\r\n      >\r\n        <Chatbox\r\n          MyEvents={MyEvents}\r\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\r\n          fullscreen={fullscreen}\r\n          allparticipants={allparticipants}\r\n          MainCode={MainCode}\r\n          setSelectedGroup={setSelectedGroup}\r\n          setshow={setshow}\r\n          chats={chats}\r\n          setchat={setchat}\r\n          updateName={updateName}\r\n          submit={submit}\r\n          text={text}\r\n          settext={settext}\r\n          SelectedGroup={SelectedGroup}\r\n          sendImage={sendImage}\r\n          setIsSubmit={setIsSubmit}\r\n          IsSubmit={IsSubmit}\r\n        />\r\n      </Grid>\r\n      <NavMobile base={base} id={props.match.params.id} />\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowSchedule.js",["576","577","578"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"./Invitations.css\"\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport history from \"../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport AddSchedule from '../AddEvent/Extras/Schedule';\r\n\r\nexport default function ShowSchedule(props) {\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([])\r\n  const [base, setbase] = useState(\"\")\r\n  const [Id, setId] = useState(\"\")\r\n  const [isadmin, setisadmin] = useState(false)\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/schedule/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.event\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id][props.match.params.event].Schedule);\r\n        await setbase(\"MyEvents\");\r\n        await setId(MyEvents[props.match.params.id][props.match.params.event]._id)\r\n        await setisadmin(true)\r\n      } else {\r\n        await setEventdata(myInvitations[props.match.params.id][props.match.params.event].Schedule);\r\n        await setId(myInvitations[props.match.params.id][props.match.params.event]._id)\r\n        await setbase(\"inv\");\r\n        await setisadmin(false)\r\n      }\r\n    }\r\n  }, [myInvitations, MyEvents])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={false} md={2}></Grid>\r\n        <Grid item xs={12} md={10}>\r\n          <Row\r\n            style={{\r\n              marginTop: 20,\r\n              marginRight: 3,\r\n              marginLeft: 3,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Schedules\r\n            </p>\r\n          </Row>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{ padding: '18px' }}>\r\n          <AddSchedule CurrentEventDetails={Eventdata} IsAdmin={isadmin} Eid={Id} />\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Feed.js",["579","580","581","582","583","584","585","586","587","588"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zoomicon from \"../../Assets/zoomicon.png\";\r\nimport axios from \"axios\";\r\nimport { addpost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport history from \"../../Utils/History\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Media from \"./Media\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport AddTags from \"./AddTags\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Postrender from \"./Posts\";\r\nimport AddPost from \"./AddPost\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../Animations/blankfeed.json\";\r\nimport blankfeed from \"../../Assets/blankfeed.svg\";\r\n\r\nexport default function Feed(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isSubmit, setisSubmit] = useState(false);\r\n  const [isloaded, toggleisloaded] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [ShowTagQuery, setShowTagQuery] = useState(false);\r\n  const [showcommment, setshowcommment] = useState(false);\r\n  const [currentPosts, setcurrentPosts] = useState([]);\r\n  const [currentfilteredPosts, setcurrentfilteredPosts] = useState([]);\r\n  const [participant, setparticipant] = useState([]);\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [admins, setadmins] = useState([]);\r\n  const [Tags, setTags] = useState([]);\r\n  const [base, setbase] = useState(\"\");\r\n  const [filter, setfilter] = useState(\"All\");\r\n  const [caption, setcaption] = useState(\"\");\r\n  const [imageurl, setimageurl] = useState(\"\");\r\n  const [type, settype] = useState(\"\");\r\n  const [popuptype, setpopuptype] = useState(\"\");\r\n  const [showcommmentforpost, setshowcommmentforpost] = useState(null);\r\n\r\n  const defaultOptions = {\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getposts();\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      await setfilter(\"All\");\r\n      if (\r\n        props.location.pathname ===\r\n          \"/MyEvents/eventpage/feed/\" +\r\n            props.match.params.id +\r\n            \"/\" +\r\n            props.match.params.MainCode &&\r\n        MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n\r\n        await setbase(\"MyEvents\");\r\n        await setadmins(MyEvents[props.match.params.id][0].Host);\r\n\r\n        await guestlist([\r\n          ...MyEvents[props.match.params.id][0].Participants,\r\n          ...MyEvents[props.match.params.id][0].Host,\r\n        ]);\r\n      } else if (\r\n        props.location.pathname ===\r\n          \"/inv/eventpage/feed/\" +\r\n            props.match.params.id +\r\n            \"/\" +\r\n            props.match.params.MainCode &&\r\n        myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n        // await setisAdmin(true)\r\n\r\n        await setbase(\"inv\");\r\n        await setadmins(myInvitations[props.match.params.id][0].Host);\r\n        await guestlist([\r\n          ...myInvitations[props.match.params.id][0].Participants,\r\n          ...myInvitations[props.match.params.id][0].Host,\r\n        ]);\r\n      }\r\n    }\r\n  }, [MyEvents, myInvitations]);\r\n\r\n  const submit = async () => {\r\n    await setisSubmit(true);\r\n    var d = new Date();\r\n    let unique = d.getTime();\r\n    let url = Eventdata[0].MainCode + unique + \".\" + type;\r\n    console.log(url);\r\n    let newurl = \"\";\r\n    if (imageurl !== \"\") {\r\n      newurl = await uploadString(imageurl, url);\r\n    }\r\n    await dispatch(\r\n      addpost(\r\n        Eventdata[0].MainCode,\r\n        Auth.Phone,\r\n        newurl,\r\n        type,\r\n        Tags,\r\n        caption,\r\n        setisSubmit\r\n      )\r\n    );\r\n    await setcaption(\"\");\r\n    await setimageurl(\"\");\r\n    await settype(\"\");\r\n    await setTags([]);\r\n    //await setisSubmit(false);\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n    let url = \"\";\r\n    let ftype = acceptedFiles[0].type.split(\"/\");\r\n    settype(ftype[0]);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      url = reader.result;\r\n      setimageurl(url);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n\r\n  const getposts = async () => {\r\n    if (props.match.params.id !== undefined && props.match.params.id !== \"\") {\r\n      axios\r\n        .post(url + \"post/getposts\", { maincode: props.match.params.MainCode })\r\n        .then(async function (response) {\r\n          toggleisloaded(true);\r\n\r\n          await setcurrentPosts(response.data.Posts);\r\n          await filterposts(response.data.Posts, Eventdata[0].Host);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n          // always executed\r\n        });\r\n    }\r\n  };\r\n  const filterposts = async (Posts, admins) => {\r\n    let Postscpy = [];\r\n    for (let i = 0; i < Posts.length; i++) {\r\n      if (admins.includes(Posts[i].by) === true) {\r\n        Postscpy.push(Posts[i]);\r\n      }\r\n    }\r\n    await setcurrentfilteredPosts(Postscpy);\r\n  };\r\n\r\n  const guestlist = async (Participants) => {\r\n    var ParticipantsCPY = [];\r\n    for (let i = 0; i < Participants.length; i++) {\r\n      var Phone = \"\";\r\n      if (Participants[i] !== Auth.Phone) {\r\n        if (typeof Participants[i] === \"string\") {\r\n          Phone = Participants[i].includes(\"+\")\r\n            ? Participants[i]\r\n            : \"+91\" + Participants[i];\r\n        } else {\r\n          Phone = Participants[i].toString().includes(\"+\")\r\n            ? Participants[i]\r\n            : \"+91\" + Participants[i];\r\n        }\r\n\r\n        // await axios\r\n        //   .post(url + \"auth/getuserdetails\", {\r\n        //     Phone: Phone,\r\n        //   })\r\n        //   .then(async (res) => {\r\n        //     if (res.data.user) {\r\n        //       await ParticipantsCPY.push({\r\n        //         name: res.data.user.Name,\r\n        //         id: Participants[i],\r\n        //       });\r\n        //     } else {\r\n        //       await ParticipantsCPY.push({\r\n        //         name: Participants[i],\r\n        //         id: Participants[i],\r\n        //       });\r\n        //     }\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //     return { err: \"error 404\" };\r\n        //   });\r\n      }\r\n    }\r\n    console.log(Participants);\r\n    await setparticipant(Participants);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getposts();\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [Eventdata]);\r\n\r\n  useEffect(() => {\r\n    console.log(admins);\r\n    console.log(admins.includes(\"+917447525123\"));\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      <NavMobile\r\n        base={base}\r\n        id={props.match.params.id}\r\n        MainCode={props.match.params.MainCode}\r\n      />\r\n      <Popup\r\n        component={AddTags}\r\n        toggleShowPopup={setShowTagQuery}\r\n        showPopup={ShowTagQuery}\r\n        MainCode={[...participant]}\r\n        showall={setTags}\r\n        url={Tags}\r\n      />\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"f-s-modal\"\r\n        open={showPopup}\r\n        onClose={() => {\r\n          toggleShowPopup(false);\r\n        }}\r\n      >\r\n        <Container fluid className=\"p-0 m-0\">\r\n          <div className=\"f-s-modal-card \">\r\n            <Media\r\n              toggleShowPopup={toggleShowPopup}\r\n              currentPosts={currentPosts}\r\n              popuptype={popuptype}\r\n            />\r\n          </div>\r\n        </Container>\r\n      </Modal>\r\n      <Container className=\"guestlist-box\" fluid>\r\n        <div className=\"back-navigation desktop-only\">\r\n          <Row style={{ marginTop: 5, marginRight: 3, marginLeft: 3 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              style={{ color: \"black\" }}\r\n              onClick={() => history.goBack()}\r\n            />\r\n            <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n              Feed\r\n            </h3>\r\n          </Row>\r\n        </div>\r\n        {Eventdata && Eventdata.length > 0 ? (\r\n          <>\r\n            {Eventdata[0].filetype === \"png\" ||\r\n            Eventdata[0].filetype === \"jpg\" ||\r\n            Eventdata[0].filetype === \"jpeg\" ? (\r\n              <Image src={Eventdata[0].file} fluid style={{ height: \"30vh\" }} />\r\n            ) : (\r\n              <video\r\n                muted\r\n                type=\"video/mp4\"\r\n                autoPlay={true}\r\n                src={Eventdata[0].file}\r\n                preload=\"none\"\r\n                className=\"w-100\"\r\n                style={{ height: \"30vh\" }}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Image src={zoomicon} className=\"profile-avatar\" />\r\n        <h3 className=\"event-headings\">\r\n          {Eventdata[0] ? Eventdata[0].Name : \"\"}\r\n        </h3>\r\n\r\n        <div className=\"select-list\">\r\n          <Row className=\"p-0 m-0\">\r\n            <Col>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                style={{ width: \"30vw\", borderRadius: 20 }}\r\n                onClick={async () => {\r\n                  await setpopuptype(\"Photo\");\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Photos\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                onClick={async () => {\r\n                  await setpopuptype(\"Videos\");\r\n                  toggleShowPopup(true);\r\n                }}\r\n                style={{ width: \"30vw\", borderRadius: 20, marginLeft: 20 }}\r\n              >\r\n                Videos\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"select-list mt-10px\">\r\n          <Row className=\"filterbox\">\r\n            <Col\r\n              onClick={async () => {\r\n                await setfilter(\"All\");\r\n                // await filterposts(currentPosts);\r\n              }}\r\n              className={filter === \"All\" ? \"filter-type\" : \"\"}\r\n            >\r\n              <span style={{ width: \"30vw\", borderRadius: 20 }}>All</span>\r\n            </Col>\r\n            <Col\r\n              onClick={async () => {\r\n                await setfilter(\"Update\");\r\n\r\n                // await filterposts(currentPosts);\r\n              }}\r\n              className={filter === \"Update\" ? \"filter-type\" : \"\"}\r\n            >\r\n              <span style={{ width: \"30vw\", borderRadius: 20 }}> Update</span>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n\r\n      {isSubmit === true ? (\r\n        <center>\r\n          <CircularProgress style={{ color: \"black\" }} />\r\n        </center>\r\n      ) : (\r\n        <AddPost\r\n          settype={settype}\r\n          setimageurl={setimageurl}\r\n          setcaption={setcaption}\r\n          caption={caption}\r\n          submit={submit}\r\n          setShowTagQuery={setShowTagQuery}\r\n          imageurl={imageurl}\r\n          isSubmit={isSubmit}\r\n          type={type}\r\n        />\r\n      )}\r\n      {currentPosts.length <= 0 ? (\r\n         <>\r\n         <Lottie options={defaultOptions} height={200} width={400} />\r\n         <p style={{ textAlign: \"center\", fontWeight: \"600\" }}>No Posts!</p>\r\n       </>\r\n      ) : (\r\n       \"\"\r\n      )}\r\n      {isloaded === false ? (\r\n        <center>\r\n          <CircularProgress style={{ color: \"black\" }} />\r\n        </center>\r\n      ) : (\r\n        <Postrender\r\n          data={currentPosts}\r\n          filter={filter}\r\n          filterdata={currentfilteredPosts}\r\n          getposts={getposts}\r\n          Eventdata={Eventdata}\r\n          showcommmentforpost={showcommmentforpost}\r\n          showcommment={showcommment}\r\n          Maincode={props.match.params.Maincode}\r\n          setshowcommmentforpost={setshowcommmentforpost}\r\n          setshowcommment={setshowcommment}\r\n          admins={admins}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitaionviewToggler.js",["589","590","591","592"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport InvitaionRSVP from \"./InvitaionRSVP/InvitaionRSVP\";\r\nimport InvitaionMain from \"./InvitationMain/InvitaionMain\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nexport default function InvitaionviewToggler(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Eventdata, setEventdata] = useState(true)\r\n  const [base, setbase] = useState(\"\")\r\n\r\n  const [dataloading, setdataloading] = useState(true)\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n\r\n    } else {\r\n\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/\" + props.match.params.id && MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n        await setbase(\"MyEvents\");\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/\" + props.match.params.id && myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n        await setbase(\"inv\");\r\n      }\r\n      setdataloading(false)\r\n    }\r\n  }, [MyEvents, myInvitations])\r\n\r\n\r\n  const [evno, setevno] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [hasallrsvps, sethasallrsvps] = useState(false);\r\n  const [rsvpnumber, setrsvpnumber] = useState(0);\r\n  useEffect(() => {\r\n    if (Eventdata && evno < Eventdata.length) {\r\n      let EVcount = 0;\r\n      for (let i = 0; i < Eventdata.length; i++) {\r\n        if (Eventdata[i].RSVPList.length > 0) {\r\n          let RSVPList = Eventdata[i].RSVPList;\r\n\r\n          for (let j = 0; j < RSVPList.length; j++) {\r\n            if (RSVPList[j].By === Auth.Phone) {\r\n              EVcount++;\r\n            } else {\r\n              setrsvpnumber(i);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (EVcount === Eventdata.length) {\r\n        sethasallrsvps(true);\r\n      } else {\r\n      }\r\n    }\r\n    console.log(Eventdata);\r\n    console.log(props);\r\n  }, [Eventdata]);\r\n  return (\r\n    <>{dataloading === false ? <div>\r\n      {hasallrsvps === false ? (\r\n        <InvitaionRSVP\r\n          Eventdata={Eventdata}\r\n          setevno={setevno}\r\n          id={props.match.params.id}\r\n          sethasallrsvps={sethasallrsvps}\r\n          toggle={true}\r\n          base={base}\r\n        />\r\n      ) : (\r\n        <InvitaionMain\r\n          Eventdata={Eventdata}\r\n          id={props.match.params.id}\r\n          base={base}\r\n        />\r\n      )}\r\n    </div> : <CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} />}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowAlbum.js",["593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610"],"C:\\Projects\\MobillyInvite\\src\\Components\\Comments\\Coments.js",["611","612","613","614","615","616","617"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"../Comments/Comments.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport { likecomment } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { comment_event } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nexport default function Coments(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let Events = useSelector((state) => state.Eventdata);\r\n  const [MainCode, setMainCode] = useState(\"\");\r\n  const [eveid, seteveid] = useState(\"\");\r\n  const [comments, setcomments] = useState([]);\r\n  const [comment, setcomment] = useState(\"\");\r\n  let base = \"\";\r\n\r\n  let Eventdata = [];\r\n  const getcomments = () => {\r\n    axios\r\n      .post(url + \"post/getEventcomments\", {\r\n        id: props.match.params._id,\r\n        Phone: Auth.Phone,\r\n      })\r\n      .then(async (res) => {\r\n        if (res.data.data && res.data.data.length > comments.length) {\r\n          console.log(res.data.data);\r\n          await setcomments(res.data.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return { err: \"error 404\" };\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getcomments();\r\n    const interval = setInterval(() => {\r\n      getcomments();\r\n    }, 10000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const submit = async () => {\r\n    if (comment !== \"\") {\r\n      var saved = await dispatch(\r\n        comment_event(props.match.params._id, comment)\r\n      );\r\n      if (saved === 1) {\r\n        await setcomment(\"\");\r\n        await getcomments();\r\n      }\r\n    }\r\n  };\r\n  useEffect(async () => {\r\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\r\n    if (Events.myEvents.length > 0 && Events.myInvitations.length > 0) {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/comments/\" + props.match.params.id\r\n      ) {\r\n        Eventdata = Events.myEvents[props.match.params.id];\r\n        base = \"MyEvents\";\r\n        await seteveid(Eventdata[0]._id)\r\n        await setMainCode(Eventdata[0].MainCode)\r\n        //  await setcomments(Eventdata[0].CommentList)\r\n      } else {\r\n        Eventdata = Events.myInvitations[props.match.params.id];\r\n        base = \"inv\";\r\n        await seteveid(Eventdata[0]._id)\r\n        await setMainCode(Eventdata[0].MainCode)\r\n        //  await setcomments(Eventdata[0].CommentList)\r\n      }\r\n    } else {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    }\r\n  }, [Events.myEvents, Events.myInvitations]);\r\n\r\n  // useEffect(() => {\r\n  //   if (props.showcommment === true) {\r\n  //     console.log(props.id);\r\n  //     axios\r\n  //       .post(url + \"post/getpostcomments\", {\r\n  //         id: props.id,\r\n  //         Phone: Auth.Phone,\r\n  //       })\r\n  //       .then((res) => {\r\n  //         if (res.data.data) {\r\n  //           console.log(res.data.data);\r\n  //           setcomments(res.data.data);\r\n  //         }\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(err);\r\n  //         return { err: \"error 404\" };\r\n  //       });\r\n  //   }\r\n  // }, [props.showcommment]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"ofh h80\" fluid>\r\n        <Container>\r\n          <Row\r\n            style={{\r\n              marginTop: 20,\r\n              marginRight: 3,\r\n              marginLeft: 3,\r\n              marginBottom: 5,\r\n            }}\r\n          >\r\n            <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Event\r\n            </p>\r\n            <Col></Col>\r\n          </Row>\r\n        </Container>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          style={{\r\n            margin: 5,\r\n          }}\r\n        >\r\n          {comments.map((comment) => (\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={2} md={1}>\r\n                <UserDataUrl showIcon={true} Phone={comment.CommentBy} />\r\n              </Grid>\r\n              <Grid item xs={8} md={9}>\r\n                <h5 className=\"m-0 p-0\">\r\n                  <UserDataUrl showName={true} Phone={comment.CommentBy} />\r\n                </h5>\r\n                <p className=\" m-5px fs-14\">{comment.Comment}</p>\r\n              </Grid>\r\n              <Grid item xs={2} md={1}>\r\n                <Like\r\n                  likeby={comment.likeby}\r\n                  MainCode={MainCode}\r\n                  _id={comment._id}\r\n                />\r\n                {comment.likeby ? comment.likeby.Length : 0}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{\r\n          margin: 5,\r\n          position: \"fixed\",\r\n          bottom: \"0px\",\r\n        }}\r\n      >\r\n        <Grid item xs={10}>\r\n          <Form.Control\r\n            placeholder=\"Write a Comment\"\r\n            style={{\r\n              width: \"100%\",\r\n              margin: 0,\r\n              marginTop: \"5px\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n            value={comment}\r\n            onChange={(e) => {\r\n              setcomment(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          onClick={() => {\r\n            submit();\r\n          }}\r\n        >\r\n          <IconButton>\r\n            {\" \"}\r\n            <IoMdSend\r\n              size={20}\r\n              style={{ float: \"right\", margin: \"auto\", marginTop: \"5px\" }}\r\n            />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nexport function Like(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [isliked, setisliked] = useState(false);\r\n  useEffect(() => {\r\n    setisliked(props.likeby ? props.likeby.includes(Auth.Phone) : false);\r\n  }, []);\r\n  async function Dislike() {\r\n    let likelistcpy = [...props.likeby];\r\n    likelistcpy[props.index] = false;\r\n    await setisliked(false);\r\n  }\r\n  async function Like() {\r\n    let likelistcpy = [...props.likeby];\r\n    likelistcpy[props.index] = true;\r\n    // props.setLikeList(likelistcpy);\r\n    await setisliked(true);\r\n  }\r\n  const likethecomment = () => { };\r\n  return (\r\n    <>\r\n      {isliked === false ? (\r\n        <FcLikePlaceholder\r\n          size={30}\r\n          onClick={() => {\r\n            dispatch(likecomment(props._id, Auth.Phone, props.MainCode));\r\n            Like();\r\n            likethecomment();\r\n          }}\r\n        />\r\n      ) : (\r\n        <FcLike\r\n          size={30}\r\n          onClick={() => {\r\n            dispatch(likecomment(props._id, Auth.Phone, props.MainCode));\r\n            Dislike();\r\n            likethecomment();\r\n          }}\r\n        />\r\n      )}\r\n      {props.likeby.Length}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\jitsi\\Jitsivc.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Guest\\ManageGuest.js",["618","619","620","621","622","623","624","625","626","627","628","629","630","631"],"C:\\Projects\\MobillyInvite\\src\\Components\\Location Offline\\LocationOffline.js",["632","633","634","635","636","637","638","639","640","641","642"],"import React, { useState, useRef, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Accordion, Card, Col } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport \"../Location Offline/LocationOffline.css\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport { useSelector } from \"react-redux\";\r\nimport vcimage from \"../../Assets/videocall.png\";\r\nimport history from \"../../Utils/History\";\r\nimport { GoogleMapsAPI } from \"../../Utils/Config\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../Animations/online.json';\r\n\r\nconst libraries = [\"places\"];\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: animationData,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\"\r\n  }\r\n};\r\nconst options = {\r\n  // styles: mapStyles,\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  gestureHandling: \"cooperative\",\r\n};\r\n\r\nexport default function Location(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GoogleMapsAPI,\r\n    libraries,\r\n  });\r\n  // const Eventdata = useSelector(\r\n  //   (state) =>\r\n  //     state.Eventdata.myInvitations[props.match.params.id][\r\n  //       props.match.params.event\r\n  //     ]\r\n  // );\r\n\r\n  let Eventdata = [];\r\n  let base = \"\";\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  console.log(props.location.pathname);\r\n  if (\r\n    props.location.pathname ===\r\n    \"/MyEvents/location/\" +\r\n    props.match.params.id +\r\n    \"/\" +\r\n    props.match.params.event\r\n  ) {\r\n    Eventdata = MyEvents[props.match.params.event];\r\n    base = \"MyEvents\";\r\n  } else {\r\n    Eventdata = myInvitations[props.match.params.event];\r\n    base = \"inv\";\r\n  }\r\n\r\n  let center = {};\r\n  if (Eventdata.VenueType === \"Both\" || Eventdata.VenueType === \"Offline\") {\r\n    let locationdata = JSON.parse(Eventdata.Location);\r\n    center = {\r\n      lat: locationdata.lat,\r\n      lng: locationdata.lng,\r\n    };\r\n  } else {\r\n    center = {\r\n      lat: 20.5937,\r\n      lng: 78.9629,\r\n    };\r\n  }\r\n\r\n  const mapContainerStyle = {\r\n    height: \"400px\",\r\n    width: \"100%\",\r\n    border: \"solid\",\r\n    display:\r\n      Eventdata.VenueType === \"Offline\" || Eventdata.VenueType === \"Both\"\r\n        ? \"block\"\r\n        : \"none\",\r\n  };\r\n  console.log(Eventdata);\r\n  // Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\r\n\r\n  Geocode.setLanguage(\"en\");\r\n\r\n  const [marker, setMarker] = useState(center);\r\n  const [selected, setSelected] = useState(null);\r\n  const [adderss, setAddress] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    let location = JSON.stringify({ lat, lng });\r\n    console.log(location);\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(70);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <Col className=\"mt-15px\">\r\n        <p style={{ fontWeight: 700, fontSize: 23 }}>\r\n          <IoArrowBackCircleOutline\r\n            size={40}\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}\r\n          />\r\n          Location\r\n        </p>\r\n      </Col>\r\n      <Lottie\r\n        options={defaultOptions}\r\n        height={200}\r\n        width={200}\r\n        style={{\r\n          marginBottom: '20vh',\r\n          display:\r\n            Eventdata.VenueType === \"Online\" ||\r\n              Eventdata.VenueType === \"Online-Inapp\"\r\n              ? \"block\"\r\n              : \"none\",\r\n        }}\r\n      />\r\n      {/*  <img\r\n        src={vcimage}\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"70vh\",\r\n          objectFit: \"contain\",\r\n         \r\n        }}\r\n      /> */}\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={5}\r\n        center={center}\r\n        options={options}\r\n        // onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n        options={{ scrollwheel: false }}\r\n      >\r\n        <Marker\r\n          key={`${marker.lat}-${marker.lng}`}\r\n          position={{ lat: marker.lat, lng: marker.lng }}\r\n          onClick={() => {\r\n            setSelected(marker);\r\n          }}\r\n        />\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{adderss}</h2>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n\r\n      <Accordion>\r\n        <Card>\r\n          <Card.Header\r\n            style={{\r\n              display:\r\n                Eventdata.VenueType === \"Offline\" ||\r\n                  Eventdata.VenueType === \"Both\"\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            <a\r\n              href={\"http://maps.google.com?q=\" + center.lat + \",\" + center.lng}\r\n            >\r\n              <Accordion.Toggle\r\n                eventKey=\"-1\"\r\n                style={{\r\n                  color: \"skyblue\",\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  border: \"none\",\r\n                  background: \"none\",\r\n                  color: \"#000\",\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                <LocationOnOutlinedIcon style={{ color: \"skyblue\" }} />\r\n                Directions\r\n              </Accordion.Toggle>\r\n            </a>\r\n          </Card.Header>\r\n\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body\r\n              style={{\r\n                margin: 0,\r\n                padding: 0,\r\n                display:\r\n                  Eventdata.VenueType === \"Offline\" ||\r\n                    Eventdata.VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            ></Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Card.Header\r\n            style={{\r\n              display:\r\n                Eventdata.VenueType === \"Online\" ||\r\n                  Eventdata.VenueType === \"Both\" ||\r\n                  Eventdata.VenueType === \"Online-Inapp\"\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            <Accordion.Toggle\r\n              eventKey=\"1\"\r\n              style={{\r\n                color: \"skyblue\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                border: \"none\",\r\n                background: \"none\",\r\n                color: \"#000\",\r\n                textAlign: \"left\",\r\n              }}\r\n              onClick={() => {\r\n                if (Eventdata.VenueType === \"Online\") {\r\n                  window.open(Eventdata.Link);\r\n                } else if (\r\n                  Eventdata.VenueType === \"Online-Inapp\" ||\r\n                  Eventdata.VenueType === \"Both\"\r\n                ) {\r\n                  history.push(\"/inv/videoconf/\" + Eventdata.eventCode);\r\n                }\r\n              }}\r\n            >\r\n              <VideocamIcon style={{ color: \"skyblue\" }} /> Join Meeting\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body\r\n              style={{\r\n                display:\r\n                  Eventdata.VenueType === \"Online\" ||\r\n                    Eventdata.VenueType === \"Both\" ||\r\n                    Eventdata.VenueType === \"Online-Inapp\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            ></Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowStory.js",["643","644","645","646","647"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"./Invitations.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport history from \"../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport Story from \"./AddStory\";\r\n\r\nexport default function ShowStory(props) {\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [base, setbase] = useState(\"\");\r\n  const [maincode, setmaincode] = useState(\"\");\r\n  const [uniqurl, setuniqurl] = useState(\"\");\r\n  const [Id, setId] = useState(\"\");\r\n  const [isadmin, setisadmin] = useState(false);\r\n  const [IsAdmin, setIsAdmin] = useState(false);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  useEffect(async () => {\r\n    let data = [];\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/story/\" + props.match.params.id\r\n      ) {\r\n        data = MyEvents[props.match.params.id][0];\r\n        await setEventdata(data.InvId.Story);\r\n        await setbase(\"MyEvents\");\r\n        await setId(data._id);\r\n        await setisadmin(true);\r\n        await setmaincode(data.MainCode);\r\n        if (data.Host.includes(Auth.Phone)) {\r\n          await setIsAdmin(true);\r\n        } else {\r\n          await setIsAdmin(false);\r\n        }\r\n        await setuniqurl(data.file);\r\n      } else {\r\n        data = myInvitations[props.match.params.id][0];\r\n        await setEventdata(data.InvId.Story);\r\n        await setId(data._id);\r\n        await setbase(\"inv\");\r\n        await setisadmin(false);\r\n        if (data.Host.includes(Auth.Phone)) {\r\n          await setIsAdmin(true);\r\n        } else {\r\n          await setIsAdmin(false);\r\n        }\r\n        await setuniqurl(data.file);\r\n        await setmaincode(data.MainCode);\r\n      }\r\n    }\r\n  }, [myInvitations, MyEvents]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"desktop-only w-100\">\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={false} md={2}></Grid>\r\n        <Grid item xs={12} md={10}>\r\n          <Row\r\n            style={{\r\n              boxShadow: \"0px 3px 8px -2px rgb(122 122 122 / 33%)\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 20,\r\n                paddingLeft: \"10px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              <IoIosArrowBack\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Story\r\n            </p>\r\n          </Row>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{ padding: \"5px\" }}>\r\n          {Eventdata.length === 0 ? <></> : <></>}\r\n          <Story\r\n            Eventdata={Eventdata}\r\n            uniqurl={uniqurl}\r\n            IsAdmin={isadmin}\r\n            maincode={maincode}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Sidebar\\SidebarMore.js",["648","649","650","651","652","653","654","655","656","657","658","659","660","661","662"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { IoArrowBackCircleOutline, IoCall } from \"react-icons/io5\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport DancingImg from \"../../Assets/DancingImg.png\";\r\nimport {IoIosArrowBack} from \"react-icons/io\"\r\nimport { GoBook } from \"react-icons/go\";\r\nimport { IoPowerSharp, IoTrashOutline, IoShareSocialOutline } from \"react-icons/io5\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations, deleteInvite\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { logout } from '../../Redux/DispatchFuncitons/AuthFunctions'\r\nimport { Modal } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nexport default function SidebarMore(props) {\r\n  const [base, setbase] = useState(\"\");\r\n  const [ishost, setishost] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const [showPopup, toggleShowPopup] = useState(false)\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (props.location.pathname === \"/MyEvents/more/\" + props.match.params.id && MyEvents.length > 0) {\r\n        await setEventdata(MyEvents[props.match.params.id])\r\n        await setbase(\"MyEvents\");\r\n        console.log(Eventdata)\r\n        var Host = MyEvents[props.match.params.id][0].Host;\r\n        for (var i = 0; i < Host.length; i++) {\r\n          if (Host[i] === Auth.Phone) {\r\n            await setishost(true);\r\n            console.log(ishost)\r\n          }\r\n        }\r\n      } else if (props.location.pathname === \"/inv/more/\" + props.match.params.id && myInvitations.length > 0) {\r\n\r\n        await setEventdata(myInvitations[props.match.params.id])\r\n        await setbase(\"inv\");\r\n        console.log(Eventdata)\r\n        var Host = myInvitations[props.match.params.id][0].Host;\r\n        for (var i = 0; i < Host.length; i++) {\r\n          if (Host[i] === Auth.Phone) {\r\n            await setishost(true);\r\n            console.log(ishost)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [myInvitations, MyEvents]);\r\n  return (\r\n    <>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"modal\"\r\n        open={showPopup}\r\n      >\r\n        <div className=\"modal-card\">\r\n          <IconButton\r\n            className=\"popup-close\"\r\n            onClick={() => {\r\n              toggleShowPopup(false);\r\n            }}\r\n          >\r\n            <CancelIcon color=\"secondary\" fontSize=\"large\" />\r\n          </IconButton>\r\n          <Row className=\"m-0\"><center><h3 style={{ fontSize: 20, textAlign: 'center', fontWeight: 400 }}>\r\n            Do you want to delete this invite?</h3></center>\r\n          </Row>\r\n          <Row className=\"m-0\" style={{ paddingTop: 20 }}>\r\n            <Col><Button variant=\"danger\"\r\n              style={{ borderRadius: 20 }}\r\n              className=\"w-100\" onClick={() => {\r\n                dispatch(deleteInvite(Eventdata[0].MainCode))\r\n              }} >Yes</Button>\r\n            </Col>\r\n            <Col><Button variant=\"primary\"\r\n              style={{ borderRadius: 20 }} className=\"w-100\" onClick={() => {\r\n                toggleShowPopup(false);\r\n              }}>No</Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\r\n        <Row style={{boxShadow:'0px 3px 8px -2px rgb(122 122 122 / 33%)', margin:\"0\"}}>\r\n          <Col>\r\n            <p\r\n              style={{\r\n                fontWeight: 600,\r\n                fontSize: 20,\r\n                paddingLeft: \"10px\",\r\n                marginTop:'10px'\r\n              }}\r\n            >\r\n              <IoIosArrowBack\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              More\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Image src={DancingImg} className=\"sidebar_img\" />\r\n        <a\r\n          className=\"linkto-rows\"\r\n          onClick={() => {\r\n            history.push(\"../\" + \"story/\" + props.match.params.id);\r\n          }}\r\n        >\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <GoBook size=\"25\" /> Our Story\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        {ishost === true ? (\r\n          <a\r\n            className=\"linkto-rows\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/\" + 'event-create-success/' + Eventdata[0].MainCode + '/Share');\r\n            }}\r\n          >\r\n            <Row className=\"sidebar-rows\">\r\n              <Col xs={8}>\r\n                <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                  <IoShareSocialOutline size=\"25\" /> Share\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p>\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </a>) : <></>}\r\n        <a\r\n          className=\"linkto-rows\"\r\n          onClick={() => {\r\n            toggleShowPopup(true)\r\n            // dispatch(deleteInvite(Eventdata[0].MainCode))\r\n          }}\r\n        >\r\n          <Row className=\"sidebar-rows\">\r\n            <Col xs={8}>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                {\" \"}\r\n                <IoTrashOutline size=\"25\" /> Delete Invite\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        {ishost === true ? (\r\n          <a\r\n            className=\"linkto-rows\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/\" + \"admin/\" + props.match.params.id);\r\n            }}\r\n          >\r\n            <Row className=\"sidebar-rows\">\r\n              <Col>\r\n                <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                  <FaUserAlt size=\"20\" /> Admin\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p>\r\n                  {\" \"}\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n\r\n        <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <IoCall size=\"25\" /> Contact Us\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        <a className=\"linkto-rows\" onClick={() => { dispatch(logout()) }}>\r\n          <Row className=\"sidebar-rows\">\r\n\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <IoPowerSharp size=\"25\" /> Logout\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n\r\n        {/* <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Recommendaton</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        {/*  <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Prices</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Admin\\EventAdmin.js",["663","664","665","666","667","668","669","670"],"C:\\Projects\\MobillyInvite\\src\\Components\\EditEvent\\EditEvent.js",["671","672","673","674","675","676","677","678","679"],"C:\\Projects\\MobillyInvite\\src\\Components\\Guest\\Guest.js",["680","681","682","683","684","685","686","687","688"],"C:\\Projects\\MobillyInvite\\src\\Components\\Sidebar\\AdminSidebar.js",["689","690"],"import React from \"react\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { MdModeEdit } from \"react-icons/md\"\r\nexport default function AdminSidebar(props) {\r\n  let Eventdata = [];\r\n  let base = \"\";\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  if (props.location.pathname === \"/MyEvents/admin/\" + props.match.params.id) {\r\n    Eventdata = MyEvents;\r\n    base = \"MyEvents\";\r\n  } else {\r\n    Eventdata = myInvitations;\r\n    base = \"inv\";\r\n  }\r\n  console.log(Eventdata);\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\r\n        <Row>\r\n          <Col>\r\n            <p style={{\r\n              fontWeight: 600,\r\n              fontSize: 20,\r\n              paddingLeft: \"10px\",\r\n              marginBottom: 20,\r\n              marginTop: 20,\r\n\r\n            }}>\r\n              <IoArrowBackCircleOutline\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Admin\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        {Eventdata &&\r\n          Eventdata.map((eventdata, index) => (\r\n            <a\r\n              className=\"linkto-rows\"\r\n\r\n            >\r\n              <Row className=\"sidebar-rows\">\r\n                <Col style={{ margin: \"auto\", padding: \"10px\" }} xs={8}>{eventdata.Name}</Col>\r\n                <Col xs={4} onClick={() => {\r\n                  history.push(\r\n                    \"/\" + base + \"/admin/\" + props.match.params.id + \"/\" + index\r\n                  );\r\n                }} >\r\n                  <div style={{ float: 'right' }}>\r\n                    {/* <MdModeEdit style={{ margin: \"5px\" }} onClick={() => {\r\n                      history.push(\r\n                        \"/\" + base + \"/Manage-Event/\" + props.match.params.id + \"/\" + index\r\n                      );\r\n                    }} /> */}\r\n                    <RiArrowRightSLine size={20} style={{ margin: \"5px\" }} />\r\n                  </div>\r\n                </Col>\r\n\r\n              </Row>\r\n            </a>\r\n          ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\HomePage.js",["691"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport MainBanner from \"./MainBanner\";\r\nimport Contact from \"./ContactUs\";\r\nimport Footer from \"./Footer\";\r\nimport Features from \"./Features\";\r\nimport Additionals from \"./Additionals\";\r\nimport AboutBanner from \"./AboutBanner\";\r\nimport ChatWidget from \"./ChatWidget\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TemplateSlider from \"./TemplateSlider\";\r\nimport Testimonials from \"./Testimonials\";\r\n\r\nexport default function HomePage() {\r\n  const [Loading, setLoading] = useState(false);\r\n  useEffect(async () => {\r\n    await setLoading(true)\r\n    const timer = setTimeout(async () => {\r\n      await setLoading(false)\r\n    }, 3000);\r\n    return () => clearTimeout(timer);\r\n  }, [])\r\n  return (\r\n    <div>\r\n      {Loading === true ? <CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} /> :\r\n        <>\r\n          <MainBanner />\r\n          <ChatWidget />\r\n          <TemplateSlider />\r\n       \r\n          <Features />\r\n          <AboutBanner />\r\n          <Additionals />\r\n          <Testimonials />\r\n       {/*  <CompanySlide />  */}\r\n          <Contact />\r\n          <Footer />\r\n\r\n        </>}\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Gift\\Gift.js",["692","693","694","695","696","697","698","699","700","701"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Gift.css\";\r\nimport GiftBanner from \"./GiftBanner\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { url, GiftShopCategory } from \"../../Utils/Config\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport history from \"../../Utils/History\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport AmazonLogo from \"../../Assets/AmazonLogo.png\";\r\nimport { FaShoppingCart } from \"react-icons/fa\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../Animations/giftloading.json\";\r\n\r\nexport default function Gift(props) {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const dispatch = useDispatch();\r\n  const [gifts, setgifts] = useState([]);\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [category, setcategory] = useState(\"\");\r\n  const [maincode, setmaincode] = useState(\"\");\r\n  const [base, setbase] = useState(\"\");\r\nconst [name,setName] = useState(\"\");\r\n\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n\r\n  const redirect = () => {\r\n    window.location.href = \"https://shop.mobillyinvite.com/\";\r\n  };\r\n  useEffect(async () => {\r\n    let data = [];\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n      \r\n    } else {\r\n\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/gift/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.MainCode &&\r\n        MyEvents.length > 0\r\n      ) {\r\n        data = MyEvents[props.match.params.id][0];\r\n        await setEventdata(MyEvents[props.match.params.id][0]);\r\n        await setName(data.Name);\r\n        await setbase(\"MyEvents\");\r\n        await setcategory(MyEvents[props.match.params.id][0].InvId.Type);\r\n        await getgifts(MyEvents[props.match.params.id][0].InvId.Type);\r\n\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/gift/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.MainCode &&\r\n        myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id][0]);\r\n        await setbase(\"inv\");\r\n        await setcategory(myInvitations[props.match.params.id][0].InvId.Type);\r\n        await getgifts(myInvitations[props.match.params.id][0].InvId.Type);\r\n      }\r\n    }\r\n  }, [MyEvents, myInvitations]);\r\n  function getgifts(c) {\r\n    let Category = \"\";\r\n\r\n    GiftShopCategory.map((cat, index) => {\r\n      if (cat.Name === c) {\r\n        Category = cat.id;\r\n      }\r\n    });\r\n\r\n    axios\r\n      .post(url + \"event/ListGifts\", { category: Category })\r\n      .then(function (response) {\r\n        // console.log(response.data.alldata);\r\n        if (response.data.status === \"success\") {\r\n          setgifts(response.data.alldata);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {gifts.length <= 0 ? (\r\n        <div>\r\n          {\" \"}\r\n          <Lottie options={defaultOptions} height={400} width={400} />\r\n          <p style={{ textAlign: \"center\", fontSize: \"15px\", fontWeight: \"bold\" }}>Getting Some Cool Gifts <br /> for Your Event</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <NavMobile base={base} id={props.match.params.id} MainCode={props.match.params.MainCode} />\r\n          <GiftBanner />\r\n          {/* <p style={{fontSize: \"14px\", textAlign: \"center\", fontWeight: \"bold\"}}>By Some Gifts for Your Event-{name}</p> */}\r\n          <Grid spacing={0} container>\r\n            <Grid xs={12} item className=\"back-navigation desktop-only p-10px\">\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: 5,\r\n                  marginRight: 3,\r\n                  marginLeft: 3,\r\n                }}\r\n              >\r\n                <IoArrowBackCircleOutline\r\n                  size={40}\r\n                  style={{ color: \"black\" }}\r\n                  onClick={() => history.goBack()}\r\n                />\r\n                <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n                  Feed\r\n                </h3>\r\n              </div>\r\n            </Grid>\r\n\r\n            {gifts.map((gift, index) => (\r\n              <Grid xs={12} sm={3} item key={index}>\r\n                <Row className=\"product_card\">\r\n                  <Col\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <img src={gift.images[0].src} fluid />\r\n                    <img\r\n                      src={AmazonLogo}\r\n                      style={{ height: \"15px\", objectFit: \"contain\" }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <div className=\"product_cardbody\">\r\n                      <div className=\"card-title\">\r\n                        <h4 style={{ fontSize: 13 }}>{gift.name}</h4>\r\n                        <h3 style={{ fontSize: 13 }}>₹{gift.price}</h3>\r\n                      </div>\r\n\r\n                      <p>{gift.short_description}</p>\r\n\r\n                      <div className=\"btn-group\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() =>\r\n                            window.open(\r\n                              gift.external_url,\r\n                              \"_blank\",\r\n                              \"noopener,noreferrer\"\r\n                            )\r\n                          }\r\n                          style={{ borderRadius: \"20px\" }}\r\n                        >\r\n                          <FaShoppingCart style={{ marginRight: 5 }} />\r\n                          Buy Now\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-outline-primary\"\r\n                          onClick={() =>\r\n                            window.open(\r\n                              gift.permalink,\r\n                              \"_blank\",\r\n                              \"noopener,noreferrer\"\r\n                            )\r\n                          }\r\n                          style={{ borderRadius: \"20px\" }}\r\n                        >\r\n                          Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n            ))}\r\n            <Button\r\n              variant=\"primary\"\r\n              style={{ margin: \"auto\", borderRadius: \"20px\" }}\r\n              onClick={redirect}\r\n            >\r\n              Load More\r\n            </Button>\r\n            <Grid xs={12} item className=\"m-b-50px\"></Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\EventCreateAndUpdate\\CreateOrUpdate.js",["702"],"import React, { useState, useEffect } from 'react'\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport './CreateOrUpdate.css'\r\nexport default function CreateOrUpdate(props) {\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n    return (\r\n        <div> <Header url={props.location.pathname} ismobile=\"desktop-only\" />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Templates\\Templates.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddEventSucess.js",["703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720"],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\hoxinvitation.js",["721","722","723","724","725","726","727"],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\RSVP\\Rsvp.js",["728","729","730"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import \"../EventInfo/EventInfo.css\";\r\nimport { Carousel, Button } from \"react-bootstrap\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport history from \"../../../Utils/History\";\r\nimport \"./Rsvp.css\";\r\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\r\nexport default function Rsvp(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [base, setbase] = useState(\"\");\r\n  const Eventdata1 = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  const Eventdata2 = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  useEffect(async () => {\r\n    if (props.location.pathname === \"/MyEvents/rsvp/\" + props.match.params.id) {\r\n      await setbase(\"MyEvents\");\r\n      setEventdata(Eventdata2);\r\n    } else {\r\n      await setbase(\"inv\");\r\n      setEventdata(Eventdata1);\r\n    }\r\n  }, []);\r\n  const Next = async (i) => {\r\n    if (Eventdata && Eventdata.length > 0) {\r\n      console.log(i, Eventdata.length);\r\n      if (i < Eventdata.length) {\r\n        setindex(i);\r\n        setdirection(\"next\");\r\n      } else {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n        await dispatch(getNotification())\r\n        history.goBack()\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const [index, setindex] = useState(0);\r\n\r\n  const [direction, setdirection] = useState(\"\");\r\n\r\n  const handleSelect = (index) => {\r\n    let newIndex = index + 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*  <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav />\r\n      <Toggler /> */}\r\n      <Carousel\r\n        controls={false}\r\n        direction={direction}\r\n        onSelect={(i) => {\r\n          handleSelect(i);\r\n        }}\r\n        activeIndex={index}\r\n        interval={99999999999999}\r\n      >\r\n        {base === \"inv\"\r\n          ? Eventdata1 &&\r\n          Eventdata1.map((eve, index) => (\r\n            <Carousel.Item>\r\n              {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  className=\"d-block rsvpimage\"\r\n                  src={eve.file}\r\n                  alt=\"First slide\"\r\n                />) : (\r\n                <video\r\n                  muted\r\n                  type=\"video/mp4\"\r\n                  autoPlay={true}\r\n                  src={\r\n                    eve.file\r\n                  }\r\n                  preload=\"none\"\r\n                  className=\"d-block rsvpimage\"\r\n                />\r\n              )}\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain \"\r\n                    onClick={async () => {\r\n\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))\r\n          : Eventdata2 &&\r\n          Eventdata2.map((eve, index) => (\r\n            <Carousel.Item>\r\n              {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  className=\"d-block rsvpimage\"\r\n                  src={eve.file}\r\n                  alt=\"First slide\"\r\n                />) : (\r\n                <video\r\n                  muted\r\n                  type=\"video/mp4\"\r\n                  autoPlay={true}\r\n                  src={\r\n                    eve.file\r\n                  }\r\n                  preload=\"none\"\r\n                  className=\"d-block rsvpimage\"\r\n                />\r\n              )}\r\n\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain \"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Terms.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\ReducerCombiner.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\postfunctions.js",["731"],"import { GOTPOST } from \"../Actions/PostActions\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { GetEvents } from './Eventfunctions'\r\nimport { getNotification } from './NotificationFunctions'\r\nexport function getposts() {\r\n  return (dispatch) => {\r\n\r\n    axios.get(url + \"post/getposts\").then((res) => {\r\n      dispatch({\r\n        type: GOTPOST,\r\n        payload: res.data.data,\r\n      });\r\n      return true\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function likepost(id, by, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"post/like\", { id: id, by: by, date: dateTime, MainCode: MainCode }).then((res) => {\r\n      dispatch(getNotification());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function likecomment(id, by, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"event/likecomment\", { id: id, by: by, date: dateTime, MainCode: MainCode }).then((res) => {\r\n      dispatch(GetEvents());\r\n      dispatch(getNotification());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function addcomments(id, by, comment, MainCode) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"post/comment\", { id: id, by: by, comment: comment, date: dateTime, MainCode: MainCode })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch(GetEvents());\r\n        dispatch(getNotification());\r\n        return 1;\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function addpost(id, by, furl, type, tags, caption, setisSubmit) {\r\n  return (dispatch) => {\r\n    console.log(\"alling\");\r\n    axios\r\n      .post(url + \"post/add\", {\r\n        id: id,\r\n        by: by,\r\n        furl: furl,\r\n        type: type,\r\n        tags: tags,\r\n        caption: caption,\r\n      })\r\n      .then(async (res) => {\r\n        // dispatch(getposts());\r\n        await dispatch(getNotification());\r\n        await setisSubmit(false)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\nexport function deletePost(id) {\r\n  return (dispatch) => {\r\n    console.log(\"alling\");\r\n    axios\r\n      .post(url + \"post/delete\", {\r\n        _id: id,\r\n      })\r\n      .then((res) => {\r\n        dispatch(GetEvents());\r\n        dispatch(getNotification());\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js",["732"],"import {\r\n  LOGINSUCCESS,\r\n  LOGINFAIL,\r\n  GOTOTP,\r\n  OPTEXPIRED,\r\n  OTPVERIFIED,\r\n  SAVEUSER,\r\n  LOGOUT,\r\n} from \"../Actions/AuthActions\";\r\nimport setAuthToken from \"../../Utils/Login\";\r\nimport axios from \"axios\";\r\nimport { url, testmode } from \"../../Utils/Config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport history from \"../../Utils/History\";\r\nexport function getopt(Phone) {\r\n  return (dispatch) => {\r\n    const userData = {\r\n      Phone,\r\n    };\r\n    if (Phone !== \"\") {\r\n      if (testmode === true) {\r\n        dispatch(loginuser(Phone))\r\n      } else {\r\n        axios.post(url + \"auth/send-otp\", userData).then((res) => {\r\n          console.log(res);\r\n          if (res.data.status === \"pending\") {\r\n            dispatch({\r\n              type: GOTOTP,\r\n            });\r\n          } else {\r\n          }\r\n        });\r\n      }\r\n\r\n    }\r\n  };\r\n}\r\nexport function verifyotp(Phone, code) {\r\n  return async (dispatch) => {\r\n    if (code !== \"\") {\r\n      await axios\r\n        .post(url + \"auth/verify-otp\", { Phone, code })\r\n        .then(async (res) => {\r\n          await console.log(res);\r\n          if (\r\n            res.data.status === \"checked\" &&\r\n            res.data.response === \"approved\"\r\n          ) {\r\n            console.log(res.data.data);\r\n            dispatch({\r\n              type: OTPVERIFIED,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: OPTEXPIRED,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n}\r\nexport function loginuser(Phone) {\r\n  return (dispatch) => {\r\n    const userData = {\r\n      Phone,\r\n    };\r\n    if (Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/login\", userData)\r\n        .then((res) => {\r\n          if (res.data.token) {\r\n            const token = res.data.token;\r\n            const decoded = jwt_decode(token);\r\n            setAuthToken(token);\r\n            //checkfor codeed Events\r\n            dispatch({\r\n              type: LOGINSUCCESS,\r\n              payload: res.data,\r\n            });\r\n            // history.push(\"/home\");\r\n            return \"loggedin\";\r\n          } else if (res.data.status === \"-1\") {\r\n            dispatch({\r\n              type: LOGINFAIL,\r\n              payload: res.data.message,\r\n            });\r\n          } else if (res.data.details[0].message) {\r\n            dispatch({\r\n              type: LOGINFAIL,\r\n              payload: res.data.details[0].message,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n}\r\nexport function logout(Phone) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n}\r\nexport function saveuserinfo(Name, Gender, DOB, Image, nurl) {\r\n  return (dispatch) => {\r\n    console.log(\"/\" + nurl);\r\n    const userData = {\r\n      Name: Name,\r\n      Gender: Gender,\r\n      DOB: DOB,\r\n      Image: Image,\r\n    };\r\n    if (Name !== \"\" && Gender !== \"\") {\r\n      axios\r\n        .post(url + \"auth/userinfo\", userData)\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            console.log(res.data.user);\r\n            dispatch({\r\n              type: SAVEUSER,\r\n              payload: res.data.user,\r\n            });\r\n            if (nurl !== \"\") {\r\n              history.push(\"/\" + nurl);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n}\r\nexport function getuserdata(Phone) {\r\n  const userData = {\r\n    Phone: Phone,\r\n  };\r\n  if (Phone !== \"\") {\r\n    axios\r\n      .get(url + \"auth/userinfo\", userData)\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log(res.data.user);\r\n          return res.data.user;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return { err: \"error 404\" };\r\n      });\r\n  }\r\n}\r\nexport function checktoken() {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + \"auth/verify\")\r\n      .then((res) => {\r\n        if (res.data.status !== \"valid\") {\r\n          dispatch({\r\n            type: LOGOUT,\r\n          });\r\n          history.push(\"\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: LOGOUT,\r\n        });\r\n      });\r\n  };\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Utils\\Config.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\Invitation.js",["733","734","735","736","737","738","739","740","741","742","743","744","745","746"],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js",["747"],"import { GOTNOTIFICATIONS } from \"../Actions/NotificationAction\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nexport function getNotification() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"notification/getNotifications\").then((res) => {\r\n      dispatch({\r\n        type: GOTNOTIFICATIONS,\r\n        payload: res.data.data,\r\n      });\r\n      return true\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js",["748","749","750"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport history from \"../../Utils/History\";\r\nimport { SAVECHATS, GOTCHATS, UPDATECHAT } from \"../Actions/ChatActions\";\r\nexport function savechats(DATA) {\r\n  return (dispatch) => {\r\n    dispatch({ type: SAVECHATS, payload: DATA });\r\n  };\r\n}\r\nexport function creategroup(Name, room, Participants, GrpPhoto, Type) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"chatgroup/createroom\", {\r\n        Name: Name,\r\n        room: room,\r\n        Participants: Participants,\r\n        GrpPhoto: GrpPhoto,\r\n        Type: Type,\r\n      })\r\n      .then((res) => {\r\n        dispatch(getChats());\r\n      });\r\n  };\r\n}\r\nexport function updatechat(data, room) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATECHAT,\r\n      payload: {\r\n        data,\r\n        room,\r\n      },\r\n    });\r\n  };\r\n}\r\nexport function getChats() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"chatgroup/getmyrooms\").then((res) => {\r\n      dispatch({ type: SAVECHATS, payload: res.data.Chatgroup });\r\n      console.log(res);\r\n      return true\r\n    });\r\n  };\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\List.js",["751","752","753","754","755","756","757"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport history from \"../../Utils/History\";\r\nimport {\r\n  Paper,\r\n  InputBase,\r\n  Tabs,\r\n  IconButton,\r\n  Tab,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport SelectParticipant from \"./SelectParticipant\";\r\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabroot: {\r\n    flexGrow: 1,\r\n  },\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    borderRadius: \"500px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\nexport default function CList(props) {\r\n  const [value, setValue] = useState(0);\r\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  // console.log(Auth.Phone);\r\n  const [show, setshow] = useState(false);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const [Groups, setGroups] = useState([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    let grpcopy = [];\r\n    AllGroups.map((sgrpup) => {\r\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\r\n        grpcopy.push(sgrpup);\r\n      }\r\n    });\r\n    setGroups(grpcopy);\r\n  }, []);\r\n  useEffect(() => {\r\n    let grpcopy = [];\r\n    AllGroups.map((sgrpup) => {\r\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\r\n        grpcopy.push(sgrpup);\r\n      }\r\n    });\r\n    setGroups(grpcopy);\r\n  }, [AllGroups]);\r\n  return (\r\n    <div className=\"h100 vlgrey\">\r\n      <Grid container spacing={0} className=\"h7 white\">\r\n        <Grid item xs={10} className=\"h7 white\">\r\n          <h2 className=\"chatheadertitle\">\r\n            {/* <ArrowBackIosIcon\r\n              onClick={() => {\r\n                // console.log(props.pushto);\r\n                history.goBack();\r\n              }}\r\n            /> */}\r\n            Chat\r\n          </h2>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <AddCircleOutlineIcon\r\n            fontSize={\"large\"}\r\n            color={\"primary\"}\r\n            className=\"m-5px\"\r\n            onClick={() => {\r\n              setshow(true);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.tabroot}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Direct\" />\r\n            <Tab label=\"Group\" />\r\n          </Tabs>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search for Participants\"\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n\r\n            <IconButton\r\n              color=\"default\"\r\n              className={classes.iconButton}\r\n              aria-label=\"directions\"\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} className=\" w-90-p\">\r\n          <List>\r\n            {Groups.map((grp) => (\r\n              <ListItem\r\n                className=\" m-5px\"\r\n                onClick={() => {\r\n                  // console.log(grp);\r\n                  props.setSelectedGroup(grp);\r\n                  props.setchat(grp.chats);\r\n                  props.updateName();\r\n                  props.setshow(1);\r\n                }}\r\n              >\r\n                {value === 1 && grp.Type === \"GRP\" ? (\r\n                  <>\r\n                    <ListItemAvatar>\r\n                      <Avatar alt=\"Profile Picture\" src={grp.GrpPhoto} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={grp.Name} />\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {value === 0 && grp.Type === \"INDV\" ? (\r\n                  <>\r\n                    <ListItemAvatar>\r\n                      <UserDatajustUrl\r\n                        showIcon={true}\r\n                        Phone={\r\n                          grp.Name === Auth.Phone ||\r\n                            \"+91\" + grp.Name === Auth.Phone\r\n                            ? typeof grp.Admin === \"string\" &&\r\n                              grp.Admin.toString().startsWith(\"+\")\r\n                              ? grp.Admin\r\n                              : \"+91\" + grp.Admin\r\n                            : typeof grp.Name === \"string\" &&\r\n                              grp.Name.toString().startsWith(\"+\")\r\n                              ? grp.Name.toString()\r\n                              : \"+91\" + grp.Name\r\n                        }\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText>\r\n                      <UserDatajustUrl\r\n                        showName={true}\r\n                        Phone={\r\n                          grp.Name === Auth.Phone ||\r\n                            \"+91\" + grp.Name === Auth.Phone\r\n                            ? typeof grp.Admin === \"string\" &&\r\n                              grp.Admin.toString().startsWith(\"+\")\r\n                              ? grp.Admin\r\n                              : \"+91\" + grp.Admin\r\n                            : typeof grp.Name === \"string\" &&\r\n                              grp.Name.toString().startsWith(\"+\")\r\n                              ? grp.Name.toString()\r\n                              : \"+91\" + grp.Name\r\n                        }\r\n                      />\r\n                    </ListItemText>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Popup\r\n        component={SelectParticipant}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        url={props.allparticipants}\r\n        showall={value}\r\n        MainCode={props.MainCode}\r\n        Groups={Groups}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\Chatbox.js",["758","759","760","761","762","763","764","765","766","767"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport axios from \"axios\";\r\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"96%\",\r\n    marginLeft: \"1%\",\r\n    background: \" #f5f0f0\",\r\n    borderRadius: \"500px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function Chatbox(props) {\r\n  const classes = useStyles();\r\n  const [chats, setchat] = useState([]);\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    type = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let url = props.SelectedGroup.room + \"/\" + Date.now() + \".\" + type;\r\n      // console.log(url);\r\n      let filedata = await uploadString(reader.result, url);\r\n      props.sendImage({\r\n        sender: Auth.Phone,\r\n        type: \"image\",\r\n        content: filedata,\r\n        room: props.SelectedGroup.room,\r\n        _id: props.SelectedGroup._id,\r\n      });\r\n      // console.log({\r\n      // sender: Auth.Phone,\r\n      //   type: \"image\",\r\n      //     content: filedata,\r\n      //       room: props.SelectedGroup.room,\r\n      //         _id: props.SelectedGroup._id,\r\n      // });\r\n    };\r\n    reader.onerror = function (error) {\r\n      //// console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, \",\r\n  });\r\n  useEffect(async () => {\r\n    const interval = setInterval(() => {\r\n      if (props.SelectedGroup._id !== \"\") {\r\n        getChats(props.SelectedGroup._id);\r\n      }\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  useEffect(async () => {\r\n    props.setIsSubmit(false);\r\n  }, [props.SelectedGroup.chats, props.IsSubmit]);\r\n\r\n  const getChats = (_id) => {\r\n    axios\r\n      .post(url + \"chatgroup/getchat\", { _id: _id })\r\n      .then(function (response) {\r\n        // console.log(response);\r\n        if (response.data.status === \"success\") {\r\n          setchat(response.data.chatdata);\r\n          // console.log(response.data.chatdata);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n  return (\r\n    <Grid container spacing={0} className=\"h100\">\r\n      <Grid item xs={12} className=\"h7 white\">\r\n        <List className=\"p-0 m-0\">\r\n          <ListItem className=\" m-0\">\r\n            {props.fullscreen === false ? (\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.setshow(0);\r\n                }}\r\n              >\r\n                <ArrowBackIosIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {props.SelectedGroup !== \"\" ? (\r\n              props.SelectedGroup.Type === \"GRP\" ? (\r\n                <>\r\n                  <ListItemIcon>\r\n                    <Avatar src={props.SelectedGroup.GrpPhoto} />\r\n                  </ListItemIcon>\r\n                  <ListItemText>{props.SelectedGroup.Name}</ListItemText>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ListItemAvatar>\r\n                    <UserDatajustUrl\r\n                      showIcon={true}\r\n                      Phone={\r\n                        props.SelectedGroup.Name === Auth.Phone ||\r\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\r\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\r\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Admin\r\n                            : \"+91\" + props.SelectedGroup.Admin\r\n                          : typeof props.SelectedGroup.Name === \"string\" &&\r\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Name.toString()\r\n                            : \"+91\" + props.SelectedGroup.Name\r\n                      }\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText>\r\n                    <UserDatajustUrl\r\n                      showName={true}\r\n                      Phone={\r\n                        props.SelectedGroup.Name === Auth.Phone ||\r\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\r\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\r\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Admin\r\n                            : \"+91\" + props.SelectedGroup.Admin\r\n                          : typeof props.SelectedGroup.Name === \"string\" &&\r\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Name.toString()\r\n                            : \"+91\" + props.SelectedGroup.Name\r\n                      }\r\n                    />\r\n                  </ListItemText>\r\n                </>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </ListItem>\r\n        </List>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} className=\"chat\">\r\n        {chats &&\r\n          chats.map((chat) => (\r\n            <>\r\n              {chat.sender === Auth.Phone ? (\r\n                <div className=\"sender\">\r\n                  {chat.type === \"text\" ? (\r\n                    chat.content\r\n                  ) : chat.type === \"image\" ? (\r\n                    <img src={chat.content} className=\"chat-img\" />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"recieved\">\r\n                  {chat.type === \"text\" ? (\r\n                    <>\r\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\r\n                      :\r\n                      <br />\r\n                      {chat.content}\r\n                    </>\r\n                  ) : chat.type === \"image\" ? (\r\n                    <>\r\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\r\n                      :\r\n                      <br />\r\n                      <img src={chat.content} className=\"chat-img\" />\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </>\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className=\"inputbox\"\r\n        style={{ display: props.SelectedGroup !== \"\" ? \"block\" : \"none\" }}\r\n      >\r\n        <Paper\r\n          component=\"form\"\r\n          className={classes.root}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n              <AttachFileIcon className=\"tilt\" />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <InputBase\r\n            className={classes.input}\r\n            placeholder=\"hi...\"\r\n            inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            value={props.text}\r\n            onChange={(e) => {\r\n              props.settext(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Divider className={classes.divider} orientation=\"vertical\" />\r\n          <IconButton\r\n            color=\"primary\"\r\n            className={classes.iconButton}\r\n            aria-label=\"directions\"\r\n            onClick={() => {\r\n              props.submit();\r\n              props.settext(\"\");\r\n            }}\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\GuestActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\TemplateActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js",["768","769","770"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { ADDCODEDEVENT, DELETECODEDEVENT } from \"../Actions/CodeAction\";\r\nimport history from \"../../Utils/History\";\r\nexport function addEvent(Code, Maincode) {\r\n    return (dispatch) => {\r\n        dispatch({ type: ADDCODEDEVENT, payload: { Code: Code, Maincode: Maincode } });\r\n    };\r\n}\r\nexport function deleteEvent() {\r\n    return (dispatch) => {\r\n        dispatch({ type: DELETECODEDEVENT });\r\n    };\r\n}","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Navbar.js",["771","772"],"import React from \"react\";\r\nimport MobileLogo from \"../../Assets/MobileLogo.png\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          <img\r\n            src={MobileLogo} \r\n            width={30}\r\n            height={30}\r\n            className=\"d-inline-block align-top mx-2\"\r\n            alt\r\n          />\r\n         \r\n        </a>\r\n        <Link to=\"/\">\r\n        <Button variant=\"primary\" style={{borderRadius:'20px', fontSize:'12px'}}>Back to Home</Button>\r\n     </Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","C:\\Projects\\MobillyInvite\\src\\Components\\Templates\\SingleTemplate.js",["773","774"],"import React, { useState } from \"react\";\r\nimport TemplateOne from \"../../Assets/TemplateOne.jpg\";\r\nimport \"./Templates.scss\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function SingleTemplate(props) {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div\r\n        class=\"card template_card\"\r\n        style={{\r\n          backgroundImage: `url(${props.image})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundPosition: \"center\",\r\n        }}\r\n      >\r\n        <div class=\"content\">\r\n          <h2 class=\"title\" style={{ visibility: \"hidden\" }}>\r\n            {props.name}\r\n          </h2>\r\n          <p class=\"copy\" style={{ visibility: \"hidden\" }}>\r\n            {props.desc}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {\" \"}\r\n        <Button\r\n          className=\"template_btn\"\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            toggleShowPopup(true);\r\n          }}\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSingleTemplate.defaultProps = {\r\n  image: TemplateOne,\r\n  name: \"Template\",\r\n  desc: \"Yatin Weds Charu\",\r\n};\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Templates\\TempData.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\ChatWidget.js",["775"],"import React from 'react';\r\nimport \"./styles.css\"\r\nimport { FaWhatsapp } from 'react-icons/fa'\r\n\r\nexport default function ChatWidget() {\r\n    return (\r\n        <div className=\"zap_widget\">\r\n            <a className=\"blantershow-chat\" title=\"Show Chat\" href=\"https://api.whatsapp.com/send?phone=919873971865&text=Hii%21%20There.\"><i className=\"fab fa-whatsapp\" />Contact Us</a>\r\n        </div>\r\n    )\r\n}","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\TemplateSlider.js",["776","777"],"import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  Autoplay,\r\n  Pagination,\r\n  Navigation,\r\n  Scrollbar,\r\n} from \"swiper\";\r\nimport SingleTemplate from \"../Templates/SingleTemplate\";\r\nimport { slidertemplates, VideoTemplates } from \"../Templates/TempData\";\r\nimport history from \"../../Utils/History\";\r\nimport { Tabs, Tab, Button } from \"react-bootstrap\";\r\nimport \"./styles.css\"\r\nSwiperCore.use([Autoplay, Pagination, Navigation, Scrollbar]);\r\n\r\nconst redirect = () => {\r\n  window.location.href =\r\n    \"https://www.youtube.com/channel/UCF0WL5F607A9hJr_slnM1Yw\";\r\n};\r\n\r\nconst formCollect = () => {\r\n  window.open(\"https://forms.gle/bWjqDXCha7TtDpew7\", \"_blank\");\r\n};\r\nfunction TemplateSlider(props) {\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ background: \"antiquewhite\" }}>\r\n        <Tabs\r\n          defaultActiveKey=\"home\"\r\n          id=\"uncontrolled-tab-example\"\r\n         \r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\",\r\n\r\n          }}\r\n        >\r\n          <Tab eventKey=\"home\" title=\"Image Templates\" className=\"home_tabs\">\r\n            <h2\r\n              style={{\r\n                fontWeight: 600,\r\n                textAlign: \"center\",\r\n                display: \"none\",\r\n              }}\r\n            >\r\n              Templates\r\n            </h2>\r\n            <Swiper\r\n              slidesPerView={2}\r\n              spaceBetween={10}\r\n              pagination={{\r\n                clickable: true,\r\n              }}\r\n              breakpoints={{\r\n                640: {\r\n                  slidesPerView: 2,\r\n                  spaceBetween: 20,\r\n                },\r\n                768: {\r\n                  slidesPerView: 4,\r\n                  spaceBetween: 40,\r\n                },\r\n                1024: {\r\n                  slidesPerView: 4,\r\n                  spaceBetween: 50,\r\n                },\r\n              }}\r\n              loop={true}\r\n              autoplay={{\r\n                delay: 2500,\r\n                disableOnInteraction: false,\r\n              }}\r\n              pagination={{\r\n                clickable: true,\r\n                dynamicBullets: true,\r\n              }}\r\n            >\r\n              {slidertemplates.map((template) => {\r\n                return (\r\n                  <SwiperSlide>\r\n                    <SingleTemplate\r\n                      name={template.title.slice(0, 10)}\r\n                      image={template.urlToImage}\r\n                      desc={template.shortdesc}\r\n                    />{\" \"}\r\n                  </SwiperSlide>\r\n                );\r\n              })}\r\n            </Swiper>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary my-4\"\r\n                style={{ borderRadius: \"20px\", width: \"20vh\" }}\r\n                onClick={() => {\r\n                  history.push(\"/templates\");\r\n                }}\r\n              >\r\n                Explore All\r\n              </button>\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"profile\" title=\"Video Invite\">\r\n            <Swiper\r\n              slidesPerView={1}\r\n              spaceBetween={10}\r\n              pagination={{\r\n                clickable: true,\r\n              }}\r\n              breakpoints={{\r\n                640: {\r\n                  slidesPerView: 1,\r\n                  spaceBetween: 20,\r\n                },\r\n                768: {\r\n                  slidesPerView: 3,\r\n                  spaceBetween: 40,\r\n                },\r\n                1024: {\r\n                  slidesPerView: 3,\r\n                  spaceBetween: 50,\r\n                },\r\n              }}\r\n              loop={true}\r\n              autoplay={{\r\n                delay: 2500,\r\n                disableOnInteraction: true,\r\n              }}\r\n              pagination={{\r\n                clickable: true,\r\n                dynamicBullets: true,\r\n              }}\r\n            >\r\n              {VideoTemplates.map((template) => {\r\n                return (\r\n                  <SwiperSlide>\r\n                    <iframe\r\n                      width=\"560\"\r\n                      height=\"315\"\r\n                      src={template.url}\r\n                      title=\"YouTube video player\"\r\n                      frameborder=\"0\"\r\n                      allow=\"autoplay\"\r\n                      allowfullscreen\r\n                      onClick={console.log(\"Clicked\")}\r\n                    ></iframe>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                      <Button\r\n                        className=\"template_btn\"\r\n                        variant=\"primary\"\r\n                        style={{ marginTop: \"auto\" }}\r\n                        onClick={formCollect}\r\n                      >\r\n                        Create Your Own\r\n                      </Button>\r\n                    </div>\r\n                    <p style={{ textAlign: \"center\" }}> (Starts from 299)</p>\r\n                    <br />\r\n                  </SwiperSlide>\r\n                );\r\n              })}\r\n            </Swiper>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              {\" \"}\r\n              <Button\r\n                variant=\"primary\"\r\n                style={{ borderRadius: \"20px\" }}\r\n                onClick={redirect}\r\n              >\r\n                Explore More\r\n              </Button>\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TemplateSlider;\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Gift\\GiftBanner.js",["778","779","780","781"],"import React, { useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  Autoplay,\r\n  Pagination,\r\n  Navigation,\r\n  Scrollbar,\r\n} from \"swiper\";\r\n\r\nimport Banner from \"../../Assets/Banner.jpg\";\r\nimport BannerTwo from \"../../Assets/BannerTwo.jpg\";\r\nimport BannerThree from \"../../Assets/BannerThree.jpg\";\r\n\r\n\r\n\r\nSwiperCore.use([Autoplay, Pagination, Navigation, Scrollbar]);\r\nconst GiftBanner = () => {\r\n  return (\r\n    <>\r\n\r\n    <Swiper\r\n      centeredSlides={true}\r\n      slidesPerView={1}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 6500,\r\n        disableOnInteraction: false,\r\n      }}\r\n      pagination={{\r\n        clickable: true,\r\n        \"dynamicBullets\": true\r\n      }}\r\n    >\r\n      <SwiperSlide>\r\n        <img src={Banner} />\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <img src={BannerTwo} />\r\n      </SwiperSlide>\r\n     {/*  <SwiperSlide>\r\n        <img src={BannerThree} />\r\n      </SwiperSlide> */}\r\n    </Swiper>\r\n    </>\r\n  );\r\n};\r\nexport default GiftBanner;\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\AboutBanner.js",["782","783","784","785"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport DanceIcon from \"../../Assets/DanceIcon.png\"\r\nimport Swiper from \"react-id-swiper\";\r\nimport HappyIcon from \"../../Assets/Group 4317.png\"\r\nimport celebrateslide from \"../../Assets/celebrateslide.jpg\"\r\nimport birthdayslide from \"../../Assets/birthdayslide.jpg\"\r\n\r\n\r\nexport default function AboutBanner() {\r\n  return (\r\n    <Swiper>\r\n      <div className=\"personal_area py-75\" style={{ marginTop: 20 }}>\r\n        <div className=\"container\">\r\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\r\n            <div className=\"item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    src={celebrateslide}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\" font-weight-bold\">Personal Events</h2>\r\n                  <p className=\"text-secondary\">\r\n                  Invite your guests now digitally on a DIY Platform with no\r\n                      hassle and also share your excitement by bringing them on\r\n                      the same platform, with lot more features to keep them all\r\n                      engaged. You can also share your memories/album with all\r\n                      the guests at a go and keep them all updated\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"personal_area py-75\">\r\n        <div className=\"container\">\r\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\r\n            <div className=\"item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    src={birthdayslide}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\"font-weight-bold\">Video Conferencing</h2>\r\n                  <p className=\"text-secondary\">\r\n                  Excited about your child birthday? Now share your excitement with all your guests digitally. A smart tracker for RSVP and managing your guests. Also, keep your memories with you forever with digital albums. \r\n<br /><br />\r\n<span style={{textAlign:\"center\"}}>Create Invite Now!😊</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Swiper>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Additionals.js",["786","787","788","789","790","791"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport PictureIcon from \"../../Assets/PictureIcon.png\";\r\nimport EngageIcon from \"../../Assets/EngageIcon.png\";\r\nimport AlbumsIcon from \"../../Assets/AlbumsIcon.png\";\r\nimport CustomIcon from \"../../Assets/CustomIcon.png\";\r\nimport PrivateIcon from \"../../Assets/PrivateIcon.png\";\r\nimport InviteIcon from \"../../Assets/InviteIcon.png\";\r\nimport EasyIcon from \"../../Assets/EasyIcon.png\";\r\nimport DestinIcon from \"../../Assets/DestinIcon.png\";\r\nimport MobilePro from \"../../Assets/MobilePro.png\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\n\r\nexport default function Additionals() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"additional_part py-75\">\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 mb-4\">\r\n                <h2\r\n                  style={{\r\n                    fontWeight: 600,\r\n                    textAlign: \"center\",\r\n                    marginTop: \"20px\",\r\n                  }}\r\n                >\r\n                  Additionals\r\n                </h2>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img src={PictureIcon} alt=\"img\" className=\"img-fluid\" />\r\n                  <p className=\"text-color mt-2 mb-2\">Pictures and Videos</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img src={EngageIcon} alt=\"img\" className=\"img-fluid\" />\r\n                  <p className=\"text-color mt-2 mb-2\">Engagement</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img src={AlbumsIcon} alt=\"img\" className=\"img-fluid\" />\r\n                  <p className=\"text-color mt-2 mb-2\">Albums</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img src={CustomIcon} alt=\"img\" className=\"img-fluid\" />\r\n                  <p className=\"text-color mt-2 mb-2\">Customize</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img src={PrivateIcon} alt=\"img\" className=\"img-fluid\" />\r\n                  <p className=\"text-color mt-2 mb-2\">Private / Secure</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img src={InviteIcon} alt=\"img\" className=\"img-fluid\" />\r\n                  <p className=\"text-color mt-2 mb-2\">Invite at GO</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img src={EasyIcon} alt=\"img\" className=\"img-fluid\" />\r\n                  <p className=\"text-color mt-2 mb-2\">\r\n                    Easy to create in 5 Minutes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img src={DestinIcon} alt=\"img\" className=\"img-fluid\" />\r\n                  <p className=\"text-color mt-2 mb-2\">Destination Event</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 text-left\">\r\n                <button\r\n                  className=\"addition_btn\"\r\n                  onClick={() => {\r\n                    toggleShowPopup(true);\r\n                  }}\r\n                >\r\n                  Create an Invite\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"Additionals_img\">\r\n              <img src={MobilePro} className=\"img-fluid\" alt=\"img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Features.js",["792","793","794","795"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport PeopleIcon from \"../../Assets/PeopleIcon.png\"\r\nimport RSVPIcon from \"../../Assets/RSVPIcon.png\"\r\nimport LocationIcon from \"../../Assets/LocationIcon.png\"\r\nimport MobileIcon from \"../../Assets/MobileIcon.png\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nexport default function Features() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: 25 }}>\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 mb-4\">\r\n          <h2  style={{\r\nfontWeight:600,\r\n            textAlign: \"center\",\r\n            marginTop:'20px'\r\n           \r\n          }}>\r\n            Our Features\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={MobileIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">No App Required</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={PeopleIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">Unlimited Guests</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={RSVPIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">RSVP</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={LocationIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">Schedule Location</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 text-center mt-5\">\r\n          <button className=\"feature_btn\" onClick={() => {\r\n            toggleShowPopup(true);\r\n          }}>Create an Invite</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\ContactUs.js",["796","797"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport ContactImg from \"../../Assets/ContactImg.png\";\r\nimport { db } from \"./Firebase\";\r\n\r\nconst ContactUs = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    db.collection(\"contacts\")\r\n      .add({\r\n        name: name,\r\n        email: email,\r\n        message: message,\r\n      })\r\n      .then(() => {\r\n        setLoader(false);\r\n        alert(\"Your message has been submitted👍\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n        setLoader(false);\r\n      });\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact_us py-75\" style={{ marginTop: 50 }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 align-self-end\">\r\n            <img src={ContactImg} alt=\"img\" className=\"img-fluid\" />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h2 className=\"font-weight-bold mb-4\">Contact Us</h2>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Name\"\r\n                >\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"form-control contact_field\"\r\n                  value={name}\r\n                  placeholder=\"Enter your Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Email\"\r\n                >\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"form-control contact_field\"\r\n                  value={email}\r\n                  placeholder=\"Enter your Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Message\"\r\n                >\r\n                  Message\r\n                </label>\r\n                <textarea\r\n                  rows={5}\r\n                  className=\"form-control contact_field\"\r\n                  value={message}\r\n                  placeholder=\"Enter your Message\"\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 py-2 rounded-pill mt-3\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js",["798","799","800","801","802","803","804","805","806","807"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Select,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\nimport EventNameBox from \"./EventNameBox\";\r\nimport AddImg from \"../../../Assets/AddImage.svg\";\r\nimport Uploading from \"../../../Assets/Uploading.svg\";\r\nimport EventDetails from \"./EventDetails\";\r\nimport \"./CreateEvent.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nexport default function CreateEvent(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"#3897f1 !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n\r\n  const [disablesave, setDisablesave] = useState(false);\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  const [erroring, seterroring] = useState(false);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n\r\n  const [url, seturl] = useState(AddImg);\r\n  useEffect(() => {\r\n    if (\r\n      props.Events[props.SelectedEvent] !== undefined &&\r\n      props.Events[props.SelectedEvent].file !== \"\"\r\n    ) {\r\n      if (props.Events[props.SelectedEvent].file === \"uploading\") {\r\n        seturl(Uploading);\r\n      } else {\r\n        seturl(props.Events[props.SelectedEvent].file);\r\n      }\r\n    } else {\r\n      seturl(AddImg);\r\n    }\r\n  }, [\r\n    props.Events[props.SelectedEvent] !== undefined\r\n      ? props.Events[props.SelectedEvent].file\r\n      : \"\",\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={0} className=\"m-0  p-15px pt-0 pb-0\">\r\n        <Grid item xs={12} sm={6}>\r\n          {/* <FormControl\r\n            variant=\"outlined\"\r\n            className=\"w-100-p  m-b-10 \"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            <Select\r\n              native\r\n             \r\n              displayEmpty\r\n            >\r\n             \r\n            </Select>\r\n          </FormControl> */}\r\n          <select className=\"w-100-p  m-b-10 \" value={props.Type}\r\n            onChange={props.handleChange}\r\n            error={erroring}\r\n            className=\"selectboxblue\" >\r\n            <option value=\"Wedding\">Wedding</option>\r\n            <option value=\"Birthday\">Birthday</option>\r\n            <option value=\"Wedding Anniversary\">Wedding Anniversary</option>\r\n            <option value=\"Get Together\">Get Together</option>\r\n            <option value=\"Formal Event\">Formal Event</option>\r\n          </select>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <div className=\"noe\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={false} sm={1} md={2} />\r\n              <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\r\n                Number Of Events\r\n              </Grid>\r\n              <Grid item xs={5} sm={5} md={4}>\r\n                <Grid container spacing={0}>\r\n                  <Grid item xs={12}>\r\n                    <div className=\"Cirlce tar  fl\">\r\n                      <RemoveCircleOutlineIcon\r\n                        className=\"l-blue-t \"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.removeAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"white box  fl\">{props.Events.length}</div>\r\n                    <div className=\"Cirlce tal  fl\">\r\n\r\n                      <AddCircleOutlineIcon\r\n                        className=\"l-blue-t\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.addAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"event-Names m-b-10 p-15px pb-0 pt-0\">\r\n        <EventNameBox\r\n          data={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectEvent={props.SelectEvent}\r\n          SelectedEvent={props.SelectedEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n        />\r\n      </div>\r\n\r\n      <Grid item xs={12}>\r\n        <EventDetails\r\n          Events={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectedEvent={props.SelectedEvent}\r\n          SelectEvent={props.SelectEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n          setDisablesave={setDisablesave}\r\n          disablesave={disablesave}\r\n          albumdata={props.albumdata}\r\n          setStory={props.setStory}\r\n          setalbumdata={props.setalbumdata}\r\n          Story={props.Story}\r\n          template={props.template}\r\n          handleNext={props.handleNext}\r\n          Type={props.Type}\r\n          seterroring={seterroring}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <button\r\n          className={\r\n            disablesave === false ? \"save-events disabled\" : \"save-events \"\r\n          }\r\n          onClick={() => {\r\n            if (disablesave === true) {\r\n              props.handleNext();\r\n            }\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Plan\\Plan.js",["808","809"],"import React, { useState } from \"react\";\r\nimport \"./Plan.css\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nfunction Plancard(props) {\r\n  return (\r\n    <Paper\r\n      className=\"plancard\"\r\n      onClick={() => {\r\n        props.selectplan(props.plani);\r\n      }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={\"upperplan \" + props.plan}\r\n          style={{ borderRadius: \"10px\" }}\r\n        >\r\n          <Grid xs={12} className=\"tac t-white pfsmall\">\r\n            {props.plan}\r\n          </Grid>\r\n          <Grid xs={12} className=\"tac t-white pflarge\">\r\n            {props.invites}\r\n            <br />\r\n            Invites\r\n          </Grid>\r\n          <Grid xs={12} className=\"tac t-white pfmed\">\r\n            {props.cost}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} className=\"lowerplan mt-5px\">\r\n          <ul class=\"a\">\r\n            <li>Multiple Events</li>\r\n            <li>Albums</li>\r\n            <li>Schedule</li>\r\n            <li>Our Story</li>\r\n            <li>Location</li>\r\n            <li>Multiple Admin</li>\r\n          </ul>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\nexport default function Plan(props) {\r\n  const [selectedplan, selectplan] = useState(3);\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <div className=\"planheadbottom\"></div>\r\n        <div className=\"planheadtop\"></div>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"plancardholder\">\r\n     {/*    <Plancard\r\n          plan={\"Free\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 00 / Month\"}\r\n          invites={\"50\"}\r\n          plani={0}\r\n        />\r\n\r\n        <Plancard\r\n          plan={\"Bronze\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 99 / Month\"}\r\n          invites={\"200\"}\r\n          plani={1}\r\n        />\r\n\r\n        <Plancard\r\n          plan={\"Silver\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 299 / Month\"}\r\n          invites={\"400\"}\r\n          plani={2}\r\n        /> */}\r\n\r\n       {/*  <Plancard\r\n          plan={\"Gold\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 499 / Month\"}\r\n          invites={\"Unlimited\"}\r\n          plani={3}\r\n        /> */}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Plan Amount\r\n            </Grid>\r\n            <Grid item xs={3} className=\"plan-float\">\r\n              {selectedplan === 0 ? \"₹00\" : <></>}\r\n              {selectedplan === 1 ? \"₹99\" : <></>}\r\n              {selectedplan === 2 ? \"₹299\" : <></>}\r\n              {selectedplan === 3 ? \"₹499\" : <></>}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Extra Template\r\n            </Grid>\r\n            <Grid item xs={3} className=\"plan-float\">\r\n              Rs 00\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Coupon Discount\r\n            </Grid>\r\n            <Grid item xs={3} className=\"plan-float\">\r\n            {selectedplan === 0 ? \"₹00\" : <></>}\r\n                  {selectedplan === 1 ? \"₹-99\" : <></>}\r\n                  {selectedplan === 2 ? \"₹-299\" : <></>}\r\n                  {selectedplan === 3 ? \"₹-499\" : <></>}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Total Amount\r\n            </Grid>\r\n            <Grid item xs={3} className=\"plan-float\">\r\n              <b>\r\n                <u>\r\n                 0\r\n                </u>\r\n              </b>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"m-7px\">\r\n        <p style={{fontWeight:'700', fontSize:'12px', width:'90%', margin:'auto', backgroundColor:'antiquewhite'}}>Hurray! A Special Treat From Us! Enjoy Our Plans for Free🎁🎀 (Limited Time Only)</p>\r\n        <button\r\n          className=\"custom-file-upload\"\r\n          style={{ position: \"fixed\", bottom: \"20px\" }}\r\n          onClick={() => props.handleNext()}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\EventActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Testimonials.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Footer.js",["810","811","812","813","814","815"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport {\r\n  FaTwitter,\r\n  FaFacebookF,\r\n  FaWhatsapp,\r\n  FaInstagram,\r\n} from \"react-icons/fa\";\r\n\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer\r\n      className=\"footer_wrap p-4 mt-3\"\r\n      style={{ background: \"#1F1F1F\", marginTop: 50 }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-5 text-md-left text-center mb-2 mb-md-0\">\r\n            <p className=\"text-white mb-0\">\r\n              Copyright @ 2021, All Rights Reserved by Cy Ecommerce LLP\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-2 text-center\">\r\n            {\" \"}\r\n            <a href=\"#\" className=\"text-white\">\r\n              Terms &amp; Conditions\r\n            </a>{\" \"}\r\n          </div>\r\n          <div className=\"col-md-3 text-center\">\r\n            {\" \"}\r\n            <a href=\"#\" className=\"text-white\">\r\n              Privacy &amp; Policy\r\n            </a>{\" \"}\r\n          </div>\r\n\r\n          <div className=\"col-md-2 text-right\">\r\n            <div className=\"justify-content-center justify-content-md-end d-flex flex-row\">\r\n              <a\r\n                href=\"https://www.facebook.com/Minvitd/\"\r\n                className=\"ml-3 text-white\"\r\n              >\r\n                <FaFacebookF size=\"20\" />\r\n              </a>\r\n              {/*            <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaTwitter size='20' />\r\n              </a>\r\n              <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaWhatsapp size='20' />\r\n              </a>\r\n              <a href=\"#\" className=\"ml-3 text-white\">\r\n                <FaInstagram size='20' />\r\n              </a> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 text-center\">\r\n            <a href=\"#\" className=\"text-white\">\r\n              Version:2.3.6\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\MainBanner.js",["816","817","818","819","820","821","822"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Button, Form, Image, Col } from \"react-bootstrap\";\r\nimport Logo from \"../../Assets/LightLogo.png\";\r\nimport Integrate from \"../../Assets/Integrate.jpg\"\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  Autoplay,\r\n  Pagination,\r\n  Navigation,\r\n  Scrollbar,\r\n} from \"swiper\";\r\nimport SecondSlide from \"../../Assets/SecondSlide.png\";\r\nimport DancingImg from \"../../Assets/DancingImg.jpg\";\r\nimport DarkLogo from \"../../Assets/DarkLogo.png\";\r\n\r\nSwiperCore.use([Autoplay, Pagination, Navigation, Scrollbar]);\r\n\r\nexport default function MainBanner() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const formCollect = () => {\r\n    window.open(\"https://forms.gle/bWjqDXCha7TtDpew7\", \"_blank\");\r\n  };\r\n  useEffect(() => {\r\n    let ischeck = reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = reactLocalStorage.get(\"Phone\");\r\n    // let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === false || ischeck === undefined || ischeck === \"\") {\r\n      // console.log(\"push\");\r\n      history.push(\"/\");\r\n    } else {\r\n      // console.log(\"loginuser\");\r\n      dispatch(loginuser(Phone));\r\n    }\r\n  }, []);\r\n  return (\r\n    <Swiper\r\n      centeredSlides={true}\r\n      slidesPerView={1}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 6500,\r\n        disableOnInteraction: false,\r\n      }}\r\n      pagination={{\r\n        clickable: true,\r\n        dynamicBullets: true,\r\n      }}\r\n    >\r\n\r\n      <SwiperSlide>\r\n        <Container fluid className=\"wrapper\">\r\n          <Popup\r\n            toggleShowPopup={toggleShowPopup}\r\n            showPopup={showPopup}\r\n            component={LoginSignup}\r\n          />\r\n          <Row>\r\n            <img src={Logo} style={{ margin: \"auto\" }} />\r\n          </Row>\r\n          <Container className=\"header_containmain\">\r\n            <Row>\r\n              <h3 className=\"header_heading\" style={{ marginTop: \"auto\" }}>\r\n                A Smarter way to invite\r\n              </h3>\r\n            </Row>\r\n            <Row style={{ marginTop: 10 }}>\r\n              <p className=\"header_slogan\">\r\n                Invite people to celebrate your occasion\r\n              </p>\r\n            </Row>\r\n            <Row\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Working on it\"\r\n                className=\"phonenumber_text\"\r\n                disabled\r\n              />\r\n            </Row>\r\n            <Row style={{ marginTop: 13 }}>\r\n              <Button\r\n                variant=\"primary mobile_numberbtn\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Try Now\r\n              </Button>\r\n            </Row>\r\n            <Row className=\"row_down\">\r\n              <div className=\"addthis_inline_share_toolbox\"></div>\r\n            </Row>\r\n            <Row className=\"alignthat_btnh\">\r\n              <Button\r\n                variant=\"light mybutton_here\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Login / Signup\r\n              </Button>\r\n            </Row>\r\n            <div style={{textAlign:'center'}}> <Button variant=\"dark\" className=\"template_btn\" style={{marginTop:0}} onClick={formCollect}>✨Register Your Event</Button></div>\r\n           \r\n          </Container>\r\n        </Container>\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <Container fluid className=\"wrapper second_slide\">\r\n          <Popup\r\n            toggleShowPopup={toggleShowPopup}\r\n            showPopup={showPopup}\r\n            component={LoginSignup}\r\n          />\r\n          <Row>\r\n            <Col style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <img src={DarkLogo} style={{ margin: \"auto\" }} />\r\n            </Col>\r\n          </Row>\r\n          <Container className=\"header_slidertwo\">\r\n            <Row>\r\n              <h3 className=\"secondslide_heading\">\r\n                Multiple <br />\r\n                Events\r\n              </h3>\r\n            </Row>\r\n            <Row>\r\n              <p className=\"secondslide_par\">\r\n                Manage Multiple Events Simultaneously\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <Image src={SecondSlide} className=\"image_secondslide\" />\r\n            </Row>\r\n           {/*  <Row style={{ marginTop: 20 }}>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Working on it\"\r\n                className=\"phonenumber_text\"\r\n                disabled\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                variant=\"primary slide_numberbtn\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Try Now\r\n              </Button>\r\n            </Row> */}\r\n           \r\n            <Row className=\"row_down\">\r\n              <div className=\"addthis_inline_share_toolbox\"></div>\r\n            </Row>\r\n           {/*  <div style={{textAlign:'center'}}> <Button variant=\"dark\" className=\"template_btn\" style={{marginTop:0}} onClick={formCollect}>✨Register Your Event</Button></div> */}\r\n            <Row className=\"alignthat_btnh\">\r\n              <Button\r\n                variant=\"light mybutton_here\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Login / Signup\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <Container fluid className=\"wrapper third_slide\">\r\n          <Popup\r\n            toggleShowPopup={toggleShowPopup}\r\n            showPopup={showPopup}\r\n            component={LoginSignup}\r\n          />\r\n          <Row>\r\n            <Col style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <img src={DarkLogo} style={{ margin: \"auto\" }} />\r\n            </Col>\r\n          </Row>\r\n          <Container style={{ float: \"right\" }}>\r\n            <Row>\r\n              <h3 className=\"secondslide_heading\">\r\n                Video <br />\r\n                Invitation\r\n              </h3>\r\n            </Row>\r\n            <Row>\r\n              <p className=\"secondslide_par\">\r\n                Invite people to celebrate your occasion\r\n              </p>\r\n             \r\n            </Row>\r\n           \r\n            <Row>\r\n              {\" \"}\r\n              <p className=\"thirdslide_extra\">\r\n                Unlimited Timeless Conferencing*\r\n              </p>\r\n            </Row>\r\n\r\n           {/*  <Row style={{ marginTop: 20 }}>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Working on it\"\r\n                className=\"phonenumber_text\"\r\n                disabled\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                variant=\"primary slide_numberbtn\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Try Now\r\n              </Button>\r\n            </Row> */}\r\n            <Row className=\"row_down\">\r\n              <div className=\"addthis_inline_share_toolbox\"></div>\r\n            </Row>\r\n          {/*   <div style={{textAlign:'center'}}> <Button variant=\"dark\" className=\"template_btn\" style={{marginTop:0}} onClick={formCollect}>✨Register Your Event</Button></div> */}\r\n            <Row className=\"alignthat_btnh\">\r\n              <Button\r\n                variant=\"light mybutton_here\"\r\n                onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Login/Signup\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      </SwiperSlide>\r\n\r\n      {/*  Slider two */}\r\n\r\n      {/*  Slider 3 */}\r\n    </Swiper>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Header\\Header.js",["823"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Header.css\";\r\nimport Headings from \"../../../Utils/Headings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { logout } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notification from \"../../Notifications/Notification\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport UserProfile from \"../../../Components/UserPorfile/UserProfile\";\r\n\r\nexport default function Header(props) {\r\n  const dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  useEffect(() => {\r\n    if (Auth.isExpired === true) {\r\n      dispatch(logout());\r\n    }\r\n  }, [Auth.isExpired]);\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem\r\n        onClick={() => {\r\n          setuserInfopopup(true);\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"show 4 new mails\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          {Auth.Profile === \"\" ? (\r\n            <AccountCircle />\r\n          ) : (\r\n            <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n          )}\r\n        </IconButton>\r\n        <span className=\"menu-option\">Profile</span>\r\n      </MenuItem>\r\n      {props.showextra === true ? (\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleMenuClose(true);\r\n            toggleShowPopup(true);\r\n          }}\r\n        >\r\n          <IconButton\r\n            aria-label=\"show 4 new mails\"\r\n            color=\"inherit\"\r\n            className=\"p-0\"\r\n          >\r\n            <NotificationsIcon />\r\n          </IconButton>\r\n          <span className=\"menu-option\">Notification</span>\r\n        </MenuItem>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <SearchIcon className=\"search-button\" />\r\n        </IconButton>\r\n        <p>Search</p>\r\n      </MenuItem> */}\r\n      <MenuItem\r\n        onClick={(e) => {\r\n          handleProfileMenuOpen(e);\r\n          dispatch(logout());\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          <PowerSettingsNewIcon color=\"secondary\" className=\"search-button\" />\r\n        </IconButton>\r\n        <span className=\"menu-option\">Logout</span>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={props.ismobile !== undefined ? props.ismobile : \"grow\"}>\r\n      <Popup\r\n        component={UserProfile}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n      />\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"menuButton\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          ></IconButton>\r\n\r\n          <Headings url={props.url} />\r\n\r\n          <div className=\"grow\" />\r\n          <div className=\"sectionDesktop\">\r\n            {Auth.isLoggedIn === true ? (\r\n              <>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                  onClick={() => {\r\n                    setuserInfopopup(true);\r\n                  }}\r\n                >\r\n                  {Auth.Profile === \"\" ? (\r\n                    <AccountCircle />\r\n                  ) : (\r\n                    <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n                  )}\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"show 4 new mails\"\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                  onClick={() => {\r\n                    dispatch(logout());\r\n                  }}\r\n                >\r\n                  <PowerSettingsNewIcon color=\"secondary\" />\r\n                </IconButton>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"sectionMobile\">\r\n            <IconButton\r\n              style={{ padding: \"inherit\" }}\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {Auth.isLoggedIn === true ? renderMobileMenu : <></>}\r\n      {Auth.isLoggedIn === true ? renderMenu : <></>}\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={Notification}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\FootMenu\\FootMenu.js",["824","825","826","827","828"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, AppBar, Fab } from \"@material-ui/core\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"./FooterMenu.css\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport UserProfile from \"../../UserPorfile/UserProfile\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\",\r\n    background: \"#3897F1\",\r\n    color: \"#fff\",\r\n    padding: \"33px\",\r\n  },\r\n}));\r\n\r\nexport default function FootMenu(props) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      color=\"primary\"\r\n      className={classes.appBar}\r\n      color=\"default\"\r\n    >\r\n      <Toolbar>\r\n        <Fab\r\n          aria-label=\"add\"\r\n          className={classes.fabButton}\r\n          onClick={() => {\r\n            if (Auth.Name === \"\" || Auth.Name === undefined) {\r\n              setuserInfopopup(true);\r\n            } else {\r\n              history.push(\"add-event\");\r\n            }\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Grid container spacing={0} className={classes.grow}>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            className={props.menu === 0 ? \"menubox activemenu\" : \"menubox\"}\r\n            onClick={() => {\r\n              props.setMenu(0);\r\n              history.push(\"/inv\");\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;Invitations&nbsp;&nbsp;\r\n          </Grid>\r\n          <Grid xs={2}></Grid>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            className={props.menu === 1 ? \"menubox activemenu\" : \"menubox\"}\r\n            onClick={() => {\r\n              props.setMenu(1);\r\n              history.push(\"/MyEvents\");\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;My Events&nbsp;&nbsp;\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <Popup\r\n        component={UserProfile}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n        url={\"add-event\"}\r\n      />\r\n      {/* <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={Entercode}\r\n        url={\"MyEvents/add-event\"}\r\n      /> */}\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\NavMobile\\NavMobile.js",["829","830","831","832","833","834"],"import React, { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport {\r\n  BiNews,\r\n  BiPhotoAlbum,\r\n  BiCalendarEvent,\r\n} from \"react-icons/bi\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport {FiGift} from \"react-icons/fi\"\r\nimport \"./NavMobile.css\";\r\nimport { AiOutlineShopping } from \"react-icons/ai\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector, } from \"react-redux\";\r\n\r\nimport Popup from \"../Popups/Popup\";\r\nimport Notifications from \"../../Notifications/Notification\";\r\nexport default function NavMobile(props) {\r\n\r\n  const [show, setshow] = useState(false);\r\n  const [eventcode, seteventcode] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [ishost, setishost] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      props.Eventdata[0].Host.map((host) => {\r\n        if (host === Auth.Phone) {\r\n          setishost(true);\r\n        }\r\n      });\r\n      // console.log(props.Eventdata[0].Name);\r\n    }\r\n  }, [props.Eventdata]);\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg=\"light\"\r\n        variant=\"light\"\r\n        style={{\r\n          position: \"fixed\",\r\n          left: 0,\r\n          bottom: 0,\r\n          width: \"100vw\",\r\n          zIndex: 255,\r\n        }}\r\n        className=\"deskhide-nav\"\r\n      >\r\n        <Nav\r\n          style={{\r\n            margin: \"auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n\r\n            width: \"100vw\",\r\n            height: \"4.5vh\",\r\n          }}\r\n\r\n        >\r\n          <Nav.Link\r\n\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + \"/eventpage/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiCalendarEvent size={25} className=\"reacticons_align\" />\r\n            <p className=\"mobilebar_text\">Invites</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + \"/albums/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiPhotoAlbum size={25} />\r\n            <p className=\"mobilebar_text\">Albums</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\r\n                \"/\" +\r\n                props.base +\r\n                \"/eventpage/\" +\r\n                \"feed/\" +\r\n                props.id +\r\n                \"/\" +\r\n                props.MainCode\r\n              );\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiNews size={25} />\r\n            <p className=\"mobilebar_text\">Feed</p>\r\n          </Nav.Link>\r\n          {/*  <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + '/eventpage/' + \"gift/\" + props.id + \"/\" + props.MainCode);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiGift size={25} style={{ marginLeft: '8px' }} />\r\n            <p className=\"mobilebar_text_notif\">Notifications</p>\r\n          </Nav.Link> */}\r\n          <Nav.Link\r\n            style={{ textDecoration: \"none\" }} onClick={() => {\r\n              history.push(\"/\" + props.base + '/eventpage/' + \"gift/\" + props.id + \"/\" + props.MainCode);\r\n            }}\r\n          >\r\n            <FiGift size={23} />\r\n            <p className=\"mobilebar_text\">Gift</p>\r\n          </Nav.Link>\r\n\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + \"/more/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BsThreeDots size={25} />\r\n            <p className=\"mobilebar_text\">More</p>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={props.MainCode}\r\n        showinvitaions={true}\r\n        eventcode={eventcode}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Events\\Eventlist.js",["835","836","837","838","839","840","841","842"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Eventlist.css\";\r\nimport history from \"../../Utils/History\";\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nimport SingleEvent from '../../Assets/singleevent.png'\r\nexport default function EventList(props) {\r\n  const [show, setshow] = useState(false);\r\n  const [MainCode, setmaincode] = useState(\"\");\r\n\r\n  const [data, setData] = useState(props.data);\r\n  useEffect(async () => {\r\n    // console.log(props.data);\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n  return (\r\n    <Grid container className=\"mb-100 contain-main\" >\r\n\r\n      {data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={window.innerHeight / window.innerWidth > 0.9 ? 12 : 6}\r\n          className=\"InvitationCard\"\r\n          key={\"invContainer\" + index}\r\n\r\n\r\n        >\r\n\r\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\r\n            src={inv[0].file}\r\n            className=\"inv-img\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/eventpage/\" + index);\r\n            }}\r\n          />) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                inv[0].file\r\n              }\r\n              onClick={() => {\r\n                history.push(\"/MyEvents/eventpage/\" + index);\r\n              }}\r\n              preload=\"none\"\r\n              className='w-100 inv-img'\r\n            />\r\n          )}\r\n\r\n\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\" style={{ fontSize: '18px' }}>\r\n                    {inv[0].Name}\r\n                  </Grid>\r\n                  <Grid item xs={7} className=\"animated-list\" style={{ color: 'black', fontSize: '15px', borderRadius: '5px', fontWeight: '700' }}>\r\n                    <Dateformatter Date={inv[0].Date + \" \" + inv[0].Time} />\r\n\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n      <Grid\r\n        item\r\n        xs={12}>\r\n        {data.length === 1 ? <center> <img src={SingleEvent} ></img></center> : <></>}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Stepper\\Stepper.js",["843","844","845","846","847","848","849","850"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"\", \"\", \"\"];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"\";\r\n    case 1:\r\n      return \"\";\r\n    case 2:\r\n      return \"\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper(props) {\r\n  const classes = useStyles();\r\n\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    // <div className={classes.root}>\r\n    //   <Stepper activeStep={props.activeStep}>\r\n    //     {steps.map((label, index) => {\r\n    //       const stepProps = {};\r\n    //       const labelProps = {};\r\n\r\n    //       return (\r\n    //         // <Step key={index} {...stepProps} c>\r\n    //         //   <StepLabel {...labelProps} className=\"l-blue-t\">\r\n    //         //     {label}\r\n    //         //   </StepLabel>\r\n    //         // </Step>\r\n    //\r\n    //       );\r\n    //     })}\r\n    //   </Stepper>\r\n    //   <div>\r\n    //     <div>\r\n    //       <Typography className={classes.instructions}>\r\n    //         {getStepContent(props.activeStep)}\r\n    //       </Typography>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n    <div className=\"w-100 p-10px\"></div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js",["851","852","853","854","855","856"],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\TemplatesReducer.js",["857"],"import { act } from \"react-dom/test-utils\";\r\n\r\nconst initialState = [];\r\n\r\nconst Templates = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GOTTEMPLATE\":\r\n            return action.payload\r\n        // console.log(action.payload);\r\n        // let finallist = [];\r\n        // for (let i = 0; i < action.payload.length; i++) {\r\n        //     finallist[action.payload[i].Phone] = { Name: action.payload[i].Name, Pic: action.payload[i].Pic };\r\n        // }\r\n        // console.log(finallist);\r\n        // //   state = finallist;\r\n        // return { ...state, listdata: finallist }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default Templates;","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\GuestListReducer.js",["858"],"import { act } from \"react-dom/test-utils\";\r\n\r\nconst initialState = [];\r\n\r\nconst GuestList = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GOTGUEST\":\r\n            return action.payload\r\n        // console.log(action.payload);\r\n        // let finallist = [];\r\n        // for (let i = 0; i < action.payload.length; i++) {\r\n        //     finallist[action.payload[i].Phone] = { Name: action.payload[i].Name, Pic: action.payload[i].Pic };\r\n        // }\r\n        // console.log(finallist);\r\n        // //   state = finallist;\r\n        // return { ...state, listdata: finallist }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default GuestList;","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\EventReducer.js",["859"],"import { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nconst initialState = {\r\n  ALBUM: [],\r\n  STORY: [],\r\n  myEvents: [],\r\n  myInvitations: [],\r\n};\r\n\r\nconst Eventdata = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SAVEALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: action.payload,\r\n      };\r\n    case \"ADDALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: [...state.ALBUM, ...action.payload],\r\n      };\r\n    case \"DELETEALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: [],\r\n      };\r\n    case \"SAVESTORY\":\r\n      return {\r\n        ...state,\r\n        STORY: action.payload,\r\n      };\r\n    case \"DELETESTORY\":\r\n      return {\r\n        ...state,\r\n        STORY: [],\r\n      };\r\n    case \"GOTMYEVENTS\":\r\n      let datacopy = [];\r\n      let tracker = [];\r\n      let mcindex = 0;\r\n      //get similar events in single array\r\n      console.log(action.payload);\r\n      let payload = [];\r\n      if (action.payload !== undefined) {\r\n        payload = [...action.payload];\r\n      } else {\r\n        payload = [];\r\n      }\r\n      for (let i = 0; i < payload.length; i++) {\r\n        if (tracker.length === 0) {\r\n          datacopy[0] = [action.payload[i]];\r\n          tracker.push(action.payload[i].MainCode);\r\n        } else {\r\n          mcindex = tracker.includes(action.payload[i].MainCode);\r\n          if (mcindex === true) {\r\n            let key = tracker.findIndex(\r\n              (track) => track === action.payload[i].MainCode\r\n            );\r\n            console.log(key);\r\n            datacopy[key] = [...datacopy[key], action.payload[i]];\r\n          } else {\r\n            tracker.push(action.payload[i].MainCode);\r\n            datacopy.push([action.payload[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        myEvents: datacopy,\r\n      };\r\n    case \"GETMYINVITAITONS\": {\r\n      let datacopy = [];\r\n      let tracker = [];\r\n      let mcindex = 0;\r\n      //get similar events in single array\r\n      console.log(action.payload);\r\n      let payload = [];\r\n      if (action.payload !== undefined) {\r\n        payload = [...action.payload];\r\n      } else {\r\n        payload = [];\r\n      }\r\n\r\n      for (let i = 0; i < payload.length; i++) {\r\n        if (tracker.length === 0) {\r\n          datacopy[0] = [action.payload[i]];\r\n          tracker.push(action.payload[i].MainCode);\r\n        } else {\r\n          mcindex = tracker.includes(action.payload[i].MainCode);\r\n          if (mcindex === true) {\r\n            let key = tracker.findIndex(\r\n              (track) => track === action.payload[i].MainCode\r\n            );\r\n            console.log(key);\r\n            datacopy[key] = [...datacopy[key], action.payload[i]];\r\n          } else {\r\n            tracker.push(action.payload[i].MainCode);\r\n            datacopy.push([action.payload[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        myInvitations: datacopy,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Eventdata;\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\CodeEventReducer.js",["860","861"],"const initialState = {\r\n    Maincode: \"\",\r\n    Code: \"\"\r\n};\r\n\r\nconst CodeEvent = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADDCODEDEVENT\":\r\n            return action.payload\r\n            break;\r\n        case \"DELETECODEDEVENT\":\r\n            return initialState;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default CodeEvent;\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\NotificatonReducer.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\ChatReducer.js",["862"],"const initialState = {\r\n  groups: [],\r\n  chats: [],\r\n};\r\n\r\nconst Chatdata = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GOTCHATS\":\r\n      return {\r\n        ...state,\r\n        chats: action.payload,\r\n      };\r\n    case \"SAVECHAT\":\r\n      return {\r\n        ...state,\r\n        groups: action.payload,\r\n      };\r\n    case \"UPDATECHAT\":\r\n      let groupscpy = [...state.groups];\r\n      groupscpy.map((grp) => {\r\n        if (grp.room === action.payload.room) {\r\n          grp.chats.push(action.payload.data);\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        groups: groupscpy,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Chatdata;\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\CreateEventFormReducer.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\AuthReducer.js",[],"C:\\Projects\\MobillyInvite\\src\\Utils\\Login.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\AuthActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\PostActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\ChatActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js",["863","864","865"],"import React, { useState, useEffect } from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport * as _ from \"lodash\";\r\nexport default function UserDataUrl(props) {\r\n  const [User, setUser] = useState({});\r\n  const GuestList = useSelector(state => state.GuestList)\r\n  const Auth = useSelector(state => state.Auth);\r\n\r\n  useEffect(async () => {\r\n    if (props.Phone !== \"\" && props.Phone !== undefined && props.Phone !== null) {\r\n      if (Auth.Phone === props.Phone) {\r\n        await setUser({ Name: Auth.Name, Pic: Auth.Profile });\r\n      } else {\r\n        let i = _.findLastIndex(GuestList, function (o) { return o.Phone == props.Phone; });\r\n        if (i !== -1) {\r\n          //  console.log(GuestList[i])\r\n          await setUser(GuestList[i])\r\n        }\r\n        else {\r\n          await setUser({ Name: props.Phone, Pic: \"\" })\r\n        }\r\n      }\r\n    }\r\n  }, [props.Phone, GuestList]);\r\n\r\n  return (\r\n    <>\r\n      {props.showIcon === true ? (\r\n        User.Pic !== undefined && User.Pic !== \"\" ? (\r\n          <Avatar alt=\"Profile Picture\" src={User.Pic} />\r\n        ) : (\r\n          <AccountCircle style={{ height: \"40px\", width: \"40px\" }} />\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showName && props.showName === true ? (\r\n        <span className=\"name\" style={{fontSize: \"15px\"}}>\r\n          {User.Name === undefined || User.Name === \"\"\r\n            ? props.Phone\r\n            : User.Name}\r\n        </span>\r\n      ) : (\r\n        <span className=\"name\"></span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\CodeAction.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Firebase.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js",["866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894"],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Popups\\Popup.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js",["895","896","897","898","899","900"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Button,\r\n  ListGroup,\r\n  Tabs,\r\n  Tab,\r\n  Col,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { BsFillPeopleFill } from \"react-icons/bs\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport default function Addformultiple(props) {\r\n  const [participants, setparticipants] = useState([]);\r\n  const [width, setwidth] = useState(\"100%\");\r\n  useEffect(async () => {\r\n    // console.log(props);\r\n    await setparticipants(props.participants);\r\n    await setwidth(100 / props.Events.length + \"vw\");\r\n  }, [props.participants]);\r\n\r\n  const readExcel = async (file) => {\r\n    const fileReader = new FileReader();\r\n    await fileReader.readAsArrayBuffer(file);\r\n    fileReader.onload = async (e) => {\r\n      const bufferArray = e.target.result;\r\n      const wb = await XLSX.read(bufferArray, { type: \"buffer\" });\r\n      const wsname = await wb.SheetNames[0];\r\n      const ws = await wb.Sheets[wsname];\r\n      const data = await XLSX.utils.sheet_to_json(ws);\r\n      await props.saveparticipantsfromexcel(data);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      console.log(error);\r\n    };\r\n  };\r\n\r\n  const DeleteThisContact = (index) => {\r\n    let particpantscpy = [...props.participants];\r\n    let NexteventKey = parseInt(props.eventKey) + 1;\r\n    particpantscpy[props.eventKey] = particpantscpy[props.eventKey].filter(\r\n      (word, i) => index !== i\r\n    );\r\n    props.setParticipants(particpantscpy);\r\n  };\r\n\r\n  const copyToNext = () => {\r\n    let particpantscpy = [...props.participants];\r\n    if (particpantscpy.length === 0) {\r\n      alert(\"Please add contacts to this event Firts\");\r\n    } else {\r\n      if (props.eventKey < 3 && props.eventKey < props.Events.length - 1) {\r\n        let NexteventKey = parseInt(props.eventKey) + 1;\r\n        particpantscpy[NexteventKey] = particpantscpy[props.eventKey];\r\n        // console.log(particpantscpy);\r\n        props.setParticipants(particpantscpy);\r\n      } else {\r\n        alert(\"No more Events to copy\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"p-0\">\r\n        <h3 className=\"p-15px\">Add Guests</h3>\r\n\r\n        <Tabs\r\n          activeKey={props.eventKey}\r\n          onSelect={(k) => {\r\n            // console.log(k);\r\n            props.setKey(k);\r\n          }}\r\n        >\r\n          {props.Events &&\r\n            props.Events.map((eve, index) => (\r\n              <Tab\r\n                eventKey={index}\r\n                title={eve.Name.substring(1, 4) + \"...\"}\r\n                style={{ width: width }}\r\n              >\r\n                <ListGroup style={{ margin: \"auto\" }} className=\"listitems_box\">\r\n                  {participants &&\r\n                    participants[props.eventKey] &&\r\n                    participants[props.eventKey].map((listdata, i) => (\r\n                      <ListGroup.Item>\r\n                        {listdata}\r\n                        <AiFillCloseCircle\r\n                          size=\"25\"\r\n                          style={{ float: \"right\", color: \"red\" }}\r\n                          onClick={() => {\r\n                            DeleteThisContact(i);\r\n                          }}\r\n                        />\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n              </Tab>\r\n            ))}\r\n        </Tabs>\r\n        <Row>\r\n          <Col xs={12} md={12} style={{ display: \"flex\" }}>\r\n            {props.isMobile === true ? (\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                className=\"addcontacts_btn\"\r\n                style={{ margin: \"auto\", borderRadius: 20 }}\r\n                onClick={() => {\r\n                  props.openContactPicker();\r\n                }}\r\n              >\r\n                <BsFillPeopleFill /> Add Contacts\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <label\r\n                  htmlFor=\"input2\"\r\n                  className=\"addcontacts_btn btn btn-outline-primary\"\r\n                  style={{\r\n                    display: props.isMobile === false ? \"block\" : \"none\",\r\n                  }}\r\n                  style={{ margin: \"auto\", borderRadius: 20 }}\r\n                  onClick={() => {\r\n                    console.log(\"done 3\");\r\n                  }}\r\n                >\r\n                  <BsFillPeopleFill /> Add Contacts\r\n                </label>\r\n                <input\r\n                  id=\"input2\"\r\n                  type=\"file\"\r\n                  accept=\".xlsx\"\r\n                  onChange={(e) => {\r\n                    // console.log(\"done 4\");\r\n                    const file = e.target.files[0];\r\n                    readExcel(file);\r\n                  }}\r\n                  placeholder=\"Add Participants\"\r\n                  style={{ display: \"none\" }}\r\n                />\r\n              </>\r\n            )}\r\n          </Col>\r\n          <Col xs={12} md={12} style={{ marinTop: 10 }}>\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              onClick={() => {\r\n                copyToNext();\r\n              }}\r\n              style={{\r\n                display:\r\n                  props.eventKey == props.Events.length - 1 ? \"none\" : \"block\", borderRadius: 20, marginTop: 20\r\n              }}\r\n              className=\"addcontacts_btn\"\r\n            >\r\n              Copy to Next Invite\r\n              <FaArrowRight />\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {\" \"}\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              style={{\r\n                float: \"right\",\r\n                width: \"100%\",\r\n                borderRadius: 20,\r\n                marginTop: 50,\r\n              }}\r\n              className=\"addcontacts_btn\"\r\n              onClick={() => {\r\n                props.open(false);\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              variant=\"primary\"\r\n              style={{\r\n                float: \"right\",\r\n                width: \"100%\",\r\n                borderRadius: 20,\r\n                marginTop: 50,\r\n              }}\r\n              className=\"addcontacts_btn\"\r\n              onClick={() => {\r\n                props.eventKey == props.Events.length - 1\r\n                  ? props.open(false)\r\n                  : props.setKey(parseInt(props.eventKey) + 1);\r\n              }}\r\n              disabled={props.isSaving}\r\n            >\r\n              {props.isSaving === true ? (\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"sr-only\">Saving...</span>\r\n                </Spinner>\r\n              ) : (\r\n                <>\r\n                  {props.eventKey === props.Events.length - 1 ? (\r\n                    \"Save\"\r\n                  ) : (\r\n                    <>Save</>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js",["901","902"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, Container, Row, Col, Form } from \"react-bootstrap\";\r\nexport default function AddCode(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const [codes, setCodes] = useState([]);\r\n  const [usercode, setusercode] = useState([]);\r\n  // var codescpy = [];\r\n  var usercodecpy = [];\r\n  function randomString(length, chars) {\r\n    var result = \"\";\r\n    for (var i = length; i > 0; --i)\r\n      result += chars[Math.floor(Math.random() * chars.length)];\r\n    return result;\r\n  }\r\n\r\n  // async function setcodesInEvents() {\r\n  //   if (props.code.length !== props.Events.length) {\r\n  //     for (var i = 0; i < props.Events.length; i++) {\r\n  //       codescpy.push({\r\n  //         Name: props.Events[i].Name,\r\n  //         code: randomString(\r\n  //           8,\r\n  //           \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n  //         ),\r\n  //       });\r\n  //       usercodecpy.push(codescpy[i].code);\r\n  //     }\r\n  //     console.log(codescpy);\r\n  //     await setCodes(codescpy);\r\n  //     await setusercode(usercodecpy);\r\n  //     await props.setEntryWay(\"Code\");\r\n  //     await props.setCodes(usercode);\r\n  //     await props.save();\r\n  //   }\r\n  // }\r\n  return (\r\n    <div>\r\n      <button className=\" next btn btn-dark mt-10px\" onClick={() => {\r\n        props.save()\r\n      }}>\r\n        Generate Code\r\n      </button>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        style={{ position: \"absolute\", top: \"0vh\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Code For Events</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container fluid style={{ padding: '5px' }}>\r\n            <Row className=\"m-0 m-5px\">\r\n              <Col xs={5} md={3}>\r\n                <b>Name</b>\r\n              </Col>\r\n              <Col xs={7} md={9}>\r\n                <b>Code</b>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            {codes.map((code, index) => (\r\n              <Row className=\"m-0 mt-5px\" key={code.code}>\r\n                <Col xs={5} md={3} className=\"m-0 mt-5px\">\r\n                  {code.Name + \":\"}\r\n                </Col>\r\n                <Col xs={7} md={9} className=\"m-0 mt-5px\" style={{ paddingBottom: '10px' }}>\r\n                  <Form.Control\r\n                    disabled={true}\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    style={{ borderRadius: 20 }}\r\n                    value={usercode[index]}\r\n                    onChange={(e) => {\r\n                      usercodecpy[index] = e.target.value;\r\n                      setusercode(usercodecpy);\r\n                    }}\r\n                    maxLength={4}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n            <br />\r\n            <Row className=\"m-0\">\r\n              <Button\r\n                variant=\"success\"\r\n                style={{ borderRadius: 20, backgroundColor: \"#3897f1\" }}\r\n                className=\"w-100 mt-10px\"\r\n                onClick={() => {\r\n                  props.setEntryWay(\"Code\");\r\n                  props.setCodes(usercode);\r\n                  handleClose(false);\r\n                }}\r\n              >\r\n                Done\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Auth\\LoginSignup.js",["903"],"import React, { useState, useEffect } from \"react\";\r\nimport Login from \"../../Assets/Auth.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Auth.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport Timer from \"../Helpers/timer/timer\";\r\nimport {\r\n  loginuser,\r\n  getopt,\r\n  verifyotp,\r\n} from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport {Link} from 'react-router-dom';\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport history from \"../../Utils/History\";\r\n\r\nexport default function LoginSignup() {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const [todo, settodo] = useState(0);\r\n  const [step, setStep] = useState(0);\r\n  const [number, setnumber] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n  const [OTP, SetOPT] = useState();\r\n  const [agree, setAgree] = useState(true);\r\n  const [term, setterm] = useState(true);\r\n  const [Phone, setPhone] = useState(\"\");\r\n  let phone = \"\";\r\n  const checkboxHandler = () => {\r\n    setAgree(!agree);\r\n  };\r\n  const checkboxtermHandler = () => {\r\n    setterm(!term);\r\n  };\r\n  const handleClick = (e) => {\r\n    phone = \"+\" + number.toString();\r\n    if (phone.length < 9) {\r\n      setError(\"Invalid Phone Number\");\r\n    } else if (!agree) {\r\n      setError(\"please check the boxes\");\r\n    }\r\n    else if (!term) {\r\n      setError(\"please check the boxes\");\r\n    } else {\r\n      dispatch(getopt(phone));\r\n      setPhone(phone);\r\n      setStep(1);\r\n    }\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    dispatch(verifyotp(Phone, OTP));\r\n  };\r\n  useEffect(() => {\r\n    if (Auth.isLoggedIn === true) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [Auth.isLoggedIn]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (Auth.OTPStatus === true) {\r\n\r\n      if (Auth.isVerified === true) {\r\n        dispatch(loginuser(Phone));\r\n      } else if (Auth.isVerified === false) {\r\n        // setStep(1);\r\n      } else {\r\n        setError(\"please check the input\");\r\n      }\r\n    }\r\n  }, [Auth.isVerified, Auth.OTPStatus]);\r\n\r\n  if (step === 0) {\r\n    return (\r\n      <div>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n          <div id=\"sign-in-button\"></div>\r\n          <img src={Login} alt=\"login\" className=\"Auth-image\" />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={12} className=\"modal-title\">\r\n              Login\r\n              <p className=\"modal-title-description\">\r\n                Enter your Mobile Number and Verify to login\r\n              </p>\r\n            </Grid>\r\n            <Grid item xs={12} className=\"modal-title\">\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={number}\r\n                onChange={(phone) => setnumber(phone)}\r\n                \r\n              />\r\n              <p className=\"error\">{Auth.Message || error}</p>\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                onClick={(e) => {\r\n                  handleClick(e);\r\n                }}\r\n                disabled={agree === false || term === false}\r\n                className=\"get-otp-button\"\r\n              >\r\n                Request OTP\r\n              </Button>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n\r\n                label=\"Yes, I want to recieve important information & updates on my Whatsapp\"\r\n                style={{\r\n                  fontSize: 9,\r\n                  marginTop: \"10px\",\r\n                  fontWeight: 700,\r\n                }}\r\n                required\r\n                onChange={checkboxHandler}\r\n                checked={agree}\r\n              />\r\n\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label={(<> I agree to the <Link onClick={() => {\r\n                  history.push(\"/terms\");\r\n                }}>terms and conditions</Link> applied.</>)}\r\n               \r\n                style={{\r\n                  fontSize: 9,\r\n                  marginTop: \"3px\",\r\n                  fontWeight: 700,\r\n\r\n                }}\r\n                required\r\n                onChange={checkboxtermHandler}\r\n                checked={term}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Form.Group>\r\n\r\n      </div>\r\n    );\r\n  } else if (step === 1) {\r\n    return (\r\n      <div>\r\n        <div id=\"recaptcha-container\" size=\"invisible\"></div>\r\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            Authorized OTP\r\n            <p className=\"modal-title-description\">\r\n              Enter the code you recieved on your number\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <span style={{ fontSize: 13, color: \"#727272\" }}>\r\n              Enter One Time Password (OTP)\r\n            </span>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n\r\n            <OtpInput\r\n              className=\"OTP\"\r\n              autocomplete=\"one-time-code\"\r\n              value={OTP}\r\n              onChange={(OTP) => SetOPT(OTP)}\r\n              numInputs={6}\r\n              separator={<span></span>}\r\n              inputStyle=\"Otp-block\"\r\n              isInputNum={true}\r\n            />\r\n\r\n            <p className=\"error\">{Auth.Message}</p>\r\n            <Row style={{ margin: \"auto\" }}>\r\n              <Col>\r\n                <button\r\n                  onClick={(e) => {\r\n                    handleCheck();\r\n                  }}\r\n                  className={todo ? \"resend-otp\" : \"get-otp-button\"}\r\n                >\r\n                  Verify\r\n                </button>\r\n              </Col>\r\n              <Col>\r\n                <button\r\n                  onClick={(e) => {\r\n                    handleClick(e);\r\n                  }}\r\n                  className={todo ? \"get-otp-button\" : \"resend-otp\"}\r\n                >\r\n                  Resend OTP\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <p\r\n              className=\"label w-100 tac\"\r\n              style={{ marginTop: 10, color: \"#727272\" }}\r\n            >\r\n              <Timer setStep={setStep} settodo={settodo} />\r\n            </p>\r\n          </Grid>\r\n         \r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Utils\\FileUpload_Download.js",["904"],"import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nexport async function uploadString(filedata, urlref) {\r\n  let dataurl = \"\";\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyA5Hi5O5ODsGzQuLsj__E3LecmmoSTRzek\",\r\n      authDomain: \"mobilly-invite.firebaseapp.com\",\r\n      projectId: \"mobilly-invite\",\r\n      storageBucket: \"mobilly-invite.appspot.com\",\r\n      messagingSenderId: \"828075682004\",\r\n      appId: \"1:828075682004:web:5a35293a7657af72b1f341\",\r\n      measurementId: \"G-KX6SQRPLCB\",\r\n    });\r\n  }\r\n\r\n  const ref = await firebase.storage().ref(\"/Mob-invited/\" + urlref);\r\n  await ref.putString(filedata, \"data_url\").then(async (snapshot) => {\r\n    console.log(\"fileuploaded\");\r\n    await ref.getDownloadURL().then((url) => {\r\n      dataurl = url;\r\n    });\r\n  });\r\n  return dataurl;\r\n}\r\nexport async function getString(urlref) {\r\n  var url = await firebase\r\n    .storage()\r\n    .ref(\"/Mob-invited/\" + urlref)\r\n    .getDownloadURL();\r\n  return url;\r\n}\r\nexport async function deletefile(urlref) {\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyA5Hi5O5ODsGzQuLsj__E3LecmmoSTRzek\",\r\n      authDomain: \"mobilly-invite.firebaseapp.com\",\r\n      projectId: \"mobilly-invite\",\r\n      storageBucket: \"mobilly-invite.appspot.com\",\r\n      messagingSenderId: \"828075682004\",\r\n      appId: \"1:828075682004:web:5a35293a7657af72b1f341\",\r\n      measurementId: \"G-KX6SQRPLCB\",\r\n    });\r\n  }\r\n  var storage = firebase.storage().ref();\r\n  var fileRef = await storage\r\n    .refFromURL(urlref)\r\n    .delete()\r\n    .then(function () {\r\n      // File deleted successfully\r\n      console.log(\"File Deleted\");\r\n    })\r\n    .catch(function (error) {\r\n      // Some Error occurred\r\n    });\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\DateFormatter\\Dateformatter.js",["905","906"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport default function Dateformatter(props) {\r\n    const [FormattedDate, setFormattedDate] = useState(\"\")\r\n    const [Months, setMonths] = useState(['NIL', 'Jan', 'Feb', 'March'\r\n        , 'April', 'May', 'June', 'July', 'August', 'Sept', 'Oct', 'Nov', 'Dec'])\r\n    useEffect(() => {\r\n\r\n        if (props.Date !== \"\") {\r\n            //  2021 - 07 - 23 21: 06\r\n            let type = \"am\"\r\n            let hour = props.Date.split(\" \")[1].split(\":\")[0]\r\n            if (parseInt(hour) > 12) {\r\n                hour = hour - 12;\r\n                type = \"pm\"\r\n            }\r\n            let time = hour + \":\" + props.Date.split(\" \")[1].split(\":\")[1]\r\n            let date = props.Date.split(\" \")[0]\r\n            date = date.split(\"-\")\r\n            date = date[2] + \" \" + Months[parseInt(date[1])] + \" \" + date[0]\r\n            setFormattedDate(date + \" \" + time + \" \" + type)\r\n        }\r\n    }, [props.Date])\r\n    return (\r\n        <>\r\n            {FormattedDate}\r\n        </>\r\n    )\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Notifications\\Notification.js",["907"],"import React from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Notifications.css\"\r\nimport { useSelector } from \"react-redux\";\r\nimport NoNotfcations from '../../Assets/NoNotifications.svg'\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nexport default function Notification(props) {\r\n  const Notifications = useSelector((state) => state.Notifications);\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Notificationportion-strt p-2 \">\r\n        <div className=\"Notifications-header d-flex flex-row\" style={{ marginTop: -15 }}>\r\n          <h4\r\n            className=\"font-weight-bold pr-5 pt-2\"\r\n            style={{ marginRight: \"0%\" }}\r\n          >\r\n            Notifications\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      {Notifications.length > 0 ? (\r\n        <div className=\"ofh \" style={{ marginTop: \"13px\", height: '40vh' }}>\r\n          {Notifications.map((note, index) =>\r\n            note.by === Auth.Phone ? <></> : (props.MainCode && note.MainCode === props.MainCode ?\r\n              <div className=\"media  mb-3\">\r\n                <Avatar className=\"mr-3\" src={note.img} alt=\"img\" style={{ top: '4px' }} />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0 font-weight-bold small\">\r\n                    {note.Notification}\r\n                  </h5>\r\n                  <p className=\"text-secondary time_notification\"><Dateformatter Date={note.date.split('T')[0] + ' ' + note.date.split('T')[1].substring(0, 5)} /></p>\r\n                </div>\r\n              </div> : <></>)\r\n          )}\r\n        </div>) :\r\n        <>\r\n          <img src={NoNotfcations} className=\"w-100\" />\r\n          <br />\r\n          <h4 className=\"tac\">No Notification</h4>\r\n        </>\r\n      }\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Utils\\Headings.js",["908"],"// import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"../Assets/Logo.svg\";\r\nimport history from \"./History\";\r\nimport MobileLogo from \"../Assets/MobileLogo.png\"\r\nexport default function Headings(props) {\r\n  // const [url, seturl] = useState(\"\");\r\n  // useEffect(() => {\r\n  //   let urlstr = props.url.split(\"/\");\r\n  //   seturl(urlstr[1]);\r\n  // }, []);\r\n\r\n  return (\r\n    <span className=\"black-t title-name\">\r\n      <img\r\n        src={MobileLogo}\r\n        className=\"Logo\"\r\n        alt=\"logo\"\r\n        width=\"30\"\r\n        height=\"30\"\r\n        onClick={() => history.push(\"/home\")}\r\n      />\r\n    </span>\r\n  );\r\n\r\n  //return <span className=\"black-t\">{props.url}123</span>;\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\UserPorfile\\UserProfile.js",["909","910","911","912","913","914"],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\timer\\timer.js",["915"],"import React, { useState } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nexport default function Timer(props) {\r\n  const [datetimer, setdatetime] = useState(Date.now() + 60000);\r\n\r\n  const renderer = ({ hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      props.settodo(1);\r\n      return <></>;\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <>\r\n          OTP will expire in : {hours}:{minutes}:{seconds}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return <Countdown date={datetimer} renderer={renderer} />;\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js",["916","917","918","919","920","921","922","923","924","925","926","927","928","929"],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Maps.js",["930","931","932","933","934"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport \"./Maps.css\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Geocode from \"react-geocode\";\r\nlet mapStyles = [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        weight: \"2.00\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#9c9c9c\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#f2f2f2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape.man_made\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        saturation: -100,\r\n      },\r\n      {\r\n        lightness: 45,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#eeeeee\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#7b7b7b\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#46bcec\",\r\n      },\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#c8d7d4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#070707\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"400px\",\r\n  width: \"100%\",\r\n  border: \"solid\",\r\n  display: \"none\",\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  gestureHandling: \"cooperative\",\r\n};\r\nconst center = {\r\n  lat: 20.5937,\r\n  lng: 78.9629,\r\n};\r\n\r\nexport default function Map(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\",\r\n    libraries,\r\n  });\r\n\r\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\r\n\r\n  Geocode.setLanguage(\"en\");\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [adderss, setAddress] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  useEffect(() => {\r\n    try {\r\n      let data = JSON.parse(props.CurrentEventDetails.location);\r\n      setAddress(data.Location);\r\n      setLocation(data.Location);\r\n    } catch (err) {\r\n      setLocation(\"\");\r\n    }\r\n  }, []);\r\n\r\n  const onMapClick = useCallback(async (e) => {\r\n    let lat = e.latLng.lat();\r\n    let long = e.latLng.lng();\r\n    setMarkers((current) => [\r\n      {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ]);\r\n    Geocode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(\r\n      (response) => {\r\n        const faddress = response.results[0].formatted_address;\r\n\r\n        setAddress(faddress);\r\n\r\n        let location = JSON.stringify({ lat, long, faddress });\r\n        // console.log({\r\n        //   ...props.CurrentEventDetails,\r\n        //   Location: location,\r\n        // });\r\n        // props.setLocation(location);\r\n        // if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //     Link: \"\",\r\n        //   });\r\n        // } else {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //   });\r\n        // }\r\n\r\n        // console.log(faddress);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    let location = JSON.stringify({ lat, lng });\r\n    // console.log(location);\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(20);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <h1></h1>\r\n\r\n      <Search\r\n        panTo={panTo}\r\n        Location={Location}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n        setLocation={props.setLocation}\r\n      />\r\n\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={5}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n        options={{ scrollwheel: false }}\r\n        style={{ display: \"none\" }}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={`${marker.lat}-${marker.lng}`}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{adderss}</h2>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  // console.log(props);\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\r\n      radius: 100 * 1000,\r\n    },\r\n  });\r\n\r\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\r\n\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setValue(address, false);\r\n    clearSuggestions();\r\n\r\n    try {\r\n      const results = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n      props.panTo({ lat, lng });\r\n      // console.log(results);\r\n      let location = await JSON.stringify({ lat, lng, address });\r\n\r\n      if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n          Link: \"\",\r\n        });\r\n      } else {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n      }\r\n      props.setisEditLocation(false)\r\n    } catch (error) {\r\n      console.log(\"😱 Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-90\">\r\n      <Combobox\r\n        onSelect={async (address) => { await handleSelect(address); await props.setLocation(address) }}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        setCurrentEventDetails={props.setCurrentEventDetails}\r\n      >\r\n        <span\r\n          className={\r\n            props.CurrentEventDetails.VenueType === \"Offline\"\r\n              ? \"label top-5\"\r\n              : \"label\"\r\n          }\r\n        >\r\n          Location\r\n        </span>\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={handleInput}\r\n          disabled={!ready}\r\n          style={{border:'2px solid #3897F1'}}\r\n          Placeholder=\"Search your location\"\r\n          className={\"locationSearch\"}\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div >\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CanvasEditor.js",["935"],"import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./CanvasEditor.scss\";\r\nimport { toPng } from \"html-to-image\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {FcInfo} from \"react-icons/fc\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nexport default function CanvasEditor(props) {\r\n    const [version, setversion] = useState(0);\r\n    const [IsProcessing, setIsProcessing] = useState(false);\r\n    const [IsSaving, setIsSaving] = useState(false);\r\n    const loadIamge = async () => {\r\n        await setIsProcessing(true);\r\n        setInterval(async () => {\r\n            await setIsProcessing(false);\r\n        }, 5000);\r\n    };\r\n\r\n    const download = async () => {\r\n        let file = await toPng(document.getElementById(\"image\")).then(\r\n            async function (blob) {\r\n                let EventsCpy = await { ...props.CurrentEventDetails };\r\n                // console.log(blob)\r\n                EventsCpy.filetype = \"png\";\r\n                EventsCpy.file = blob;\r\n                await props.SetCurrentEventDetails(EventsCpy);\r\n                props.show(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {IsProcessing === true ? (\r\n                <center style={{ height: \"500px\" }}>\r\n                    <CircularProgress style={{ position: \"relative\", top: \"200px\" }} />\r\n                </center>\r\n            ) : (\r\n                <>\r\n                <p style={{marginLeft:10, fontSize:'15px'}}>\r\n                    <FcInfo size={23} /> Click on the text to edit\r\n                </p>\r\n                <div\r\n                    id=\"image\"\r\n                    style={{\r\n                        backgroundImage: `url(${props.allimgsforcategory[props.currentimage].urlToImage[version]\r\n                            .src\r\n                            })`,\r\n                        backgroundSize: \"contain\",\r\n                        height: \"500px\",\r\n                        overflow: \"hidden\",\r\n                        width: \"320px\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        backgroundPosition: \"center center\",\r\n                        zIndex: 0,\r\n                        padding: 0,\r\n                        margin: 0,\r\n                    }}\r\n                >\r\n                    {props.allimgsforcategory[props.currentimage].Texts.map(\r\n                        (txt, index) => (\r\n                            <p\r\n                                contentEditable=\"true\"\r\n                                key={index}\r\n                                className=\"editable-content\"\r\n                                style={{\r\n                                    position: \"relative\",\r\n                                    width: txt.Style.width,\r\n                                    margin: txt.Style.margin,\r\n                                    top: txt.Style.top,\r\n                                    fontSize: txt.Style.fontSize,\r\n                                    color: txt.Style.color,\r\n                                    fontWeight: txt.Style.fontWeight,\r\n                                    transform: txt.Style.transform,\r\n                                    textAlign: txt.Style.textAlign,\r\n                                    paddingRight: txt.Style.paddingRight,\r\n                                    paddingLeft: txt.Style.paddingLeft,\r\n                                    fontFamily: txt.Style.fontFamily,\r\n                                    zIndex: index + 1\r\n                                }}\r\n                            >\r\n                                {txt.editable}\r\n                            </p>\r\n                        )\r\n                    )}\r\n                </div>\r\n                </>\r\n            )}\r\n            {IsSaving === false ? (\r\n                <Grid container spacing={0}>\r\n                    \r\n                    <Grid item xs={6} justify=\"center\">\r\n                    \r\n                        <center style={{ paddingTop: \"10px\"}}>\r\n                    {/*     <p style={{margin:'auto', textAlign:'left', marginLeft:'15px' }}>Colors</p> */}\r\n                            {props.allimgsforcategory[props.currentimage].urlToImage.map(\r\n                                (options, index) => (\r\n                                    <>\r\n                                    \r\n                                    <Button\r\n                                        className=\"color-blocks\"\r\n                                        style={{ backgroundColor: options.color }}\r\n                                        onClick={() => {\r\n                                            setversion(index);\r\n                                            loadIamge();\r\n                                        }}\r\n                                    ></Button>\r\n                                    </>\r\n                                )\r\n                            )}\r\n                        </center>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            className=\"save-event\"\r\n                            style={{ marginTop: \"5px\" }}\r\n                            onClick={async () => {\r\n                                await setIsSaving(true);\r\n                                await download();\r\n                                await setIsSaving(false);\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </Grid>\r\n                </Grid>\r\n               \r\n            ) : (\r\n                <>\r\n                    <center>\r\n                        <CircularProgress />\r\n                    </center>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\SelectParticipant.js",["936","937","938","939","940","941","942","943","944","945","946","947"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  List,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  TextField,\r\n  Avatar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Userurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport AddImg from \"../../Assets/AddImage.svg\";\r\nimport { creategroup } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nexport function Participant(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  return (\r\n    <Grid container spacing={2} className=\"mt-10px ofh\">\r\n      <Grid item xs={12}>\r\n        <h5>Select Contact</h5>\r\n      </Grid>\r\n      <List>\r\n        {props.url.map((grp) =>\r\n          grp !== Auth.Phone ? (\r\n            <ListItem\r\n              onClick={async () => {\r\n                await props.setParticipants([grp]);\r\n                // console.log([grp]);\r\n                await props.setgroupName(grp + \"\");\r\n                await props.create();\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Userurl\r\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                  showIcon={true}\r\n                />\r\n              </ListItemAvatar>\r\n              <Userurl\r\n                Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                showName={true}\r\n              />\r\n            </ListItem>\r\n          ) : (\r\n            <></>\r\n          )\r\n        )}\r\n      </List>\r\n    </Grid>\r\n  );\r\n}\r\nexport function CreateGroup(props) {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    props.setgroupImagetype(type);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let fileurl = reader.result;\r\n      props.setgroupImage(fileurl);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  const [groupName, setgroupName] = useState(\"\");\r\n  const [participants, setparticipants] = useState([...props.url]);\r\n  function filterparticipant(grp) {\r\n    let Participantcopy = [];\r\n    Participantcopy = participants.filter((sParticipant, i) => {\r\n      return sParticipant !== grp;\r\n    });\r\n    setparticipants(Participantcopy);\r\n  }\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  return (\r\n    <div>\r\n      <h5> Create Group</h5>\r\n\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <img\r\n          src={props.groupImage === \"\" ? AddImg : props.groupImage}\r\n          style={{\r\n            width: \"200px\",\r\n            objectFit: \"cover\",\r\n            height: \"200px\",\r\n            borderRadius: \"100%\",\r\n            margin: \"10px\",\r\n            marginLeft: \"50px\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        label=\"Group Name\"\r\n        size=\"small\"\r\n        className=\"w-100 mt-10px\"\r\n        value={props.groupName}\r\n        onChange={(e) => {\r\n          props.setgroupName(e.target.value);\r\n        }}\r\n      />\r\n      <Grid container spacing={2} className=\"mt-10px ofh\">\r\n        <List>\r\n          {props.url.map((grp) =>\r\n            grp !== Auth.Phone ? (\r\n              <ListItem\r\n                onClick={async () => {\r\n                  await props.setParticipants([...props.Participants, grp]);\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Userurl\r\n                    Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                    showIcon={true}\r\n                  />\r\n                </ListItemAvatar>\r\n                <Userurl\r\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                  showName={true}\r\n                />\r\n              </ListItem>\r\n            ) : (\r\n              <></>\r\n            )\r\n          )}\r\n        </List>\r\n      </Grid>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"w-100\"\r\n        onClick={async () => {\r\n          await props.create();\r\n          props.show(false);\r\n        }}\r\n      >\r\n        Create Group\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function SelectParticipant(props) {\r\n  const [createGroup, setcreateGroup] = useState(props.showall);\r\n  const [Participants, setParticipants] = useState([]);\r\n  const [groupName, setgroupName] = useState(\"\");\r\n  const [groupImage, setgroupImage] = useState(\"\");\r\n  const [groupImagetype, setgroupImagetype] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const create = async () => {\r\n    let fileurl = \"\";\r\n    if (Participants.length > 0 && groupName !== \"\") {\r\n      let participants = [...new Set(Participants)];\r\n      await setParticipants(participants);\r\n      // console.log(\r\n      //   groupName,\r\n      //   props.MainCode + groupName,\r\n      //   groupImage,\r\n      //   createGroup === 0 ? \"INDV\" : \"GRP\"\r\n      // );\r\n      if (groupImage !== \"\") {\r\n        fileurl = await uploadString(\r\n          groupImage,\r\n          \"Groups/\" + props.MainCode + \"/\" + groupName + \".\" + groupImagetype\r\n        );\r\n        await setgroupImage(fileurl);\r\n      }\r\n      await dispatch(\r\n        creategroup(\r\n          groupName,\r\n          props.MainCode + groupName,\r\n          Participants,\r\n          fileurl,\r\n          createGroup === 0 ? \"INDV\" : \"GRP\"\r\n        )\r\n      );\r\n      props.hide(false);\r\n    } else {\r\n      // console.log(groupName);\r\n      console.log(Participants);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {createGroup === 0 ? (\r\n        <>\r\n          <Participant\r\n            url={props.url}\r\n            setParticipants={setParticipants}\r\n            setgroupName={setgroupName}\r\n            create={create}\r\n            show={props.hide}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CreateGroup\r\n            url={props.url}\r\n            Participants={Participants}\r\n            setParticipants={setParticipants}\r\n            setgroupImage={setgroupImage}\r\n            setgroupName={setgroupName}\r\n            groupName={groupName}\r\n            groupImage={groupImage}\r\n            create={create}\r\n            show={props.hide}\r\n            setgroupImagetype={setgroupImagetype}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\NotificationAction.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js",["948","949","950","951"],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Places.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\AddStory.js",["952","953","954","955","956","957","958","959","960","961","962","963","964"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Grid, Paper, IconButton } from \"@material-ui/core\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport AlbumsNone from \"../../Assets/AlbumsNone.jpg\";\r\nimport Gallery from \"../../Assets/ChooseFromGallery.svg\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport Dateformatter from \"../Helpers/DateFormatter/Dateformatter\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { UpdateStory } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form, Button, Toast, Container } from \"react-bootstrap\";\r\n\r\nexport default function AddStory(props) {\r\n  const [showA, setShowA] = useState(false);\r\n  const toggleShowA = () => setShowA(!showA);\r\n  const dispatch = useDispatch();\r\n  const [subStory, setsubStory] = useState([]);\r\n  const [subname, setsubname] = useState(\"\");\r\n  const [file, setfile] = useState(\"\");\r\n  const [filetype, setfiletype] = useState(\"\");\r\n  const [datetime, setdatetime] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [currentedited, setcurrentedited] = useState(null);\r\n  const [add, setadd] = useState(false);\r\n  const [edit, setedit] = useState(false);\r\n  const [isError, setError] = useState(false);\r\n  const [uniqurl, setuniqurl] = useState(\"\");\r\n  const save = async () => {\r\n    if (\r\n      subname !== \"\" &&\r\n      datetime !== \"\" &&\r\n      description !== \"\" &&\r\n      file !== \"\"\r\n    ) {\r\n      setError(false);\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        file: file,\r\n        filetype: filetype,\r\n      };\r\n      // console.log([...subStory, data]);\r\n\r\n      let subStorycopy = [...subStory, data];\r\n      for (let i = 0; i < subStory.length; i++) {\r\n        if (!subStory[i].file.includes(\"firebasestorage.googleapis.com\")) {\r\n          let newurl = await uploadString(\r\n            subStory[i].file,\r\n            uniqurl + i + \".\" + subStory[i].filetype\r\n          );\r\n          subStory[i].file = newurl;\r\n        }\r\n      }\r\n      await dispatch(UpdateStory(props.maincode, subStorycopy));\r\n      await setsubStory([...subStory, data]);\r\n      Delete();\r\n      setadd(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    let dataurl = \"\";\r\n\r\n    if (acceptedFiles[0].size > 5259265) {\r\n    } else {\r\n      let type = acceptedFiles[0].type.split(\"/\");\r\n      await getBase64(acceptedFiles[0]).then(async (data) => {\r\n        setfile(data);\r\n        setfiletype(type[1]);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n  });\r\n\r\n  const Delete = () => {\r\n    setsubname(\"\");\r\n    setfile(\"\");\r\n    setfiletype(\"\");\r\n    setdatetime(\"\");\r\n    setdescription(\"\");\r\n    setadd(false);\r\n  };\r\n  const Deletesingle = async (i) => {\r\n    let subStorycpy = [...subStory];\r\n\r\n    subStorycpy = subStorycpy.filter((eventdata, index) => {\r\n      return index !== i;\r\n    });\r\n    await dispatch(UpdateStory(props.maincode, subStorycpy));\r\n\r\n    await setsubStory(subStorycpy);\r\n    await setedit(false);\r\n    await setcurrentedited(null);\r\n  };\r\n  const settoedit = (i) => {\r\n    let data = { ...subStory[i] };\r\n    setsubname(data.Name);\r\n    setfile(data.file);\r\n    setfiletype(data.filetype);\r\n    setdatetime(data.datetime);\r\n    setdescription(data.description);\r\n  };\r\n  const saveedit = async () => {\r\n    let subStorycpy = [...subStory];\r\n    if (\r\n      subname !== \"\" &&\r\n      datetime !== \"\" &&\r\n      description !== \"\" &&\r\n      file !== \"\"\r\n    ) {\r\n      setError(false);\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        file: file,\r\n        filetype: filetype,\r\n      };\r\n      subStorycpy[currentedited] = data;\r\n      await setsubStory([...subStorycpy]);\r\n      await dispatch(UpdateStory(props.maincode, [...subStorycpy]));\r\n      // dispatch({\r\n      //     type: SAVESTORY,\r\n      //     payload: subStory,\r\n      // });\r\n      Delete();\r\n      setedit(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  useEffect(async () => {\r\n    setsubStory(props.Eventdata);\r\n    if (props.uniqurl.split(\"%2F\")[1] === \"InternalTemplates\") {\r\n      let newurl =\r\n        props.uniqurl.split(\"%2F\")[2] +\r\n        Math.floor(100000 + Math.random() * 900000) +\r\n        \"/Story/\";\r\n      for (let i = 0; i < subStory.length; i++) {\r\n        if (\r\n          subStory[i].file &&\r\n          subStory[i].file.includes(\"firebasestorage.googleapis.com\")\r\n        ) {\r\n          newurl = subStory[i].file.split(\"%2F\")[1] + \"/Story/\";\r\n        }\r\n      }\r\n      // console.log(newurl);\r\n      await setuniqurl(newurl);\r\n    } else {\r\n      await setuniqurl(props.uniqurl.split(\"%2F\")[1] + \"/Story/\");\r\n      // console.log(props.uniqurl.split(\"%2F\")[1] + \"/Album/\");\r\n    }\r\n  }, [props.Eventdata, props.uniqurl]);\r\n\r\n  return (\r\n    <>\r\n      {add == true && props.IsAdmin === true ? (\r\n        <Paper style={{ height: \"300x\" }} elevation={3}>\r\n          <Grid container spacing={0}>\r\n            <Grid className=\"stryimg\" xs={12} md={8} style={{ margin: \"auto\" }}>\r\n              {file === \"\" ? (\r\n                <div {...getRootProps()} className=\"w-100\">\r\n                  <input {...getInputProps()} className=\"w-100\" />\r\n\r\n                  <Form.Label style={{ fontWeight: 500 }}>Add Image</Form.Label>\r\n                  <Form.Control type=\"file\" size=\"sm\" src={Gallery} />\r\n                  <br />\r\n                </div>\r\n              ) : filetype === \"png\" ||\r\n                filetype === \"jpg\" ||\r\n                filetype === \"jpeg\" ? (\r\n                <img src={file} className=\"w-100 story-image\" />\r\n              ) : (\r\n                <div {...getRootProps()} className=\"w-100\">\r\n                  <input {...getInputProps()} className=\"w-100\" />\r\n                  <video src={file} className=\"w-100  story-image\" />\r\n                </div>\r\n              )}\r\n              {isError === true && file === \"\" ? (\r\n                <span className=\"error\">please add valid image</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid className=\"stryimg\" xs={12} md={8} style={{ margin: \"auto\" }}>\r\n              <Form.Label style={{ fontWeight: 500 }}>Event Name</Form.Label>\r\n              <Form.Control\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Event Name Here\"\r\n                style={{ borderRadius: \"20px\" }}\r\n                onChange={(e) => {\r\n                  setsubname(e.target.value);\r\n                }}\r\n                value={subname}\r\n                error={isError === true && subname === \"\" ? true : false}\r\n              />\r\n              <br />\r\n              <form noValidate>\r\n                <Form.Label style={{ fontWeight: 500 }}>Date</Form.Label>\r\n                <Form.Control\r\n                  size=\"sm\"\r\n                  type=\"datetime-local\"\r\n                  placeholder=\"Edit Date\"\r\n                  id=\"datetime-local\"\r\n                  style={{ borderRadius: \"20px\" }}\r\n                  defaultValue=\"2017-05-24T10:30\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setdatetime(e.target.value);\r\n                  }}\r\n                  value={datetime}\r\n                />{\" \"}\r\n                <br />\r\n              </form>\r\n              <Form.Label style={{ fontWeight: 500 }}>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter Description\"\r\n                style={{ height: \"100px\", borderRadius: \"20px\" }}\r\n                onChange={(e) => {\r\n                  setdescription(e.target.value);\r\n                }}\r\n                value={description}\r\n                error={isError === true && description === \"\" ? true : false}\r\n              />\r\n              <br />\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  columnGap: \"20px\",\r\n                }}\r\n              >\r\n                <Button\r\n                  style={{ borderRadius: \"20px\" }}\r\n                  variant=\"outline-danger\"\r\n                  onClick={() => {\r\n                    setadd(false);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  style={{ borderRadius: \"20px\" }}\r\n                  onClick={() => {\r\n                    save();\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n              <br />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      ) : add == false && subStory.length === 0 ? (\r\n        <>\r\n          <img src={AlbumsNone} className=\"blank-album\" />\r\n          {props.IsAdmin === true ? (\r\n            <></>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  style={{ borderRadius: \"20px\", marginTop: 20 }}\r\n                  onClick={toggleShowA}\r\n                >\r\n                  Ask For Story\r\n                </Button>\r\n              </div>\r\n              <Container>\r\n                <Toast\r\n                  show={showA}\r\n                  onClose={toggleShowA}\r\n                  position=\"top-end\"\r\n                  delay={4000}\r\n                  autohide\r\n                  style={{ marginTop: \"20px\" }}\r\n                >\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded me-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"me-auto\">Informed!</strong>\r\n                  </Toast.Header>\r\n                  <Toast.Body>Requested Admin for to add Stories📸</Toast.Body>\r\n                </Toast>\r\n              </Container>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {subStory.map((eve, index) =>\r\n        edit === true && index === currentedited ? (\r\n          <Paper style={{ height: \"300x\" }} elevation={3}>\r\n            <Grid container spacing={0}>\r\n              <Grid\r\n                className=\"stryimg\"\r\n                item\r\n                xs={3}\r\n                sm={3}\r\n                style={{ margin: \"auto\" }}\r\n              >\r\n                <div {...getRootProps()} className=\"w-100\">\r\n                  <input {...getInputProps()} className=\"w-100\" />\r\n                  {eve.filetype === \"png\" ||\r\n                  eve.filetype === \"jpg\" ||\r\n                  eve.filetype === \"jpeg\" ? (\r\n                    <img\r\n                      src={eve.file === undefined ? \" \" : eve.file}\r\n                      className=\"w-100 story-image\"\r\n                    />\r\n                  ) : (\r\n                    <video\r\n                      src={eve.file === undefined ? \" \" : eve.file}\r\n                      className=\"w-100 story-image\"\r\n                    />\r\n                  )}\r\n                  {isError === true && file === \"\" ? (\r\n                    <span className=\"error\">please add valid image</span>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              </Grid>\r\n              <Grid\r\n                className=\"stryimg\"\r\n                xs={12}\r\n                md={8}\r\n                style={{ margin: \"auto\" }}\r\n              >\r\n                <Form.Label style={{ fontWeight: 500 }}>Event Name</Form.Label>\r\n                <Form.Control\r\n                  size=\"sm\"\r\n                  type=\"text\"\r\n                  placeholder=\"Event Name Here\"\r\n                  onChange={(e) => {\r\n                    setsubname(e.target.value);\r\n                  }}\r\n                  value={subname}\r\n                  error={isError === true && subname === \"\" ? true : false}\r\n                />\r\n                <br />\r\n\r\n                <form noValidate>\r\n                  <Form.Label style={{ fontWeight: 500 }}>Date</Form.Label>\r\n                  <Form.Control\r\n                    size=\"sm\"\r\n                    type=\"datetime-local\"\r\n                    placeholder=\"Edit Date\"\r\n                    id=\"datetime-local\"\r\n                    defaultValue=\"2017-05-24T10:30\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={(e) => {\r\n                      setdatetime(e.target.value);\r\n                    }}\r\n                    value={datetime}\r\n                  />{\" \"}\r\n                  <br />\r\n                </form>\r\n                <Form.Label style={{ fontWeight: 500 }}>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  placeholder=\"Enter Description\"\r\n                  style={{ height: \"100px\" }}\r\n                  onChange={(e) => {\r\n                    setdescription(e.target.value);\r\n                  }}\r\n                  value={description}\r\n                  error={isError === true && description === \"\" ? true : false}\r\n                />\r\n                <br />\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    columnGap: \"20px\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    style={{ borderRadius: \"20px\" }}\r\n                    variant=\"outline-danger\"\r\n                    onClick={() => {\r\n                      setadd(false);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    style={{ borderRadius: \"20px\" }}\r\n                    onClick={() => {\r\n                      save();\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Grid>\r\n                <br />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        ) : (\r\n          <Paper\r\n            elevation={3}\r\n            style={{ display: add === true || edit === true ? \"none\" : \"\" }}\r\n          >\r\n            <Grid container spacing={0}>\r\n              <Grid\r\n                className=\"stryimg\"\r\n                item\r\n                xs={5}\r\n                sm={3}\r\n                style={{ marginBottom: \"20px\" }}\r\n              >\r\n                {eve.filetype === \"png\" ||\r\n                eve.filetype === \"jpg\" ||\r\n                eve.filetype === \"jpeg\" ? (\r\n                  <img\r\n                    src={eve.file === undefined ? \" \" : eve.file}\r\n                    className=\"w-100  story-image\"\r\n                  />\r\n                ) : (\r\n                  <video\r\n                    src={eve.file === undefined ? \" \" : eve.file}\r\n                    className=\"w-100  story-image\"\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid className=\"p-5px\" item xs={6} sm={6}>\r\n                <h2\r\n                  className=\"m-0\"\r\n                  style={{ fontSize: \"16px\", fontWeight: 800 }}\r\n                >\r\n                  {eve.Name !== undefined && eve.Name.length > 0\r\n                    ? eve.Name\r\n                    : \"\"}\r\n                </h2>\r\n                {eve.datetime !== undefined && eve.datetime.length > 0 ? (\r\n                  <p style={{ fontSize: \"12px\", color: \"#3897F1\" }}>\r\n                    {\" \"}\r\n                    <Dateformatter\r\n                      Date={\r\n                        eve.datetime.split(\"T\")[0] +\r\n                        \" \" +\r\n                        eve.datetime.split(\"T\")[1]\r\n                      }\r\n                    />\r\n                  </p>\r\n                ) : (\r\n                  <></>\r\n                )}{\" \"}\r\n                <br />\r\n                <p className=\"m-0\" style={{ fontSize: \"13px\" }}>\r\n                  {\" \"}\r\n                  {eve.description !== undefined && eve.description.length > 0\r\n                    ? eve.description\r\n                    : \"\"}\r\n                </p>\r\n                <p>\r\n                  {props.IsAdmin === true ? (\r\n                    <Grid item xs={6} md={6}>\r\n                      <IconButton\r\n                        onClick={async () => {\r\n                          setedit(true);\r\n                          setadd(false);\r\n                          Delete();\r\n                          await setcurrentedited(index);\r\n                          await settoedit(index);\r\n                        }}\r\n                        style={{ borderRadius: \"100%\" }}\r\n                      >\r\n                        <FiEdit />\r\n                      </IconButton>\r\n\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          Deletesingle(index);\r\n                        }}\r\n                      >\r\n                        <MdDeleteForever size={25} style={{ color: \"red\" }} />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </p>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        )\r\n      )}\r\n\r\n      {props.IsAdmin === true ? (\r\n        <AddCircleRoundedIcon\r\n          fontSize=\"large\"\r\n          className=\"add-button bottom\"\r\n          onClick={() => {\r\n            Delete();\r\n            setcurrentedited(\"\");\r\n            setedit(false);\r\n            setadd(true);\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\Addtoalbum.js",["965","966","967","968","969","970"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../Assets/ChooseFromGallery.svg\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"../AddEvent/Extras/Extras.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"../Helpers/Popups/Popup.css\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { uploadfiletoalbum } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nexport default function Addtoalbum(props) {\r\n    const dispatch = useDispatch();\r\n    const EventState = useSelector((state) => state.Eventdata);\r\n    const [IsProcessing, setIsProcessing] = useState(false);\r\n\r\n\r\n    useEffect(async () => {\r\n        if (props.showPopup === true) {\r\n            await savetoredux([...props.images])\r\n        } else {\r\n            await savetoredux([])\r\n        }\r\n    }, [props.showPopup]);\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        let dataarray = [];\r\n        for (let i = 0; i < acceptedFiles.length; i++) {\r\n            if (acceptedFiles[i].size > 5259265) {\r\n            } else {\r\n                let type = acceptedFiles[i].type.split(\"/\");\r\n                type = type[1];\r\n                await getBase64(acceptedFiles[i]).then(async (data) => {\r\n                    dataarray.push({ file: data, type: type });\r\n                });\r\n            }\r\n        }\r\n        await Addtoalbum(dataarray)\r\n        return true;\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: \"image/jpeg, image/png, image/jpg\",\r\n    });\r\n\r\n    const Addtoalbum = async (data) => {\r\n\r\n        await dispatch({ type: \"ADDALBUM\", payload: data })\r\n    }\r\n\r\n    const deleteimage = async (i) => {\r\n        let bkpalbum = EventState.ALBUM.filter((item, index) => i !== index);\r\n        await savetoredux([...bkpalbum])\r\n        return 1;\r\n\r\n    };\r\n    const savetoredux = async (data) => {\r\n        await dispatch({ type: \"SAVEALBUM\", payload: data })\r\n    }\r\n    const save = async () => {\r\n\r\n        await setIsProcessing(true);\r\n        let albumcopy = [...EventState.ALBUM];\r\n        let newuniqurl = \"\";\r\n        if (props.uniqurl.split(\"%2F\")[1] === \"InternalTemplates\") {\r\n            newuniqurl =\r\n                props.uniqurl.split(\"%2F\")[2] +\r\n                Math.floor(100000 + Math.random() * 900000) +\r\n                \"/Album/\";\r\n        } else {\r\n            newuniqurl = props.uniqurl.split(\"%2F\")[1] + \"/Album/\";\r\n        }\r\n        for (let i = 0; i < albumcopy.length; i++) {\r\n            if (\r\n                albumcopy[i].file.length > 1 &&\r\n                !albumcopy[i].file.includes(\"firebasestorage.googleapis.com\")\r\n            ) {\r\n                let url = await uploadString(albumcopy[i].file, newuniqurl + i);\r\n                albumcopy[i].file = url;\r\n            }\r\n        }\r\n\r\n        await dispatch(\r\n            uploadfiletoalbum(\r\n                albumcopy,\r\n                props.MainCode,\r\n                props.toggleShowPopup,\r\n                setIsProcessing\r\n            )\r\n        );\r\n        await savetoredux([])\r\n    };\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"modal\"\r\n                open={props.showPopup}\r\n            >\r\n                <div className=\"modal-card\">\r\n                    <IconButton\r\n                        className=\"popup-close\"\r\n                        onClick={() => {\r\n                            props.toggleShowPopup(false);\r\n                        }}\r\n                    >\r\n                        <CancelIcon color=\"secondary\" fontSize=\"large\" />\r\n                    </IconButton>\r\n\r\n                    <div {...getRootProps()} style={{ width: \"100%\" }}>\r\n                        <input {...getInputProps()} />\r\n                        <img src={Gallery} className=\"w-100 uploadhere\" />\r\n                        {IsProcessing === true ? (\r\n                            <p className=\"tac\">Please wait while files are uploading</p>\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                    </div>\r\n                    {IsProcessing === true ? (\r\n                        <CircularProgress\r\n                            style={{\r\n                                position: \"relative\",\r\n                                left: \"45%\",\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        <>\r\n                            <Grid item xs={12} className=\"ofh view\">\r\n                                <Grid container spacing={4}>\r\n                                    {EventState.ALBUM && EventState.ALBUM.length > 0\r\n                                        ? EventState.ALBUM.map((image, index) => (\r\n                                            <Grid item xs={4} md={2} key={\"img\" + index}>\r\n                                                <CancelIcon\r\n                                                    onClick={() => {\r\n                                                        deleteimage(index);\r\n                                                    }}\r\n                                                    color=\"secondary\"\r\n                                                    className=\"delete-img\"\r\n                                                />\r\n                                                <img src={image.file} className=\"w-100 preview\" />\r\n                                            </Grid>\r\n                                        ))\r\n                                        : Array.from({ length: 30 }, (value, key) => (\r\n                                            <Grid\r\n                                                item\r\n                                                xs={2}\r\n                                                md={1}\r\n                                                key={\"img\" + key}\r\n                                                className=\"w-100 preview grey m-5px\"\r\n                                            ></Grid>\r\n                                        ))}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} className=\"submit jcc\">\r\n                                <button\r\n                                    onClick={() => {\r\n                                        save();\r\n                                    }}\r\n                                    className=\"add-album  \"\r\n                                >\r\n                                    Save\r\n                                </button>\r\n                            </Grid>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js",["971","972","973","974","975","976","977"],"C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\AddTags.js",["978"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport './Feed.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: '250px',\r\n        overflow: 'scroll',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\nexport default function AddTags(props) {\r\n    const [Tags, setTags] = useState(props.url)\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        setTags([...props.url])\r\n        //  console.log(props.MainCode)\r\n    }, [props.url])\r\n\r\n    const addTags = (data) => {\r\n        setTags([...Tags, data])\r\n    }\r\n    const removeTags = (data) => {\r\n        let Tagscpy = [...Tags];\r\n        Tagscpy = Tagscpy.filter((tag) => {\r\n            return data != tag;\r\n        });\r\n        setTags([...Tagscpy])\r\n    }\r\n\r\n    return (\r\n        <div><h3>Add Tags</h3>\r\n\r\n            <List className={classes.root}>\r\n                {props.MainCode.map(Participant => (\r\n                    <ListItem alignItems=\"flex-start\" className={Tags.includes(Participant) ? \"selected m-5px\" : \"m-5px\"}\r\n                        onClick={() => { Tags.includes(Participant) ? removeTags(Participant) : addTags(Participant) }}>\r\n                        <ListItemAvatar>\r\n                            <UserDataUrl showIcon={true} Phone={Participant} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={<UserDataUrl showName={true} Phone={Participant} />}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n\r\n                                    </Typography>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                ))}\r\n\r\n\r\n            </List>\r\n            <button className=\"btn btn-primary\" onClick={() => { props.showall([...Tags]); props.hide(false) }}\r\n                style={{ width: \"100%\", borderRadius: 20 }}>\r\n                Save\r\n            </button>\r\n        </div >\r\n    );\r\n}","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Posts.js",["979","980","981","982","983","984","985"],"C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\AddPost.js",["986","987","988","989","990"],"C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Media.js",["991","992","993","994"],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js",["995"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./InvitaionRSVP.css\";\r\nimport { Carousel, Button } from \"react-bootstrap\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\r\nexport default function InvitaionRSVP(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  const Next = async (i) => {\r\n    console.log(i, props.Eventdata.length);\r\n    if (i < props.Eventdata.length) {\r\n      props.setevno(i);\r\n      setindex(i);\r\n      setdirection(\"next\");\r\n    } else {\r\n      props.sethasallrsvps(true);\r\n      await dispatch(GetInvitations());\r\n      await dispatch(GetEvents());\r\n      await dispatch(getNotification())\r\n    }\r\n  };\r\n\r\n  const [index, setindex] = useState(0);\r\n  const [direction, setdirection] = useState(\"\");\r\n\r\n  const handleSelect = (index) => {\r\n    let newIndex = index + 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*  <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <DesktopNav id={props.id} base={props.base} />\r\n      <Toggler id={props.id} /> */}\r\n      <Carousel\r\n        controls={false}\r\n        direction={direction}\r\n        onSelect={(i) => {\r\n          handleSelect(i);\r\n        }}\r\n        activeIndex={index}\r\n        interval={99999999999999}\r\n      >\r\n        {props.Eventdata && props.Eventdata.length > 0 &&\r\n          props.Eventdata.map((eve, index) => (\r\n            <Carousel.Item>\r\n              {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  className=\"d-block rsvpimage\"\r\n                  src={eve.file}\r\n                  alt=\"First slide\"\r\n                />) : (\r\n                <video\r\n                  muted\r\n                  type=\"video/mp4\"\r\n                  autoPlay={true}\r\n                  src={\r\n                    eve.file\r\n                  }\r\n                  preload=\"none\"\r\n                  className=\"d-block rsvpimage\"\r\n                />\r\n              )}\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(rsvp_event(eve._id, \"Accept\", Auth.Phone));\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(rsvp_event(eve._id, \"May Be\", Auth.Phone));\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      {/* <NavMobile className=\"footnavmobile\" id={props.id} base={props.base} /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Schedule.js",["996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008"],"import \"./Extras.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Grid, IconButton } from \"@material-ui/core\";\r\nimport { Form, Button, Toast } from \"react-bootstrap\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BlankSchedule from \"../../../Assets/BlankSchedule.svg\";\r\nimport { UpdateSchedules } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Dateformatter from \"../../Helpers/DateFormatter/Dateformatter\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    wordBreak: \"break-word\",\r\n  },\r\n}));\r\nexport default function AddSchedule(props) {\r\n  const [showA, setShowA] = useState(false);\r\n  const toggleShowA = () => setShowA(!showA);\r\n  const dispatch = useDispatch();\r\n  const [username, setusername] = useState(\"\");\r\n  const [subEvent, setSubevent] = useState([...props.CurrentEventDetails]);\r\n  const [edit, setedit] = useState(false);\r\n  const [add, setadd] = useState(false);\r\n  const [editselected, settoedit] = useState(null);\r\n  const [subname, setsubname] = useState(\"\");\r\n  const [venue, setvenue] = useState(\"\");\r\n  const [datetime, setdatetime] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [link, setlink] = useState(\"\");\r\n  const [isError, setError] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [showfulldescription, setshowfulldescription] = useState(false);\r\n  useEffect(() => {\r\n    setSubevent([...props.CurrentEventDetails]);\r\n  }, [props.CurrentEventDetails]);\r\n\r\n  const save = async () => {\r\n    if (subname !== \"\" && datetime !== \"\" && description !== \"\") {\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        link: link,\r\n      };\r\n      // console.log([...subEvent, data]);\r\n      let newdata = [...subEvent, data];\r\n      await setSubevent(newdata);\r\n\r\n      await dispatch(UpdateSchedules(props.Eid, newdata));\r\n      Delete();\r\n      setadd(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n    setsubname(\"\");\r\n    setdatetime(\"\");\r\n    setdescription(\"\");\r\n    setvenue(\"\");\r\n    setlink(\"\");\r\n  };\r\n\r\n  const saveedit = async () => {\r\n    if (subname !== \"\" && datetime !== \"\" && description !== \"\") {\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        link: link,\r\n      };\r\n      let subEventcpy = [...subEvent];\r\n      subEventcpy[editselected] = data;\r\n      await setSubevent(subEventcpy);\r\n      await dispatch(UpdateSchedules(props.Eid, subEventcpy));\r\n      var EventsCopy = [...subEventcpy];\r\n      Delete();\r\n      setedit(false);\r\n      settoedit(null);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n  const Delete = () => {\r\n    setsubname(\"\");\r\n    setdatetime(\"\");\r\n    setdescription(\"\");\r\n    setvenue(\"\");\r\n    setlink(\"\");\r\n    setshowfulldescription(false);\r\n  };\r\n\r\n  const Deleteone = async (i) => {\r\n    let subeventcpy = [...subEvent];\r\n    subeventcpy = subeventcpy.filter((sube, index) => {\r\n      return index !== i;\r\n    });\r\n    await setSubevent([...subeventcpy]);\r\n    var EventsCopy = [...subeventcpy];\r\n    await dispatch(UpdateSchedules(props.Eid, [...subeventcpy]));\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12} md={8} style={{ margin: \"auto\" }}>\r\n        {subEvent.length > 0 || add === true ? (\r\n          <>\r\n            {subEvent.map((eve, index) => (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className=\"card-shadow m-b-10 schedule-details\"\r\n                style={{ display: add === true ? \"none\" : \"\" }}\r\n              >\r\n                <Grid container spacing={0}>\r\n                  <Grid item xs={12} md={12}>\r\n                    {edit === true && editselected === index ? (\r\n                      <>\r\n                        <Form.Label style={{ fontWeight: 500 }}>\r\n                          Schedule Name\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          type=\"text\"\r\n                          placeholder=\"Edit Name\"\r\n                          onChange={(e) => {\r\n                            setsubname(e.target.value);\r\n                          }}\r\n                          value={subname}\r\n                        />\r\n                        <br />\r\n\r\n                        <form noValidate>\r\n                          <Form.Label style={{ fontWeight: 500 }}>\r\n                            Date\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            size=\"sm\"\r\n                            type=\"datetime-local\"\r\n                            placeholder=\"Edit Date\"\r\n                            id=\"datetime-local\"\r\n                            defaultValue=\"2017-05-24T10:30\"\r\n                            InputProps={{\r\n                              className: \"nounder\",\r\n                            }}\r\n                            onChange={(e) => {\r\n                              setdatetime(e.target.value);\r\n                            }}\r\n                            value={datetime}\r\n                          />{\" \"}\r\n                          <br />\r\n                        </form>\r\n\r\n                        <Form.Label style={{ fontWeight: 500 }}>\r\n                          Description\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          placeholder=\"Enter Description\"\r\n                          style={{ height: \"100px\" }}\r\n                          onChange={(e) => {\r\n                            setdescription(e.target.value);\r\n                          }}\r\n                          value={description}\r\n                          InputProps={{\r\n                            className: \"nounder\",\r\n                          }}\r\n                        />\r\n\r\n                        <br />\r\n                        {/*    <Form.Label style={{ fontWeight: 500 }}>\r\n                          Link (Optional)\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Link\"\r\n                          InputProps={{\r\n                            className: \"nounder\",\r\n                          }}\r\n                          onChange={(e) => {\r\n                            setlink(e.target.value);\r\n                          }}\r\n                          value={link}\r\n                        />\r\n                        <br /> */}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Grid\r\n                          container\r\n                          spacing={0}\r\n                          className=\"padding-left-7 p-10-p \"\r\n                        >\r\n                          <Grid item xs={12}>\r\n                            <div className=\"ScheduleName l-blue-t m-0\">\r\n                              {eve.Name}\r\n                            </div>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {eve.Venue}\r\n                          </Grid>\r\n                          <Grid item xs={12} className=\"dtime\">\r\n                            <Dateformatter\r\n                              Date={\r\n                                eve.datetime.split(\"T\")[0] +\r\n                                \" \" +\r\n                                eve.datetime.split(\"T\")[1]\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                          {/*  <Grid\r\n                            item\r\n                            xs={12}\r\n                            onClick={() => {\r\n                              window.open(\"http://\" + eve.link);\r\n                            }}\r\n                            className=\"Link\"\r\n                          >\r\n                            {eve.link}\r\n                          </Grid> */}\r\n                          <br />\r\n                          <Grid item xs={12}>\r\n                            <p className=\"event-des schedule_des\">\r\n                              {showfulldescription === false\r\n                                ? eve.description.slice(0, 50) + \"...\"\r\n                                : eve.description}\r\n                            </p>\r\n                            {eve.description.length > 50 ? (\r\n                              <a\r\n                                href=\"#\"\r\n                                className=\"invitationmain_link\"\r\n                                onClick={() => {\r\n                                  setshowfulldescription(!showfulldescription);\r\n                                }}\r\n                              >\r\n                                {showfulldescription === false\r\n                                  ? \"Show More\"\r\n                                  : \"Show Less\"}\r\n                              </a>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={12}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                      columnGap: \"20px\",\r\n                    }}\r\n                  >\r\n                    {edit === true && editselected === index ? (\r\n                      <>\r\n                        <Button\r\n                          style={{ borderRadius: \"20px\" }}\r\n                          variant=\"outline-danger\"\r\n                          onClick={() => {\r\n                            Delete();\r\n                            setadd(false);\r\n                          }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          style={{ borderRadius: \"20px\" }}\r\n                          onClick={() => {\r\n                            save();\r\n                          }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </>\r\n                    ) : props.IsAdmin === true ? (\r\n                      <center>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            setshowfulldescription(false);\r\n                            setsubname(eve.Name);\r\n                            setdatetime(eve.datetime);\r\n                            setdescription(eve.description);\r\n                            setvenue(eve.Venue);\r\n                            setedit(true);\r\n                            settoedit(index);\r\n                            setadd(false);\r\n                          }}\r\n                        >\r\n                          <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            Deleteone(index);\r\n                            setshowfulldescription(false);\r\n                          }}\r\n                        >\r\n                          <DeleteForeverIcon color=\"error\" />\r\n                        </IconButton>\r\n                      </center>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={8} md={10}></Grid>\r\n                  <Grid item xs={4} md={2}></Grid>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <center>\r\n            {\" \"}\r\n            <img src={BlankSchedule} />\r\n            {props.IsAdmin === true ? (\r\n              <></>\r\n            ) : (\r\n              <>\r\n                {\" \"}\r\n                <div style={{ textAlign: \"center\", marginTop: 20 }}>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    style={{ borderRadius: \"20px\" }}\r\n                    onClick={toggleShowA}\r\n                  >\r\n                    Ask For Schedule\r\n                  </Button>\r\n                </div>\r\n                <Toast\r\n                  show={showA}\r\n                  onClose={toggleShowA}\r\n                  position=\"top-end\"\r\n                  delay={4000}\r\n                  autohide\r\n                  style={{ marginTop: \"20px\" }}\r\n                >\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded me-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"me-auto\">Informed!</strong>\r\n                  </Toast.Header>\r\n                  <Toast.Body style={{ textAlign: \"left\" }}>\r\n                    Requested Admin to Add Schedule✨\r\n                  </Toast.Body>\r\n                </Toast>\r\n              </>\r\n            )}\r\n          </center>\r\n        )}\r\n      </Grid>\r\n      {add == true && props.IsAdmin === true ? (\r\n        <Grid item xs={12} md={8} style={{ margin: \"auto\" }} className=\"mb-100\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              <Form.Label style={{ fontWeight: 500 }}>Schedule Name</Form.Label>\r\n              <Form.Control\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Schedule Name\"\r\n                onChange={(e) => {\r\n                  setsubname(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  className: \"nounder\",\r\n                }}\r\n                value={subname}\r\n                style={{ borderRadius: \"20px\" }}\r\n              />\r\n\r\n              <br />\r\n\r\n              <Form.Label style={{ fontWeight: 500 }}>Schedule</Form.Label>\r\n              <form noValidate>\r\n                <Form.Control\r\n                  size=\"sm\"\r\n                  type=\"datetime-local\"\r\n                  placeholder=\"Small text\"\r\n                  id=\"datetime-local\"\r\n                  defaultValue=\"2017-05-24T10:30\"\r\n                  InputProps={{\r\n                    className: \"nounder\",\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setdatetime(e.target.value);\r\n                  }}\r\n                  style={{ borderRadius: \"20px\" }}\r\n                  value={datetime}\r\n                />\r\n              </form>\r\n              <br />\r\n              <Form.Label style={{ fontWeight: 500 }}>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter Description\"\r\n                style={{ height: \"100px\" }}\r\n                onChange={(e) => {\r\n                  setdescription(e.target.value);\r\n                }}\r\n                value={description}\r\n                style={{ borderRadius: \"20px\" }}\r\n                InputProps={{\r\n                  className: \"nounder\",\r\n                }}\r\n              />\r\n              <br />\r\n              {/*  <Form.Label style={{ fontWeight: 500 }}>\r\n                Link (Optional)\r\n              </Form.Label>\r\n              <Form.Control\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Link\"\r\n                style={{borderRadius:'20px'}}\r\n                InputProps={{\r\n                  className: \"nounder\",\r\n                }}\r\n                onChange={(e) => {\r\n                  setlink(e.target.value);\r\n                }}\r\n                value={link}\r\n              /> */}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={12}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                columnGap: \"20px\",\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ borderRadius: \"20px\" }}\r\n                variant=\"outline-danger\"\r\n                onClick={() => {\r\n                  Delete();\r\n                  setadd(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                style={{ borderRadius: \"20px\" }}\r\n                onClick={() => {\r\n                  save();\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={8} md={10}></Grid>\r\n            <Grid item xs={4} md={2}></Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Grid item xs={12} md={12}>\r\n        {props.IsAdmin === true ? (\r\n          <center>\r\n            <AddCircleRoundedIcon\r\n              onClick={() => {\r\n                setadd(true);\r\n                setedit(false);\r\n                settoedit(null);\r\n              }}\r\n              fontSize=\"large\"\r\n              className=\"add-button  m-5px \"\r\n            />\r\n          </center>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserData.js",["1009","1010","1011","1012"],"import React, { useState, useEffect } from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as _ from \"lodash\";\r\nexport default function UserData(props) {\r\n  const [User, setUser] = useState({});\r\n  const GuestList = useSelector(state => state.GuestList)\r\n  const Auth = useSelector(state => state.Auth);\r\n  useEffect(async () => {\r\n    // console.log(props.Phone);\r\n    if (props.Phone !== \"\" || props.Phone === undefined) {\r\n      if (Auth.Phone === props.Phone) {\r\n        setUser({ Name: Auth.Name, Pic: Auth.Profile });\r\n      } else {\r\n        let i = _.findLastIndex(GuestList, function (o) { return o.Phone == props.Phone; });\r\n        if (i !== -1) {\r\n          await setUser(GuestList[i])\r\n        } else {\r\n          await setUser({ Name: Auth.Phone, Pic: \"\" })\r\n        }\r\n      }\r\n    }\r\n  }, [props.Phone, GuestList]);\r\n  return (\r\n    <div className=\"w-100\">\r\n      {props.showIcon === true ? (\r\n        User.Pic !== undefined && User.Pic !== \"\" ? (\r\n          <div className=\"fl\">\r\n            <Avatar alt=\"Profile Picture\" src={User.Pic} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"fl\">\r\n            <AccountCircle />\r\n          </div>\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showName === true ? (\r\n        <div className=\"fl  fs-bold \">{User.Name} </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\FeedComments.js",["1013"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { addcomments } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core';\r\nexport default function FeedComments(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [comment, setcomment] = useState(\"\");\r\n  const [comments, setcomments] = useState([]);\r\n  const [isError, setisError] = useState(false);\r\n  const submit = async () => {\r\n    if (comment !== \"\") {\r\n      await dispatch(addcomments(props.id, Auth.Phone, comment, props.maincode));\r\n\r\n      let commentscpy = [...comments]\r\n      await commentscpy.push({ CommentBy: Auth.Phone, Comment: comment })\r\n      // console.log(commentscpy)\r\n      await setcomments(commentscpy)\r\n      await setisError(false);\r\n      await setcomment(\"\")\r\n      await props.getposts(props.maincode)\r\n    } else {\r\n      setisError(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    //   console.log(props.data)\r\n    setcomments(props.data)\r\n  }, [props.post])\r\n\r\n  return (\r\n    <Grid container spacing={0} className=\"mt-5px p-0  mb-5px\">\r\n      <Grid container spacing={0} className=\"commentinp\">\r\n        <Grid item xs={2} md={1} className=\"m-0 p-0\">\r\n          <UserDataUrl showIcon={true} Phone={Auth.Phone} />\r\n        </Grid>\r\n        <Grid item xs={8} className=\"p-0 \">\r\n          <input\r\n            type='text'\r\n            value={comment}\r\n            onChange={(e) => setcomment(e.target.value)}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className=\"w-100\"\r\n            placeholder=\"Add comment\"\r\n            error={isError}\r\n            style={{ width: '100%', outline: 'none', border: 'none', background: '#f6f6f6', height: '100%', fontSize: 14 }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2} className=\"\">\r\n          <IconButton onClick={() => {\r\n            submit();\r\n          }}>\r\n            <SendIcon style={{ color: 'black' }} />\r\n          </IconButton >\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={0} className=\"p-5px m-5px \">\r\n        {comments &&\r\n          comments.map((cmt) => (\r\n            <Grid container spacing={0}\r\n              style={{\r\n                marginTop: '10px',\r\n                width: '100%'\r\n              }}\r\n              md={12}\r\n            >\r\n              <Grid item xs={2} md={1} className=\"fs-14\">\r\n                <UserDataUrl showIcon={true} Phone={cmt.CommentBy} />\r\n              </Grid>\r\n              <Grid item xs={10} md={9}>\r\n                <h5 className=\"m-0 p-0 fs-14\">\r\n                  <UserDataUrl showName={true} Phone={cmt.CommentBy} />\r\n                </h5>\r\n\r\n                <span className=\"t-grey fs-14\">{cmt.Comment}</span>\r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n",{"ruleId":"1014","replacedBy":"1015"},{"ruleId":"1016","replacedBy":"1017"},{"ruleId":"1018","severity":1,"message":"1019","line":56,"column":13,"nodeType":"1020","endLine":70,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1021","line":60,"column":18,"nodeType":"1022","endLine":64,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1024","line":13,"column":10,"nodeType":"1025","messageId":"1026","endLine":13,"endColumn":18},{"ruleId":"1018","severity":1,"message":"1019","line":17,"column":13,"nodeType":"1020","endLine":28,"endColumn":4},{"ruleId":"1023","severity":1,"message":"1027","line":20,"column":9,"nodeType":"1025","messageId":"1026","endLine":20,"endColumn":14},{"ruleId":"1018","severity":1,"message":"1028","line":28,"column":6,"nodeType":"1029","endLine":28,"endColumn":8,"suggestions":"1030"},{"ruleId":"1018","severity":1,"message":"1019","line":29,"column":13,"nodeType":"1020","endLine":39,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1028","line":39,"column":6,"nodeType":"1029","endLine":39,"endColumn":23,"suggestions":"1031"},{"ruleId":"1023","severity":1,"message":"1032","line":4,"column":3,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1033","line":5,"column":3,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":16},{"ruleId":"1018","severity":1,"message":"1019","line":21,"column":13,"nodeType":"1020","endLine":42,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1034","line":42,"column":6,"nodeType":"1029","endLine":42,"endColumn":8,"suggestions":"1035"},{"ruleId":"1018","severity":1,"message":"1019","line":43,"column":13,"nodeType":"1020","endLine":48,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1028","line":48,"column":6,"nodeType":"1029","endLine":48,"endColumn":8,"suggestions":"1036"},{"ruleId":"1023","severity":1,"message":"1037","line":76,"column":9,"nodeType":"1025","messageId":"1026","endLine":76,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1038","line":120,"column":7,"nodeType":"1025","messageId":"1026","endLine":120,"endColumn":28},{"ruleId":"1039","severity":1,"message":"1040","line":168,"column":33,"nodeType":"1020","messageId":"1041","endLine":168,"endColumn":35},{"ruleId":"1042","severity":1,"message":"1043","line":176,"column":29,"nodeType":"1044","messageId":"1045","endLine":176,"endColumn":30},{"ruleId":"1018","severity":1,"message":"1019","line":184,"column":13,"nodeType":"1020","endLine":186,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1046","line":186,"column":6,"nodeType":"1029","endLine":186,"endColumn":8,"suggestions":"1047"},{"ruleId":"1048","severity":1,"message":"1049","line":250,"column":15,"nodeType":"1050","endLine":250,"endColumn":33},{"ruleId":"1023","severity":1,"message":"1051","line":1,"column":38,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":49},{"ruleId":"1023","severity":1,"message":"1052","line":4,"column":3,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":9},{"ruleId":"1023","severity":1,"message":"1053","line":5,"column":3,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":7},{"ruleId":"1023","severity":1,"message":"1054","line":6,"column":3,"nodeType":"1025","messageId":"1026","endLine":6,"endColumn":11},{"ruleId":"1023","severity":1,"message":"1055","line":7,"column":3,"nodeType":"1025","messageId":"1026","endLine":7,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1056","line":8,"column":3,"nodeType":"1025","messageId":"1026","endLine":8,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1057","line":9,"column":3,"nodeType":"1025","messageId":"1026","endLine":9,"endColumn":8},{"ruleId":"1023","severity":1,"message":"1058","line":10,"column":3,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":12},{"ruleId":"1023","severity":1,"message":"1059","line":11,"column":3,"nodeType":"1025","messageId":"1026","endLine":11,"endColumn":10},{"ruleId":"1023","severity":1,"message":"1060","line":12,"column":3,"nodeType":"1025","messageId":"1026","endLine":12,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1061","line":13,"column":3,"nodeType":"1025","messageId":"1026","endLine":13,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1062","line":26,"column":9,"nodeType":"1025","messageId":"1026","endLine":26,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1063","line":32,"column":10,"nodeType":"1025","messageId":"1026","endLine":32,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1064","line":44,"column":10,"nodeType":"1025","messageId":"1026","endLine":44,"endColumn":18},{"ruleId":"1018","severity":1,"message":"1019","line":58,"column":13,"nodeType":"1020","endLine":88,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1065","line":68,"column":21,"nodeType":"1066","endLine":68,"endColumn":52},{"ruleId":"1039","severity":1,"message":"1040","line":78,"column":35,"nodeType":"1020","messageId":"1041","endLine":78,"endColumn":37},{"ruleId":"1039","severity":1,"message":"1040","line":79,"column":52,"nodeType":"1020","messageId":"1041","endLine":79,"endColumn":54},{"ruleId":"1023","severity":1,"message":"1067","line":95,"column":9,"nodeType":"1025","messageId":"1026","endLine":95,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1068","line":96,"column":9,"nodeType":"1025","messageId":"1026","endLine":96,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1069","line":15,"column":10,"nodeType":"1025","messageId":"1026","endLine":15,"endColumn":14},{"ruleId":"1018","severity":1,"message":"1019","line":25,"column":13,"nodeType":"1020","endLine":49,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1070","line":49,"column":6,"nodeType":"1029","endLine":49,"endColumn":31,"suggestions":"1071"},{"ruleId":"1023","severity":1,"message":"1072","line":28,"column":8,"nodeType":"1025","messageId":"1026","endLine":28,"endColumn":17},{"ruleId":"1018","severity":1,"message":"1019","line":63,"column":13,"nodeType":"1020","endLine":106,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1073","line":106,"column":6,"nodeType":"1029","endLine":106,"endColumn":31,"suggestions":"1074"},{"ruleId":"1023","severity":1,"message":"1075","line":154,"column":11,"nodeType":"1025","messageId":"1026","endLine":154,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1076","line":154,"column":25,"nodeType":"1025","messageId":"1026","endLine":154,"endColumn":38},{"ruleId":"1023","severity":1,"message":"1077","line":154,"column":40,"nodeType":"1025","messageId":"1026","endLine":154,"endColumn":52},{"ruleId":"1023","severity":1,"message":"1078","line":189,"column":9,"nodeType":"1025","messageId":"1026","endLine":189,"endColumn":24},{"ruleId":"1023","severity":1,"message":"1079","line":198,"column":11,"nodeType":"1025","messageId":"1026","endLine":198,"endColumn":16},{"ruleId":"1018","severity":1,"message":"1080","line":235,"column":6,"nodeType":"1029","endLine":235,"endColumn":17,"suggestions":"1081"},{"ruleId":"1018","severity":1,"message":"1082","line":240,"column":6,"nodeType":"1029","endLine":240,"endColumn":14,"suggestions":"1083"},{"ruleId":"1018","severity":1,"message":"1019","line":20,"column":13,"nodeType":"1020","endLine":42,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1084","line":42,"column":6,"nodeType":"1029","endLine":42,"endColumn":31,"suggestions":"1085"},{"ruleId":"1023","severity":1,"message":"1086","line":48,"column":10,"nodeType":"1025","messageId":"1026","endLine":48,"endColumn":20},{"ruleId":"1018","severity":1,"message":"1087","line":72,"column":6,"nodeType":"1029","endLine":72,"endColumn":17,"suggestions":"1088"},{"ruleId":"1023","severity":1,"message":"1060","line":10,"column":10,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":20},{"ruleId":"1023","severity":1,"message":"1089","line":10,"column":22,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":28},{"ruleId":"1023","severity":1,"message":"1090","line":10,"column":30,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":41},{"ruleId":"1023","severity":1,"message":"1091","line":15,"column":8,"nodeType":"1025","messageId":"1026","endLine":15,"endColumn":29},{"ruleId":"1023","severity":1,"message":"1092","line":22,"column":10,"nodeType":"1025","messageId":"1026","endLine":22,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1093","line":33,"column":10,"nodeType":"1025","messageId":"1026","endLine":33,"endColumn":20},{"ruleId":"1023","severity":1,"message":"1094","line":50,"column":9,"nodeType":"1025","messageId":"1026","endLine":50,"endColumn":15},{"ruleId":"1018","severity":1,"message":"1019","line":67,"column":13,"nodeType":"1020","endLine":113,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1095","line":113,"column":6,"nodeType":"1029","endLine":113,"endColumn":31,"suggestions":"1096"},{"ruleId":"1039","severity":1,"message":"1040","line":119,"column":27,"nodeType":"1020","messageId":"1041","endLine":119,"endColumn":29},{"ruleId":"1018","severity":1,"message":"1097","line":131,"column":6,"nodeType":"1029","endLine":131,"endColumn":17,"suggestions":"1098"},{"ruleId":"1023","severity":1,"message":"1099","line":161,"column":9,"nodeType":"1025","messageId":"1026","endLine":161,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1100","line":186,"column":9,"nodeType":"1025","messageId":"1026","endLine":186,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1049","line":263,"column":17,"nodeType":"1050","endLine":263,"endColumn":65},{"ruleId":"1048","severity":1,"message":"1049","line":284,"column":17,"nodeType":"1050","endLine":284,"endColumn":65},{"ruleId":"1101","severity":1,"message":"1102","line":341,"column":17,"nodeType":"1103","endLine":347,"endColumn":19},{"ruleId":"1048","severity":1,"message":"1049","line":351,"column":21,"nodeType":"1050","endLine":359,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1049","line":384,"column":23,"nodeType":"1050","endLine":394,"endColumn":25},{"ruleId":"1023","severity":1,"message":"1104","line":27,"column":10,"nodeType":"1025","messageId":"1026","endLine":27,"endColumn":15},{"ruleId":"1018","severity":1,"message":"1105","line":56,"column":6,"nodeType":"1029","endLine":56,"endColumn":8,"suggestions":"1106"},{"ruleId":"1018","severity":1,"message":"1019","line":69,"column":13,"nodeType":"1020","endLine":92,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1065","line":76,"column":21,"nodeType":"1066","endLine":76,"endColumn":59},{"ruleId":"1018","severity":1,"message":"1107","line":77,"column":16,"nodeType":"1108","endLine":77,"endColumn":26},{"ruleId":"1023","severity":1,"message":"1069","line":83,"column":9,"nodeType":"1025","messageId":"1026","endLine":83,"endColumn":13},{"ruleId":"1018","severity":1,"message":"1109","line":222,"column":6,"nodeType":"1029","endLine":222,"endColumn":8,"suggestions":"1110"},{"ruleId":"1023","severity":1,"message":"1111","line":29,"column":10,"nodeType":"1025","messageId":"1026","endLine":29,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1069","line":31,"column":10,"nodeType":"1025","messageId":"1026","endLine":31,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1112","line":42,"column":9,"nodeType":"1025","messageId":"1026","endLine":42,"endColumn":19},{"ruleId":"1018","severity":1,"message":"1019","line":47,"column":13,"nodeType":"1020","endLine":54,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1113","line":48,"column":17,"nodeType":"1114","endLine":48,"endColumn":71},{"ruleId":"1018","severity":1,"message":"1019","line":106,"column":13,"nodeType":"1020","endLine":176,"endColumn":4},{"ruleId":"1039","severity":1,"message":"1040","line":135,"column":25,"nodeType":"1020","messageId":"1041","endLine":135,"endColumn":27},{"ruleId":"1023","severity":1,"message":"1115","line":149,"column":9,"nodeType":"1025","messageId":"1026","endLine":149,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1116","line":172,"column":7,"nodeType":"1025","messageId":"1026","endLine":172,"endColumn":12},{"ruleId":"1018","severity":1,"message":"1117","line":176,"column":6,"nodeType":"1029","endLine":176,"endColumn":16,"suggestions":"1118"},{"ruleId":"1119","severity":1,"message":"1120","line":182,"column":17,"nodeType":"1044","messageId":"1121","endLine":182,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1122","line":195,"column":11,"nodeType":"1025","messageId":"1026","endLine":195,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1123","line":232,"column":11,"nodeType":"1025","messageId":"1026","endLine":232,"endColumn":23},{"ruleId":"1039","severity":1,"message":"1040","line":240,"column":26,"nodeType":"1020","messageId":"1041","endLine":240,"endColumn":28},{"ruleId":"1023","severity":1,"message":"1124","line":14,"column":8,"nodeType":"1025","messageId":"1026","endLine":14,"endColumn":29},{"ruleId":"1023","severity":1,"message":"1125","line":17,"column":8,"nodeType":"1025","messageId":"1026","endLine":17,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1069","line":73,"column":5,"nodeType":"1025","messageId":"1026","endLine":73,"endColumn":9},{"ruleId":"1023","severity":1,"message":"1126","line":104,"column":18,"nodeType":"1025","messageId":"1026","endLine":104,"endColumn":27},{"ruleId":"1023","severity":1,"message":"1127","line":106,"column":19,"nodeType":"1025","messageId":"1026","endLine":106,"endColumn":29},{"ruleId":"1023","severity":1,"message":"1128","line":107,"column":10,"nodeType":"1025","messageId":"1026","endLine":107,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1129","line":107,"column":20,"nodeType":"1025","messageId":"1026","endLine":107,"endColumn":31},{"ruleId":"1023","severity":1,"message":"1130","line":114,"column":9,"nodeType":"1025","messageId":"1026","endLine":114,"endColumn":14},{"ruleId":"1101","severity":1,"message":"1102","line":171,"column":9,"nodeType":"1103","endLine":171,"endColumn":41},{"ruleId":"1131","severity":1,"message":"1132","line":217,"column":19,"nodeType":"1133","messageId":"1121","endLine":217,"endColumn":24},{"ruleId":"1131","severity":1,"message":"1132","line":261,"column":17,"nodeType":"1133","messageId":"1121","endLine":261,"endColumn":22},{"ruleId":"1023","severity":1,"message":"1069","line":18,"column":10,"nodeType":"1025","messageId":"1026","endLine":18,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1134","line":21,"column":10,"nodeType":"1025","messageId":"1026","endLine":21,"endColumn":12},{"ruleId":"1023","severity":1,"message":"1135","line":23,"column":10,"nodeType":"1025","messageId":"1026","endLine":23,"endColumn":17},{"ruleId":"1018","severity":1,"message":"1019","line":27,"column":13,"nodeType":"1020","endLine":64,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1136","line":64,"column":6,"nodeType":"1029","endLine":64,"endColumn":31,"suggestions":"1137"},{"ruleId":"1023","severity":1,"message":"1138","line":3,"column":10,"nodeType":"1025","messageId":"1026","endLine":3,"endColumn":34},{"ruleId":"1023","severity":1,"message":"1069","line":24,"column":10,"nodeType":"1025","messageId":"1026","endLine":24,"endColumn":14},{"ruleId":"1018","severity":1,"message":"1019","line":32,"column":13,"nodeType":"1020","endLine":63,"endColumn":4},{"ruleId":"1139","severity":1,"message":"1140","line":53,"column":13,"nodeType":"1025","messageId":"1141","endLine":53,"endColumn":17},{"ruleId":"1139","severity":1,"message":"1142","line":54,"column":18,"nodeType":"1025","messageId":"1141","endLine":54,"endColumn":19},{"ruleId":"1018","severity":1,"message":"1143","line":63,"column":6,"nodeType":"1029","endLine":63,"endColumn":31,"suggestions":"1144"},{"ruleId":"1145","severity":1,"message":"1146","line":124,"column":9,"nodeType":"1050","endLine":129,"endColumn":10},{"ruleId":"1042","severity":1,"message":"1043","line":127,"column":32,"nodeType":"1044","messageId":"1045","endLine":127,"endColumn":33},{"ruleId":"1145","severity":1,"message":"1146","line":145,"column":11,"nodeType":"1050","endLine":150,"endColumn":12},{"ruleId":"1042","severity":1,"message":"1043","line":148,"column":41,"nodeType":"1044","messageId":"1045","endLine":148,"endColumn":42},{"ruleId":"1145","severity":1,"message":"1146","line":164,"column":9,"nodeType":"1050","endLine":170,"endColumn":10},{"ruleId":"1145","severity":1,"message":"1146","line":187,"column":11,"nodeType":"1050","endLine":192,"endColumn":12},{"ruleId":"1042","severity":1,"message":"1043","line":190,"column":41,"nodeType":"1044","messageId":"1045","endLine":190,"endColumn":42},{"ruleId":"1145","severity":1,"message":"1146","line":212,"column":9,"nodeType":"1050","endLine":212,"endColumn":36},{"ruleId":"1145","severity":1,"message":"1146","line":228,"column":9,"nodeType":"1050","endLine":228,"endColumn":75},{"ruleId":"1023","severity":1,"message":"1147","line":9,"column":10,"nodeType":"1025","messageId":"1026","endLine":9,"endColumn":24},{"ruleId":"1023","severity":1,"message":"1148","line":17,"column":19,"nodeType":"1025","messageId":"1026","endLine":17,"endColumn":29},{"ruleId":"1023","severity":1,"message":"1149","line":25,"column":10,"nodeType":"1025","messageId":"1026","endLine":25,"endColumn":18},{"ruleId":"1018","severity":1,"message":"1019","line":31,"column":13,"nodeType":"1020","endLine":100,"endColumn":4},{"ruleId":"1023","severity":1,"message":"1116","line":86,"column":11,"nodeType":"1025","messageId":"1026","endLine":86,"endColumn":16},{"ruleId":"1018","severity":1,"message":"1150","line":100,"column":6,"nodeType":"1029","endLine":100,"endColumn":16,"suggestions":"1151"},{"ruleId":"1023","severity":1,"message":"1152","line":101,"column":9,"nodeType":"1025","messageId":"1026","endLine":101,"endColumn":15},{"ruleId":"1042","severity":1,"message":"1043","line":159,"column":31,"nodeType":"1044","messageId":"1045","endLine":159,"endColumn":32},{"ruleId":"1023","severity":1,"message":"1051","line":1,"column":38,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":49},{"ruleId":"1023","severity":1,"message":"1153","line":5,"column":21,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":29},{"ruleId":"1023","severity":1,"message":"1154","line":6,"column":10,"nodeType":"1025","messageId":"1026","endLine":6,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1089","line":9,"column":16,"nodeType":"1025","messageId":"1026","endLine":9,"endColumn":22},{"ruleId":"1023","severity":1,"message":"1155","line":13,"column":10,"nodeType":"1025","messageId":"1026","endLine":13,"endColumn":22},{"ruleId":"1018","severity":1,"message":"1019","line":44,"column":13,"nodeType":"1020","endLine":54,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1156","line":54,"column":6,"nodeType":"1029","endLine":54,"endColumn":8,"suggestions":"1157"},{"ruleId":"1018","severity":1,"message":"1019","line":65,"column":13,"nodeType":"1020","endLine":69,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1158","line":69,"column":6,"nodeType":"1029","endLine":69,"endColumn":19,"suggestions":"1159"},{"ruleId":"1023","severity":1,"message":"1138","line":3,"column":10,"nodeType":"1025","messageId":"1026","endLine":3,"endColumn":34},{"ruleId":"1023","severity":1,"message":"1160","line":12,"column":3,"nodeType":"1025","messageId":"1026","endLine":12,"endColumn":12},{"ruleId":"1023","severity":1,"message":"1161","line":13,"column":3,"nodeType":"1025","messageId":"1026","endLine":13,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1162","line":21,"column":8,"nodeType":"1025","messageId":"1026","endLine":21,"endColumn":24},{"ruleId":"1023","severity":1,"message":"1163","line":23,"column":8,"nodeType":"1025","messageId":"1026","endLine":23,"endColumn":16},{"ruleId":"1018","severity":1,"message":"1019","line":39,"column":13,"nodeType":"1020","endLine":106,"endColumn":4},{"ruleId":"1039","severity":1,"message":"1040","line":72,"column":25,"nodeType":"1020","messageId":"1041","endLine":72,"endColumn":27},{"ruleId":"1023","severity":1,"message":"1116","line":97,"column":7,"nodeType":"1025","messageId":"1026","endLine":97,"endColumn":12},{"ruleId":"1018","severity":1,"message":"1164","line":106,"column":6,"nodeType":"1029","endLine":106,"endColumn":31,"suggestions":"1165"},{"ruleId":"1023","severity":1,"message":"1166","line":9,"column":10,"nodeType":"1025","messageId":"1026","endLine":9,"endColumn":20},{"ruleId":"1145","severity":1,"message":"1146","line":55,"column":13,"nodeType":"1050","endLine":58,"endColumn":14},{"ruleId":"1018","severity":1,"message":"1019","line":16,"column":13,"nodeType":"1020","endLine":22,"endColumn":4},{"ruleId":"1023","severity":1,"message":"1111","line":33,"column":10,"nodeType":"1025","messageId":"1026","endLine":33,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1167","line":34,"column":10,"nodeType":"1025","messageId":"1026","endLine":34,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1168","line":35,"column":10,"nodeType":"1025","messageId":"1026","endLine":35,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1169","line":35,"column":20,"nodeType":"1025","messageId":"1026","endLine":35,"endColumn":31},{"ruleId":"1023","severity":1,"message":"1170","line":37,"column":8,"nodeType":"1025","messageId":"1026","endLine":37,"endColumn":12},{"ruleId":"1018","severity":1,"message":"1019","line":45,"column":13,"nodeType":"1020","endLine":82,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1171","line":82,"column":6,"nodeType":"1029","endLine":82,"endColumn":31,"suggestions":"1172"},{"ruleId":"1039","severity":1,"message":"1040","line":86,"column":39,"nodeType":"1020","messageId":"1041","endLine":86,"endColumn":41},{"ruleId":"1048","severity":1,"message":"1049","line":151,"column":21,"nodeType":"1050","endLine":151,"endColumn":59},{"ruleId":"1048","severity":1,"message":"1049","line":152,"column":21,"nodeType":"1050","endLine":155,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1173","line":1,"column":17,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":25},{"ruleId":"1023","severity":1,"message":"1174","line":8,"column":8,"nodeType":"1025","messageId":"1026","endLine":8,"endColumn":20},{"ruleId":"1023","severity":1,"message":"1175","line":12,"column":10,"nodeType":"1025","messageId":"1026","endLine":12,"endColumn":29},{"ruleId":"1023","severity":1,"message":"1153","line":13,"column":8,"nodeType":"1025","messageId":"1026","endLine":13,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1176","line":14,"column":8,"nodeType":"1025","messageId":"1026","endLine":14,"endColumn":12},{"ruleId":"1023","severity":1,"message":"1177","line":15,"column":8,"nodeType":"1025","messageId":"1026","endLine":15,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1089","line":16,"column":22,"nodeType":"1025","messageId":"1026","endLine":16,"endColumn":28},{"ruleId":"1023","severity":1,"message":"1090","line":16,"column":30,"nodeType":"1025","messageId":"1026","endLine":16,"endColumn":41},{"ruleId":"1023","severity":1,"message":"1169","line":21,"column":20,"nodeType":"1025","messageId":"1026","endLine":21,"endColumn":31},{"ruleId":"1023","severity":1,"message":"1178","line":25,"column":10,"nodeType":"1025","messageId":"1026","endLine":25,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1179","line":26,"column":10,"nodeType":"1025","messageId":"1026","endLine":26,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1180","line":27,"column":10,"nodeType":"1025","messageId":"1026","endLine":27,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1181","line":28,"column":10,"nodeType":"1025","messageId":"1026","endLine":28,"endColumn":22},{"ruleId":"1023","severity":1,"message":"1182","line":31,"column":10,"nodeType":"1025","messageId":"1026","endLine":31,"endColumn":14},{"ruleId":"1018","severity":1,"message":"1183","line":94,"column":6,"nodeType":"1029","endLine":94,"endColumn":8,"suggestions":"1184"},{"ruleId":"1023","severity":1,"message":"1185","line":148,"column":10,"nodeType":"1025","messageId":"1026","endLine":148,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1186","line":150,"column":9,"nodeType":"1025","messageId":"1026","endLine":150,"endColumn":20},{"ruleId":"1023","severity":1,"message":"1187","line":154,"column":9,"nodeType":"1025","messageId":"1026","endLine":154,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1049","line":194,"column":15,"nodeType":"1050","endLine":194,"endColumn":54},{"ruleId":"1018","severity":1,"message":"1019","line":34,"column":13,"nodeType":"1020","endLine":55,"endColumn":4},{"ruleId":"1039","severity":1,"message":"1040","line":46,"column":41,"nodeType":"1020","messageId":"1041","endLine":46,"endColumn":43},{"ruleId":"1018","severity":1,"message":"1188","line":55,"column":6,"nodeType":"1029","endLine":55,"endColumn":23,"suggestions":"1189"},{"ruleId":"1023","severity":1,"message":"1190","line":69,"column":9,"nodeType":"1025","messageId":"1026","endLine":69,"endColumn":16},{"ruleId":"1139","severity":1,"message":"1142","line":81,"column":16,"nodeType":"1025","messageId":"1141","endLine":81,"endColumn":17},{"ruleId":"1018","severity":1,"message":"1019","line":95,"column":13,"nodeType":"1020","endLine":159,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1191","line":159,"column":6,"nodeType":"1029","endLine":159,"endColumn":8,"suggestions":"1192"},{"ruleId":"1018","severity":1,"message":"1019","line":23,"column":13,"nodeType":"1020","endLine":31,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1193","line":31,"column":6,"nodeType":"1029","endLine":31,"endColumn":8,"suggestions":"1194"},{"ruleId":"1023","severity":1,"message":"1195","line":53,"column":9,"nodeType":"1025","messageId":"1026","endLine":53,"endColumn":17},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":7,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":24},{"ruleId":"1023","severity":1,"message":"1200","line":73,"column":19,"nodeType":"1025","messageId":"1026","endLine":73,"endColumn":26},{"ruleId":"1023","severity":1,"message":"1201","line":10,"column":8,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1202","line":15,"column":10,"nodeType":"1025","messageId":"1026","endLine":15,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1203","line":15,"column":16,"nodeType":"1025","messageId":"1026","endLine":15,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1204","line":16,"column":10,"nodeType":"1025","messageId":"1026","endLine":16,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1169","line":16,"column":20,"nodeType":"1025","messageId":"1026","endLine":16,"endColumn":31},{"ruleId":"1018","severity":1,"message":"1019","line":22,"column":13,"nodeType":"1020","endLine":24,"endColumn":4},{"ruleId":"1048","severity":1,"message":"1049","line":28,"column":12,"nodeType":"1050","endLine":28,"endColumn":50},{"ruleId":"1048","severity":1,"message":"1049","line":70,"column":100,"nodeType":"1050","endLine":82,"endColumn":13},{"ruleId":"1119","severity":1,"message":"1205","line":75,"column":25,"nodeType":"1044","messageId":"1121","endLine":75,"endColumn":27},{"ruleId":"1119","severity":1,"message":"1205","line":75,"column":44,"nodeType":"1044","messageId":"1121","endLine":75,"endColumn":46},{"ruleId":"1119","severity":1,"message":"1205","line":95,"column":27,"nodeType":"1044","messageId":"1121","endLine":95,"endColumn":29},{"ruleId":"1119","severity":1,"message":"1205","line":95,"column":46,"nodeType":"1044","messageId":"1121","endLine":95,"endColumn":48},{"ruleId":"1119","severity":1,"message":"1205","line":128,"column":31,"nodeType":"1044","messageId":"1121","endLine":128,"endColumn":33},{"ruleId":"1119","severity":1,"message":"1205","line":128,"column":50,"nodeType":"1044","messageId":"1121","endLine":128,"endColumn":52},{"ruleId":"1196","severity":1,"message":"1197","line":12,"column":7,"nodeType":"1198","messageId":"1199","endLine":12,"endColumn":24},{"ruleId":"1023","severity":1,"message":"1206","line":3,"column":8,"nodeType":"1025","messageId":"1026","endLine":3,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1207","line":4,"column":8,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1208","line":5,"column":21,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":29},{"ruleId":"1023","severity":1,"message":"1055","line":6,"column":8,"nodeType":"1025","messageId":"1026","endLine":6,"endColumn":20},{"ruleId":"1023","severity":1,"message":"1207","line":8,"column":8,"nodeType":"1025","messageId":"1026","endLine":8,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1209","line":19,"column":8,"nodeType":"1025","messageId":"1026","endLine":19,"endColumn":24},{"ruleId":"1039","severity":1,"message":"1040","line":61,"column":28,"nodeType":"1020","messageId":"1041","endLine":61,"endColumn":30},{"ruleId":"1018","severity":1,"message":"1210","line":67,"column":6,"nodeType":"1029","endLine":67,"endColumn":8,"suggestions":"1211"},{"ruleId":"1039","severity":1,"message":"1040","line":70,"column":28,"nodeType":"1020","messageId":"1041","endLine":70,"endColumn":30},{"ruleId":"1018","severity":1,"message":"1212","line":76,"column":6,"nodeType":"1029","endLine":76,"endColumn":17,"suggestions":"1213"},{"ruleId":"1023","severity":1,"message":"1214","line":15,"column":23,"nodeType":"1025","messageId":"1026","endLine":15,"endColumn":34},{"ruleId":"1023","severity":1,"message":"1024","line":25,"column":10,"nodeType":"1025","messageId":"1026","endLine":25,"endColumn":18},{"ruleId":"1018","severity":1,"message":"1215","line":86,"column":6,"nodeType":"1029","endLine":86,"endColumn":8,"suggestions":"1216"},{"ruleId":"1023","severity":1,"message":"1077","line":87,"column":40,"nodeType":"1025","messageId":"1026","endLine":87,"endColumn":52},{"ruleId":"1018","severity":1,"message":"1019","line":92,"column":13,"nodeType":"1020","endLine":99,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1217","line":99,"column":6,"nodeType":"1029","endLine":99,"endColumn":8,"suggestions":"1218"},{"ruleId":"1018","severity":1,"message":"1019","line":100,"column":13,"nodeType":"1020","endLine":102,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1219","line":102,"column":6,"nodeType":"1029","endLine":102,"endColumn":49,"suggestions":"1220"},{"ruleId":"1048","severity":1,"message":"1049","line":200,"column":21,"nodeType":"1050","endLine":200,"endColumn":68},{"ruleId":"1048","severity":1,"message":"1049","line":219,"column":23,"nodeType":"1050","endLine":219,"endColumn":70},{"ruleId":"1023","severity":1,"message":"1221","line":1,"column":8,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1222","line":2,"column":10,"nodeType":"1025","messageId":"1026","endLine":2,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1207","line":4,"column":8,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":15},{"ruleId":"1145","severity":1,"message":"1223","line":11,"column":9,"nodeType":"1050","endLine":11,"endColumn":46},{"ruleId":"1048","severity":1,"message":"1224","line":12,"column":11,"nodeType":"1050","endLine":18,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1225","line":5,"column":10,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1226","line":11,"column":9,"nodeType":"1025","messageId":"1026","endLine":11,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1227","line":3,"column":10,"nodeType":"1025","messageId":"1026","endLine":3,"endColumn":20},{"ruleId":"1101","severity":1,"message":"1102","line":74,"column":15,"nodeType":"1103","endLine":77,"endColumn":17},{"ruleId":"1101","severity":1,"message":"1102","line":130,"column":15,"nodeType":"1103","endLine":133,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1173","line":1,"column":17,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":25},{"ruleId":"1023","severity":1,"message":"1228","line":12,"column":8,"nodeType":"1025","messageId":"1026","endLine":12,"endColumn":19},{"ruleId":"1048","severity":1,"message":"1049","line":35,"column":9,"nodeType":"1050","endLine":35,"endColumn":29},{"ruleId":"1048","severity":1,"message":"1049","line":38,"column":9,"nodeType":"1050","endLine":38,"endColumn":32},{"ruleId":"1023","severity":1,"message":"1229","line":3,"column":8,"nodeType":"1025","messageId":"1026","endLine":3,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1230","line":5,"column":8,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1049","line":19,"column":19,"nodeType":"1050","endLine":22,"endColumn":21},{"ruleId":"1048","severity":1,"message":"1049","line":45,"column":19,"nodeType":"1050","endLine":48,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1231","line":1,"column":27,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":36},{"ruleId":"1023","severity":1,"message":"1225","line":13,"column":10,"nodeType":"1025","messageId":"1026","endLine":13,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1232","line":14,"column":10,"nodeType":"1025","messageId":"1026","endLine":14,"endColumn":27},{"ruleId":"1023","severity":1,"message":"1207","line":15,"column":8,"nodeType":"1025","messageId":"1026","endLine":15,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1233","line":16,"column":10,"nodeType":"1025","messageId":"1026","endLine":16,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1226","line":21,"column":9,"nodeType":"1025","messageId":"1026","endLine":21,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1231","line":1,"column":27,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":36},{"ruleId":"1023","severity":1,"message":"1234","line":7,"column":10,"nodeType":"1025","messageId":"1026","endLine":7,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1225","line":10,"column":10,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1226","line":13,"column":9,"nodeType":"1025","messageId":"1026","endLine":13,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1231","line":1,"column":27,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":36},{"ruleId":"1023","severity":1,"message":"1235","line":10,"column":10,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1089","line":4,"column":3,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":9},{"ruleId":"1023","severity":1,"message":"1090","line":5,"column":3,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1236","line":17,"column":9,"nodeType":"1025","messageId":"1026","endLine":17,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1075","line":32,"column":11,"nodeType":"1025","messageId":"1026","endLine":32,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1076","line":32,"column":25,"nodeType":"1025","messageId":"1026","endLine":32,"endColumn":38},{"ruleId":"1023","severity":1,"message":"1077","line":32,"column":40,"nodeType":"1025","messageId":"1026","endLine":32,"endColumn":52},{"ruleId":"1023","severity":1,"message":"1237","line":38,"column":10,"nodeType":"1025","messageId":"1026","endLine":38,"endColumn":13},{"ruleId":"1018","severity":1,"message":"1238","line":52,"column":6,"nodeType":"1029","endLine":56,"endColumn":4,"suggestions":"1239"},{"ruleId":"1018","severity":1,"message":"1240","line":53,"column":5,"nodeType":"1241","endLine":55,"endColumn":11},{"ruleId":"1101","severity":1,"message":"1102","line":79,"column":13,"nodeType":"1103","endLine":79,"endColumn":38},{"ruleId":"1023","severity":1,"message":"1242","line":4,"column":10,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1243","line":46,"column":24,"nodeType":"1025","messageId":"1026","endLine":46,"endColumn":34},{"ruleId":"1023","severity":1,"message":"1244","line":5,"column":3,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":12},{"ruleId":"1023","severity":1,"message":"1227","line":7,"column":3,"nodeType":"1025","messageId":"1026","endLine":7,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1245","line":8,"column":3,"nodeType":"1025","messageId":"1026","endLine":8,"endColumn":14},{"ruleId":"1145","severity":1,"message":"1223","line":27,"column":13,"nodeType":"1050","endLine":27,"endColumn":48},{"ruleId":"1145","severity":1,"message":"1223","line":33,"column":13,"nodeType":"1050","endLine":33,"endColumn":48},{"ruleId":"1145","severity":1,"message":"1223","line":58,"column":13,"nodeType":"1050","endLine":58,"endColumn":48},{"ruleId":"1023","severity":1,"message":"1246","line":4,"column":8,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1247","line":19,"column":8,"nodeType":"1025","messageId":"1026","endLine":19,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1248","line":26,"column":9,"nodeType":"1025","messageId":"1026","endLine":26,"endColumn":13},{"ruleId":"1018","severity":1,"message":"1028","line":42,"column":6,"nodeType":"1029","endLine":42,"endColumn":8,"suggestions":"1249"},{"ruleId":"1048","severity":1,"message":"1049","line":66,"column":13,"nodeType":"1050","endLine":66,"endColumn":58},{"ruleId":"1048","severity":1,"message":"1049","line":130,"column":15,"nodeType":"1050","endLine":130,"endColumn":64},{"ruleId":"1048","severity":1,"message":"1049","line":193,"column":15,"nodeType":"1050","endLine":193,"endColumn":64},{"ruleId":"1018","severity":1,"message":"1028","line":49,"column":6,"nodeType":"1029","endLine":49,"endColumn":22,"suggestions":"1250"},{"ruleId":"1023","severity":1,"message":"1251","line":48,"column":10,"nodeType":"1025","messageId":"1026","endLine":48,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1252","line":48,"column":16,"nodeType":"1025","messageId":"1026","endLine":48,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1253","line":51,"column":10,"nodeType":"1025","messageId":"1026","endLine":51,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1254","line":51,"column":21,"nodeType":"1025","messageId":"1026","endLine":51,"endColumn":36},{"ruleId":"1101","severity":1,"message":"1102","line":57,"column":7,"nodeType":"1103","endLine":57,"endColumn":22},{"ruleId":"1023","severity":1,"message":"1255","line":11,"column":10,"nodeType":"1025","messageId":"1026","endLine":11,"endColumn":27},{"ruleId":"1023","severity":1,"message":"1256","line":20,"column":21,"nodeType":"1025","messageId":"1026","endLine":20,"endColumn":33},{"ruleId":"1023","severity":1,"message":"1257","line":22,"column":10,"nodeType":"1025","messageId":"1026","endLine":22,"endColumn":16},{"ruleId":"1039","severity":1,"message":"1040","line":26,"column":42,"nodeType":"1020","messageId":"1041","endLine":26,"endColumn":44},{"ruleId":"1018","severity":1,"message":"1258","line":33,"column":6,"nodeType":"1029","endLine":33,"endColumn":23,"suggestions":"1259"},{"ruleId":"1042","severity":1,"message":"1043","line":107,"column":61,"nodeType":"1044","messageId":"1045","endLine":107,"endColumn":62},{"ruleId":"1023","severity":1,"message":"1202","line":9,"column":10,"nodeType":"1025","messageId":"1026","endLine":9,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1203","line":9,"column":16,"nodeType":"1025","messageId":"1026","endLine":9,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1204","line":10,"column":10,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1169","line":10,"column":20,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":31},{"ruleId":"1018","severity":1,"message":"1019","line":13,"column":13,"nodeType":"1020","endLine":16,"endColumn":4},{"ruleId":"1048","severity":1,"message":"1049","line":20,"column":12,"nodeType":"1050","endLine":20,"endColumn":50},{"ruleId":"1048","severity":1,"message":"1049","line":36,"column":100,"nodeType":"1050","endLine":42,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1049","line":81,"column":39,"nodeType":"1050","endLine":81,"endColumn":63},{"ruleId":"1023","severity":1,"message":"1173","line":1,"column":17,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":25},{"ruleId":"1023","severity":1,"message":"1260","line":3,"column":8,"nodeType":"1025","messageId":"1026","endLine":3,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1261","line":4,"column":8,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":12},{"ruleId":"1023","severity":1,"message":"1262","line":5,"column":8,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1263","line":6,"column":8,"nodeType":"1025","messageId":"1026","endLine":6,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1264","line":25,"column":10,"nodeType":"1025","messageId":"1026","endLine":25,"endColumn":24},{"ruleId":"1023","severity":1,"message":"1265","line":39,"column":9,"nodeType":"1025","messageId":"1026","endLine":39,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1266","line":41,"column":9,"nodeType":"1025","messageId":"1026","endLine":41,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1267","line":11,"column":10,"nodeType":"1025","messageId":"1026","endLine":11,"endColumn":30},{"ruleId":"1023","severity":1,"message":"1236","line":15,"column":7,"nodeType":"1025","messageId":"1026","endLine":15,"endColumn":16},{"ruleId":"1018","severity":1,"message":"1019","line":40,"column":15,"nodeType":"1020","endLine":47,"endColumn":6},{"ruleId":"1018","severity":1,"message":"1113","line":41,"column":21,"nodeType":"1114","endLine":41,"endColumn":75},{"ruleId":"1039","severity":1,"message":"1040","line":108,"column":26,"nodeType":"1020","messageId":"1041","endLine":108,"endColumn":28},{"ruleId":"1048","severity":1,"message":"1049","line":241,"column":13,"nodeType":"1050","endLine":241,"endColumn":58},{"ruleId":"1023","severity":1,"message":"1268","line":1,"column":10,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1268","line":1,"column":10,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1232","line":1,"column":10,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":27},{"ruleId":"1196","severity":1,"message":"1197","line":10,"column":13,"nodeType":"1269","messageId":"1199","endLine":10,"endColumn":19},{"ruleId":"1196","severity":1,"message":"1197","line":13,"column":13,"nodeType":"1269","messageId":"1199","endLine":13,"endColumn":19},{"ruleId":"1039","severity":1,"message":"1040","line":20,"column":27,"nodeType":"1020","messageId":"1041","endLine":20,"endColumn":29},{"ruleId":"1018","severity":1,"message":"1019","line":11,"column":13,"nodeType":"1020","endLine":26,"endColumn":4},{"ruleId":"1119","severity":1,"message":"1205","line":16,"column":74,"nodeType":"1044","messageId":"1121","endLine":16,"endColumn":76},{"ruleId":"1018","severity":1,"message":"1270","line":26,"column":6,"nodeType":"1029","endLine":26,"endColumn":30,"suggestions":"1271"},{"ruleId":"1023","severity":1,"message":"1089","line":5,"column":3,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":9},{"ruleId":"1023","severity":1,"message":"1153","line":6,"column":3,"nodeType":"1025","messageId":"1026","endLine":6,"endColumn":11},{"ruleId":"1023","severity":1,"message":"1090","line":7,"column":3,"nodeType":"1025","messageId":"1026","endLine":7,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1272","line":17,"column":10,"nodeType":"1025","messageId":"1026","endLine":17,"endColumn":26},{"ruleId":"1023","severity":1,"message":"1273","line":31,"column":22,"nodeType":"1025","messageId":"1026","endLine":31,"endColumn":35},{"ruleId":"1023","severity":1,"message":"1274","line":37,"column":10,"nodeType":"1025","messageId":"1026","endLine":37,"endColumn":24},{"ruleId":"1023","severity":1,"message":"1275","line":37,"column":26,"nodeType":"1025","messageId":"1026","endLine":37,"endColumn":44},{"ruleId":"1023","severity":1,"message":"1276","line":38,"column":10,"nodeType":"1025","messageId":"1026","endLine":38,"endColumn":22},{"ruleId":"1023","severity":1,"message":"1277","line":38,"column":24,"nodeType":"1025","messageId":"1026","endLine":38,"endColumn":39},{"ruleId":"1023","severity":1,"message":"1278","line":39,"column":10,"nodeType":"1025","messageId":"1026","endLine":39,"endColumn":22},{"ruleId":"1023","severity":1,"message":"1279","line":39,"column":24,"nodeType":"1025","messageId":"1026","endLine":39,"endColumn":39},{"ruleId":"1023","severity":1,"message":"1280","line":40,"column":10,"nodeType":"1025","messageId":"1026","endLine":40,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1281","line":40,"column":16,"nodeType":"1025","messageId":"1026","endLine":40,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1282","line":43,"column":10,"nodeType":"1025","messageId":"1026","endLine":43,"endColumn":17},{"ruleId":"1018","severity":1,"message":"1283","line":48,"column":6,"nodeType":"1029","endLine":48,"endColumn":8,"suggestions":"1284"},{"ruleId":"1285","severity":1,"message":"1286","line":64,"column":13,"nodeType":"1287","messageId":"1288","endLine":64,"endColumn":30},{"ruleId":"1018","severity":1,"message":"1289","line":76,"column":6,"nodeType":"1029","endLine":76,"endColumn":27,"suggestions":"1290"},{"ruleId":"1023","severity":1,"message":"1291","line":78,"column":7,"nodeType":"1025","messageId":"1026","endLine":78,"endColumn":11},{"ruleId":"1023","severity":1,"message":"1292","line":82,"column":7,"nodeType":"1025","messageId":"1026","endLine":82,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1293","line":84,"column":7,"nodeType":"1025","messageId":"1026","endLine":84,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1294","line":85,"column":7,"nodeType":"1025","messageId":"1026","endLine":85,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1295","line":86,"column":7,"nodeType":"1025","messageId":"1026","endLine":86,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1296","line":89,"column":7,"nodeType":"1025","messageId":"1026","endLine":89,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1297","line":94,"column":9,"nodeType":"1025","messageId":"1026","endLine":94,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1298","line":107,"column":11,"nodeType":"1025","messageId":"1026","endLine":107,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1226","line":131,"column":9,"nodeType":"1025","messageId":"1026","endLine":131,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1049","line":139,"column":13,"nodeType":"1050","endLine":147,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1049","line":154,"column":13,"nodeType":"1050","endLine":168,"endColumn":15},{"ruleId":"1101","severity":1,"message":"1102","line":330,"column":11,"nodeType":"1103","endLine":332,"endColumn":13},{"ruleId":"1018","severity":1,"message":"1019","line":20,"column":13,"nodeType":"1020","endLine":24,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1299","line":24,"column":6,"nodeType":"1029","endLine":24,"endColumn":26,"suggestions":"1300"},{"ruleId":"1023","severity":1,"message":"1301","line":44,"column":9,"nodeType":"1025","messageId":"1026","endLine":44,"endColumn":21},{"ruleId":"1101","severity":1,"message":"1102","line":126,"column":19,"nodeType":"1103","endLine":126,"endColumn":63},{"ruleId":"1119","severity":1,"message":"1205","line":156,"column":34,"nodeType":"1044","messageId":"1121","endLine":156,"endColumn":36},{"ruleId":"1119","severity":1,"message":"1205","line":195,"column":32,"nodeType":"1044","messageId":"1121","endLine":195,"endColumn":34},{"ruleId":"1023","severity":1,"message":"1302","line":6,"column":17,"nodeType":"1025","messageId":"1026","endLine":6,"endColumn":25},{"ruleId":"1023","severity":1,"message":"1303","line":10,"column":12,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":24},{"ruleId":"1018","severity":1,"message":"1304","line":76,"column":6,"nodeType":"1029","endLine":76,"endColumn":39,"suggestions":"1305"},{"ruleId":"1023","severity":1,"message":"1306","line":47,"column":7,"nodeType":"1025","messageId":"1026","endLine":47,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1307","line":5,"column":20,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":29},{"ruleId":"1018","severity":1,"message":"1308","line":23,"column":8,"nodeType":"1029","endLine":23,"endColumn":20,"suggestions":"1309"},{"ruleId":"1048","severity":1,"message":"1049","line":39,"column":11,"nodeType":"1050","endLine":39,"endColumn":56},{"ruleId":"1023","severity":1,"message":"1310","line":2,"column":8,"nodeType":"1025","messageId":"1026","endLine":2,"endColumn":12},{"ruleId":"1023","severity":1,"message":"1182","line":27,"column":12,"nodeType":"1025","messageId":"1026","endLine":27,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1077","line":38,"column":40,"nodeType":"1025","messageId":"1026","endLine":38,"endColumn":52},{"ruleId":"1119","severity":1,"message":"1205","line":72,"column":18,"nodeType":"1044","messageId":"1121","endLine":72,"endColumn":20},{"ruleId":"1048","severity":1,"message":"1049","line":73,"column":13,"nodeType":"1050","endLine":73,"endColumn":85},{"ruleId":"1048","severity":1,"message":"1049","line":75,"column":13,"nodeType":"1050","endLine":75,"endColumn":118},{"ruleId":"1131","severity":1,"message":"1311","line":75,"column":97,"nodeType":"1133","messageId":"1121","endLine":75,"endColumn":103},{"ruleId":"1023","severity":1,"message":"1312","line":5,"column":21,"nodeType":"1025","messageId":"1026","endLine":5,"endColumn":32},{"ruleId":"1023","severity":1,"message":"1221","line":8,"column":8,"nodeType":"1025","messageId":"1026","endLine":8,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1222","line":9,"column":10,"nodeType":"1025","messageId":"1026","endLine":9,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1313","line":10,"column":8,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":30},{"ruleId":"1018","severity":1,"message":"1314","line":35,"column":6,"nodeType":"1029","endLine":35,"endColumn":8,"suggestions":"1315"},{"ruleId":"1023","severity":1,"message":"1077","line":37,"column":40,"nodeType":"1025","messageId":"1026","endLine":37,"endColumn":52},{"ruleId":"1048","severity":1,"message":"1049","line":51,"column":11,"nodeType":"1050","endLine":51,"endColumn":50},{"ruleId":"1048","severity":1,"message":"1049","line":61,"column":9,"nodeType":"1050","endLine":61,"endColumn":50},{"ruleId":"1023","severity":1,"message":"1316","line":80,"column":10,"nodeType":"1025","messageId":"1026","endLine":80,"endColumn":26},{"ruleId":"1023","severity":1,"message":"1317","line":80,"column":28,"nodeType":"1025","messageId":"1026","endLine":80,"endColumn":47},{"ruleId":"1018","severity":1,"message":"1019","line":93,"column":13,"nodeType":"1020","endLine":105,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1318","line":105,"column":6,"nodeType":"1029","endLine":105,"endColumn":8,"suggestions":"1319"},{"ruleId":"1048","severity":1,"message":"1049","line":115,"column":15,"nodeType":"1050","endLine":122,"endColumn":17},{"ruleId":"1101","severity":1,"message":"1102","line":130,"column":17,"nodeType":"1103","endLine":130,"endColumn":41},{"ruleId":"1048","severity":1,"message":"1049","line":147,"column":21,"nodeType":"1050","endLine":157,"endColumn":23},{"ruleId":"1018","severity":1,"message":"1320","line":232,"column":6,"nodeType":"1029","endLine":232,"endColumn":8,"suggestions":"1321"},{"ruleId":"1023","severity":1,"message":"1322","line":250,"column":13,"nodeType":"1025","messageId":"1026","endLine":250,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1322","line":283,"column":9,"nodeType":"1025","messageId":"1026","endLine":283,"endColumn":17},{"ruleId":"1323","severity":1,"message":"1324","line":295,"column":7,"nodeType":"1050","endLine":295,"endColumn":11},{"ruleId":"1101","severity":1,"message":"1102","line":313,"column":9,"nodeType":"1103","endLine":313,"endColumn":41},{"ruleId":"1023","severity":1,"message":"1325","line":20,"column":13,"nodeType":"1025","messageId":"1026","endLine":20,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1231","line":1,"column":27,"nodeType":"1025","messageId":"1026","endLine":1,"endColumn":36},{"ruleId":"1023","severity":1,"message":"1055","line":6,"column":3,"nodeType":"1025","messageId":"1026","endLine":6,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1056","line":7,"column":3,"nodeType":"1025","messageId":"1026","endLine":7,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1052","line":10,"column":3,"nodeType":"1025","messageId":"1026","endLine":10,"endColumn":9},{"ruleId":"1023","severity":1,"message":"1326","line":14,"column":8,"nodeType":"1025","messageId":"1026","endLine":14,"endColumn":18},{"ruleId":"1018","severity":1,"message":"1314","line":75,"column":6,"nodeType":"1029","endLine":75,"endColumn":8,"suggestions":"1327"},{"ruleId":"1023","severity":1,"message":"1077","line":76,"column":40,"nodeType":"1025","messageId":"1026","endLine":76,"endColumn":52},{"ruleId":"1023","severity":1,"message":"1328","line":81,"column":10,"nodeType":"1025","messageId":"1026","endLine":81,"endColumn":19},{"ruleId":"1023","severity":1,"message":"1329","line":81,"column":21,"nodeType":"1025","messageId":"1026","endLine":81,"endColumn":33},{"ruleId":"1023","severity":1,"message":"1330","line":83,"column":12,"nodeType":"1025","messageId":"1026","endLine":83,"endColumn":29},{"ruleId":"1048","severity":1,"message":"1049","line":98,"column":9,"nodeType":"1050","endLine":108,"endColumn":11},{"ruleId":"1023","severity":1,"message":"1331","line":164,"column":23,"nodeType":"1025","messageId":"1026","endLine":164,"endColumn":37},{"ruleId":"1023","severity":1,"message":"1332","line":4,"column":10,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":23},{"ruleId":"1023","severity":1,"message":"1236","line":19,"column":9,"nodeType":"1025","messageId":"1026","endLine":19,"endColumn":18},{"ruleId":"1018","severity":1,"message":"1258","line":34,"column":6,"nodeType":"1029","endLine":34,"endColumn":23,"suggestions":"1333"},{"ruleId":"1145","severity":1,"message":"1146","line":83,"column":11,"nodeType":"1050","endLine":83,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1334","line":3,"column":8,"nodeType":"1025","messageId":"1026","endLine":3,"endColumn":25},{"ruleId":"1023","severity":1,"message":"1335","line":8,"column":8,"nodeType":"1025","messageId":"1026","endLine":8,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1336","line":68,"column":9,"nodeType":"1025","messageId":"1026","endLine":68,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1077","line":88,"column":40,"nodeType":"1025","messageId":"1026","endLine":88,"endColumn":52},{"ruleId":"1023","severity":1,"message":"1337","line":122,"column":9,"nodeType":"1025","messageId":"1026","endLine":122,"endColumn":17},{"ruleId":"1018","severity":1,"message":"1019","line":151,"column":13,"nodeType":"1020","endLine":172,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1338","line":172,"column":6,"nodeType":"1029","endLine":172,"endColumn":38,"suggestions":"1339"},{"ruleId":"1119","severity":1,"message":"1205","line":176,"column":12,"nodeType":"1044","messageId":"1121","endLine":176,"endColumn":14},{"ruleId":"1048","severity":1,"message":"1049","line":191,"column":17,"nodeType":"1050","endLine":191,"endColumn":65},{"ruleId":"1119","severity":1,"message":"1205","line":283,"column":15,"nodeType":"1044","messageId":"1121","endLine":283,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1049","line":285,"column":11,"nodeType":"1050","endLine":285,"endColumn":59},{"ruleId":"1048","severity":1,"message":"1049","line":342,"column":21,"nodeType":"1050","endLine":345,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1049","line":457,"column":19,"nodeType":"1050","endLine":460,"endColumn":21},{"ruleId":"1018","severity":1,"message":"1019","line":20,"column":15,"nodeType":"1020","endLine":26,"endColumn":6},{"ruleId":"1018","severity":1,"message":"1340","line":26,"column":8,"nodeType":"1029","endLine":26,"endColumn":25,"suggestions":"1341"},{"ruleId":"1018","severity":1,"message":"1342","line":51,"column":8,"nodeType":"1029","endLine":51,"endColumn":10,"suggestions":"1343"},{"ruleId":"1023","severity":1,"message":"1077","line":53,"column":42,"nodeType":"1025","messageId":"1026","endLine":53,"endColumn":54},{"ruleId":"1048","severity":1,"message":"1049","line":125,"column":25,"nodeType":"1050","endLine":125,"endColumn":75},{"ruleId":"1048","severity":1,"message":"1049","line":153,"column":49,"nodeType":"1050","endLine":153,"endColumn":99},{"ruleId":"1023","severity":1,"message":"1190","line":61,"column":9,"nodeType":"1025","messageId":"1026","endLine":61,"endColumn":16},{"ruleId":"1139","severity":1,"message":"1142","line":73,"column":16,"nodeType":"1025","messageId":"1141","endLine":73,"endColumn":17},{"ruleId":"1018","severity":1,"message":"1019","line":90,"column":13,"nodeType":"1020","endLine":120,"endColumn":4},{"ruleId":"1018","severity":1,"message":"1258","line":120,"column":6,"nodeType":"1029","endLine":120,"endColumn":23,"suggestions":"1344"},{"ruleId":"1119","severity":1,"message":"1120","line":342,"column":49,"nodeType":"1044","messageId":"1121","endLine":342,"endColumn":51},{"ruleId":"1119","severity":1,"message":"1205","line":426,"column":42,"nodeType":"1044","messageId":"1121","endLine":426,"endColumn":44},{"ruleId":"1018","severity":1,"message":"1345","line":533,"column":6,"nodeType":"1029","endLine":533,"endColumn":22,"suggestions":"1346"},{"ruleId":"1119","severity":1,"message":"1120","line":37,"column":25,"nodeType":"1044","messageId":"1121","endLine":37,"endColumn":27},{"ruleId":"1018","severity":1,"message":"1019","line":21,"column":15,"nodeType":"1020","endLine":31,"endColumn":6},{"ruleId":"1018","severity":1,"message":"1347","line":31,"column":8,"nodeType":"1029","endLine":31,"endColumn":52,"suggestions":"1348"},{"ruleId":"1145","severity":1,"message":"1146","line":109,"column":37,"nodeType":"1050","endLine":114,"endColumn":38},{"ruleId":"1145","severity":1,"message":"1146","line":127,"column":37,"nodeType":"1050","endLine":143,"endColumn":38},{"ruleId":"1145","severity":1,"message":"1146","line":151,"column":33,"nodeType":"1050","endLine":158,"endColumn":34},{"ruleId":"1039","severity":1,"message":"1040","line":189,"column":39,"nodeType":"1020","messageId":"1041","endLine":189,"endColumn":41},{"ruleId":"1018","severity":1,"message":"1349","line":195,"column":8,"nodeType":"1029","endLine":195,"endColumn":10,"suggestions":"1350"},{"ruleId":"1018","severity":1,"message":"1314","line":36,"column":8,"nodeType":"1029","endLine":36,"endColumn":10,"suggestions":"1351"},{"ruleId":"1023","severity":1,"message":"1077","line":38,"column":42,"nodeType":"1025","messageId":"1026","endLine":38,"endColumn":54},{"ruleId":"1145","severity":1,"message":"1146","line":101,"column":21,"nodeType":"1050","endLine":101,"endColumn":53},{"ruleId":"1145","severity":1,"message":"1146","line":106,"column":21,"nodeType":"1050","endLine":111,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1049","line":125,"column":33,"nodeType":"1050","endLine":129,"endColumn":35},{"ruleId":"1018","severity":1,"message":"1019","line":7,"column":15,"nodeType":"1020","endLine":31,"endColumn":6},{"ruleId":"1018","severity":1,"message":"1352","line":31,"column":8,"nodeType":"1029","endLine":31,"endColumn":10,"suggestions":"1353"},{"ruleId":"1048","severity":1,"message":"1049","line":63,"column":29,"nodeType":"1050","endLine":70,"endColumn":31},{"ruleId":"1048","severity":1,"message":"1049","line":109,"column":29,"nodeType":"1050","endLine":116,"endColumn":31},{"ruleId":"1023","severity":1,"message":"1195","line":32,"column":9,"nodeType":"1025","messageId":"1026","endLine":32,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1354","line":26,"column":10,"nodeType":"1025","messageId":"1026","endLine":26,"endColumn":18},{"ruleId":"1023","severity":1,"message":"1355","line":26,"column":20,"nodeType":"1025","messageId":"1026","endLine":26,"endColumn":31},{"ruleId":"1023","severity":1,"message":"1356","line":32,"column":10,"nodeType":"1025","messageId":"1026","endLine":32,"endColumn":15},{"ruleId":"1023","severity":1,"message":"1357","line":36,"column":10,"nodeType":"1025","messageId":"1026","endLine":36,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1248","line":37,"column":9,"nodeType":"1025","messageId":"1026","endLine":37,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1337","line":68,"column":9,"nodeType":"1025","messageId":"1026","endLine":68,"endColumn":17},{"ruleId":"1023","severity":1,"message":"1298","line":80,"column":11,"nodeType":"1025","messageId":"1026","endLine":80,"endColumn":21},{"ruleId":"1023","severity":1,"message":"1265","line":88,"column":9,"nodeType":"1025","messageId":"1026","endLine":88,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1298","line":104,"column":9,"nodeType":"1025","messageId":"1026","endLine":104,"endColumn":19},{"ruleId":"1145","severity":1,"message":"1223","line":235,"column":31,"nodeType":"1050","endLine":241,"endColumn":32},{"ruleId":"1048","severity":1,"message":"1049","line":324,"column":13,"nodeType":"1050","endLine":324,"endColumn":40},{"ruleId":"1119","severity":1,"message":"1205","line":364,"column":12,"nodeType":"1044","messageId":"1121","endLine":364,"endColumn":14},{"ruleId":"1101","severity":1,"message":"1102","line":413,"column":17,"nodeType":"1103","endLine":413,"endColumn":49},{"ruleId":"1023","severity":1,"message":"1214","line":4,"column":10,"nodeType":"1025","messageId":"1026","endLine":4,"endColumn":21},{"ruleId":"1018","severity":1,"message":"1019","line":10,"column":13,"nodeType":"1020","endLine":24,"endColumn":4},{"ruleId":"1119","severity":1,"message":"1205","line":16,"column":74,"nodeType":"1044","messageId":"1121","endLine":16,"endColumn":76},{"ruleId":"1018","severity":1,"message":"1270","line":24,"column":6,"nodeType":"1029","endLine":24,"endColumn":30,"suggestions":"1358"},{"ruleId":"1018","severity":1,"message":"1359","line":32,"column":6,"nodeType":"1029","endLine":32,"endColumn":18,"suggestions":"1360"},"no-native-reassign",["1361"],"no-negated-in-lhs",["1362"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-unused-vars","'getChats' is defined but never used.","Identifier","unusedVar","'Token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1363"],["1364"],"'EVENTSAVED' is defined but never used.","'EVENTSAVEFAIL' is defined but never used.","React Hook useEffect has missing dependencies: 'CodeEvent.Code', 'CodeEvent.Maincode', 'dispatch', and 'props.location.pathname'. Either include them or remove the dependency array.",["1365"],["1366"],"'result' is assigned a value but never used.","'incompleteeventnumber' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'addAnEvent'. Either include it or remove the dependency array.",["1367"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","'Avatar' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Paper' is defined but never used.","'InputBase' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'ListItemAvatar' is defined but never used.","'AllGroups' is assigned a value but never used.","'windowwidth' is assigned a value but never used.","'IndvName' is assigned a value but never used.","Assignments to the 'Eventdata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'selectedgrpcpr' is assigned a value but never used.","'chat' is assigned a value but never used.","'base' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', 'props.match.params.event', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1368"],"'blankfeed' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getposts', 'guestlist', 'props.location.pathname', 'props.match.params.MainCode', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1369"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'ParticipantsCPY' is assigned a value but never used.","'Phone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getposts'. Either include it or remove the dependency array.",["1370"],"React Hook useEffect has a missing dependency: 'admins'. Either include it or remove the dependency array.",["1371"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1372"],"'rsvpnumber' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'evno', and 'props'. Either include them or remove the dependency array.",["1373"],"'Select' is defined but never used.","'FormControl' is defined but never used.","'AddPhotoAlternateIcon' is defined but never used.","'FcShare' is defined but never used.","'isUploaded' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Name', 'Auth.Phone', 'Eventdata', 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array.",["1374"],"React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["1375"],"'save' is assigned a value but never used.","'handlers' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'eveid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getcomments'. Either include it or remove the dependency array.",["1376"],"Assignments to the 'base' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.likeby'. Either include them or remove the dependency array. If 'setisliked' needs the current value of 'props.likeby', you can also switch to useReducer instead of useState and read 'props.likeby' in the reducer.",["1377"],"'Eventdata' is assigned a value but never used.","'handleShow' is assigned a value but never used.","Assignments to the 'supported' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression","'Status' is assigned a value but never used.","'found' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myInvitations', 'props.location.pathname', 'props.match.params.id', and 'props.match.params.invno'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1378"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'number' is assigned a value but never used.","'participants' is assigned a value but never used.","'KeyboardArrowDownIcon' is defined but never used.","'vcimage' is defined but never used.","'setMarker' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'Location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'panTo' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'Id' is assigned a value but never used.","'IsAdmin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array.",["1379"],"'IoArrowBackCircleOutline' is defined but never used.","no-redeclare","'Host' is already defined.","redeclared","'i' is already defined.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'ishost', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1380"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'IoIosArrowBack' is defined but never used.","'setoptions' is assigned a value but never used.","'Rsvplist' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.match.params.eid', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1381"],"'submit' is assigned a value but never used.","'MenuItem' is defined but never used.","'useDropzone' is defined but never used.","'uploadString' is defined but never used.","React Hook useEffect has missing dependencies: 'MyEvents' and 'props.match.params.invno'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.match.params.invno', you can also switch to useReducer instead of useState and read 'props.match.params.invno' in the reducer.",["1382"],"React Hook useEffect has missing dependencies: 'MyEvents' and 'props.match.params.invno'. Either include them or remove the dependency array. If 'setDescription' needs the current value of 'props.match.params.invno', you can also switch to useReducer instead of useState and read 'props.match.params.invno' in the reducer.",["1383"],"'GetEvents' is defined but never used.","'GetInvitations' is defined but never used.","'CircularProgress' is defined but never used.","'Backdrop' is defined but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'props.location.pathname', 'props.match.params.id', and 'props.match.params.invno'. Either include them or remove the dependency array.",["1384"],"'MdModeEdit' is defined but never used.","'category' is assigned a value but never used.","'maincode' is assigned a value but never used.","'setmaincode' is assigned a value but never used.","'name' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', 'props.match.params.MainCode', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["1385"],"'useState' is defined but never used.","'FileCopyIcon' is defined but never used.","'WhatsappShareButton' is defined but never used.","'Menu' is defined but never used.","'WhatsIcon' is defined but never used.","'mode' is assigned a value but never used.","'sharelink' is assigned a value but never used.","'Watsapp' is assigned a value but never used.","'SelectedCode' is assigned a value but never used.","'type' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Name', 'maincode', and 'props.match.params.id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setcodesharelink' needs the current value of 'maincode'.",["1386"],"'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'myInvitations', 'props.match.params.Code', and 'props.match.params.maincode'. Either include them or remove the dependency array.",["1387"],"'newdesc' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.match.params.Code' and 'props.match.params.maincode'. Either include them or remove the dependency array.",["1388"],"React Hook useEffect has missing dependencies: 'Eventdata1', 'Eventdata2', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array.",["1389"],"'newIndex' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'decoded' is assigned a value but never used.","'SingleEvent' is defined but never used.","'show' is assigned a value but never used.","'setshow' is assigned a value but never used.","'MainCode' is assigned a value but never used.","Expected '===' and instead saw '=='.","'jwt_decode' is defined but never used.","'history' is defined but never used.","'GOTCHATS' is defined but never used.","'ArrowBackIosIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'AllGroups' and 'props.MainCode'. Either include them or remove the dependency array.",["1390"],"React Hook useEffect has a missing dependency: 'props.MainCode'. Either include it or remove the dependency array.",["1391"],"'useDispatch' is defined but never used.","React Hook useCallback has missing dependencies: 'Auth.Phone' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1392"],"React Hook useEffect has a missing dependency: 'props.SelectedGroup._id'. Either include it or remove the dependency array.",["1393"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1394"],"'axios' is defined but never used.","'url' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Invalid alt value for img. Use alt=\"\" for presentational images.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","'FaWhatsapp' is defined but never used.","'BannerThree' is defined but never used.","'DanceIcon' is defined but never used.","'HappyIcon' is defined but never used.","'useEffect' is defined but never used.","'reactLocalStorage' is defined but never used.","'loginuser' is defined but never used.","'Container' is defined but never used.","'loader' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'seturl' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["1395"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","'Plancard' is defined but never used.","'selectplan' is assigned a value but never used.","'FaTwitter' is defined but never used.","'FaInstagram' is defined but never used.","'Integrate' is defined but never used.","'DancingImg' is defined but never used.","'Auth' is assigned a value but never used.",["1396"],["1397"],"'menu' is assigned a value but never used.","'setMenu' is assigned a value but never used.","'showPopup' is assigned a value but never used.","'toggleShowPopup' is assigned a value but never used.","'AiOutlineShopping' is defined but never used.","'seteventcode' is assigned a value but never used.","'ishost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Auth.Phone'. Either include it or remove the dependency array.",["1398"],"'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Typography' is defined but never used.","'getStepContent' is defined but never used.","'classes' is assigned a value but never used.","'steps' is assigned a value but never used.","'BsFillInfoCircleFill' is defined but never used.","'act' is defined but never used.","BreakStatement","React Hook useEffect has missing dependencies: 'Auth.Name', 'Auth.Phone', and 'Auth.Profile'. Either include them or remove the dependency array.",["1399"],"'BsInfoCircleFill' is defined but never used.","'setProcessing' is assigned a value but never used.","'shedulevisible' is assigned a value but never used.","'SetScheduleVisible' is assigned a value but never used.","'storyvisible' is assigned a value but never used.","'SetStoryVisible' is assigned a value but never used.","'albumvisible' is assigned a value but never used.","'SetAlbumVisible' is assigned a value but never used.","'Link' is assigned a value but never used.","'setLink' is assigned a value but never used.","'address' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'SetCurrentEventDetails' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["1400"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has missing dependencies: 'CurrentEventDetails' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1401"],"'gapi' is assigned a value but never used.","'CLIENT_ID' is assigned a value but never used.","'API_KEY' is assigned a value but never used.","'clientSecret' is assigned a value but never used.","'DISCOVERY_DOCS' is assigned a value but never used.","'SCOPES' is assigned a value but never used.","'currentEvent' is assigned a value but never used.","'EventsCopy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.Events.length'. Either include it or remove the dependency array. If 'setwidth' needs the current value of 'props.Events.length', you can also switch to useReducer instead of useState and read 'props.Events.length' in the reducer.",["1402"],"'NexteventKey' is assigned a value but never used.","'setCodes' is assigned a value but never used.","'randomString' is defined but never used.","React Hook useEffect has missing dependencies: 'Phone' and 'dispatch'. Either include them or remove the dependency array.",["1403"],"'fileRef' is assigned a value but never used.","'setMonths' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Months'. Either include it or remove the dependency array.",["1404"],"'Logo' is defined but never used.","Duplicate key 'height'.","'setdatetime' is assigned a value but never used.","'CheckCircleOutlineIcon' is defined but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1405"],"'SelectedTemplate' is assigned a value but never used.","'setSelectedTemplate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AllTemplates' and 'props.Type'. Either include them or remove the dependency array.",["1406"],"React Hook useEffect has a missing dependency: 'props.CurrentEventDetails.location'. Either include it or remove the dependency array.",["1407"],"'location' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'file' is assigned a value but never used.","'CancelIcon' is defined but never used.",["1408"],"'groupName' is assigned a value but never used.","'setgroupName' is assigned a value but never used.","'filterparticipant' is defined but never used.","'setcreateGroup' is assigned a value but never used.","'AiOutlineBell' is defined but never used.",["1409"],"'DeleteForeverIcon' is defined but never used.","'CreateIcon' is defined but never used.","'dataurl' is assigned a value but never used.","'saveedit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'subStory'. Either include it or remove the dependency array.",["1410"],"React Hook useEffect has missing dependencies: 'props.images' and 'savetoredux'. Either include them or remove the dependency array.",["1411"],"React Hook useCallback has a missing dependency: 'Addtoalbum'. Either include it or remove the dependency array.",["1412"],["1413"],"React Hook useEffect has missing dependencies: 'Auth.Phone' and 'showicon'. Either include them or remove the dependency array.",["1414"],"React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.admins'. Either include them or remove the dependency array.",["1415"],"React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.LikeList'. Either include them or remove the dependency array.",["1416"],["1417"],"React Hook useEffect has missing dependencies: 'props.currentPosts' and 'props.popuptype'. Either include them or remove the dependency array.",["1418"],"'username' is assigned a value but never used.","'setusername' is assigned a value but never used.","'venue' is assigned a value but never used.","'isError' is assigned a value but never used.",["1419"],"React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setcomments' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.",["1420"],"no-global-assign","no-unsafe-negation",{"desc":"1421","fix":"1422"},{"desc":"1423","fix":"1424"},{"desc":"1425","fix":"1426"},{"desc":"1421","fix":"1427"},{"desc":"1428","fix":"1429"},{"desc":"1430","fix":"1431"},{"desc":"1432","fix":"1433"},{"desc":"1434","fix":"1435"},{"desc":"1436","fix":"1437"},{"desc":"1438","fix":"1439"},{"desc":"1440","fix":"1441"},{"desc":"1442","fix":"1443"},{"desc":"1444","fix":"1445"},{"desc":"1446","fix":"1447"},{"desc":"1448","fix":"1449"},{"desc":"1450","fix":"1451"},{"desc":"1452","fix":"1453"},{"desc":"1454","fix":"1455"},{"desc":"1456","fix":"1457"},{"desc":"1458","fix":"1459"},{"desc":"1460","fix":"1461"},{"desc":"1462","fix":"1463"},{"desc":"1464","fix":"1465"},{"desc":"1466","fix":"1467"},{"desc":"1468","fix":"1469"},{"desc":"1470","fix":"1471"},{"desc":"1472","fix":"1473"},{"desc":"1474","fix":"1475"},{"desc":"1474","fix":"1476"},{"desc":"1477","fix":"1478"},{"desc":"1479","fix":"1480"},{"desc":"1481","fix":"1482"},{"desc":"1483","fix":"1484"},{"desc":"1421","fix":"1485"},{"desc":"1486","fix":"1487"},{"desc":"1488","fix":"1489"},{"desc":"1490","fix":"1491"},{"desc":"1483","fix":"1492"},{"desc":"1493","fix":"1494"},{"desc":"1495","fix":"1496"},{"desc":"1497","fix":"1498"},{"desc":"1499","fix":"1500"},{"desc":"1501","fix":"1502"},{"desc":"1503","fix":"1504"},{"desc":"1505","fix":"1506"},{"desc":"1501","fix":"1507"},{"desc":"1488","fix":"1508"},{"desc":"1509","fix":"1510"},{"desc":"1511","fix":"1512"},{"desc":"1513","fix":"1514"},{"desc":"1488","fix":"1515"},{"desc":"1516","fix":"1517"},{"desc":"1518","fix":"1519"},{"desc":"1520","fix":"1521"},{"desc":"1501","fix":"1522"},{"desc":"1523","fix":"1524"},{"desc":"1490","fix":"1525"},{"desc":"1526","fix":"1527"},"Update the dependencies array to be: [dispatch]",{"range":"1528","text":"1529"},"Update the dependencies array to be: [Auth.isLoggedIn, dispatch]",{"range":"1530","text":"1531"},"Update the dependencies array to be: [CodeEvent.Code, CodeEvent.Maincode, dispatch, props.location.pathname]",{"range":"1532","text":"1533"},{"range":"1534","text":"1529"},"Update the dependencies array to be: [addAnEvent]",{"range":"1535","text":"1536"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.event]",{"range":"1537","text":"1538"},"Update the dependencies array to be: [MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",{"range":"1539","text":"1540"},"Update the dependencies array to be: [Eventdata, getposts]",{"range":"1541","text":"1542"},"Update the dependencies array to be: [admins, filter]",{"range":"1543","text":"1544"},"Update the dependencies array to be: [MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",{"range":"1545","text":"1546"},"Update the dependencies array to be: [Auth.Phone, Eventdata, evno, props]",{"range":"1547","text":"1548"},"Update the dependencies array to be: [Auth.Name, Auth.Phone, Eventdata, MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",{"range":"1549","text":"1550"},"Update the dependencies array to be: [Eventdata, images]",{"range":"1551","text":"1552"},"Update the dependencies array to be: [getcomments]",{"range":"1553","text":"1554"},"Update the dependencies array to be: [Auth.Phone, props.likeby]",{"range":"1555","text":"1556"},"Update the dependencies array to be: [MyEvents, myInvitations, props.location.pathname, props.match.params.id, props.match.params.invno]",{"range":"1557","text":"1558"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Auth.Phone]",{"range":"1559","text":"1560"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Eventdata, Auth.Phone, ishost]",{"range":"1561","text":"1562"},"Update the dependencies array to be: [MyEvents, dispatch, props.match.params.eid, props.match.params.id]",{"range":"1563","text":"1564"},"Update the dependencies array to be: [MyEvents, props.match.params.invno]",{"range":"1565","text":"1566"},"Update the dependencies array to be: [Description, MyEvents, props.match.params.invno]",{"range":"1567","text":"1568"},"Update the dependencies array to be: [myInvitations, MyEvents, props.location.pathname, props.match.params.id, props.match.params.invno, Auth.Phone]",{"range":"1569","text":"1570"},"Update the dependencies array to be: [MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",{"range":"1571","text":"1572"},"Update the dependencies array to be: [Auth.Name, maincode, props.match.params.id]",{"range":"1573","text":"1574"},"Update the dependencies array to be: [Auth.isLoggedIn, dispatch, myInvitations, props.match.params.Code, props.match.params.maincode]",{"range":"1575","text":"1576"},"Update the dependencies array to be: [props.match.params.Code, props.match.params.maincode]",{"range":"1577","text":"1578"},"Update the dependencies array to be: [Eventdata1, Eventdata2, props.location.pathname, props.match.params.id]",{"range":"1579","text":"1580"},"Update the dependencies array to be: [AllGroups, props.MainCode]",{"range":"1581","text":"1582"},{"range":"1583","text":"1582"},"Update the dependencies array to be: [Auth.Phone, props]",{"range":"1584","text":"1585"},"Update the dependencies array to be: [props.SelectedGroup._id]",{"range":"1586","text":"1587"},"Update the dependencies array to be: [props.SelectedGroup.chats, props.IsSubmit, props]",{"range":"1588","text":"1589"},"Update the dependencies array to be: [props.Events, props.SelectedEvent]",{"range":"1590","text":"1591"},{"range":"1592","text":"1529"},"Update the dependencies array to be: [Auth.isExpired, dispatch]",{"range":"1593","text":"1594"},"Update the dependencies array to be: [Auth.Phone, props.Eventdata]",{"range":"1595","text":"1596"},"Update the dependencies array to be: [props.Phone, GuestList, Auth.Phone, Auth.Name, Auth.Profile]",{"range":"1597","text":"1598"},{"range":"1599","text":"1591"},"Update the dependencies array to be: [CurrentEventDetails, props, props.SelectedEvent]",{"range":"1600","text":"1601"},"Update the dependencies array to be: [props.Events.length, props.participants]",{"range":"1602","text":"1603"},"Update the dependencies array to be: [Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",{"range":"1604","text":"1605"},"Update the dependencies array to be: [Months, props.Date]",{"range":"1606","text":"1607"},"Update the dependencies array to be: [props]",{"range":"1608","text":"1609"},"Update the dependencies array to be: [AllTemplates, props.Type]",{"range":"1610","text":"1611"},"Update the dependencies array to be: [props.CurrentEventDetails.location]",{"range":"1612","text":"1613"},{"range":"1614","text":"1609"},{"range":"1615","text":"1596"},"Update the dependencies array to be: [props.Eventdata, props.uniqurl, subStory]",{"range":"1616","text":"1617"},"Update the dependencies array to be: [props.images, props.showPopup, savetoredux]",{"range":"1618","text":"1619"},"Update the dependencies array to be: [Addtoalbum]",{"range":"1620","text":"1621"},{"range":"1622","text":"1596"},"Update the dependencies array to be: [Auth.Phone, props.RSVPList, showicon]",{"range":"1623","text":"1624"},"Update the dependencies array to be: [Auth.Phone, props.admins, props.data, props.filter, props.filterdata]",{"range":"1625","text":"1626"},"Update the dependencies array to be: [Auth.Phone, props.LikeList]",{"range":"1627","text":"1628"},{"range":"1629","text":"1609"},"Update the dependencies array to be: [props.currentPosts, props.popuptype]",{"range":"1630","text":"1631"},{"range":"1632","text":"1598"},"Update the dependencies array to be: [props.data, props.post]",{"range":"1633","text":"1634"},[1215,1217],"[dispatch]",[1525,1542],"[Auth.isLoggedIn, dispatch]",[1434,1436],"[CodeEvent.Code, CodeEvent.Maincode, dispatch, props.location.pathname]",[1594,1596],[7402,7404],"[addAnEvent]",[1848,1873],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.event]",[4111,4136],"[MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",[7846,7857],"[Eventdata, getposts]",[7967,7975],"[admins, filter]",[1515,1540],"[MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",[2394,2405],"[Auth.Phone, Eventdata, evno, props]",[4306,4331],"[Auth.Name, Auth.Phone, Eventdata, MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",[4744,4755],"[Eventdata, images]",[2047,2049],"[getcomments]",[6769,6771],"[Auth.Phone, props.likeby]",[5424,5434],"[MyEvents, myInvitations, props.location.pathname, props.match.params.id, props.match.params.invno]",[2308,2333],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Auth.Phone]",[2689,2714],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Eventdata, Auth.Phone, ishost]",[3916,3926],"[MyEvents, dispatch, props.match.params.eid, props.match.params.id]",[2290,2292],"[MyEvents, props.match.params.invno]",[2810,2823],"[Description, MyEvents, props.match.params.invno]",[3661,3686],"[myInvitations, MyEvents, props.location.pathname, props.match.params.id, props.match.params.invno, Auth.Phone]",[2902,2927],"[MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",[3764,3766],"[Auth.Name, maincode, props.match.params.id]",[2504,2521],"[Auth.isLoggedIn, dispatch, myInvitations, props.match.params.Code, props.match.params.maincode]",[6002,6004],"[props.match.params.Code, props.match.params.maincode]",[1321,1323],"[Eventdata1, Eventdata2, props.location.pathname, props.match.params.id]",[1999,2001],"[AllGroups, props.MainCode]",[2225,2236],[2503,2505],"[Auth.Phone, props]",[2903,2905],"[props.SelectedGroup._id]",[2972,3015],"[props.SelectedGroup.chats, props.IsSubmit, props]",[1697,1817],"[props.Events, props.SelectedEvent]",[1638,1640],[1908,1924],"[Auth.isExpired, dispatch]",[1061,1078],"[Auth.Phone, props.Eventdata]",[980,1004],"[props.Phone, GuestList, Auth.Phone, Auth.Name, Auth.Profile]",[1731,1733],[2543,2564],"[CurrentEventDetails, props, props.SelectedEvent]",[676,696],"[props.Events.length, props.participants]",[2136,2169],"[Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",[945,957],"[Months, props.Date]",[1465,1467],"[props]",[3703,3705],"[AllTemplates, props.Type]",[4197,4199],"[props.CurrentEventDetails.location]",[2301,2303],[1431,1448],[5559,5591],"[props.Eventdata, props.uniqurl, subStory]",[1105,1122],"[props.images, props.showPopup, savetoredux]",[2002,2004],"[Addtoalbum]",[4516,4533],[19616,19632],"[Auth.Phone, props.RSVPList, showicon]",[1306,1350],"[Auth.Phone, props.admins, props.data, props.filter, props.filterdata]",[9440,9442],"[Auth.Phone, props.LikeList]",[1397,1399],[1240,1242],"[props.currentPosts, props.popuptype]",[944,968],[1247,1259],"[props.data, props.post]"]