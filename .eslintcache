[{"C:\\Projects\\personalp\\MobillyInvite-master\\src\\index.js":"1","C:\\Projects\\personalp\\MobillyInvite-master\\src\\App.js":"2","C:\\Projects\\personalp\\MobillyInvite-master\\src\\serviceWorkerRegistration.js":"3","C:\\Projects\\personalp\\MobillyInvite-master\\src\\reportWebVitals.js":"4","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\store.js":"5","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\History.js":"6","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\Routing.js":"7","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Home\\Home.js":"8","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Notifications\\Notification.js":"9","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Auth\\MobileAuth.js":"10","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddEventSucess.js":"11","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddEvent.js":"12","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\EventDone\\EventDone.js":"13","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Entercode\\Entercode.js":"14","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Landingpage.js":"15","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\InvitaionviewToggler.js":"16","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\ShowSchedule.js":"17","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Chat\\Chat.js":"18","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\ShowAlbum.js":"19","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\hoxinvitation.js":"20","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\ShowStory.js":"21","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\BlankPages\\404.js":"22","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\Feed.js":"23","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Comments\\Coments.js":"24","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\RSVP\\Rsvp.js":"25","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js":"26","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Location Offline\\LocationOffline.js":"27","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Guest\\ManageGuest.js":"28","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Guest\\Guest.js":"29","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Sidebar\\SidebarMore.js":"30","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\HomePage.js":"31","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\FD\\Fd.js":"32","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\jitsi\\Jitsivc.js":"33","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\EditEvent\\EditEvent.js":"34","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Sidebar\\AdminSidebar.js":"35","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Admin\\EventAdmin.js":"36","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Settings\\AlertNotif\\AlertNotif.js":"37","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\ReducerCombiner.js":"38","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js":"39","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\Header\\Header.js":"40","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\Invitation.js":"41","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js":"42","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\postfunctions.js":"43","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js":"44","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js":"45","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js":"46","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\CodeEventReducer.js":"47","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\PostReducer.js":"48","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\NotificatonReducer.js":"49","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\ChatReducer.js":"50","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\CreateEventFormReducer.js":"51","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\EventReducer.js":"52","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\AuthReducer.js":"53","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\Config.js":"54","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\FileUpload_Download.js":"55","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Events\\Eventlist.js":"56","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\FootMenu\\FootMenu.js":"57","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js":"58","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\Maps\\Places.js":"59","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\ChatWidget.js":"60","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\CompanySlide.js":"61","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\AboutBanner.js":"62","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Additionals.js":"63","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Features.js":"64","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\ContactUs.js":"65","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Testimonials.js":"66","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Footer.js":"67","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\MainBanner.js":"68","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\Headings.js":"69","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\Popups\\Popup.js":"70","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js":"71","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\Login.js":"72","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\UserPorfile\\UserProfile.js":"73","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\NotificationAction.js":"74","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\EventActions.js":"75","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\AuthActions.js":"76","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\PostActions.js":"77","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\ChatActions.js":"78","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Auth\\LoginSignup.js":"79","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Firebase.js":"80","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\CodeAction.js":"81","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\timer\\timer.js":"82","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js":"83","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js":"84","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\NavMobile\\NavMobile.js":"85","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\AddPost.js":"86","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\AddTags.js":"87","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\Posts.js":"88","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\Media.js":"89","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\FeedComments.js":"90","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\UserData\\UserData.js":"91","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\Addtoalbum.js":"92","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Chat\\Chatbox.js":"93","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Chat\\List.js":"94","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\VideoOne.js":"95","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Pricing.js":"96","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Services.js":"97","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Testimonials.js":"98","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\MobileMenu.js":"99","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js":"100","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Layout.js":"101","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\FAQ.js":"102","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Header.js":"103","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Footer.js":"104","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\CTATwo.js":"105","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\CTAOne.js":"106","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Banner.js":"107","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Contact.js":"108","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Clients.js":"109","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Plan\\Plan.js":"110","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js":"111","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js":"112","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js":"113","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\Stepper\\Stepper.js":"114","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Chat\\SelectParticipant.js":"115","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\BlockTitle.js":"116","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\AccordionItem.js":"117","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\NavLinks.js":"118","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js":"119","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js":"120","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js":"121","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js":"122","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\Extras\\Schedule.js":"123","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\Maps\\Maps.js":"124","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\Extras\\Album.js":"125","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\EventCreationFormActions.js":"126","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\EventCreationFormFunction.js":"127","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\Extras\\Story.js":"128","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddDetails\\AddDetails.js":"129","C:\\Projects\\MobillyInvite\\src\\index.js":"130","C:\\Projects\\MobillyInvite\\src\\reportWebVitals.js":"131","C:\\Projects\\MobillyInvite\\src\\serviceWorkerRegistration.js":"132","C:\\Projects\\MobillyInvite\\src\\App.js":"133","C:\\Projects\\MobillyInvite\\src\\Redux\\store.js":"134","C:\\Projects\\MobillyInvite\\src\\Utils\\History.js":"135","C:\\Projects\\MobillyInvite\\src\\Utils\\Routing.js":"136","C:\\Projects\\MobillyInvite\\src\\Components\\Auth\\MobileAuth.js":"137","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\ReducerCombiner.js":"138","C:\\Projects\\MobillyInvite\\src\\Components\\Notifications\\Notification.js":"139","C:\\Projects\\MobillyInvite\\src\\Components\\Entercode\\Entercode.js":"140","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddEventSucess.js":"141","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Landingpage.js":"142","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddEvent.js":"143","C:\\Projects\\MobillyInvite\\src\\Components\\Home\\Home.js":"144","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowSchedule.js":"145","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\hoxinvitation.js":"146","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitaionviewToggler.js":"147","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\Chat.js":"148","C:\\Projects\\MobillyInvite\\src\\Components\\EventDone\\EventDone.js":"149","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowStory.js":"150","C:\\Projects\\MobillyInvite\\src\\Components\\BlankPages\\404.js":"151","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Feed.js":"152","C:\\Projects\\MobillyInvite\\src\\Components\\jitsi\\Jitsivc.js":"153","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowAlbum.js":"154","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\RSVP\\Rsvp.js":"155","C:\\Projects\\MobillyInvite\\src\\Components\\Location Offline\\LocationOffline.js":"156","C:\\Projects\\MobillyInvite\\src\\Components\\Sidebar\\SidebarMore.js":"157","C:\\Projects\\MobillyInvite\\src\\Components\\Sidebar\\AdminSidebar.js":"158","C:\\Projects\\MobillyInvite\\src\\Components\\Guest\\Guest.js":"159","C:\\Projects\\MobillyInvite\\src\\Components\\Admin\\EventAdmin.js":"160","C:\\Projects\\MobillyInvite\\src\\Components\\FD\\Fd.js":"161","C:\\Projects\\MobillyInvite\\src\\Components\\Guest\\ManageGuest.js":"162","C:\\Projects\\MobillyInvite\\src\\Components\\Comments\\Coments.js":"163","C:\\Projects\\MobillyInvite\\src\\Components\\EditEvent\\EditEvent.js":"164","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js":"165","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\HomePage.js":"166","C:\\Projects\\MobillyInvite\\src\\Components\\Settings\\AlertNotif\\AlertNotif.js":"167","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\NotificatonReducer.js":"168","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\PostReducer.js":"169","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\CodeEventReducer.js":"170","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\EventReducer.js":"171","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\CreateEventFormReducer.js":"172","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\ChatReducer.js":"173","C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\AuthReducer.js":"174","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js":"175","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\postfunctions.js":"176","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js":"177","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js":"178","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js":"179","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\ChatWidget.js":"180","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\AboutBanner.js":"181","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\CompanySlide.js":"182","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Features.js":"183","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Additionals.js":"184","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\ContactUs.js":"185","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Footer.js":"186","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Testimonials.js":"187","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\MainBanner.js":"188","C:\\Projects\\MobillyInvite\\src\\Utils\\FileUpload_Download.js":"189","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Header\\Header.js":"190","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\NavMobile\\NavMobile.js":"191","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js":"192","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js":"193","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js":"194","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js":"195","C:\\Projects\\MobillyInvite\\src\\Components\\Auth\\LoginSignup.js":"196","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Firebase.js":"197","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Places.js":"198","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Popups\\Popup.js":"199","C:\\Projects\\MobillyInvite\\src\\Utils\\Config.js":"200","C:\\Projects\\MobillyInvite\\src\\Utils\\Headings.js":"201","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\timer\\timer.js":"202","C:\\Projects\\MobillyInvite\\src\\Utils\\Login.js":"203","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js":"204","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\NotificationAction.js":"205","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\AuthActions.js":"206","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\PostActions.js":"207","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\EventActions.js":"208","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\ChatActions.js":"209","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\Addtoalbum.js":"210","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\AddPost.js":"211","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\AddTags.js":"212","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Posts.js":"213","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Media.js":"214","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\FeedComments.js":"215","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserData.js":"216","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\Chatbox.js":"217","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\List.js":"218","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\CodeAction.js":"219","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js":"220","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\Invitation.js":"221","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js":"222","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\VideoOne.js":"223","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Testimonials.js":"224","C:\\Projects\\MobillyInvite\\src\\Components\\Events\\Eventlist.js":"225","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Services.js":"226","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\MobileMenu.js":"227","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Layout.js":"228","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Pricing.js":"229","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\FootMenu\\FootMenu.js":"230","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Header.js":"231","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Footer.js":"232","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\FAQ.js":"233","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\CTATwo.js":"234","C:\\Projects\\MobillyInvite\\src\\Components\\Plan\\Plan.js":"235","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\CTAOne.js":"236","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Banner.js":"237","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Contact.js":"238","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Clients.js":"239","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js":"240","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js":"241","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Stepper\\Stepper.js":"242","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\SelectParticipant.js":"243","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\BlockTitle.js":"244","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js":"245","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js":"246","C:\\Projects\\MobillyInvite\\src\\Components\\UserPorfile\\UserProfile.js":"247","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\NavLinks.js":"248","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\AccordionItem.js":"249","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js":"250","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js":"251","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\EventCreationFormActions.js":"252","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Schedule.js":"253","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Maps.js":"254","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Story.js":"255","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Album.js":"256","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\EventCreationFormFunction.js":"257","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddDetails\\AddDetails.js":"258","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\DateFormatter\\Dateformatter.js":"259"},{"size":889,"mtime":1627286839211,"results":"260","hashOfConfig":"261"},{"size":7566,"mtime":1627286839091,"results":"262","hashOfConfig":"261"},{"size":5064,"mtime":1627286839297,"results":"263","hashOfConfig":"261"},{"size":364,"mtime":1627286839257,"results":"264","hashOfConfig":"261"},{"size":356,"mtime":1627286848086,"results":"265","hashOfConfig":"261"},{"size":85,"mtime":1627286848625,"results":"266","hashOfConfig":"261"},{"size":1646,"mtime":1627286848703,"results":"267","hashOfConfig":"261"},{"size":2246,"mtime":1627307879942,"results":"268","hashOfConfig":"261"},{"size":2081,"mtime":1627286847780,"results":"269","hashOfConfig":"261"},{"size":563,"mtime":1627286843645,"results":"270","hashOfConfig":"261"},{"size":6507,"mtime":1627307736747,"results":"271","hashOfConfig":"261"},{"size":9506,"mtime":1627286843075,"results":"272","hashOfConfig":"261"},{"size":1470,"mtime":1627286844103,"results":"273","hashOfConfig":"261"},{"size":2254,"mtime":1627286844080,"results":"274","hashOfConfig":"261"},{"size":2436,"mtime":1627286845878,"results":"275","hashOfConfig":"261"},{"size":2917,"mtime":1627286845343,"results":"276","hashOfConfig":"261"},{"size":4023,"mtime":1627286845442,"results":"277","hashOfConfig":"261"},{"size":6541,"mtime":1627286843857,"results":"278","hashOfConfig":"261"},{"size":7041,"mtime":1627286845421,"results":"279","hashOfConfig":"261"},{"size":7563,"mtime":1627307829257,"results":"280","hashOfConfig":"261"},{"size":4875,"mtime":1627286845460,"results":"281","hashOfConfig":"261"},{"size":787,"mtime":1627286843668,"results":"282","hashOfConfig":"261"},{"size":12554,"mtime":1627286844263,"results":"283","hashOfConfig":"261"},{"size":7181,"mtime":1627286843967,"results":"284","hashOfConfig":"261"},{"size":6469,"mtime":1627286845643,"results":"285","hashOfConfig":"261"},{"size":12945,"mtime":1627286845577,"results":"286","hashOfConfig":"261"},{"size":10494,"mtime":1627286847734,"results":"287","hashOfConfig":"261"},{"size":12962,"mtime":1627286844401,"results":"288","hashOfConfig":"261"},{"size":11864,"mtime":1627286844376,"results":"289","hashOfConfig":"261"},{"size":7234,"mtime":1627286847977,"results":"290","hashOfConfig":"261"},{"size":745,"mtime":1627286845164,"results":"291","hashOfConfig":"261"},{"size":3130,"mtime":1627286844172,"results":"292","hashOfConfig":"261"},{"size":661,"mtime":1627286848064,"results":"293","hashOfConfig":"261"},{"size":26232,"mtime":1627286844056,"results":"294","hashOfConfig":"261"},{"size":2028,"mtime":1627286847937,"results":"295","hashOfConfig":"261"},{"size":8491,"mtime":1627307240829,"results":"296","hashOfConfig":"261"},{"size":3707,"mtime":1627286847897,"results":"297","hashOfConfig":"261"},{"size":574,"mtime":1627286848503,"results":"298","hashOfConfig":"261"},{"size":1126,"mtime":1627286844528,"results":"299","hashOfConfig":"261"},{"size":7742,"mtime":1627286844617,"results":"300","hashOfConfig":"261"},{"size":4474,"mtime":1627286845363,"results":"301","hashOfConfig":"261"},{"size":1104,"mtime":1627286848254,"results":"302","hashOfConfig":"261"},{"size":2546,"mtime":1627286848349,"results":"303","hashOfConfig":"261"},{"size":4071,"mtime":1627286848236,"results":"304","hashOfConfig":"261"},{"size":6341,"mtime":1627307928114,"results":"305","hashOfConfig":"261"},{"size":413,"mtime":1627286848329,"results":"306","hashOfConfig":"261"},{"size":385,"mtime":1627307822120,"results":"307","hashOfConfig":"261"},{"size":259,"mtime":1627286848484,"results":"308","hashOfConfig":"261"},{"size":258,"mtime":1627286848465,"results":"309","hashOfConfig":"261"},{"size":665,"mtime":1627286848390,"results":"310","hashOfConfig":"261"},{"size":481,"mtime":1627286848427,"results":"311","hashOfConfig":"261"},{"size":2793,"mtime":1627286848446,"results":"312","hashOfConfig":"261"},{"size":2150,"mtime":1627286848372,"results":"313","hashOfConfig":"261"},{"size":271,"mtime":1627308199674,"results":"314","hashOfConfig":"261"},{"size":1704,"mtime":1627286848565,"results":"315","hashOfConfig":"261"},{"size":2948,"mtime":1627286844147,"results":"316","hashOfConfig":"261"},{"size":2941,"mtime":1627286844552,"results":"317","hashOfConfig":"261"},{"size":1244,"mtime":1627286843369,"results":"318","hashOfConfig":"261"},{"size":2556,"mtime":1627286844688,"results":"319","hashOfConfig":"261"},{"size":392,"mtime":1627286845033,"results":"320","hashOfConfig":"261"},{"size":1840,"mtime":1627286845053,"results":"321","hashOfConfig":"261"},{"size":2528,"mtime":1627286844995,"results":"322","hashOfConfig":"261"},{"size":5078,"mtime":1627286845015,"results":"323","hashOfConfig":"261"},{"size":2667,"mtime":1627286845090,"results":"324","hashOfConfig":"261"},{"size":3167,"mtime":1627286845072,"results":"325","hashOfConfig":"261"},{"size":5946,"mtime":1627286845242,"results":"326","hashOfConfig":"261"},{"size":1685,"mtime":1627286845127,"results":"327","hashOfConfig":"261"},{"size":7396,"mtime":1627286845184,"results":"328","hashOfConfig":"261"},{"size":577,"mtime":1627286848608,"results":"329","hashOfConfig":"261"},{"size":1248,"mtime":1627286844815,"results":"330","hashOfConfig":"261"},{"size":465,"mtime":1627307812851,"results":"331","hashOfConfig":"261"},{"size":304,"mtime":1627286848643,"results":"332","hashOfConfig":"261"},{"size":5219,"mtime":1627286848022,"results":"333","hashOfConfig":"261"},{"size":52,"mtime":1627286848194,"results":"334","hashOfConfig":"261"},{"size":340,"mtime":1627286848160,"results":"335","hashOfConfig":"261"},{"size":264,"mtime":1627286848107,"results":"336","hashOfConfig":"261"},{"size":34,"mtime":1627286848212,"results":"337","hashOfConfig":"261"},{"size":113,"mtime":1627286848125,"results":"338","hashOfConfig":"261"},{"size":4963,"mtime":1627286843627,"results":"339","hashOfConfig":"261"},{"size":415,"mtime":1627286845109,"results":"340","hashOfConfig":"261"},{"size":97,"mtime":1627286848143,"results":"341","hashOfConfig":"261"},{"size":550,"mtime":1627286844934,"results":"342","hashOfConfig":"261"},{"size":1841,"mtime":1627286844911,"results":"343","hashOfConfig":"261"},{"size":3126,"mtime":1627286844485,"results":"344","hashOfConfig":"261"},{"size":3024,"mtime":1627286844753,"results":"345","hashOfConfig":"261"},{"size":6601,"mtime":1627286844197,"results":"346","hashOfConfig":"261"},{"size":2888,"mtime":1627286844216,"results":"347","hashOfConfig":"261"},{"size":9813,"mtime":1627286844326,"results":"348","hashOfConfig":"261"},{"size":3597,"mtime":1627286844303,"results":"349","hashOfConfig":"261"},{"size":2969,"mtime":1627286844282,"results":"350","hashOfConfig":"261"},{"size":1477,"mtime":1627286844892,"results":"351","hashOfConfig":"261"},{"size":5398,"mtime":1627286845285,"results":"352","hashOfConfig":"261"},{"size":8738,"mtime":1627286843903,"results":"353","hashOfConfig":"261"},{"size":6578,"mtime":1627286843922,"results":"354","hashOfConfig":"261"},{"size":1183,"mtime":1627286846043,"results":"355","hashOfConfig":"261"},{"size":5535,"mtime":1627286845987,"results":"356","hashOfConfig":"261"},{"size":2416,"mtime":1627286846006,"results":"357","hashOfConfig":"261"},{"size":4863,"mtime":1627286846024,"results":"358","hashOfConfig":"261"},{"size":1723,"mtime":1627286845916,"results":"359","hashOfConfig":"261"},{"size":3638,"mtime":1627286845524,"results":"360","hashOfConfig":"261"},{"size":921,"mtime":1627286845897,"results":"361","hashOfConfig":"261"},{"size":2608,"mtime":1627286845820,"results":"362","hashOfConfig":"261"},{"size":2107,"mtime":1627286845859,"results":"363","hashOfConfig":"261"},{"size":3713,"mtime":1627286845839,"results":"364","hashOfConfig":"261"},{"size":2576,"mtime":1627286845761,"results":"365","hashOfConfig":"261"},{"size":1957,"mtime":1627286845724,"results":"366","hashOfConfig":"261"},{"size":2552,"mtime":1627286845687,"results":"367","hashOfConfig":"261"},{"size":1980,"mtime":1627286845799,"results":"368","hashOfConfig":"261"},{"size":2161,"mtime":1627286845780,"results":"369","hashOfConfig":"261"},{"size":4119,"mtime":1627286847843,"results":"370","hashOfConfig":"261"},{"size":1013,"mtime":1627286844445,"results":"371","hashOfConfig":"261"},{"size":12191,"mtime":1627286843245,"results":"372","hashOfConfig":"261"},{"size":5544,"mtime":1627286843318,"results":"373","hashOfConfig":"261"},{"size":1632,"mtime":1627286843513,"results":"374","hashOfConfig":"261"},{"size":6578,"mtime":1627286843943,"results":"375","hashOfConfig":"261"},{"size":242,"mtime":1627286845705,"results":"376","hashOfConfig":"261"},{"size":687,"mtime":1627286845667,"results":"377","hashOfConfig":"261"},{"size":1240,"mtime":1627286845931,"results":"378","hashOfConfig":"261"},{"size":1592,"mtime":1627286843389,"results":"379","hashOfConfig":"261"},{"size":24625,"mtime":1627286843350,"results":"380","hashOfConfig":"261"},{"size":3286,"mtime":1627286843165,"results":"381","hashOfConfig":"261"},{"size":8260,"mtime":1627286843217,"results":"382","hashOfConfig":"261"},{"size":13115,"mtime":1627286843460,"results":"383","hashOfConfig":"261"},{"size":9068,"mtime":1627286844668,"results":"384","hashOfConfig":"261"},{"size":3222,"mtime":1627286843414,"results":"385","hashOfConfig":"261"},{"size":36,"mtime":1627286848177,"results":"386","hashOfConfig":"261"},{"size":234,"mtime":1627286848291,"results":"387","hashOfConfig":"261"},{"size":13081,"mtime":1627286843487,"results":"388","hashOfConfig":"261"},{"size":4606,"mtime":1627286843140,"results":"389","hashOfConfig":"261"},{"size":889,"mtime":1627286839211,"results":"390","hashOfConfig":"391"},{"size":364,"mtime":1627286839257,"results":"392","hashOfConfig":"391"},{"size":5064,"mtime":1627286839297,"results":"393","hashOfConfig":"391"},{"size":8169,"mtime":1627893918576,"results":"394","hashOfConfig":"391"},{"size":356,"mtime":1627286848086,"results":"395","hashOfConfig":"391"},{"size":85,"mtime":1627286848625,"results":"396","hashOfConfig":"391"},{"size":1659,"mtime":1627893918823,"results":"397","hashOfConfig":"391"},{"size":563,"mtime":1627286843645,"results":"398","hashOfConfig":"391"},{"size":574,"mtime":1627286848503,"results":"399","hashOfConfig":"391"},{"size":2090,"mtime":1627893918796,"results":"400","hashOfConfig":"391"},{"size":2342,"mtime":1627893918638,"results":"401","hashOfConfig":"391"},{"size":7034,"mtime":1627893918582,"results":"402","hashOfConfig":"391"},{"size":2436,"mtime":1627286845878,"results":"403","hashOfConfig":"391"},{"size":9506,"mtime":1627286843075,"results":"404","hashOfConfig":"391"},{"size":2261,"mtime":1627893918746,"results":"405","hashOfConfig":"391"},{"size":3007,"mtime":1627993961009,"results":"406","hashOfConfig":"391"},{"size":7837,"mtime":1627991465282,"results":"407","hashOfConfig":"391"},{"size":2998,"mtime":1627749466700,"results":"408","hashOfConfig":"391"},{"size":6755,"mtime":1627893918619,"results":"409","hashOfConfig":"391"},{"size":1558,"mtime":1627893918648,"results":"410","hashOfConfig":"391"},{"size":5081,"mtime":1627991465271,"results":"411","hashOfConfig":"391"},{"size":787,"mtime":1627286843668,"results":"412","hashOfConfig":"391"},{"size":12979,"mtime":1627977773727,"results":"413","hashOfConfig":"391"},{"size":661,"mtime":1627286848064,"results":"414","hashOfConfig":"391"},{"size":7224,"mtime":1627893918786,"results":"415","hashOfConfig":"391"},{"size":6662,"mtime":1627893918778,"results":"416","hashOfConfig":"391"},{"size":10831,"mtime":1627893918789,"results":"417","hashOfConfig":"391"},{"size":7484,"mtime":1627893918803,"results":"418","hashOfConfig":"391"},{"size":2308,"mtime":1627548213982,"results":"419","hashOfConfig":"391"},{"size":12156,"mtime":1627893918685,"results":"420","hashOfConfig":"391"},{"size":8747,"mtime":1627749466679,"results":"421","hashOfConfig":"391"},{"size":3130,"mtime":1627286844172,"results":"422","hashOfConfig":"391"},{"size":13386,"mtime":1627893918692,"results":"423","hashOfConfig":"391"},{"size":7450,"mtime":1627893918631,"results":"424","hashOfConfig":"391"},{"size":26990,"mtime":1627893918637,"results":"425","hashOfConfig":"391"},{"size":13979,"mtime":1627991465270,"results":"426","hashOfConfig":"391"},{"size":778,"mtime":1627893918751,"results":"427","hashOfConfig":"391"},{"size":3707,"mtime":1627286847897,"results":"428","hashOfConfig":"391"},{"size":258,"mtime":1627286848465,"results":"429","hashOfConfig":"391"},{"size":259,"mtime":1627286848484,"results":"430","hashOfConfig":"391"},{"size":385,"mtime":1627746662043,"results":"431","hashOfConfig":"391"},{"size":2793,"mtime":1627286848446,"results":"432","hashOfConfig":"391"},{"size":481,"mtime":1627286848427,"results":"433","hashOfConfig":"391"},{"size":665,"mtime":1627286848390,"results":"434","hashOfConfig":"391"},{"size":2150,"mtime":1627286848372,"results":"435","hashOfConfig":"391"},{"size":1104,"mtime":1627286848254,"results":"436","hashOfConfig":"391"},{"size":2546,"mtime":1627286848349,"results":"437","hashOfConfig":"391"},{"size":7751,"mtime":1627991465283,"results":"438","hashOfConfig":"391"},{"size":413,"mtime":1627286848329,"results":"439","hashOfConfig":"391"},{"size":4071,"mtime":1627286848236,"results":"440","hashOfConfig":"391"},{"size":402,"mtime":1627893918748,"results":"441","hashOfConfig":"391"},{"size":2595,"mtime":1627893918747,"results":"442","hashOfConfig":"391"},{"size":1925,"mtime":1627893918748,"results":"443","hashOfConfig":"391"},{"size":2748,"mtime":1627893918750,"results":"444","hashOfConfig":"391"},{"size":5220,"mtime":1627893918747,"results":"445","hashOfConfig":"391"},{"size":3273,"mtime":1627893918749,"results":"446","hashOfConfig":"391"},{"size":1685,"mtime":1627286845127,"results":"447","hashOfConfig":"391"},{"size":5946,"mtime":1627286845242,"results":"448","hashOfConfig":"391"},{"size":7636,"mtime":1627893918751,"results":"449","hashOfConfig":"391"},{"size":1704,"mtime":1627286848565,"results":"450","hashOfConfig":"391"},{"size":7445,"mtime":1627893918708,"results":"451","hashOfConfig":"391"},{"size":3874,"mtime":1627893918737,"results":"452","hashOfConfig":"391"},{"size":1126,"mtime":1627286844528,"results":"453","hashOfConfig":"391"},{"size":1905,"mtime":1627893918738,"results":"454","hashOfConfig":"391"},{"size":3601,"mtime":1627893918700,"results":"455","hashOfConfig":"391"},{"size":1290,"mtime":1627893918610,"results":"456","hashOfConfig":"391"},{"size":4963,"mtime":1627286843627,"results":"457","hashOfConfig":"391"},{"size":415,"mtime":1627286845109,"results":"458","hashOfConfig":"391"},{"size":2556,"mtime":1627286844688,"results":"459","hashOfConfig":"391"},{"size":1248,"mtime":1627286844815,"results":"460","hashOfConfig":"391"},{"size":271,"mtime":1627991717202,"results":"461","hashOfConfig":"391"},{"size":698,"mtime":1627893918817,"results":"462","hashOfConfig":"391"},{"size":571,"mtime":1627893918738,"results":"463","hashOfConfig":"391"},{"size":304,"mtime":1627286848643,"results":"464","hashOfConfig":"391"},{"size":465,"mtime":1627314088694,"results":"465","hashOfConfig":"391"},{"size":52,"mtime":1627286848194,"results":"466","hashOfConfig":"391"},{"size":264,"mtime":1627286848107,"results":"467","hashOfConfig":"391"},{"size":34,"mtime":1627286848212,"results":"468","hashOfConfig":"391"},{"size":340,"mtime":1627286848160,"results":"469","hashOfConfig":"391"},{"size":113,"mtime":1627286848125,"results":"470","hashOfConfig":"391"},{"size":5495,"mtime":1627749466697,"results":"471","hashOfConfig":"391"},{"size":6772,"mtime":1627893918655,"results":"472","hashOfConfig":"391"},{"size":2966,"mtime":1627893918656,"results":"473","hashOfConfig":"391"},{"size":10008,"mtime":1627977770791,"results":"474","hashOfConfig":"391"},{"size":3655,"mtime":1627893918670,"results":"475","hashOfConfig":"391"},{"size":3060,"mtime":1627893918665,"results":"476","hashOfConfig":"391"},{"size":1529,"mtime":1627893918737,"results":"477","hashOfConfig":"391"},{"size":9014,"mtime":1627893918620,"results":"478","hashOfConfig":"391"},{"size":6786,"mtime":1627893918620,"results":"479","hashOfConfig":"391"},{"size":97,"mtime":1627746669571,"results":"480","hashOfConfig":"391"},{"size":3754,"mtime":1627893918763,"results":"481","hashOfConfig":"391"},{"size":4725,"mtime":1627893918770,"results":"482","hashOfConfig":"391"},{"size":5715,"mtime":1627893918609,"results":"483","hashOfConfig":"391"},{"size":1183,"mtime":1627286846043,"results":"484","hashOfConfig":"391"},{"size":4863,"mtime":1627286846024,"results":"485","hashOfConfig":"391"},{"size":3141,"mtime":1627893918654,"results":"486","hashOfConfig":"391"},{"size":2416,"mtime":1627286846006,"results":"487","hashOfConfig":"391"},{"size":1723,"mtime":1627286845916,"results":"488","hashOfConfig":"391"},{"size":921,"mtime":1627286845897,"results":"489","hashOfConfig":"391"},{"size":5535,"mtime":1627286845987,"results":"490","hashOfConfig":"391"},{"size":2941,"mtime":1627286844552,"results":"491","hashOfConfig":"391"},{"size":2107,"mtime":1627286845859,"results":"492","hashOfConfig":"391"},{"size":3713,"mtime":1627286845839,"results":"493","hashOfConfig":"391"},{"size":2608,"mtime":1627286845820,"results":"494","hashOfConfig":"391"},{"size":2576,"mtime":1627286845761,"results":"495","hashOfConfig":"391"},{"size":4119,"mtime":1627286847843,"results":"496","hashOfConfig":"391"},{"size":1957,"mtime":1627286845724,"results":"497","hashOfConfig":"391"},{"size":2552,"mtime":1627286845687,"results":"498","hashOfConfig":"391"},{"size":1980,"mtime":1627286845799,"results":"499","hashOfConfig":"391"},{"size":2161,"mtime":1627286845780,"results":"500","hashOfConfig":"391"},{"size":1013,"mtime":1627286844445,"results":"501","hashOfConfig":"391"},{"size":12473,"mtime":1627893918602,"results":"502","hashOfConfig":"391"},{"size":1632,"mtime":1627725864747,"results":"503","hashOfConfig":"391"},{"size":6812,"mtime":1627893918621,"results":"504","hashOfConfig":"391"},{"size":242,"mtime":1627286845705,"results":"505","hashOfConfig":"391"},{"size":1644,"mtime":1627893918610,"results":"506","hashOfConfig":"391"},{"size":25561,"mtime":1627749466678,"results":"507","hashOfConfig":"391"},{"size":5219,"mtime":1627286848022,"results":"508","hashOfConfig":"391"},{"size":1240,"mtime":1627286845931,"results":"509","hashOfConfig":"391"},{"size":687,"mtime":1627286845667,"results":"510","hashOfConfig":"391"},{"size":8438,"mtime":1627893918595,"results":"511","hashOfConfig":"391"},{"size":3388,"mtime":1627893918583,"results":"512","hashOfConfig":"391"},{"size":36,"mtime":1627286848177,"results":"513","hashOfConfig":"391"},{"size":13440,"mtime":1627996094491,"results":"514","hashOfConfig":"391"},{"size":9481,"mtime":1627893918715,"results":"515","hashOfConfig":"391"},{"size":13587,"mtime":1627991465269,"results":"516","hashOfConfig":"391"},{"size":3222,"mtime":1627286843414,"results":"517","hashOfConfig":"391"},{"size":234,"mtime":1627286848291,"results":"518","hashOfConfig":"391"},{"size":4750,"mtime":1627893918577,"results":"519","hashOfConfig":"391"},{"size":1038,"mtime":1627749466691,"results":"520","hashOfConfig":"391"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},"1rkk9uq",{"filePath":"524","messages":"525","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"523"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"523"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"523"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"523"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"523"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"523"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"523"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"523"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"523"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"523"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"523"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"523"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"523"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"523"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"523"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"523"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"523"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"523"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"523"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"523"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"523"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"523"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"523"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"523"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"523"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"523"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"523"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"523"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"523"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"523"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"523"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"523"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"523"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"523"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"523"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"523"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"523"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"523"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"523"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"523"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"523"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"523"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"523"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"523"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"523"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"523"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"523"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"523"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"523"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"523"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"523"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"523"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"523"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"523"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"523"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"523"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"523"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"523"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"523"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"523"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"523"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"523"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"523"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"523"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"523"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"523"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"523"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"523"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"523"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"523"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"523"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"523"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"523"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"523"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"523"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"523"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"523"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"523"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"523"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"523"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830","usedDeprecatedRules":"523"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"523"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"523"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"523"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"523"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"523"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"523"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"523"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"523"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"523"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"523"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"523"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"523"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"873"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},"9ei88o",{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"876"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"876"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"876"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"876"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"876"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"876"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"876"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"876"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"913","messages":"914","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"876"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"876"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"876"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"876"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931","usedDeprecatedRules":"876"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"876"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"876"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"876"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942","usedDeprecatedRules":"876"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"876"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"876"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"876"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954","usedDeprecatedRules":"876"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"876"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962","usedDeprecatedRules":"876"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"876"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"876"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"876"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"876"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"876"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"876"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"876"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"876"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"876"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"876"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"876"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"876"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1001","usedDeprecatedRules":"876"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1004","usedDeprecatedRules":"876"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1007","usedDeprecatedRules":"876"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010","usedDeprecatedRules":"876"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1013","usedDeprecatedRules":"876"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1016","usedDeprecatedRules":"876"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"876"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"876"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"876"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"876"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031","usedDeprecatedRules":"876"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1036","usedDeprecatedRules":"876"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039","usedDeprecatedRules":"876"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1042","usedDeprecatedRules":"876"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"876"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"876"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"876"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"876"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075","usedDeprecatedRules":"876"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"876"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081","usedDeprecatedRules":"876"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1084","usedDeprecatedRules":"876"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1087","usedDeprecatedRules":"876"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090","usedDeprecatedRules":"876"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093","usedDeprecatedRules":"876"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1096","usedDeprecatedRules":"876"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"876"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"876"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1107","usedDeprecatedRules":"876"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"876"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"876"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"876"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117","usedDeprecatedRules":"876"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"876"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"876"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"876"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"876"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"876"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"876"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"876"},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"876"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"876"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"876"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1150","usedDeprecatedRules":"876"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830","usedDeprecatedRules":"876"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1155","usedDeprecatedRules":"876"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160","usedDeprecatedRules":"876"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1163","usedDeprecatedRules":"876"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"876"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"876"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1172","usedDeprecatedRules":"876"},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1175","usedDeprecatedRules":"876"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"876"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"876"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1185","usedDeprecatedRules":"876"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"876"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"876"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"876"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1195","usedDeprecatedRules":"876"},"C:\\Projects\\personalp\\MobillyInvite-master\\src\\index.js",[],["1196","1197"],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\App.js",["1198","1199","1200","1201","1202","1203","1204","1205","1206"],"import \"./App.css\";\nimport \"./Colors.css\";\nimport \"./Responsive.css\";\nimport \"./Scrollbar.css\";\nimport React, { useEffect }from \"react\";\nimport ReactGa from \"react-ga\"\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport Redirector from \"./Utils/Routing\";\nimport history from \"./Utils/History\";\nimport { useSelector } from \"react-redux\";\nimport MobileAuth from \"./Components/Auth/MobileAuth\";\nimport Landingpage from \"./Components/LandingPage/Landingpage\";\nimport Home from \"./Components/Home/Home\";\nimport AddEvent from \"./Components/AddEvent/AddEvent\";\nimport Rsvp from \"./Components/Invitations/RSVP/Rsvp\";\nimport AddEventSucess from \"./Components/AddEvent/AddEventSucess\";\nimport Notification from \"./Components/Notifications/Notification\";\nimport EventDone from \"./Components/EventDone/EventDone\";\nimport AlertNotif from \"./Components/Settings/AlertNotif/AlertNotif\";\nimport EnterCode from \"./Components/Entercode/Entercode\";\nimport Chat from \"./Components/Chat/Chat\";\nimport Feed from \"./Components/Feed/Feed\";\nimport Comment from \"./Components/Comments/Coments\";\nimport Blankpages from \"./Components/BlankPages/404\";\nimport ShowSchedule from \"./Components/Invitations/ShowSchedule\";\nimport InvitaionviewToggler from \"./Components/Invitations/InvitaionviewToggler\";\nimport InvitaionMain from \"./Components/Invitations/InvitationMain/InvitaionMain\";\nimport Locationofline from \"./Components/Location Offline/LocationOffline\";\nimport Jitsi from \"./Components/jitsi/Jitsivc\";\nimport GuestList from \"./Components/Guest/Guest\";\nimport Hoxinvitation from \"./Components/Invitations/hoxinvitation\";\nimport SidebarMore from \"./Components/Sidebar/SidebarMore\";\nimport AdminSidebar from \"./Components/Sidebar/AdminSidebar\";\nimport EventAdmin from \"./Components/Admin/EventAdmin\";\nimport ManageGuest from \"./Components/Guest/ManageGuest\";\nimport EditEvent from \"./Components/EditEvent/EditEvent\";\nimport HomePage from \"./Components/HomePage/HomePage\";\nimport FD from \"./Components/FD/Fd\";\nimport ShowStory from './Components/Invitations/ShowStory';\nimport ShowAlbum from './Components/Invitations/ShowAlbum'\nfunction App() {\n  useEffect(() => {\n    ReactGa.initialize('UA-201872924-1')\n    ReactGa.pageview(window.location.pathname + window.location.search)\n  }, []\n  )\n  const Auth = useSelector((state) => state.Auth);\n  if (Auth.isLoggedIn === false) {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact\n              path=\"/MyInvitations/:maincode\"\n              component={Hoxinvitation}\n            />\n            <Route\n              exact\n              path=\"/MyInvitations/:maincode/:Name/:Code\"\n              component={Hoxinvitation}\n            />\n\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/*\" component={Redirector} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  } else {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact\n              path=\"/MyInvitations/:maincode\"\n              component={Hoxinvitation}\n            />\n            <Route\n              exact\n              path=\"/MyInvitations/:maincode/:Name/:Code\"\n              component={Hoxinvitation}\n            />\n            <Route exact path=\"/MyEvents/eventpage/chat/:id\" component={Chat} />\n            <Route\n              exact\n              path=\"/MyEvents/GuestList/:id/:invno\"\n              component={GuestList}\n            />\n            <Route\n              exact\n              path=\"/MyEvents/Manage-GuestList/:id/:invno\"\n              component={ManageGuest}\n            />\n            <Route\n              exact\n              path=\"/MyEvents/Manage-Event/:id/:invno\"\n              component={EditEvent}\n            />\n            <Route\n              exact\n              path=\"/MyEvents/Admin/:id/:eid\"\n              component={EventAdmin}\n            />\n            <Route exact path=\"/MyEvents/Admin/:id\" component={AdminSidebar} />\n            <Route exact path=\"/MyEvents/More/:id\" component={SidebarMore} />\n\n            <Route\n              exact\n              path=\"/MyEvents/Location/:id/:event\"\n              component={Locationofline}\n            />\n            <Route\n              exact\n              path=\"/MyEvents/schedule/:id/:event\"\n              component={ShowSchedule}\n            />\n            <Route exact path=\"/MyEvents/rsvp/:id\" component={Rsvp} />\n            <Route\n              exact\n              path=\"/MyEvents/eventpage/:id\"\n              component={InvitaionviewToggler}\n            />\n            <Route exact path=\"/MyEvents/eventpage/feed/:id\" component={Feed} />\n            <Route exact path=\"/MyEvents/comments/:id/:_id\" component={Comment} />\n            <Route\n              exact\n              path=\"/MyEvents/albums/:id\"\n              component={ShowAlbum}\n            />\n            <Route\n              exact\n              path=\"/MyEvents/story/:id\"\n              component={ShowStory}\n            />\n            <Route\n              exact\n              path=\"/inv/albums/:id\"\n              component={ShowAlbum}\n            />\n            <Route\n              exact\n              path=\"/inv/story/:id\"\n              component={ShowStory}\n            />\n            <Route\n              exact\n              path=\"/inv/Manage-Event/:id/:invno\"\n              component={EditEvent}\n            />\n            <Route\n              exact\n              path=\"/inv/Admin/:id/:eid\"\n              component={EventAdmin}\n            />\n            {/* <Route\n              exact\n              path=\"/inv/Admin/:id/\"\n              component={AdminSidebar}\n            /> */}\n            <Route exact path=\"/inv/More/:id\" component={SidebarMore} />\n            <Route exact path=\"/inv/comments/:id/:_id\" component={Comment} />\n            <Route exact path=\"/inv/eventpage/feed/:id\" component={Feed} />\n            <Route exact path=\"/inv/videoconf/:id/\" component={Jitsi} />\n            <Route exact path=\"/inv/eventpage/chat/:id\" component={Chat} />\n            <Route\n              exact\n              path=\"/inv/Location/:id/:event\"\n              component={Locationofline}\n            />\n            <Route\n              exact\n              path=\"/inv/schedule/:id/:event\"\n              component={ShowSchedule}\n            />\n            <Route\n              exact\n              path=\"/inv/GuestList/:id/:invno\"\n              component={GuestList}\n            />\n\n            {/* <Route exact path=\"/inv/info/:id\" component={Invitationlist} /> */}\n            <Route exact path=\"/inv/rsvp/:id\" component={Rsvp} />\n            <Route\n              exact\n              path=\"/inv/eventpage/:id\"\n              component={InvitaionviewToggler}\n            />\n            <Route exact path=\"/MyEvents\" component={Home} />\n            <Route exact path=\"/MyInvitations\" component={Home} />\n            <Route\n              exact\n              path=\"/MyEvents/event-create-success/:id\"\n              component={AddEventSucess}\n            />\n            <Route exact path=\"/MyEvents/add-event\" component={AddEvent} />\n            <Route exact path=\"/add-event\" component={AddEvent} />\n            <Route exact path=\"/user-profile\" component={AddEvent} />\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/*\" component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\serviceWorkerRegistration.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\reportWebVitals.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\store.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\History.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\Routing.js",["1207","1208","1209","1210","1211"],"import React, { useEffect } from \"react\";\nimport history from \"./History\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport { loginuser } from \"../Redux/DispatchFuncitons/AuthFunctions\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  GetEvents,\n  GetInvitations,\n} from \"../Redux/DispatchFuncitons/Eventfunctions\";\nimport { getposts } from \"../Redux/DispatchFuncitons/postfunctions\";\nimport { getNotification } from \"../Redux/DispatchFuncitons/NotificationFunctions\";\nimport { getChats } from \"../Redux/DispatchFuncitons/Chatgroupfunctions\";\nexport default function Redirector() {\n  const Auth = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    debugger\n\n    let ischeck = await reactLocalStorage.get(\"isLoggedIn\");\n    let Phone = await reactLocalStorage.get(\"Phone\");\n    let Token = reactLocalStorage.get(\"Token\", true);\n    if (ischeck === \"false\" || ischeck === undefined || ischeck === \"\") {\n      console.log(\"logout\");\n      history.push(\"/\");\n    } else {\n      console.log(\"loginuser\");\n      await dispatch(loginuser(Phone));\n    }\n  }, [])\n  useEffect(async () => {\n    if (Auth.isLoggedIn === true) {\n      debugger\n      await dispatch(GetEvents());\n      await dispatch(GetInvitations());\n      await dispatch(getNotification());\n      await dispatch(getposts());\n      await dispatch(getChats());\n      //  await history.goBack();\n    }\n  }, [Auth.isLoggedIn])\n  return <div><CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} /></div>;\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Home\\Home.js",["1212","1213","1214","1215","1216"],"import React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport Header from \"../Helpers/Header/Header\";\nimport FootMenu from \"../Helpers/FootMenu/FootMenu\";\nimport { Grid } from \"@material-ui/core\";\nimport Invitation from \"../Invitations/Invitation\";\nimport EventList from \"../Events/Eventlist\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  GetEvents,\n  GetInvitations,\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport { getposts } from \"../../Redux/DispatchFuncitons/postfunctions\";\nimport { getNotification } from \"../../Redux/DispatchFuncitons/NotificationFunctions\";\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\nimport { addme } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nexport default function Home(props) {\n  const dispatch = useDispatch();\n  const [Menu, setMenu] = useState(0);\n  const CodeEvent = useSelector(state => state.CodeEvent)\n  const EventState = useSelector((state) => state.Eventdata);\n  useEffect(async () => {\n    if (CodeEvent.Maincode !== \"\") {\n      await dispatch(addme(CodeEvent.Code, CodeEvent.Maincode));\n    }\n\n    dispatch(GetEvents());\n    dispatch(GetInvitations());\n    dispatch(getNotification());\n    dispatch(getChats());\n\n    if (\n      props.location.pathname === \"/inv\" ||\n      props.location.pathname === \"/\" ||\n      props.location.pathname === \"/home\"\n    ) {\n      await setMenu(0);\n    } else {\n      setMenu(1);\n    }\n\n\n  }, []);\n  useEffect(async () => {\n    const interval = setInterval(() => {\n      dispatch(GetEvents());\n      dispatch(GetInvitations());\n      dispatch(getNotification());\n      dispatch(getChats());\n    }, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <><div className=\"desktop-only w-100\" >\n      <Header url={props.location.pathname} className=\"desktop-only\" />\n    </div>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={12} md={12}>\n          {Menu === 0 ? (\n            <Invitation data={EventState.myInvitations} className=\"w-100\" />\n          ) : (\n            <EventList data={EventState.myEvents} className=\"w-100\" />\n          )}\n        </Grid>\n      </Grid>\n      <FootMenu menu={Menu} setMenu={setMenu} />\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Notifications\\Notification.js",["1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227"],"import { Button, Modal } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport \"./Notifications.css\"\nimport { useSelector } from \"react-redux\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport NoNotfcations from '../../Assets/NoNotifications.svg'\nexport default function Notification(props) {\n  const Notifications = useSelector((state) => state.Notifications);\n  const Auth = useSelector((state) => state.Auth);\n\n  useEffect(() => {\n    console.log(props)\n    Notifications.map(notes => {\n      console.log(notes.MainCode)\n    })\n  }, [])\n\n  return (\n    <>\n      <div className=\"Notificationportion-strt p-2 \">\n        <div className=\"Notifications-header d-flex flex-row\" style={{ marginTop: -15 }}>\n          <h4\n            className=\"font-weight-bold pr-5 pt-2\"\n            style={{ marginRight: \"0%\" }}\n          >\n            Notifications\n          </h4>\n        </div>\n      </div>\n      {Notifications.length > 0 ? (\n        <div className=\"ofh \" style={{ marginTop: \"13px\", height: '40vh' }}>\n          {Notifications.map((note, index) =>\n            note.by === Auth.Phone ? <></> : (props.MainCode && note.MainCode === props.MainCode ?\n              <div className=\"media  mb-3\">\n                <Avatar className=\"mr-3\" src={note.img} alt=\"img\" style={{ top: '4px' }} />\n                <div className=\"media-body\">\n                  <h5 className=\"mt-0 font-weight-bold small\">\n                    {note.Notification}\n                  </h5>\n                  <p className=\"text-secondary time_notification\">{note.date.split('T')[0] + ' ' + ' ' + note.date.split('T')[1].substring(0, 5)}</p>\n                </div>\n              </div> : <></>)\n          )}\n        </div>) :\n        <>\n          <img src={NoNotfcations} className=\"w-100\" />\n          <br />\n          <h4 className=\"tac\">No Notification</h4>\n        </>\n      }\n\n\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Auth\\MobileAuth.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddEventSucess.js",["1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239"],"import React, { useState, useEffect } from \"react\";\nimport \"./AddEvent.css\";\nimport Header from \"../Helpers/Header/Header\";\nimport history from \"../../Utils/History\";\nimport { Grid } from \"@material-ui/core\";\nimport check from \"../../Assets/check-circle.1.png\";\nimport Share from \"../../Assets/Shareon.svg\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport axios from \"axios\";\nimport { url } from \"../../Utils/Config\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useSelector } from \"react-redux\";\nimport { WhatsappShareButton } from 'react-share'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\n\nexport default function AddEventSucess(props) {\n  const Auth = useSelector(state => state.Auth)\n  const [maincode, setmaincode] = useState(props.match.params.id);\n  const [allevents, setallevents] = useState([]);\n  const [mode, setmode] = useState();\n  const [sharelink, setcodesharelink] = useState(\"\");\n  const [Watsapp, setWatsapp] = useState(\"\");\n\n  useEffect(() => {\n    debugger\n    axios\n      .post(url + \"event/viewinvitation\", {\n        MainCode: props.match.params.id,\n      })\n      .then(async (res) => {\n\n        await setallevents(res.data.Events)\n        if (res.data.Events[0].EntryWay === 'Code') {\n\n\n          setcodesharelink(\" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\n          await setWatsapp(\n            \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + res.data.Events[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\n            \" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\n        } else {\n          setcodesharelink(\" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\n          await setWatsapp(\n            \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + res.data.Events[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\n            \" https://mobillyinvite.com/MyInvitations/\" +\n            maincode)\n        }\n\n        await setmode(res.data.Events[0].EntryWay)\n      });\n  }, [])\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = async (data) => {\n    await setcodesharelink(\" https://mobily-invited-server.herokuapp.com/MyInvitations/\" + maincode + \"/\" + data)\n    await setWatsapp(\n      \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + allevents[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\n      \" https://mobily-invited-server.herokuapp.com/MyInvitations/\" + maincode + \"/\" + allevents[0].Name + \"/\" + allevents[0].code)\n    setAnchorEl(null);\n\n  };\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <Header />\n      </Grid>\n      <Grid item xs={false} sm={3} md={3} />\n      <Grid item xs={12} sm={6} md={6}>\n        <Grid container spacing={0} className=\"p-10px\">\n          <Grid item xs={12}>\n            <center>\n              <img src={check} className=\"p-10px \" />\n            </center>\n          </Grid>\n          <Grid item xs={12}>\n            <h2 className=\"tac theme-font\">\n              Your Invitation has been sucessfully created.\n            </h2>\n          </Grid>\n\n          <Grid item xs={12}>\n            <p className=\"w-100 tac\"> Click on the Link to copy</p>\n          </Grid>\n\n          {allevents && allevents.length > 0 && allevents[0].EntryWay === \"Code\" ? <>\n\n\n            <Grid\n              item\n              xs={12}\n              className=\"tac m-b-25px clipboard\"\n\n            >\n              <Grid container spacing={0}>\n                <Grid item xs={10} md={11} className=\"link\" onClick={(e) => { handleClick(e) }}>\n                  {sharelink.substr(0, 40)}\n\n                </Grid>\n                <Grid item xs={2} md={1} className=\"p-t-10\">\n                  <FileCopyIcon className=\"v-t\" onClick={() => {\n                    navigator.clipboard.writeText(sharelink);\n                  }} />\n                </Grid>\n              </Grid>\n            </Grid>\n\n          </> : <> <Grid\n            item\n            xs={12}\n            className=\"tac m-b-25px clipboard\"\n            onClick={() => {\n              navigator.clipboard.writeText(\n                \"https://mobily-invited-server.herokuapp.com/MyInvitations/\" +\n                maincode\n              );\n            }}\n          >\n            <Grid container spacing={0}>\n              <Grid item xs={10} md={11} className=\"link\">\n                {\"https://mobily-invited-server.herokuapp.com/xxxxx\"}\n              </Grid>\n              <Grid item xs={2} md={1} className=\"p-t-10\">\n                <FileCopyIcon className=\"v-t\" />\n              </Grid>\n            </Grid>\n          </Grid></>}\n          <Grid item xs={12} className=\"w-100 tac\">\n            Share on\n          </Grid>\n          <Grid item xs={12} className=\"tac m-b-25px\">\n            <center>\n\n              <WhatsappShareButton\n                url={\" \"}\n                title={Watsapp}\n\n                separator=\" \"\n                className=\"Demo__some-network__share-button\"\n              >\n                <img src={Share} className=\"\" />\n              </WhatsappShareButton>\n            </center>\n          </Grid>\n          <Grid item xs={12} className=\"tac\">\n            Note: Only those who have invite can access.\n          </Grid>\n          <Grid item xs={12} className=\"down-float\">\n            <button\n              className=\"btn save-event mt-10px\"\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            >\n              Done\n            </button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n\n      >\n        {allevents && allevents.map(eve => (\n          <MenuItem onClick={() => handleClose(eve.Name + \"/\" + eve.code)}>{\"Event Name: \" + eve.Name + \", EventCode :\" + eve.code}</MenuItem>\n        ))}\n\n      </Menu>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddEvent.js",["1240","1241","1242","1243","1244","1245","1246","1247"],"import React, { useState, useEffect } from \"react\";\nimport \"./AddEvent.css\";\nimport Header from \"../Helpers/Header/Header\";\nimport { Grid } from \"@material-ui/core\";\nimport HorizontalLinearStepper from \"./Stepper/Stepper\";\nimport CreateEvent from \"./CreateEvent/CreateEvent\";\nimport AddParticipants from \"../AddEvent/AddParticipants/NewAddParticipants\";\nimport Toggler from \"../Helpers/EventInvitoggler/Toggler\";\nimport BackNavBar from \"../Helpers/BackNavbar/BackNavBar\";\nimport Back from \"../../Assets/Back.svg\";\nimport history from \"../../Utils/History\";\nimport { useSelector } from \"react-redux\";\nimport Plan from \"../Plan/Plan\";\nexport default function AddEvent(props) {\n  const [Type, setType] = useState(\"Wedding\");\n  const [activeStep, setActiveStep] = useState(0);\n  const CreateEventForm = useSelector((state) => state.CreateEventForm);\n  const [Events, setEvents] = useState([]);\n\n  let events = {\n    Name: \"\",\n    Participants: [],\n    file: \"\",\n    filetype: \"\",\n    Date: \"\",\n    Time: \"\",\n    VenueType: \"Online\",\n    Location: \"\",\n    Link: \"\",\n    Description: \"\",\n    GuestInvite: false,\n    Host: \"\",\n    Co_Host: [],\n    Schedule: [],\n  };\n  const [SelectedEvent, SelectEvent] = useState(0);\n  const [Story, setStory] = useState([]);\n  const [albumdata, setalbumdata] = useState([]);\n  const handleChange = (event) => {\n    setType(event.target.value);\n  };\n\n  const addAnEvent = async () => {\n    if (Events.length < 4) {\n      setEvents([...Events, events]);\n    }\n  };\n  const removeAnEvent = async () => {\n    let events = [...Events];\n    if (events.length > 1) {\n      events = events.slice(0, -1);\n      await setEvents(events);\n    }\n\n    if (SelectedEvent > events.length - 1) {\n      console.log(SelectedEvent - 1);\n      SelectEvent(SelectedEvent - 1);\n      console.log(SelectedEvent, events.length - 1);\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const checkIfEventEmpty = async (eventscpy, Type, seterroring, index) => {\n    if (Type === \"\") {\n      seterroring(true);\n      return { status: false, index: 0, component: \"Type\" };\n    }\n    console.log(Events);\n    let Eventcpy = [...Events];\n    let result = true;\n    let incompleteeventnumber = null;\n    //check for event first\n    Eventcpy = { ...Events[index] };\n    if (Eventcpy.Name === \"\") {\n      console.log({ status: false, index: index, component: \"Name\" });\n      return { status: false, index: index, component: \"Name\" };\n    } else if (Eventcpy.Date === \"\") {\n      console.log({ status: false, index: index, component: \"Date\" });\n      return { status: false, index: index, component: \"Date\" };\n    } else if (Eventcpy.Time === \"\") {\n      console.log({ status: false, index: index, component: \"Time\" });\n      return { status: false, index: index, component: \"Time\" };\n    } else if (Eventcpy.Description === \"\") {\n      console.log({ status: false, index: index, component: \"Description\" });\n      return { status: false, index: index, component: \"Description\" };\n    } else if (Eventcpy.VenueType === \"\") {\n      console.log({ status: false, index: index, component: \"VenueType\" });\n      return { status: false, index: index, component: \"VenueType\" };\n    } else if (\n      Eventcpy.VenueType === \"Both\" &&\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\n    ) {\n      console.log({\n        status: false,\n        index: index,\n        component: \"Both Location Link\",\n      });\n      return { status: false, index: index, component: \"Location\" };\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\n      console.log({ status: false, index: index, component: \"Link\" });\n      return { status: false, index: index, component: \"Location\" };\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\n      console.log({ status: false, index: index, component: \"Link\" });\n      return { status: false, index: index, component: \"Location\" };\n    } else if (Eventcpy.file === \"\") {\n      console.log({ status: false, index: index, component: \"file\" });\n      return { status: false, index: index, component: \"file\" };\n    } else if (Eventcpy.filetype === \"\") {\n      console.log({ status: false, index: index, component: \"filetype\" });\n      return { status: false, index: index, component: \"filetype\" };\n    }\n\n    for (let i = 0; i < Events.length; i++) {\n      incompleteeventnumber = i;\n      Eventcpy = { ...Events[i] };\n      if (Eventcpy.Name === \"\") {\n        console.log({ status: false, index: i, component: \"Name\" });\n        return { status: false, index: i, component: \"Name\" };\n      } else if (Eventcpy.Date === \"\") {\n        console.log({ status: false, index: i, component: \"Date\" });\n        return { status: false, index: i, component: \"Date\" };\n      } else if (Eventcpy.Time === \"\") {\n        console.log({ status: false, index: i, component: \"Time\" });\n        return { status: false, index: i, component: \"Time\" };\n      } else if (Eventcpy.Description === \"\") {\n        console.log({ status: false, index: i, component: \"Description\" });\n        return { status: false, index: i, component: \"Description\" };\n      } else if (Eventcpy.VenueType === \"\") {\n        console.log({ status: false, index: i, component: \"VenueType\" });\n        return { status: false, index: i, component: \"VenueType\" };\n      } else if (\n        Eventcpy.VenueType === \"Both\" &&\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\n      ) {\n        console.log({\n          status: false,\n          index: i,\n          component: \"Both Location Link\",\n        });\n        return { status: false, index: i, component: \"Location\" };\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\n        console.log({ status: false, index: i, component: \"Link\" });\n        return { status: false, index: i, component: \"Location\" };\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\n        console.log({ status: false, index: i, component: \"Link\" });\n        return { status: false, index: i, component: \"Location\" };\n      } else if (Eventcpy.file === \"\") {\n        console.log({ status: false, index: i, component: \"file\" });\n        return { status: false, index: i, component: \"file\" };\n      } else if (Eventcpy.filetype === \"\") {\n        console.log({ status: false, index: i, component: \"filetype\" });\n        return { status: false, index: i, component: \"filetype\" };\n      }\n    }\n\n    console.log({ status: true, index: null, component: \"\" });\n    return { status: true, index: null, component: \"\" };\n  };\n\n  const addfinalDetails = () => {\n    let EventsCopy = [...Events];\n    EventsCopy.map((eve, index) => {\n      if (index === 0) {\n        eve.MainCode = \"ME\" + 313213132313;\n        eve.eventCode = \"ME\" + 313213132313;\n        eve.Link = \"dsd/as3213\";\n        //mainevent will give acces to all\n      } else {\n        eve.MainCode = \"ME\" + 313213132313;\n        eve.eventCode = \"E\" + \"randomcode\";\n        eve.Link = \"dsd/as3213/sdse\";\n        //single event access link\n      }\n    });\n    setEvents(EventsCopy);\n  };\n\n  useEffect(async () => {\n    addAnEvent();\n  }, []);\n\n  function StepRender(step) {\n    switch (step.activeStep) {\n      case 0:\n        return (\n          <CreateEvent\n            setType={setType}\n            Type={Type}\n            Events={Events}\n            setEvents={setEvents}\n            addAnEvent={addAnEvent}\n            checkIfEventEmpty={checkIfEventEmpty}\n            handleChange={handleChange}\n            removeAnEvent={removeAnEvent}\n            SelectEvent={SelectEvent}\n            SelectedEvent={SelectedEvent}\n            handleNext={handleNext}\n            handleBack={handleBack}\n            addfinalDetails={addfinalDetails}\n            albumdata={albumdata}\n            setalbumdata={setalbumdata}\n            Story={Story}\n            setStory={setStory}\n            template={events}\n            className=\"p-15px\"\n          />\n        );\n      case 1000:\n        return <Plan handleNext={handleNext} handleBack={handleBack} />;\n      case 1:\n        return (\n          <AddParticipants\n            handleNext={handleNext}\n            handleBack={handleBack}\n            Events={Events}\n            setEvents={setEvents}\n            SelectEvent={SelectEvent}\n            SelectedEvent={SelectedEvent}\n            addAnEvent={addAnEvent}\n            removeAnEvent={removeAnEvent}\n            addfinalDetails={addfinalDetails}\n            Type={Type}\n            Story={Story}\n          />\n        );\n      case 3:\n        return <div></div>;\n      default:\n        return <div></div>;\n    }\n  }\n\n  return (\n    <>\n      <Header url={props.location.pathname} ismobile=\"desktop-only\" />\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\n      <BackNavBar\n        logo={<img src={Back} />}\n        Name={\"Create Event\"}\n        functionality={() => {\n          history.push(\"/MyEvents\");\n        }}\n      />\n      <Grid container spacing={0} className=\" pt-0\">\n        <Grid item xs={false} sm={2} md={2} />\n\n        <Grid item xs={12} sm={8} md={8} className=\" pt-0\">\n          <HorizontalLinearStepper\n            handleNext={handleNext}\n            handleBack={handleBack}\n            activeStep={activeStep}\n          />\n          <StepRender activeStep={activeStep} />\n        </Grid>\n\n        <Grid item xs={false} sm={2} md={2} />\n      </Grid>\n    </>\n  );\n}\n\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\EventDone\\EventDone.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Entercode\\Entercode.js",["1248","1249","1250","1251","1252","1253","1254","1255"],"import React, { useState } from \"react\";\nimport check from \"../../Assets/check-circle.1.png\";\nimport history from \"../../Utils/History\";\nimport eventimage from \"../../Assets/eventimage.png\";\nimport { useDispatch } from \"react-redux\";\nimport { addme } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nexport default function Entercode(props) {\n  const [code, setcode] = useState(\"\");\n  const [iserror, setiserror] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <img\n        src={eventimage}\n        className=\"rounded mx-auto d-block\"\n        style={{ height: 100, width: 100 }}\n      />\n      {/* <h4\n        style={{\n          float: \"left\",\n          marginTop: 60,\n          fontWeight: \"bold\",\n          fontStretch: \"normal\",\n          fontStyle: \"normal\",\n          fontSize: 16,\n          marginLeft: 5,\n        }}\n      >\n        Enter Code\n      </h4>\n      <input\n        className=\"form-control form-control-sm\"\n        type=\"text\"\n        placeholder=\"Code\"\n        style={{\n          borderRadius: 30,\n          margin: \"10px 0.2px 4.8px 0\",\n          height: \"40px\",\n        }}\n        value={code}\n        onChange={(e) => {\n          setcode(e.target.value);\n        }}\n      />\n      {iserror === true ? (\n        <span className=\"error\">please enter valid code</span>\n      ) : (\n        <></>\n      )}\n\n      <button\n        type=\"button\"\n        className=\"btn btn-primary mt-3 p-2\"\n        style={{ width: \"100%\", borderRadius: 50, fontWeight: \"bold\" }}\n        onClick={async () => {\n          if (code !== \"\") {\n            setiserror(false);\n            await dispatch(addme(code));\n\n            props.hide(false);\n          } else {\n            setiserror(true);\n          }\n        }}\n      >\n        Use Code\n      </button>  <h6 style={{ textAlign: \"center\", marginTop: \"10px\" }}>OR</h6> */}\n\n      <br />\n\n      <button\n        type=\"button\"\n        className=\"btn btn-primary mt-1 p-2 createevent\"\n        style={{\n          width: \"100%\",\n          borderRadius: 50,\n          fontWeight: \"bold\",\n          marginBottom: \"20px\",\n        }}\n        onClick={() => {\n          history.push(\"/MyEvents/add-event\");\n        }}\n      >\n        Create Event\n      </button>\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Landingpage.js",["1256","1257"],"import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"react-modal-video/css/modal-video.min.css\";\nimport \"./css/Landingpage.css\";\nimport \"./css/animate.min.css\";\nimport \"./css/apton-icons.css\";\nimport \"./css/style.css\";\nimport \"./css/responsive.css\";\nimport \"./css/fontawesome-all.min.css\";\nimport LoginSignup from \"../Auth/LoginSignup\";\nimport Banner from \"./Banner\";\nimport Clients from \"./Clients\";\nimport Contact from \"./Contact\";\nimport CTAOne from \"./CTAOne\";\nimport CTATwo from \"./CTATwo\";\nimport FAQ from \"./FAQ\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Layout from \"./Layout\";\nimport MobileMenu from \"./MobileMenu\";\nimport Pricing from \"./Pricing\";\nimport Services from \"./Services\";\nimport Testimonials from \"./Testimonials\";\nimport VideoOne from \"./VideoOne\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport history from \"../../Utils/History\";\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\nexport default function Landingpage() {\n  const [showPopup, toggleShowPopup] = useState(false);\n  const Auth = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let ischeck = reactLocalStorage.get(\"isLoggedIn\");\n    let Phone = reactLocalStorage.get(\"Phone\");\n    // let Token = reactLocalStorage.get(\"Token\", true);\n    if (ischeck === false || ischeck === undefined || ischeck === \"\") {\n      console.log(\"push\");\n      history.push(\"/\");\n    } else {\n      console.log(\"loginuser\");\n      dispatch(loginuser(Phone));\n    }\n  }, []);\n  return (\n    <div>\n      <Popup\n        toggleShowPopup={toggleShowPopup}\n        showPopup={showPopup}\n        component={LoginSignup}\n      />\n      <Layout pageTitle=\"Mobilly Invite\">\n        <Header\n          btnClass=\"main-nav__btn\"\n          extraClassName=\"site-header-one__fixed-top\"\n          toggleShowPopup={toggleShowPopup}\n        />\n        <MobileMenu />\n        <Banner toggleShowPopup={toggleShowPopup} />\n        <Services />\n        <CTAOne />\n        <CTATwo />\n        <Pricing />\n        <Testimonials />\n        <Clients />\n        <VideoOne />\n        <br />\n        <br />\n        <FAQ />\n        <Contact />\n        <Footer />\n      </Layout>\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\InvitaionviewToggler.js",["1258","1259","1260","1261"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InvitaionRSVP from \"./InvitaionRSVP/InvitaionRSVP\";\nimport InvitaionMain from \"./InvitationMain/InvitaionMain\";\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport default function InvitaionviewToggler(props) {\n  const dispatch = useDispatch();\n\n  const [Eventdata, setEventdata] = useState(true)\n  const [base, setbase] = useState(\"\")\n\n  const [dataloading, setdataloading] = useState(true)\n  let MyEvents = useSelector(\n    (state) => state.Eventdata.myEvents\n  );\n  let myInvitations = useSelector(\n    (state) => state.Eventdata.myInvitations\n  );\n  useEffect(async () => {\n    debugger\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\n      await dispatch(GetEvents());\n      await dispatch(GetInvitations());\n\n    } else {\n\n      if (\n        props.location.pathname ===\n        \"/MyEvents/eventpage/\" + props.match.params.id && MyEvents.length > 0\n      ) {\n        await setEventdata(MyEvents[props.match.params.id]);\n        await setbase(\"MyEvents\");\n      } else if (\n        props.location.pathname ===\n        \"/inv/eventpage/\" + props.match.params.id && myInvitations.length > 0\n      ) {\n        await setEventdata(myInvitations[props.match.params.id]);\n        await setbase(\"inv\");\n      }\n      setdataloading(false)\n    }\n  }, [MyEvents, myInvitations])\n\n\n  const [evno, setevno] = useState(0);\n  const Auth = useSelector((state) => state.Auth);\n  const [hasallrsvps, sethasallrsvps] = useState(false);\n  const [rsvpnumber, setrsvpnumber] = useState(0);\n  useEffect(() => {\n    if (Eventdata && evno < Eventdata.length) {\n      let EVcount = 0;\n      for (let i = 0; i < Eventdata.length; i++) {\n        if (Eventdata[i].RSVPList.length > 0) {\n          let RSVPList = Eventdata[i].RSVPList;\n\n          for (let j = 0; j < RSVPList.length; j++) {\n            if (RSVPList[j].By === Auth.Phone) {\n              EVcount++;\n            } else {\n              setrsvpnumber(i);\n            }\n          }\n        }\n      }\n      if (EVcount === Eventdata.length) {\n        sethasallrsvps(true);\n      } else {\n      }\n    }\n    console.log(Eventdata);\n    console.log(props);\n  }, [Eventdata]);\n  return (\n    <>{dataloading === false ? <div>\n      {hasallrsvps === false ? (\n        <InvitaionRSVP\n          Eventdata={Eventdata}\n          setevno={setevno}\n          id={props.match.params.id}\n          sethasallrsvps={sethasallrsvps}\n          toggle={true}\n          base={base}\n        />\n      ) : (\n        <InvitaionMain\n          Eventdata={Eventdata}\n          id={props.match.params.id}\n          base={base}\n        />\n      )}\n    </div> : <CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} />}\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\ShowSchedule.js",["1262","1263","1264","1265","1266"],"import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport \"./Invitations.css\"\nimport Header from \"../Helpers/Header/Header\";\nimport BlankSchedule from \"../../Assets/BlankSchedule.svg\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport history from \"../../Utils/History\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nexport default function ShowSchedule(props) {\n  const dispatch = useDispatch();\n  const [Eventdata, setEventdata] = useState([])\n  const [base, setbase] = useState(\"\")\n\n  let MyEvents = useSelector(\n    (state) => state.Eventdata.myEvents\n  );\n\n  let myInvitations = useSelector(\n    (state) => state.Eventdata.myInvitations\n  );\n  useEffect(async () => {\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\n      await dispatch(GetEvents());\n      await dispatch(GetInvitations());\n    } else {\n      if (\n        props.location.pathname ===\n        \"/MyEvents/schedule/\" +\n        props.match.params.id +\n        \"/\" +\n        props.match.params.event\n      ) {\n        await setEventdata(MyEvents[props.match.params.id][props.match.params.event].Schedule);\n        await setbase(\"MyEvents\");\n      } else {\n        await setEventdata(myInvitations[props.match.params.id][props.match.params.event].Schedule);\n        await setbase(\"inv\");\n      }\n    }\n  }, [])\n\n  return (\n    <>\n      <div className=\"desktop-only w-100\" >\n        <Header className=\"desktop-only\" />\n      </div>\n\n      <Grid container spacing={0}>\n        <Grid item xs={false} md={2}></Grid>\n        <Grid item xs={12} md={10}>\n          <Row\n            style={{\n              marginTop: 20,\n              marginRight: 3,\n              marginLeft: 3,\n              marginBottom: 10,\n            }}\n          >\n            <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\n              <IoArrowBackCircleOutline\n                size={40}\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n              Schedules\n            </p>\n          </Row>\n        </Grid>\n\n        <Grid item xs={12} style={{ padding: '18px' }}>\n          {Eventdata.length > 0 ? (\n            <>\n              {Eventdata.map((eve, index) => (<>\n                <Grid item xs={false} md={2} />\n                <Grid item xs={12} md={8} className=\"card-shadow m-b-10 p-15px m-5px\" style={{ borderRadius: '2px' }}>\n                  <Grid container spacing={0}>\n                    <>\n                      <Grid\n                        container\n                        spacing={0}\n                        className=\"padding-left-7 p-10-p \"\n                      >\n                        <Grid item xs={12}>\n                          <div className=\"ScheduleName l-black-t m-0\">\n                            {eve.Name}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                          {eve.Venue}\n                        </Grid>\n                        <Grid item xs={12} className=\"dtime l-blue-t\" style={{ fontWeight: 'bold' }}>\n                          {eve.datetime.split(\"T\")[0] +\n                            \" \" +\n                            eve.datetime.split(\"T\")[1]}\n                        </Grid>\n                        <Grid item xs={12} className=\"mt-10px\" style={{ fontSize: 13, color: 'grey', height: '32px', overflow: 'scroll', background: '#e2ffff' }}>\n                          {eve.description}\n                        </Grid>\n                      </Grid>\n                    </>\n                  </Grid>\n                </Grid>\n                <Grid item xs={false} md={2} />\n              </>\n              ))}\n            </>\n          ) : (\n            <img src={BlankSchedule} className=\"blank-img\" />\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Chat\\Chat.js",["1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Grid,\n  Avatar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Paper,\n  InputBase,\n  Divider,\n  IconButton,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport { url } from \"../../Utils/Config\";\nimport CList from \"./List\";\nimport Chatbox from \"./Chatbox\";\nimport \"./Chat.css\";\nimport io from \"socket.io-client\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updatechat } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\nimport NavMobile from '../Helpers/NavMobile/NavMobile'\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nexport default function Chat(props) {\n  const dispatch = useDispatch();\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\n  let socketurl = url.split(\"api/\");\n  // console.log(socketurl);\n  let socket = io(socketurl[0], { transports: [\"websocket\"] });\n  const Auth = useSelector((state) => state.Auth);\n  const [show, setshow] = useState(0);\n  const [windowwidth, setwindowwidth] = useState(1280);\n  const [fullscreen, setfullscreen] = useState(true);\n  const [SelectedGroup, setSelectedGroup] = useState(\"\");\n  const [inroom, setinroom] = useState(false);\n  let Eventdata = [];\n  const [base, setbase] = useState(\"\")\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\n  const [MainCode, setMainCode] = useState(\"\");\n  const [allparticipants, setallparticipants] = useState([]);\n  const [chats, setchat] = useState([]);\n  const [text, settext] = useState(\"\");\n  const [IndvName, setIndvName] = useState(\"\");\n  // console.log(MyEvents);\n  const [IsSubmit, setIsSubmit] = useState(false);\n  function handleResize() {\n    setwindowwidth(window.innerWidth);\n    // console.log(window.innerWidth);\n    if (window.innerWidth > 959) {\n      setfullscreen(true);\n      // console.log(true);\n    } else {\n      setfullscreen(false);\n      // console.log(false);\n    }\n  }\n  useEffect(async () => {\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\n      await dispatch(GetEvents());\n      await dispatch(GetInvitations());\n    } else {\n      if (\n        props.location.pathname ===\n        \"/MyEvents/eventpage/chat/\" + props.match.params.id && MyEvents.length > 0\n      ) {\n        Eventdata = MyEvents[props.match.params.id];\n        await setbase(\"MyEvents\");\n      } else if (\n        props.location.pathname ===\n        \"/inv/eventpage/chat/\" + props.match.params.id && myInvitations.length > 0\n      ) {\n        Eventdata = myInvitations[props.match.params.id];\n        await setbase(\"inv\");\n      }\n      let participants = [];\n      Eventdata.map((singleevent) => {\n        singleevent.Participants.map((participant) => {\n          participants.push(participant);\n          setMainCode(singleevent.MainCode);\n        });\n      });\n      // console.log(participants);\n      participants = [...new Set(participants)];\n      setallparticipants(participants);\n    }\n  }, [myInvitations, MyEvents]);\n  useEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    let selectedgrpcpr = SelectedGroup;\n    let chat = [...chats];\n    socket.on(\n      \"init\",\n      () => {\n        socket.emit(\"connectit\", { Phone: Auth.Phone });\n        if (inroom === false) {\n          // console.log(\"join rooms\");\n          socket.emit(\"rooms\", { Phone: Auth.Phone });\n          setinroom(true);\n        }\n      },\n      [\"abc\"]\n    );\n\n    socket.on(\"joined\", (rooms) => { });\n    socket.once(\"msg_saved\", (data) => {\n      dispatch(updatechat(data, data.room));\n    });\n  });\n\n  function submit() {\n    socket.emit(\"message\", {\n      sender: Auth.Phone,\n      content: text,\n      type: \"text\",\n      room: SelectedGroup.room,\n      _id: SelectedGroup._id,\n    });\n    setIsSubmit(true);\n  }\n  function sendImage(data) {\n    socket.emit(\"message\", data);\n    setIsSubmit(true);\n  }\n  const updateName = () => {\n    if (SelectedGroup.Name && SelectedGroup.Type === \"INDV\") {\n      if (\n        SelectedGroup.Admin === Auth.Phone ||\n        \"+91\" + SelectedGroup.Admin === Auth.Phone\n      ) {\n        if (typeof SelectedGroup.Name === \"string\") {\n          if (SelectedGroup.Name.startsWith(\"+\")) {\n            setIndvName(SelectedGroup.Name);\n          } else {\n            setIndvName(\"+91\" + SelectedGroup.Name);\n          }\n        } else {\n          setIndvName(\"+91\" + SelectedGroup.Name);\n        }\n      } else {\n        if (typeof SelectedGroup.Admin === \"string\") {\n          if (SelectedGroup.Admin.startsWith(\"+\")) {\n            setIndvName(SelectedGroup.Admin);\n          } else {\n            setIndvName(\"+91\" + SelectedGroup.Admin);\n          }\n        } else {\n          setIndvName(\"+91\" + SelectedGroup.Admin);\n        }\n      }\n    }\n  };\n  return (\n    <Grid container spacing={0}>\n      <Grid\n        item\n        xs={12}\n        md={3}\n        className={\n          fullscreen === true ? \"show h93\" : show === 1 ? \"hide\" : \"show h100\"\n        }\n      >\n        <CList\n          MyEvents={MyEvents}\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\n          fullscreen={fullscreen}\n          allparticipants={allparticipants}\n          MainCode={MainCode}\n          setSelectedGroup={setSelectedGroup}\n          setshow={setshow}\n          chats={chats}\n          setchat={setchat}\n          updateName={updateName}\n          setIsSubmit={setIsSubmit}\n          IsSubmit={IsSubmit}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={9}\n        className={\n          fullscreen === true ? \"show h93\" : show === 0 ? \"hide\" : \"show h100\"\n        }\n      >\n        <Chatbox\n          MyEvents={MyEvents}\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\n          fullscreen={fullscreen}\n          allparticipants={allparticipants}\n          MainCode={MainCode}\n          setSelectedGroup={setSelectedGroup}\n          setshow={setshow}\n          chats={chats}\n          setchat={setchat}\n          updateName={updateName}\n          submit={submit}\n          text={text}\n          settext={settext}\n          SelectedGroup={SelectedGroup}\n          sendImage={sendImage}\n          setIsSubmit={setIsSubmit}\n          IsSubmit={IsSubmit}\n        />\n      </Grid>\n      <NavMobile base={base} id={props.match.params.id} />\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\ShowAlbum.js",["1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./AlbumStyle.css\";\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\nimport { IoChevronBackCircleOutline } from \"react-icons/io5\";\nimport { IconButton } from \"@material-ui/core\";\nimport ImageGallery from 'react-image-gallery';\nimport Header from \"../Helpers/Header/Header\"\nimport MobileNav from \"../Helpers/NavMobile/NavMobile.js\";\nimport DesktopNav from \"../Helpers/DesktopNav/DesktopNav.js\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport BlankSchedule from \"../../Assets/NOAlbums.svg\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport { useDropzone } from \"react-dropzone\";\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\nimport { uploadfiletoalbum } from '../../Redux/DispatchFuncitons/Eventfunctions'\nimport SaveIcon from '@material-ui/icons/Save';\nimport Popup from \"../Helpers/Popups/Popup\";\nimport Addtoalbum from './Addtoalbum'\nimport Swiper from \"react-id-swiper\";\n\nexport default function ShowAlbum(props) {\n    const [isUploaded, setisUploaded] = useState(false)\n    const [Eventdata, setEventdata] = useState([])\n    const [Name, setName] = useState(\"\")\n    const [IsAdmin, setIsAdmin] = useState(false)\n    const [MainCode, setMainCode] = useState(\"\")\n    const [base, setbase] = useState(\"\")\n    const [images, setimages] = useState([])\n    const [Prevfiles, setPrevfiles] = useState([])\n    const dispatch = useDispatch();\n    const [Type, setType] = useState(\"\")\n    const [show, setshow] = useState(false);\n    let MyEvents = useSelector(\n        (state) => state.Eventdata.myEvents\n    );\n    const Auth = useSelector(state => state.Auth)\n    let myInvitations = useSelector(\n        (state) => state.Eventdata.myInvitations\n    );\n\n    const params = {\n        spaceBetween: 30,\n        centeredSlides: true,\n        autoplay: {\n            delay: 2500,\n            disableOnInteraction: false\n        },\n        pagination: {\n            el: '.swiper-pagination',\n            clickable: true\n        },\n        navigation: {\n            nextEl: '.swiper-button-next',\n            prevEl: '.swiper-button-prev'\n        }\n    }\n\n\n    useEffect(async () => {\n        debugger\n        if (MyEvents.length === 0 && myInvitations.length === 0) {\n            await dispatch(GetEvents());\n            await dispatch(GetInvitations());\n        } else {\n            if (\n                props.location.pathname ===\n                \"/MyEvents/albums/\" +\n                props.match.params.id\n                && MyEvents.length > 0\n            ) {\n                console.log(MyEvents[0])\n                await setEventdata(MyEvents[props.match.params.id][0].InvId.Album);\n                await setbase(\"MyEvents\");\n                await setType(MyEvents[props.match.params.id][0].InvId.Type)\n                await setName(MyEvents[props.match.params.id][0].Name)\n                await setMainCode(MyEvents[props.match.params.id][0].MainCode)\n                await setIsAdmin(MyEvents[props.match.params.id][0].Host.includes(Auth.Phone))\n            } else if (\n                props.location.pathname ===\n                \"/inv/albums/\" +\n                props.match.params.id\n                && myInvitations.length > 0\n            ) {\n                console.log(myInvitations[0])\n                await setEventdata(myInvitations[props.match.params.id][0].InvId.Album);\n                await setbase(\"inv\");\n                await setType(myInvitations[props.match.params.id][0].InvId.Type)\n                await setName(myInvitations[props.match.params.id][0].Name)\n                await setMainCode(myInvitations[props.match.params.id][0].MainCode)\n                await setIsAdmin(myInvitations[props.match.params.id][0].Host.includes(Auth.Phone))\n            }\n            console.log(Eventdata)\n        }\n    }, [MyEvents, myInvitations])\n    useEffect(() => {\n        let imagescpy = []\n        let Prevfilescpy = []\n\n        if (Eventdata.length > 0) {\n            Eventdata.map(eve => {\n                Prevfilescpy.push({ file: eve.file, type: eve.type })\n                imagescpy.push({\n                    file: eve.file,\n                    type: eve.type\n                })\n            })\n\n        }\n        setimages(imagescpy)\n\n        setPrevfiles(Prevfilescpy)\n        console.log(images)\n    }, [Eventdata])\n    const save = async () => {\n        let Album = []\n        let uniqueurl =\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\" + \"Album/\" + props.match.params.id + Eventdata[0].Name;\n        images.map(async (fildeata, index) => {\n            if (index > Prevfiles.length) {\n                let newurl = await uploadString(fildeata.file, uniqueurl + \".\" + fildeata.type)\n                Album.push({ file: newurl, type: fildeata.type })\n            } else {\n                Album.push({ file: fildeata.file, type: fildeata.type })\n            }\n        })\n        console.log(Album)\n        await dispatch(uploadfiletoalbum(Album, Eventdata[0].MainCode))\n        setisUploaded(false)\n    }\n    return (\n        <div>\n            <div className=\"desktop-only w-100\" >\n                <Header className=\"desktop-only\" />\n            </div>\n            <Addtoalbum\n                toggleShowPopup={setshow}\n                showPopup={show}\n                images={Prevfiles}\n                _id={props.match.params.id}\n                eventname={Name}\n                Type={Type}\n                MainCode={MainCode}\n            />\n            <DesktopNav id={props.match.params.id} base={base} />\n            <MobileNav id={props.match.params.id} base={base} />\n            <Container style={{ margin: 0, padding: 0, marginTop: 0 }} fluid>\n                <Row className=\"p-0 m-0\">\n                    <Col xs={10}>  <h3 className=\"p-5px\">    Albums</h3></Col>\n                    <Col xs={2}>\n                        {IsAdmin === true ?\n                            <IconButton onClick={() => { setshow(true) }} style={{ float: 'right' }}>\n                                <AddPhotoAlternateIcon color=\"primary\" style={{ fontSize: 25 }} />\n                            </IconButton>\n                            : <></>}\n\n\n\n\n                    </Col>\n                </Row>\n                <br />\n                {images.length === 0 ? <> <img src={BlankSchedule} className=\"blank-img\" />\n                    <br />\n                    <h3 className=\"tac\">Album not Added yet </h3></>\n                    :\n                    <Swiper {...params}>\n                        {images.map(img => (\n                            <div>\n                                <Image alt=\"img\" src={img.file} fluid className=\"image-gallery-image\" />\n                            </div>\n                        ))}\n\n                    </Swiper>}\n\n            </Container>\n        </div >\n    )\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\hoxinvitation.js",["1302","1303","1304","1305","1306","1307","1308","1309","1310"],"import React, { useState, useEffect } from \"react\";\nimport { url } from \"../../Utils/Config\";\nimport \"./InvitationMain/InvitaionMain.css\"\nimport { Container, Row, Col, Carousel, Form } from \"react-bootstrap\";\nimport Header from \"../Helpers/Header/Header\"\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\nimport DesktopNav from \"../Helpers/DesktopNav/DesktopNav\";\nimport axios from \"axios\";\nimport Image from \"react-bootstrap/Image\";\nimport SendIcon from \"../../Assets/ic-send.png\";\nimport { AiOutlineLike, AiOutlineSync } from \"react-icons/ai\"\nimport { GoCalendar, GoLocation } from \"react-icons/go\"\nimport CommentIcon from \"../../Assets/comment-dot.png\";\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\nimport Location from \"../../Assets/Location.png\";\nimport history from \"../../Utils/History\";\nimport LIKE from \"../../Assets/LIKE.png\";\nimport RSVP from \"../../Assets/RSVP.png\";\nimport LoginSignup from \"../Auth/LoginSignup\";\nimport { FaUserFriends } from \"react-icons/fa\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport './Invitations.css'\nimport './InvitationMain/InvitaionMain.css'\nimport { addEvent } from '../../Redux/DispatchFuncitons/CodeFunctions'\nexport default function Hoxinvitation(props) {\n  const [Invitations, setInvitations] = useState([]);\n  const [show, setshow] = useState(false);\n  const Auth = useSelector((state) => state.Auth);\n  const myInvitations = useSelector((state) => state.Eventdata.myInvitations);\n\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    debugger\n    if (Auth.isLoggedIn === false) {\n      if (props.match.params.maincode !== undefined && props.match.params.Code !== \"\") {\n        await dispatch(addEvent(props.match.params.maincode, props.match.params.Code))\n        // await dispatch(GetInvitations());\n        // history.push(\"/\");\n      }\n    }\n    else {\n      await dispatch(GetInvitations());\n      myInvitations.map((invite, index) => {\n        console.log(invite);\n        if (invite[0].MainCode === props.match.params.maincode) {\n          history.push(\"/inv/eventpage/\" + index);\n        }\n      });\n\n    }\n\n  }, [Auth.isLoggedIn]);\n  useEffect(async () => {\n    if (props.match.params.Name === undefined) {\n      console.log(props.match.params.maincode);\n      await axios\n        .post(url + \"event/viewinvite\", {\n          MainCode: props.match.params.maincode,\n        })\n        .then((res) => {\n          console.log(res);\n          if (res.data.Status === \"success\") {\n            setInvitations(res.data.Events);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          return { err: \"error 404\" };\n        });\n    } else {\n      await axios\n        .post(url + \"event/viewEvent\", {\n          maincode: props.match.params.maincode,\n          Code: props.match.params.Code\n        })\n        .then(async (res) => {\n          debugger;\n          if (res.data.Status === \"success\") {\n            await dispatch(addEvent(res.data.Events[0].code, res.data.Events[0].maincode))\n            setInvitations(res.data.Events);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          return { err: \"error 404\" };\n        });\n    }\n\n  }, []);\n\n  return (\n    <>\n      <div className=\"w-100 desktop-only \">\n        <Header />\n      </div>\n      <DesktopNav />\n      <Popup\n        component={LoginSignup}\n        toggleShowPopup={setshow}\n        showPopup={show}\n      />\n      <Carousel controls={false} interval={99999999999999} className=\"mb-10\">\n        {Invitations &&\n          Invitations.map((eve, index) => (\n            <Carousel.Item\n              onClick={() => {\n                setshow(true);\n              }}\n            >\n              <Container className=\"upper-menu\">\n                <Row\n                  style={{\n                    marginTop: 20,\n                    marginRight: 3,\n                    marginLeft: 3,\n                    marginBottom: 10,\n                  }}\n                >\n                  <p style={{ fontWeight: \"bold\", fontSize: 20, color: \"white\" }}>\n                    <IoArrowBackCircleOutline\n                      style={{ backgroundColor: '#313131', borderRadius: '50px' }}\n                      size={40} />\n                  </p>\n                  <Col></Col>\n                  <FaUserFriends\n                    size={30}\n                    style={{\n                      backgroundColor: \"white\",\n                      color: \"black\",\n                      borderRadius: 20,\n                      padding: \"0.1em 0.4em\",\n                    }} />\n                </Row>\n              </Container>\n              <Container className=\"container-event\">\n                <Image src={eve.file} className=\"fullimagemain\" />\n                <Container className=\"box-event\" fluid style={{ marginTop: \"5vh\" }}>\n\n                  <UserDataUrl\n                    Phone={eve.Host[0]}\n                    showIcon={true}\n                    className=\"m-10px\"\n                  />\n                  <div style={{ position: \"relative\", float: \"right\" }}>\n                    <Image src={SendIcon} style={{\n                      height: \"20px\",\n                      width: \"20px\",\n                      marginRight: \"1.5vh\",\n                    }} />\n\n                    <Image src={CommentIcon} className=\"go-chat\" />\n                  </div>\n                  <h4 className=\"avatar-name\">\n                    <UserDataUrl Phone={eve.Host[0]} showName={true} />\n                  </h4>\n                  <Form.Control\n                    size=\"sm\"\n                    placeholder=\"Write Comment\"\n                    className=\"form-control\"\n                    style={{\n                      border: 0,\n                      width: \"auto\",\n                      height: \"20px\",\n                      marginLeft: \"60px\",\n                    }}\n                  />\n\n                  <br />\n                  <Row>\n                    <Col>\n                      <center>\n                        <span className=\"Like-count\">0</span>\n\n                        <AiOutlineLike size=\"25\" className=\"info-icon\"\n                          style={{ color: \"#4e4e4e\" }} />\n                      </center>\n                    </Col>\n                    <Col>\n                      <center>\n\n                        <AiOutlineSync size=\"25\"\n                          style={{ color: \"#4e4e4e\" }} />\n                      </center>\n                    </Col>\n                    <Col>\n                      <center>\n\n                        <GoCalendar\n                          style={{ color: \"#4e4e4e\" }}\n                          size=\"25\" />\n                      </center>\n                    </Col>\n                    <Col>\n                      <center>\n\n                        <GoLocation\n                          style={{ color: \"#4e4e4e\" }}\n                          size=\"25\" />\n                      </center>\n                    </Col>\n                  </Row>\n                  <br />\n\n                  <h3 className=\"event-date\">{eve.Date + \" \" + eve.Time}</h3>\n                  <p className=\"event-des\">{eve.Description}</p>\n                  <a href=\"#\" className=\"invitationmain_link\">Read More</a>\n                </Container>\n              </Container>\n            </Carousel.Item>\n          ))}\n      </Carousel>\n      <NavMobile />\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\ShowStory.js",["1311","1312","1313","1314","1315","1316","1317","1318","1319","1320"],"import React, { useState, useEffect } from \"react\";\nimport \"./OurStory.css\";\nimport Header from \"../Helpers/Header/Header\";\nimport MobileNav from \"../Helpers/NavMobile/NavMobile\";\nimport { Container, Card, Button, Row, Col, Figure } from \"react-bootstrap\";\nimport { FcCalendar, FcLike } from \"react-icons/fc\";\nimport BlankSchedule from \"../../Assets/NoStory.svg\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    GetEvents,\n    GetInvitations,\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nexport default function ShowStory(props) {\n    const [Eventdata, setEventdata] = useState([]);\n    const [base, setbase] = useState(\"\");\n    const [images, setimages] = useState([]);\n    const dispatch = useDispatch();\n    let MyEvents = useSelector((state) => state.Eventdata.myEvents);\n\n    let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\n    useEffect(async () => {\n        debugger;\n        if (MyEvents.length === 0 && myInvitations.length === 0) {\n            await dispatch(GetEvents());\n            await dispatch(GetInvitations());\n        } else {\n            if (\n                props.location.pathname ===\n                \"/MyEvents/story/\" + props.match.params.id &&\n                MyEvents.length > 0\n            ) {\n                console.log(MyEvents[props.match.params.id][0]);\n                await setEventdata(MyEvents[props.match.params.id][0].InvId.Story);\n                await setbase(\"MyEvents\");\n            } else if (\n                props.location.pathname === \"/inv/story/\" + props.match.params.id &&\n                myInvitations.length > 0\n            ) {\n                console.log(myInvitations[0]);\n                await setEventdata(myInvitations[props.match.params.id][0].InvId.Story);\n                await setbase(\"inv\");\n            }\n        }\n    }, [MyEvents, myInvitations]);\n    return (\n        <div>\n            <div className=\"desktop-only w-100\">\n                <Header className=\"desktop-only\" />\n            </div>\n            <MobileNav id={props.match.params.id} base={base} />\n            <Container fluid className=\"p-0\">\n                {Eventdata.length > 0 ? (\n                    Eventdata.map((stry, index) => (\n                        <div className=\"row\">\n                            <div className=\"col-12 mt-3\" style={{ padding: '30px', paddingTop: 'inherit', paddingBottom: 'inherit' }}>\n                                <div\n                                    className=\"card\"\n                                    style={{ boxShadow: \"1px 1px 7px 1px #b9b9b9\" }}\n                                >\n                                    <div className=\"card-horizontal\">\n                                        <div className=\"card-body\">\n                                            <Row>\n                                                <Col xs={4} style={{ margin: \"auto\" }}>\n                                                    <img src={stry.file} className=\"w-100 card_image\" />\n                                                </Col>\n                                                <Col xs={8}>\n                                                    <h4 className=\"card-title ourstory_heading\">\n                                                        {stry.Name}\n                                                    </h4>\n                                                    <p\n                                                        className=\"card-text ourstory_text\"\n                                                        style={{ fontSize: 13, color: 'grey', height: '32px', overflow: 'scroll', background: '#e2ffff' }}\n                                                    >\n                                                        {stry.description}\n                                                    </p>\n                                                    {/* <p className=\"card-text\"><FcLike size=\"30\" /> 20</p> */}\n                                                    <p className=\"card-text ourstory_date\" style={{ color: '#007bff' }}>\n                                                        <FcCalendar size=\"20\" /> {stry.datetime}\n                                                    </p>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                ) : (\n                    <>\n                        {\" \"}\n                        <img src={BlankSchedule} className=\"blank-img\" />\n                        <br />\n                        <h3 className=\"tac\">Story not Added yet </h3>\n                    </>\n                )}\n            </Container>\n        </div>\n    );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\BlankPages\\404.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\Feed.js",["1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport \"../Feed/Feed.css\";\nimport Header from \"../Helpers/Header/Header.js\";\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport zoomicon from \"../../Assets/zoomicon.png\";\nimport UserData from \"../Helpers/UserData/UserData\";\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\nimport { IoCameraOutline } from \"react-icons/io5\";\nimport { FaTag } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\nimport { useDropzone } from \"react-dropzone\";\nimport { InputTags } from \"react-bootstrap-tagsinput\";\nimport \"react-bootstrap-tagsinput/dist/index.css\";\nimport { FcLike } from \"react-icons/fc\";\nimport { FaRegCommentDots } from \"react-icons/fa\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { FcLikePlaceholder } from \"react-icons/fc\";\nimport history from \"../../Utils/History\";\nimport FeedComments from \"./FeedComments\";\nimport { url } from \"../../Utils/Config\";\nimport { Modal } from \"@material-ui/core\";\nimport Media from \"./Media\";\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddTags from \"./AddTags\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport {\n  GetEvents,\n  GetInvitations,\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Postrender from './Posts'\nimport AddPost from \"./AddPost\";\nexport default function Feed(props) {\n  const Auth = useSelector((state) => state.Auth);\n  let Posts = useSelector((state) => state.Posts[props.match.params.id]);\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\n  const dispatch = useDispatch();\n  const [isSubmit, setisSubmit] = useState(false);\n  const [isloaded, toggleisloaded] = useState(false);\n  const [showPopup, toggleShowPopup] = useState(false);\n  const [ShowTagQuery, setShowTagQuery] = useState(false);\n  const [showcommment, setshowcommment] = useState(false);\n  const [currentPosts, setcurrentPosts] = useState([]);\n  const [currentfilteredPosts, setcurrentfilteredPosts] = useState([]);\n  const [participant, setparticipant] = useState([]);\n  const [Eventdata, setEventdata] = useState([]);\n  const [admins, setadmins] = useState([]);\n  const [Tags, setTags] = useState([]);\n\n  const [base, setbase] = useState(\"\");\n  const [filter, setfilter] = useState(\"All\");\n  const [caption, setcaption] = useState(\"\");\n  const [imageurl, setimageurl] = useState(\"\");\n  const [type, settype] = useState(\"\");\n  const [popuptype, setpopuptype] = useState(\"\");\n  const [showcommmentforpost, setshowcommmentforpost] = useState(null);\n\n  useEffect(async () => {\n    debugger\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\n      await dispatch(GetEvents());\n      await dispatch(GetInvitations());\n    } else {\n      await setfilter('All')\n      if (\n        props.location.pathname ===\n        \"/MyEvents/eventpage/feed/\" + props.match.params.id &&\n        MyEvents.length > 0\n      ) {\n        await setEventdata(MyEvents[props.match.params.id]);\n        await setbase(\"MyEvents\");\n        await setadmins(MyEvents[props.match.params.id][0].Host);\n        await guestlist([...MyEvents[props.match.params.id][0].Participants, ...MyEvents[props.match.params.id][0].Host]);\n      } else if (\n        props.location.pathname ===\n        \"/inv/eventpage/feed/\" + props.match.params.id &&\n        myInvitations.length > 0\n      ) {\n        await setEventdata(myInvitations[props.match.params.id]);\n        await setbase(\"inv\");\n        await setadmins(myInvitations[props.match.params.id][0].Host);\n        await guestlist([...myInvitations[props.match.params.id][0].Participants, ...myInvitations[props.match.params.id][0].Host]);\n      }\n      await getposts()\n    }\n  }, [MyEvents, myInvitations]);\n\n  const submit = async () => {\n    await setisSubmit(true);\n    var d = new Date();\n    let unique = d.getTime();\n    let url = Eventdata[0].MainCode + unique + \".\" + type;\n    console.log(url);\n    let newurl = \"\";\n    if (imageurl !== \"\") {\n      newurl = await uploadString(imageurl, url);\n    }\n    await dispatch(\n      addpost(Eventdata[0].MainCode, Auth.Phone, newurl, type, Tags, caption)\n    );\n    await setcaption(\"\");\n    await setimageurl(\"\");\n    await settype(\"\");\n    await setTags([]);\n    await setisSubmit(false);\n    await getposts();\n  };\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    if (acceptedFiles[0].size > 5259265) {\n      alert(\"Max file size 5mb\");\n      return false;\n    }\n    let url = \"\";\n    let ftype = acceptedFiles[0].type.split(\"/\");\n    settype(ftype[0]);\n    var reader = await new FileReader();\n    reader.onload = async function () {\n      url = reader.result;\n      setimageurl(url);\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n    await reader.readAsDataURL(acceptedFiles[0]);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\n  });\n\n  const getposts = async () => {\n    if (Eventdata !== undefined && Eventdata.length > 0 && Eventdata[0].MainCode !== \"\") {\n      axios\n        .post(url + \"post/getposts\", { maincode: Eventdata[0].MainCode })\n        .then(async function (response) {\n          toggleisloaded(true);\n          if (response.data.Posts.length !== 0) {\n            await setcurrentPosts(response.data.Posts);\n            await filterposts(response.data.Posts, Eventdata[0].Host)\n          }\n\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    }\n  };\n  const filterposts = async (Posts, admins) => {\n    let Postscpy = [];\n    for (let i = 0; i < Posts.length; i++) {\n      if (admins.includes(Posts[i].by) === true) {\n        Postscpy.push(Posts[i]);\n      }\n    }\n    await setcurrentfilteredPosts(Postscpy)\n  };\n\n\n\n  const guestlist = async (Participants) => {\n    debugger\n    var ParticipantsCPY = [];\n\n    for (let i = 0; i < Participants.length; i++) {\n      var Phone = \"\";\n      if (Participants[i] !== Auth.Phone) {\n        if (typeof Participants[i] === \"string\") {\n          Phone = Participants[i].includes(\"+\")\n            ? Participants[i]\n            : \"+91\" + Participants[i];\n        } else {\n          Phone = Participants[i].toString().includes(\"+\")\n            ? Participants[i]\n            : \"+91\" + Participants[i];\n        }\n\n        // await axios\n        //   .post(url + \"auth/getuserdetails\", {\n        //     Phone: Phone,\n        //   })\n        //   .then(async (res) => {\n        //     if (res.data.user) {\n        //       await ParticipantsCPY.push({\n        //         name: res.data.user.Name,\n        //         id: Participants[i],\n        //       });\n        //     } else {\n        //       await ParticipantsCPY.push({\n        //         name: Participants[i],\n        //         id: Participants[i],\n        //       });\n        //     }\n        //   })\n        //   .catch((err) => {\n        //     console.log(err);\n        //     return { err: \"error 404\" };\n        //   });\n      }\n    }\n    console.log(Participants);\n    await setparticipant(Participants);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getposts();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [Eventdata]);\n\n  useEffect(() => {\n    console.log(admins)\n    console.log(admins.includes('+917447525123'))\n  }, [filter])\n\n  return (\n    <>\n      <NavMobile base={base} id={props.match.params.id} />\n      <Popup\n        component={AddTags}\n        toggleShowPopup={setShowTagQuery}\n        showPopup={ShowTagQuery}\n        MainCode={[...participant]}\n        showall={setTags}\n        url={Tags}\n      />\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className=\"f-s-modal\"\n        open={showPopup}\n        onClose={() => {\n          toggleShowPopup(false);\n        }}\n      >\n        <Container fluid className=\"p-0 m-0\">\n          <div className=\"f-s-modal-card \">\n            <Media\n              toggleShowPopup={toggleShowPopup}\n              currentPosts={currentPosts}\n              popuptype={popuptype}\n            />\n          </div>\n        </Container>\n      </Modal>\n      <Container className=\"guestlist-box\" fluid>\n        <div className=\"back-navigation desktop-only\">\n          <Row style={{ marginTop: 5, marginRight: 3, marginLeft: 3 }}>\n            <IoArrowBackCircleOutline\n              size={40}\n              style={{ color: \"black\" }}\n              onClick={() => history.goBack()}\n            />\n            <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\n              Feed\n            </h3>\n          </Row>\n        </div>\n        {Eventdata && Eventdata.length > 0 ? (\n          <>\n            {Eventdata[0].filetype === \"png\" ||\n              Eventdata[0].filetype === \"jpg\" ||\n              Eventdata[0].filetype === \"jpeg\" ? (\n              <Image src={Eventdata[0].file} fluid style={{ height: \"30vh\" }} />\n            ) : (\n              <video\n                muted\n                type=\"video/mp4\"\n                autoPlay={true}\n                src={Eventdata[0].file}\n                preload=\"none\"\n                className=\"w-100\"\n                style={{ height: \"30vh\" }}\n              />\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n\n        <Image src={zoomicon} className=\"profile-avatar\" />\n        <h3 className=\"event-headings\">\n          {Eventdata[0] ? Eventdata[0].Name : \"\"}\n        </h3>\n\n        <div className=\"select-list\">\n          <Row className=\"p-0 m-0\">\n            <Col>\n              <Button\n                variant=\"outline-primary\"\n                style={{ width: \"30vw\", borderRadius: 20 }}\n                onClick={async () => {\n                  await setpopuptype(\"Photo\");\n                  toggleShowPopup(true);\n                }}\n              >\n                Photos\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                variant=\"outline-primary\"\n                onClick={async () => {\n                  await setpopuptype(\"Videos\");\n                  toggleShowPopup(true);\n                }}\n                style={{ width: \"30vw\", borderRadius: 20, marginLeft: 20 }}\n              >\n                Videos\n              </Button>\n            </Col>\n          </Row>\n        </div>\n        <div className=\"select-list mt-10px\">\n          <Row className=\"filterbox\">\n            <Col\n              onClick={async () => {\n                await setfilter(\"All\");\n                // await filterposts(currentPosts);\n              }}\n              className={filter === \"All\" ? \"filter-type\" : \"\"}\n            >\n              <span style={{ width: \"30vw\", borderRadius: 20 }}>All</span>\n            </Col>\n            <Col\n              onClick={async () => {\n                await setfilter(\"Update\");\n\n                // await filterposts(currentPosts);\n              }}\n              className={filter === \"Update\" ? \"filter-type\" : \"\"}\n            >\n              <span style={{ width: \"30vw\", borderRadius: 20 }}> Update</span>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n      <AddPost settype={settype} setimageurl={setimageurl} setcaption={setcaption}\n        caption={caption} submit={submit} setShowTagQuery={setShowTagQuery} imageurl={imageurl} isSubmit={isSubmit} />\n\n      {isloaded === false ? (\n        <center>\n          <CircularProgress style={{ color: \"black\" }} />\n        </center>\n      ) : (\n        <Postrender data={currentPosts} filter={filter} filterdata={currentfilteredPosts} getposts={getposts}\n          Eventdata={Eventdata} showcommmentforpost={showcommmentforpost} showcommment={showcommment}\n          setshowcommmentforpost={setshowcommmentforpost}\n          setshowcommment={setshowcommment} />\n      )}\n\n\n    </>\n  );\n}\n\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Comments\\Coments.js",["1348","1349","1350","1351","1352","1353","1354","1355","1356","1357"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"../Helpers/Header/Header.js\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport \"../Comments/Comments.css\";\nimport CommentAvt from \"../../Assets/CommentAvt.png\";\nimport { FcLike } from \"react-icons/fc\";\nimport { IoMdSend } from \"react-icons/io\";\nimport axios from \"axios\";\nimport { url } from \"../../Utils/Config\";\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\nimport { FcLikePlaceholder } from \"react-icons/fc\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FaUserFriends } from \"react-icons/fa\";\nimport history from \"../../Utils/History\";\nimport { likecomment } from '../../Redux/DispatchFuncitons/postfunctions'\nimport { comment_event } from '../../Redux/DispatchFuncitons/Eventfunctions'\nimport {\n  GetEvents,\n  GetInvitations\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nexport default function Coments(props) {\n  const dispatch = useDispatch()\n  const Auth = useSelector((state) => state.Auth);\n  let Events = useSelector((state) => state.Eventdata);\n  const [MainCode, setMainCode] = useState(\"\");\n  const [eveid, seteveid] = useState(\"\");\n  const [comments, setcomments] = useState([]);\n  const [comment, setcomment] = useState(\"\");\n  let base = \"\";\n  let Eventdata = [];\n  const getcomments = () => {\n    axios\n      .post(url + \"post/getEventcomments\", {\n        id: props.match.params._id,\n        Phone: Auth.Phone,\n      })\n      .then(async (res) => {\n        if (res.data.data) {\n          console.log(res.data.data);\n          await setcomments(res.data.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return { err: \"error 404\" };\n      });\n  }\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getcomments();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [])\n\n  const submit = async () => {\n    if (comment !== \"\") {\n      var saved = await dispatch(comment_event(props.match.params._id, comment))\n      if (saved === 1) {\n        await setcomment(\"\");\n        await getcomments();\n      }\n\n    }\n  };\n  useEffect(async () => {\n\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\n    if (Events.myEvents.length > 0 && Events.myInvitations > 0) {\n      if (\n        props.location.pathname ===\n        \"/MyEvents/comments/\" + props.match.params.id\n      ) {\n        Eventdata = Events.myEvents[props.match.params.id];\n        base = \"MyEvents\";\n        await seteveid(Eventdata[0]._id)\n        await setMainCode(Eventdata[0].MainCode)\n      } else {\n        Eventdata = Events.myInvitations[props.match.params.id];\n        base = \"inv\";\n        await seteveid(Eventdata[0]._id)\n        await setMainCode(Eventdata[0].MainCode)\n      }\n    } else {\n      await dispatch(GetEvents())\n      await dispatch(GetInvitations())\n    }\n\n\n    // Eventdata.map((singleevent) => {\n    //   setcomments(singleevent.CommentList);\n    // });\n  }, [Eventdata]);\n\n  useEffect(() => {\n    if (props.showcommment === true) {\n      console.log(props.id);\n      axios\n        .post(url + \"post/getpostcomments\", {\n          id: props.id,\n          Phone: Auth.Phone,\n        })\n        .then((res) => {\n          if (res.data.data) {\n            console.log(res.data.data);\n            setcomments(res.data.data);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          return { err: \"error 404\" };\n        });\n    }\n  }, [props.showcommment]);\n\n  return (\n    <>\n      <div className=\"w-100 desktop-only \">\n        <Header />\n      </div>\n      <Container className=\"p-0 ofh h80\" fluid>\n        <Container>\n          <Row\n            style={{\n              marginTop: 20,\n              marginRight: 3,\n              marginLeft: 3,\n              marginBottom: 5,\n            }}\n          >\n            <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\n              <IoArrowBackCircleOutline\n                size={40}\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n              Event\n            </p>\n            <Col></Col>\n          </Row>\n        </Container>\n        {comments.map((comment) => (\n          <Row\n            style={{\n              marginLeft: \"auto\",\n              paddingLeft: 5,\n              marginRight: 5,\n            }}\n            md={2}\n          >\n            <Col xs={2} md={1}>\n              <UserDataUrl showIcon={true} Phone={comment.CommentBy} />\n            </Col>\n            <Col xs={8} md={9}>\n              <h5 className=\"m-0 p-0\">\n                <UserDataUrl showName={true} Phone={comment.CommentBy} />\n              </h5>\n              <p className=\" m-5px fs-14\">{comment.Comment}</p>\n            </Col>\n            <Col xs={2} md={1}>\n              <Like likeby={comment.likeby} MainCode={MainCode} _id={comment._id} />\n              {comment.likeby ? comment.likeby.Length : 0}\n            </Col>\n          </Row>\n        ))}\n      </Container>\n      <Container fluid className=\"p-0\">\n        <Row\n          style={{\n            marginTop: 25,\n\n            marginLeft: \"auto\",\n            boxShadow: \"4px 7px 7px -7px rgba(0,0,0,0.54)\",\n          }}\n        >\n          <Col xs={10}>\n            <Form.Control\n              placeholder=\"Write a Comment\"\n              style={{\n                width: \"100%\",\n                margin: 0,\n                marginTop: \"5px\",\n                marginBottom: \"5px\",\n              }}\n              value={comment}\n              onChange={(e) => {\n                setcomment(e.target.value);\n              }}\n            />\n          </Col>\n          <Col\n            xs={2}\n            onClick={() => {\n              submit();\n            }}\n          >\n            <IoMdSend\n              size={20}\n              style={{ float: \"right\", margin: \"auto\", marginTop: \"5px\" }}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\nexport function Like(props) {\n  const dispatch = useDispatch();\n  const Auth = useSelector((state) => state.Auth);\n  const [isliked, setisliked] = useState(false);\n  useEffect(() => {\n    setisliked(props.likeby ? props.likeby.includes(Auth.Phone) : false);\n  }, []);\n  async function Dislike() {\n    let likelistcpy = [...props.likeby];\n    likelistcpy[props.index] = false;\n    await setisliked(false)\n  }\n  async function Like() {\n    let likelistcpy = [...props.likeby];\n    likelistcpy[props.index] = true;\n    // props.setLikeList(likelistcpy);\n    await setisliked(true)\n  }\n  const likethecomment = () => { };\n  return (\n    <>\n      {isliked === false ? (\n        <FcLikePlaceholder\n          size={30}\n          onClick={() => {\n            dispatch(likecomment(props._id, Auth.Phone, props.MainCode));\n            Like();\n            likethecomment();\n          }}\n        />\n      ) : (\n        <FcLike\n          size={30}\n          onClick={() => {\n            dispatch(likecomment(props._id, Auth.Phone, props.MainCode));\n            Dislike();\n            likethecomment();\n          }}\n        />\n      )}\n      Like {props.likeby.Length}\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\RSVP\\Rsvp.js",["1358","1359","1360","1361","1362"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"../../Helpers/Header/Header\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import \"../EventInfo/EventInfo.css\";\nimport { Carousel, Button } from \"react-bootstrap\";\nimport eventimg from \"../../../Assets/eventimg.png\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\nimport history from \"../../../Utils/History\";\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\nimport \"./Rsvp.css\";\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\nexport default function Rsvp(props) {\n  const dispatch = useDispatch();\n  const Auth = useSelector((state) => state.Auth);\n  const [base, setbase] = useState(\"\");\n  const Eventdata1 = useSelector(\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\n  );\n  const Eventdata2 = useSelector(\n    (state) => state.Eventdata.myEvents[props.match.params.id]\n  );\n  const [Eventdata, setEventdata] = useState([]);\n  useEffect(async () => {\n    if (props.location.pathname === \"/MyEvents/rsvp/\" + props.match.params.id) {\n      await setbase(\"MyEvents\");\n      setEventdata(Eventdata2);\n    } else {\n      await setbase(\"inv\");\n      setEventdata(Eventdata1);\n    }\n  }, []);\n  const Next = async (i) => {\n    debugger;\n    if (Eventdata && Eventdata.length > 0) {\n      console.log(i, Eventdata.length);\n      if (i < Eventdata.length) {\n        setindex(i);\n        setdirection(\"next\");\n      } else {\n        await dispatch(GetInvitations());\n        await dispatch(GetEvents());\n        await dispatch(getNotification())\n        history.goBack()\n      }\n    }\n\n  };\n\n  const [index, setindex] = useState(0);\n\n  const [direction, setdirection] = useState(\"\");\n\n  const handleSelect = (index) => {\n    let newIndex = index + 1;\n  };\n\n  return (\n    <>\n      <div className=\"w-100 desktop-only \">\n        <Header />\n      </div>\n      <DesktopNav />\n      <Toggler />\n      <Carousel\n        controls={false}\n        direction={direction}\n        onSelect={(i) => {\n          handleSelect(i);\n        }}\n        activeIndex={index}\n        interval={99999999999999}\n      >\n        {base === \"inv\"\n          ? Eventdata1 &&\n          Eventdata1.map((eve, index) => (\n            <Carousel.Item>\n              <img\n                className=\"d-block rsvpimage\"\n                src={eve.file}\n                alt=\"First slide\"\n              />\n              <div className=\"rsvp-buttons\">\n                <center>\n                  <Button\n                    className=\"btn-weddingmain \"\n                    onClick={async () => {\n\n                      await dispatch(\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\n                      );\n                      Next(index + 1);\n                    }}\n                  >\n                    <CheckIcon />\n                    Accept\n                  </Button>\n                  <Button\n                    className=\"btn-weddingmain\"\n                    onClick={async () => {\n                      await dispatch(\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\n                      );\n                      Next(index + 1);\n                    }}\n                  >\n                    <ErrorIcon />\n                    Maybe\n                  </Button>\n                  <Button\n                    className=\"btn-weddingmain\"\n                    onClick={async () => {\n                      await dispatch(\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\n                      );\n                      Next(index + 1);\n                    }}\n                  >\n                    <CancelIcon />\n                    Decline\n                  </Button>\n                </center>\n              </div>\n              <Carousel.Caption></Carousel.Caption>\n            </Carousel.Item>\n          ))\n          : Eventdata2 &&\n          Eventdata2.map((eve, index) => (\n            <Carousel.Item>\n              {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\n                <img\n                  className=\"d-block rsvpimage\"\n                  src={eve.file}\n                  alt=\"First slide\"\n                />) : (\n                <video\n                  muted\n                  type=\"video/mp4\"\n                  autoPlay={true}\n                  src={\n                    eve.file\n                  }\n                  preload=\"none\"\n                  className=\"d-block rsvpimage\"\n                />\n              )}\n\n              <div className=\"rsvp-buttons\">\n                <center>\n                  <Button\n                    className=\"btn-weddingmain \"\n                    onClick={async () => {\n                      await dispatch(\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\n                      );\n                      Next(index + 1);\n                    }}\n                  >\n                    <CheckIcon />\n                    Accept\n                  </Button>\n                  <Button\n                    className=\"btn-weddingmain\"\n                    onClick={async () => {\n                      await dispatch(\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\n                      );\n                      Next(index + 1);\n                    }}\n                  >\n                    <ErrorIcon />\n                    Maybe\n                  </Button>\n                  <Button\n                    className=\"btn-weddingmain\"\n                    onClick={async () => {\n                      await dispatch(\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\n                      );\n                      Next(index + 1);\n                    }}\n                  >\n                    <CancelIcon />\n                    Decline\n                  </Button>\n                </center>\n              </div>\n              <Carousel.Caption></Carousel.Caption>\n            </Carousel.Item>\n          ))}\n      </Carousel>\n      {/* <NavMobile className=\"footnavmobile\" base={base} id={props.match.params.id} /> */}\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js",["1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377"],"import React, { useState, useEffect } from \"react\";\nimport \"./InvitaionMain.css\";\nimport Header from \"../../Helpers/Header/Header\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport SendIcon from \"../../../Assets/ic-send.png\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CalendarIcon from \"../../../Assets/Calender.png\";\nimport { GrSync } from \"react-icons/gr\"\nimport LIKE from \"../../../Assets/LIKE.png\";\nimport RSVP from \"../../../Assets/RSVP.png\";\nimport {HiHome} from \"react-icons/hi\"\nimport { GoCalendar, GoLocation } from \"react-icons/go\"\nimport {AiFillHome} from \"react-icons/ai\"\nimport Carousel from \"react-bootstrap/Carousel\";\nimport CommentIcon from \"../../../Assets/comment-dot.png\";\nimport UserDataUrl from \"../../Helpers/UserData/UserDatajustUrl\";\nimport Location from \"../../../Assets/Location.png\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport { AiOutlineLike, AiOutlineSync } from \"react-icons/ai\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  like_event,\n  comment_event, GetInvitations, GetEvents\n} from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\nimport history from \"../../../Utils/History\";\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\nimport { FaUserFriends } from \"react-icons/fa\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nexport default function InvitaionMain(props) {\n  const dispatch = useDispatch();\n  const [comment, setcomment] = useState(\"\");\n  const [likeCount, setlikeCount] = useState([]);\n  const [MainCode, setmaincode] = useState();\n  const [commentcountplus, setcommentcountplus] = useState(0);\n  const Auth = useSelector((state) => state.Auth);\n  const checkiflike = (index) => {\n    let likeCountCopy = [...likeCount];\n    if (likeCount.length > 0) {\n      if (likeCount[index].me === true) {\n        likeCountCopy[index].me = false;\n        likeCountCopy[index].count -= 1;\n      } else {\n        likeCountCopy[index].me = true;\n        likeCountCopy[index].count += 1;\n      }\n    } else {\n      likeCountCopy[index].me = true;\n      likeCountCopy[index].count = 1;\n    }\n    setlikeCount(likeCountCopy);\n  };\n\n  useEffect(async () => {\n    console.log(props.Eventdata);\n    if (props.Eventdata && props.Eventdata.length > 0) {\n      await setmaincode(props.Eventdata[0].MainCode)\n      let countarray = [];\n      let liked = false;\n      for (let i = 0; i < props.Eventdata.length; i++) {\n        if (props.Eventdata[i].LikeList.length <= 0) {\n          countarray.push({ count: 0, me: false });\n        } else {\n          for (let j = 0; j < props.Eventdata[i].LikeList.length; j++) {\n            if (props.Eventdata[i].LikeList.LikeBy === Auth.Phone) {\n              liked = true;\n            } else {\n            }\n          }\n          countarray.push({\n            count: props.Eventdata[i].LikeList.length,\n            me: liked,\n          });\n          liked = false;\n        }\n      }\n      console.log(countarray);\n      setlikeCount(countarray);\n    }\n    setcommentcountplus(0)\n  }, [props.Eventdata]);\n\n  return (\n    <>\n      <div className=\"w-100 desktop-only \">\n        <Header />\n      </div>\n      <DesktopNav\n        id={props.id}\n        MainCode={MainCode}\n        base={props.base}\n        Eventdata={props.Eventdata}\n\n      />\n      {/*  <Toggler /> */}\n\n      <Carousel controls={false} interval={99999999999999} className=\"mb-10\">\n        {props.Eventdata &&\n          props.Eventdata.map((eve, index) => (\n            <Carousel.Item>\n              <Container className=\"upper-menu\">\n                <Row\n                  style={{\n                    marginTop: 20,\n                    marginRight: 3,\n                    marginLeft: 3,\n                    marginBottom: 10,\n                  }}\n                >\n                  <p style={{  color: \"black\" }}>\n                    <HiHome\n                      style={{ backgroundColor: 'white', borderRadius: '50px' }}\n                      size={30}\n                      onClick={() => {\n                        history.push(\"/\" + props.base);\n                      }}\n                    />\n\n                  </p>\n                  <Col></Col>\n                  <FaUserFriends\n                    size={30}\n                    style={{\n                      backgroundColor: \"white\",\n                      color: \"black\",\n                      borderRadius: 20,\n                      padding: \"0.1em 0.4em\",\n                    }}\n                    onClick={() => {\n                      history.push(\n                        \"/\" +\n                        props.base +\n                        \"/guestlist/\" +\n                        props.id +\n                        \"/\" +\n                        index\n                      );\n                    }}\n                  />\n                </Row>\n              </Container>\n              <Container className=\"container-event\">\n                {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\n                  <Image src={eve.file} className=\"fullimagemain\" />) : (\n                  <video\n                    muted\n                    type=\"video/mp4\"\n                    autoPlay={true}\n                    src={\n                      eve.file\n                    }\n\n                    preload=\"none\"\n                    className='w-100'\n                  />\n                )}\n                <Container\n                  className=\"box-event\"\n                  fluid\n                  style={{ marginTop: \"5vh\" }}\n                ><div style={{ position: 'relative', left: '10px', top: '3px' }}>\n                    <UserDataUrl\n                      Phone={eve.Host[0]}\n                      showIcon={true}\n                      className=\"m-10px\"\n\n                    /></div>\n                  <div\n                    className=\"event-chat-buttons\"\n                    style={{ marginTop: \"1vh\" }}\n                  >\n\n                    <Image\n                      src={SendIcon}\n                      style={{\n                        height: \"20px\",\n                        width: \"20px\",\n                        marginRight: \"1.5vh\",\n                      }}\n                      onClick={async () => {\n                        if (comment !== \"\") {\n                          await dispatch(comment_event(eve._id, comment));\n                          setcomment(\"\");\n\n                          await setcommentcountplus(commentcountplus + 1)\n                        }\n                      }}\n                    /><>\n                      <span className=\"Like-count comment_like\">\n                        {eve.CommentList\n                          ? eve.CommentList.length + commentcountplus\n                          : 0 + commentcountplus}\n                      </span>\n                      <Image\n                        src={CommentIcon}\n                        className=\"go-chat\"\n                        onClick={() => {\n                          history.push(\n                            \"/\" + props.base + \"/comments/\" + props.id + \"/\" + eve._id\n                          );\n                        }}\n                      /></>\n                  </div>\n                  <h4 className=\"avatar-name\">\n                    <UserDataUrl Phone={eve.Host[0]} showName={true} />\n                  </h4>\n                  <Form.Control\n                    size=\"sm\"\n                    placeholder=\"Write Comment\"\n                    className=\"form-control\"\n                    value={comment}\n                    onChange={(e) => {\n                      setcomment(e.target.value);\n                    }}\n                    style={{\n                      border: 0,\n                      width: \"auto\",\n                      height: \"20px\",\n                      marginLeft: \"60px\",\n                    }}\n                  />\n\n                  <br />\n                  <Row style={{ marginTop: 10 }}>\n                    <Col>\n                      <center>\n                        <span className=\"Like-count\">\n                          {likeCount[index] != undefined\n                            ? likeCount[index].count\n                            : 0}\n                        </span>\n                        <AiOutlineLike size=\"25\" className=\"info-icon\"\n                          style={{ color: \"#4e4e4e\" }}\n                          onClick={() => {\n                            checkiflike(index);\n                            dispatch(like_event(eve._id));\n                          }} />\n\n                      </center>\n                    </Col>\n                    <Col onClick={() => {\n                      history.push(\n                        \"/\" + props.base + \"/rsvp/\" + props.id\n                      );\n                    }}>\n                      <center>\n                        <div>\n                          <IsRsvp RSVPList={eve.RSVPList} />\n                          <AiOutlineSync size=\"25\"\n                            style={{ color: \"#4e4e4e\" }} />\n                          {/* <Image\n                            src={RSVP}\n\n                            className=\"info-icon\"\n                          /> */}\n                        </div>\n                      </center>\n                    </Col>\n                    <Col>\n                      <center>\n                        <GoCalendar\n                          style={{ color: \"#4e4e4e\" }}\n                          size=\"25\"\n                          onClick={() => {\n                            history.push(\n                              \"/\" +\n                              props.base +\n                              \"/schedule/\" +\n                              props.id +\n                              \"/\" +\n                              index\n                            );\n                          }} />\n                        {/*  <Image\n                          src={CalendarIcon}\n                          \n                        /> */}\n                      </center>\n                    </Col>\n                    <Col>\n                      <center>\n                        <GoLocation\n                          style={{ color: \"#4e4e4e\" }}\n                          size=\"25\"\n                          onClick={() => {\n                            history.push(\n                              \"/\" +\n                              props.base +\n                              \"/location/\" +\n                              props.id +\n                              \"/\" +\n                              index\n                            );\n                          }} />\n                        {/*  <Image\n                          src={Location}\n                          \n                        /> */}\n                      </center>\n                    </Col>\n                  </Row>\n                  <br />\n                  <h2 className=\"event-date\">{eve.Name}</h2>\n                  <h3 className=\"event-date\">{eve.Date + \" \" + eve.Time}</h3>\n                  <p className=\"event-des\">{eve.Description}</p>\n                  <a href=\"#\" className=\"invitationmain_link\">Read More</a>\n                </Container>\n              </Container>\n            </Carousel.Item>\n          ))}\n      </Carousel>\n      <NavMobile\n        className=\"footnavmobile\"\n        id={props.id}\n        MainCode={MainCode}\n        base={props.base}\n        Eventdata={props.Eventdata}\n      />\n    </>\n  );\n}\nexport function IsRsvp(props) {\n  const Auth = useSelector((state) => state.Auth);\n  const [showicon, setshowicon] = useState(\"\");\n  useEffect(() => {\n    debugger;\n    for (let i = 0; i < props.RSVPList.length; i++) {\n      if (\n        props.RSVPList[i].By === Auth.Phone &&\n        props.RSVPList[i].Status === \"Accept\"\n      ) {\n        setshowicon(\"Accept\");\n      } else if (\n        props.RSVPList[i].By === Auth.Phone &&\n        props.RSVPList[i].Status === \"May Be\"\n      ) {\n        setshowicon(\"May Be\");\n      } else if (\n        props.RSVPList[i].By === Auth.Phone &&\n        props.RSVPList[i].Status === \"Decline\"\n      ) {\n        setshowicon(\"Decline\");\n      } else {\n      }\n    }\n    console.log(showicon);\n  }, [props.RSVPList]);\n  return (\n    <span className=\"RSVP-count\">\n      {showicon === \"Accept\" ? (\n        <CheckCircleIcon style={{ color: \"Green\" }} />\n      ) : showicon === \"Decline\" ? (\n        <CancelIcon color=\"secondary\" />\n      ) : showicon === \"May Be\" ? (\n        <ErrorIcon style={{ color: \"#dec509\" }} />\n      ) : (\n        <HelpIcon color=\"primary\" />\n      )}\n    </span>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Location Offline\\LocationOffline.js",["1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport \"@reach/combobox/styles.css\";\nimport Geocode from \"react-geocode\";\nimport { Accordion, Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport Header from \"../Helpers/Header/Header.js\";\nimport \"../Location Offline/LocationOffline.css\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { json } from \"body-parser\";\nimport vcimage from \"../../Assets/videocall.png\";\nimport history from \"../../Utils/History\";\nimport { GoogleMapsAPI } from \"../../Utils/Config\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nconst libraries = [\"places\"];\n\nconst options = {\n  // styles: mapStyles,\n  disableDefaultUI: false,\n  zoomControl: true,\n  gestureHandling: \"cooperative\",\n};\n\nexport default function Location(props) {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: GoogleMapsAPI,\n    libraries,\n  });\n  // const Eventdata = useSelector(\n  //   (state) =>\n  //     state.Eventdata.myInvitations[props.match.params.id][\n  //       props.match.params.event\n  //     ]\n  // );\n\n  let Eventdata = [];\n  let base = \"\";\n  let MyEvents = useSelector(\n    (state) => state.Eventdata.myEvents[props.match.params.id]\n  );\n\n  let myInvitations = useSelector(\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\n  );\n  console.log(props.location.pathname);\n  if (\n    props.location.pathname ===\n    \"/MyEvents/location/\" +\n    props.match.params.id +\n    \"/\" +\n    props.match.params.event\n  ) {\n    Eventdata = MyEvents[props.match.params.event];\n    base = \"MyEvents\";\n  } else {\n    Eventdata = myInvitations[props.match.params.event];\n    base = \"inv\";\n  }\n\n  let center = {};\n  if (Eventdata.VenueType === \"Both\" || Eventdata.VenueType === \"Offline\") {\n    let locationdata = JSON.parse(Eventdata.Location);\n    center = {\n      lat: locationdata.lat,\n      lng: locationdata.lng,\n    };\n  } else {\n    center = {\n      lat: 20.5937,\n      lng: 78.9629,\n    };\n  }\n\n  const mapContainerStyle = {\n    height: \"400px\",\n    width: \"100%\",\n    border: \"solid\",\n    display:\n      Eventdata.VenueType === \"Offline\" || Eventdata.VenueType === \"Both\"\n        ? \"block\"\n        : \"none\",\n  };\n  console.log(Eventdata);\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\n\n  Geocode.setLanguage(\"en\");\n\n  const [marker, setMarker] = useState(center);\n  const [selected, setSelected] = useState(null);\n  const [adderss, setAddress] = useState(\"\");\n  const [Location, setLocation] = useState(\"\");\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = useCallback(({ lat, lng }) => {\n    let location = JSON.stringify({ lat, lng });\n    console.log(location);\n\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(70);\n  }, []);\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <div>\n      <div className=\"desktop-only w-100\" >\n        <Header className=\"desktop-only\" />\n      </div>\n      <Col className=\"mt-15px\">\n        <p style={{ fontWeight: 700, fontSize: 23 }}>\n          <IoArrowBackCircleOutline\n            size={40}\n            onClick={() => {\n              history.goBack();\n            }}\n          />\n          Location\n        </p>\n      </Col>\n      <img\n        src={vcimage}\n        style={{\n          width: \"100vw\",\n          height: \"70vh\",\n          objectFit: \"contain\",\n          display:\n            Eventdata.VenueType === \"Online\" ||\n              Eventdata.VenueType === \"Online-Inapp\"\n              ? \"block\"\n              : \"none\",\n        }}\n      />\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={5}\n        center={center}\n        options={options}\n        // onClick={onMapClick}\n        onLoad={onMapLoad}\n        options={{ scrollwheel: false }}\n      >\n        <Marker\n          key={`${marker.lat}-${marker.lng}`}\n          position={{ lat: marker.lat, lng: marker.lng }}\n          onClick={() => {\n            setSelected(marker);\n          }}\n        />\n\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => {\n              setSelected(null);\n            }}\n          >\n            <div>\n              <h2>{adderss}</h2>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n\n      <Accordion>\n        <Card>\n          <Card.Header\n            style={{\n              display:\n                Eventdata.VenueType === \"Offline\" ||\n                  Eventdata.VenueType === \"Both\"\n                  ? \"block\"\n                  : \"none\",\n            }}\n          >\n            <a\n              href={\"http://maps.google.com?q=\" + center.lat + \",\" + center.lng}\n            >\n              <Accordion.Toggle\n                eventKey=\"-1\"\n                style={{\n                  color: \"skyblue\",\n                  height: \"100%\",\n                  width: \"100%\",\n                  border: \"none\",\n                  background: \"none\",\n                  color: \"#000\",\n                  textAlign: \"left\",\n                }}\n              >\n                <LocationOnOutlinedIcon style={{ color: \"skyblue\" }} />\n                Directions\n              </Accordion.Toggle>\n            </a>\n          </Card.Header>\n\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body\n              style={{\n                margin: 0,\n                padding: 0,\n                display:\n                  Eventdata.VenueType === \"Offline\" ||\n                    Eventdata.VenueType === \"Both\"\n                    ? \"block\"\n                    : \"none\",\n              }}\n            ></Card.Body>\n          </Accordion.Collapse>\n        </Card>\n\n        <Card>\n          <Card.Header\n            style={{\n              display:\n                Eventdata.VenueType === \"Online\" ||\n                  Eventdata.VenueType === \"Both\" ||\n                  Eventdata.VenueType === \"Online-Inapp\"\n                  ? \"block\"\n                  : \"none\",\n            }}\n          >\n            <Accordion.Toggle\n              eventKey=\"1\"\n              style={{\n                color: \"skyblue\",\n                height: \"100%\",\n                width: \"100%\",\n                border: \"none\",\n                background: \"none\",\n                color: \"#000\",\n                textAlign: \"left\",\n              }}\n              onClick={() => {\n                if (Eventdata.VenueType === \"Online\") {\n                  window.open(Eventdata.Link);\n                } else if (\n                  Eventdata.VenueType === \"Online-Inapp\" ||\n                  Eventdata.VenueType === \"Both\"\n                ) {\n                  history.push(\"/inv/videoconf/\" + Eventdata.eventCode);\n                }\n              }}\n            >\n              <VideocamIcon style={{ color: \"skyblue\" }} /> Join Meeting\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body\n              style={{\n                display:\n                  Eventdata.VenueType === \"Online\" ||\n                    Eventdata.VenueType === \"Both\" ||\n                    Eventdata.VenueType === \"Online-Inapp\"\n                    ? \"block\"\n                    : \"none\",\n              }}\n            ></Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header\n            style={{\n              display:\n                Eventdata.VenueType === \"Offline\" ||\n                  Eventdata.VenueType === \"Both\"\n                  ? \"block\"\n                  : \"none\",\n            }}\n          >\n            <Accordion.Toggle\n              eventKey=\"2\"\n              style={{\n                color: \"skyblue\",\n                height: \"100%\",\n                width: \"100%\",\n                border: \"none\",\n                background: \"none\",\n                color: \"#000\",\n                textAlign: \"left\",\n              }}\n            >\n              <LocationOnOutlinedIcon style={{ color: \"skyblue\" }} /> Other\n              <KeyboardArrowDownIcon\n                style={{ float: \"right\", color: \"skyblue\" }}\n              />\n            </Accordion.Toggle>\n          </Card.Header>\n\n          <Accordion.Collapse eventKey=\"2\">\n            <Card.Body\n              style={{\n                display:\n                  Eventdata.VenueType === \"Offline\" ||\n                    Eventdata.VenueType === \"Both\"\n                    ? \"block\"\n                    : \"none\",\n              }}\n            >\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book. It has\n              survived not only five centuries, but also the leap into\n              electronic typesetting, remaining essentially unchanged. It was\n              popularised in the 1960s with the release of Letraset sheets\n              containing Lorem Ipsum passages, and more recently with desktop\n              publishing software like Aldus PageMaker including versions of\n              Lorem Ipsum. Why do we use it? It is a long established fact that\n              a reader will be distracted by the readable content of a page when\n              looking at its layout. The point of using Lorem Ipsum is that it\n              has a more-or-less normal distribution of letters, as opposed to\n              using 'Content here, content here', making it look like readable\n              English. Many desktop publishing packages and web page editors now\n              use Lorem Ipsum as their default model text, and a search for\n              'lorem ipsum' will uncover many web sites still in their infancy.\n              Various versions have evolved over the years, sometimes by\n              accident, sometimes on purpose (injected humour and the like).\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Guest\\ManageGuest.js",["1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Tab,\n  Tabs,\n  Button,\n  ListGroup,\n  Modal,\n} from \"react-bootstrap\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport readXlsxFile from \"read-excel-file\";\nimport \"../Guest/Guest.css\";\nimport Header from \"../Helpers/Header/Header\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport history from \"../../Utils/History\";\nimport Userdataurl from \"../Helpers/UserData/UserDatajustUrl\";\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\nimport {\n  change_event,\n  update_participants,\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport * as XLSX from \"xlsx\";\nimport { ReactExcel, readFile, generateObjects } from \"@ramonak/react-excel\";\nexport default function ManageGuest(props) {\n  const dispatch = useDispatch();\n  const [isDisable, setDisabled] = useState(true);\n  const [list, setlist] = useState([]);\n  const [guestList, setguestList] = useState([]);\n  const [isMobile, SetIsMobile] = useState(false);\n  const [_id, Set_id] = useState(\"\");\n  const [Eventdata, setEventdata] = useState([]);\n  let supported = \"\";\n  const [base, setbase] = useState(\"\");\n\n  let MyEvents = useSelector(\n    (state) => state.Eventdata.myEvents\n  );\n  let myInvitations = useSelector(\n    (state) => state.Eventdata.myInvitations\n  );\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  let attribute = [\"name\", \"tel\"];\n  const opts = { multiple: true };\n\n  useEffect(async () => {\n    supported = \"contacts\" in navigator && \"ContactsManager\" in window;\n    if (supported === true) {\n      SetIsMobile(true);\n    } else {\n      SetIsMobile(false);\n    }\n  }, []);\n\n  const readExcel = (file) => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = (e) => {\n        const bufferArray = e.target.result;\n\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n\n        const wsname = wb.SheetNames[0];\n\n        const ws = wb.Sheets[wsname];\n\n        const data = XLSX.utils.sheet_to_json(ws);\n\n        resolve(data);\n      };\n\n      fileReader.onerror = (error) => {\n        console.log(error);\n        reject(error);\n      };\n    });\n\n    promise.then((d) => {\n      console.log(d);\n      let result = d.map((data) => data.Contact);\n\n      console.log(result);\n      let Status = \"\";\n      result = result.map((data) => {\n        if (typeof data === \"string\") {\n          if (data.includes(\"+\")) {\n          } else {\n            data = \"+91\" + data;\n          }\n        } else {\n          data = \"+91\" + data;\n        }\n        let jdata = { By: data, Status: Status };\n        return jdata;\n      });\n      console.log(result);\n      setguestList([...guestList, ...result]);\n      setlist([...guestList, ...result]);\n      setDisabled(false);\n    });\n  };\n\n  useEffect(async () => {\n    debugger;\n    let Listcpy = [];\n    let accept = [];\n    let decline = [];\n    let maybe = [];\n    let RSVPList = []\n    let all = [];\n    let Participants = [];\n    if (\n      props.location.pathname ===\n      \"/MyEvents/Manage-GuestList/\" +\n      props.match.params.id +\n      \"/\" +\n      props.match.params.invno\n    ) {\n      await setEventdata(MyEvents[props.match.params.id]);\n      await setbase(\"MyEvents\");\n      await Set_id(MyEvents[props.match.params.id][props.match.params.invno]._id);\n      await setguestList(MyEvents[props.match.params.id][props.match.params.invno].RSVPList);\n      RSVPList = MyEvents[props.match.params.id][props.match.params.invno].RSVPList;\n      Participants = MyEvents[props.match.params.id][props.match.params.invno].Participants\n    } else {\n      await setEventdata(myInvitations[props.match.params.id]);\n      await setbase(\"inv\");\n      await Set_id(myInvitations[props.match.params.id][props.match.params.invno]._id);\n      await setguestList(myInvitations[props.match.params.id][props.match.params.invno].RSVPList);\n      RSVPList = myInvitations[props.match.params.id][props.match.params.invno].RSVPList;\n      Participants = MyEvents[props.match.params.id][props.match.params.invno].Participants\n    }\n    RSVPList.map((rsvp) => {\n      if (rsvp.Status === \"Accept\") {\n        accept.push(rsvp);\n      }\n      if (rsvp.Status === \"Decline\") {\n        decline.push(rsvp);\n      }\n      if (rsvp.Status === \"May Be\") {\n        maybe.push(rsvp);\n      }\n    });\n\n    let allrsvp = accept.concat(decline);\n    allrsvp = allrsvp.concat(maybe);\n    let Status = \"invited\";\n    for (let j = 0; j < Participants.length; j++) {\n      let Status = \"invited\";\n      let found = false;\n      for (let k = 0; k < allrsvp.length; k++) {\n        if (\n          allrsvp[k].By === Participants[j] ||\n          allrsvp[k].By === \"+91\" + Participants[j]\n        ) {\n          Status = allrsvp[k].Status;\n          found = true;\n          break;\n        } else {\n        }\n      }\n\n      if (Participants[j].toString().startsWith(\"+\")) {\n        Listcpy.push(Participants[j]);\n        all.push({ By: Participants[j], Status: Status });\n      } else {\n        Listcpy.push(\"+91\" + Participants[j]);\n        all.push({ By: \"+91\" + Participants[j], Status: Status });\n      }\n      found = false;\n    }\n    setlist(all);\n    setguestList(all);\n  }, [MyEvents]);\n\n  const deleteparticipant = async (by) => {\n    let all = guestList;\n\n    all = all.filter((allcontact) => {\n      return by != allcontact.By;\n    });\n    console.log(all);\n    await setguestList([]);\n    await setguestList(all);\n  };\n  const removeall = () => {\n    setguestList([]);\n    setDisabled(false);\n  };\n  const openContactPicker = async () => {\n    try {\n      let ldata = [];\n      let number = \"\";\n      const contacts = await navigator.contacts.select(attribute, opts);\n\n      contacts.map(async (contact) => {\n        if (contact.tel.length > 1) {\n          if (contact.tel[0].includes(\"+\")) {\n            await ldata.push(contact.tel[0]);\n          } else {\n            await ldata.push('+91' + contact.tel[0]);\n          }\n\n\n        } else {\n          await ldata.push(contact.tel[0]);\n        }\n      });\n\n      console.log(ldata);\n      let Status = \"\";\n      ldata = ldata.map((data) => {\n        if (typeof data === \"string\") {\n          if (data.startsWith(\"+\")) {\n          } else {\n            data = \"+91\" + data;\n          }\n        } else {\n          data = \"+91\" + data;\n        }\n        let jdata = { By: data, Status: Status };\n        return jdata;\n      });\n      console.log(ldata);\n      setguestList([...guestList, ...ldata]);\n      setlist(ldata);\n      setDisabled(false);\n      await setlist([...ldata]);\n      console.log(_id);\n      let participants = [...ldata];\n      // await dispatch(update_participants(_id, participants));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  function save() {\n    let listdata = [];\n    guestList.map((data) => {\n      listdata.push(data.By);\n    });\n    setguestList(guestList);\n    setlist(guestList);\n    setDisabled(true);\n    console.log(listdata);\n    dispatch(update_participants(_id, listdata));\n  }\n  function cancelchanges() {\n    setguestList(list);\n    setDisabled(true);\n  }\n  return (\n    <>\n      <div className=\"w-100 desktop-only \">\n        <Header />\n      </div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        animation={false}\n        className=\"delete-modal\"\n      >\n        {/* <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\"></Modal.Title>\n      </Modal.Header> */}\n        <Modal.Body>\n          <p> Do You Want to Remove all Participants ?</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={handleClose} variant=\"danger\">\n            Yes\n          </Button>\n          <Button onClick={handleClose} variant=\"success\">\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Container className=\"guest-box\">\n        <Row style={{ marginTop: 30, marginRight: 3, marginLeft: 3 }}>\n          <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\n            <IoArrowBackCircleOutline\n              size={40}\n              onClick={() => {\n                history.goBack();\n              }}\n            />\n            Manage Guest\n          </p>\n        </Row>\n        <Row className=\"m-1\">\n          <Col xs={false} md={6}></Col>\n          <Col>\n            <Button\n              variant=\"danger\"\n              className=\"w-100 label\"\n              onClick={() => {\n                removeall();\n              }}\n            >\n              Remove All\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              variant=\"info\"\n              className=\"w-100 label\"\n              style={{ display: isMobile === true ? \"block\" : \"none\" }}\n              onClick={() => {\n                openContactPicker();\n              }}\n            >\n              Add Participants\n            </Button>\n            <>\n              <label\n                htmlFor=\"input\"\n                className=\"btn btn-info label\"\n                style={{ display: isMobile === false ? \"block\" : \"none\" }}\n              >\n                Add Participants\n              </label>\n              <input\n                id=\"input\"\n                type=\"file\"\n                accept=\".xlsx\"\n                onChange={(e) => {\n                  const file = e.target.files[0];\n                  readExcel(file);\n                }}\n                placeholder=\"Add Participants\"\n                style={{ display: \"none\" }}\n              />\n            </>\n          </Col>\n        </Row>\n        <Row style={{ marginLeft: \"auto\" }}>\n          <Col>\n            <ListGroup className=\"list-data\">\n              {guestList.map((guest, index) => (\n                <ListGroup.Item className=\"m-1\">\n                  <Row className=\"m-0 \">\n                    <Col xs={2} md={1}>\n                      <Userdataurl\n                        showIcon={true}\n                        Phone={guest.By}\n                        key={index}\n                      />\n                    </Col>\n                    <Col xs={8} md={10}>\n                      <Row className=\"m-0 \">\n                        <Userdataurl showName={true} Phone={guest.By} />\n                      </Row>\n                      <Row className=\"m-0 \">\n                        <span\n                          className={\n                            \"status \" + guest.Status === \"Accept\"\n                              ? \"user-accept \"\n                              : guest.Status === \"Decline\"\n                                ? \"user-decline\"\n                                : guest.Status === \"May Be\"\n                                  ? \"user-maybe\"\n                                  : \"user-invited\"\n                          }\n                        >\n                          {guest.Status || \"\"}\n                        </span>\n                      </Row>\n                    </Col>\n                    <Col xs={2} md={1}>\n                      <HighlightOffRoundedIcon\n                        color=\"error\"\n                        fontSize=\"large\"\n                        onClick={() => {\n                          setDisabled(false);\n                          deleteparticipant(guest.By);\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n              {/* {list.map((item) => (\n                <ListGroup.Item className=\"m-1\">\n                  <Row className=\"m-0 \">\n                    <Col xs={2} md={1}>\n                      <Userdataurl showIcon={true} Phone={item} />\n                    </Col>\n                    <Col xs={8} md={10}>\n                      <Row className=\"m-0 \">\n                        <Userdataurl showName={true} Phone={item} />\n                      </Row>\n                      <Row className=\"m-0 \"></Row>\n                    </Col>\n                    <Col xs={2} md={1}>\n                      <HighlightOffRoundedIcon color=\"error\" fontSize=\"large\" />\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))} */}\n            </ListGroup>\n          </Col>\n        </Row>\n        {isDisable === true ? (\n          <></>\n        ) : (\n          <>\n            <Button\n              variant=\"danger\"\n              size=\"lg\"\n              className=\"fr label\"\n              onClick={() => {\n                cancelchanges();\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              className=\"fr label\"\n              onClick={() => {\n                save();\n              }}\n            >\n              Save\n            </Button>\n          </>\n        )}\n      </Container>\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Guest\\Guest.js",["1417","1418","1419","1420","1421","1422","1423"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Image, Tab, Tabs } from \"react-bootstrap\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport \"../Guest/Guest.css\";\nimport Header from \"../Helpers/Header/Header\";\nimport history from \"../../Utils/History\";\nimport Userdataurl from \"../Helpers/UserData/UserDatajustUrl\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nexport default function Guest(props) {\n  const [Events, setEvents] = useState([]);\n  const [guestList, setguestList] = useState([]);\n  const [guestListaccept, setguestListaccept] = useState([]);\n  const [guestListdecline, setguestListdecline] = useState([]);\n  const [guestListmaybe, setguestListmaybe] = useState([]);\n  const [isAdmin, setisAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const [Eventdata, setEventdata] = useState([]);\n  const [base, setbase] = useState(\"\");\n  const Auth = useSelector((state) => state.Auth);\n  let MyEvents = useSelector(\n    (state) => state.Eventdata.myEvents\n  );\n\n  let myInvitations = useSelector(\n    (state) => state.Eventdata.myInvitations\n  );\n  useEffect(async () => {\n    debugger;\n    let RSVPList = []\n    let Participants = []\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\n      await dispatch(GetEvents());\n      await dispatch(GetInvitations());\n    } else {\n      if (\n        props.location.pathname ===\n        \"/MyEvents/guestlist/\" +\n        props.match.params.id +\n        \"/\" +\n        props.match.params.invno && MyEvents.length > 0\n      ) {\n        await setEventdata(MyEvents[props.match.params.id]);\n        await setbase(\"MyEvents\");\n        await setEvents(Eventdata);\n        console.log(MyEvents[props.match.params.id][props.match.params.invno].RSVPList);\n        await setguestList([...MyEvents[props.match.params.id][props.match.params.invno].RSVPList,\n        ...MyEvents[props.match.params.id][props.match.params.invno].Host]);\n        RSVPList = MyEvents[props.match.params.id][props.match.params.invno].RSVPList;\n        if (MyEvents[props.match.params.id][props.match.params.invno].Host.includes(Auth.Phone)) {\n          setisAdmin(true);\n        } else {\n          setisAdmin(false);\n        }\n        let data = MyEvents[props.match.params.id][props.match.params.invno]\n        Participants = [...data.Participants,\n        ...data.Host];\n      } else if (\n        props.location.pathname ===\n        \"/inv/guestlist/\" +\n        props.match.params.id +\n        \"/\" +\n        props.match.params.invno && myInvitations.length > 0\n      ) {\n        await setEventdata(myInvitations[props.match.params.id]);\n        await setbase(\"inv\");\n        await setEvents(Eventdata);\n        await setguestList([...myInvitations[props.match.params.id][props.match.params.invno].RSVPList,\n        ...myInvitations[props.match.params.id][props.match.params.invno].Host]);\n        RSVPList = myInvitations[props.match.params.id][props.match.params.invno].RSVPList;\n        if (myInvitations[props.match.params.id][props.match.params.invno].Host.includes(Auth.Phone)) {\n          setisAdmin(true);\n        } else {\n          setisAdmin(false);\n        }\n        let data = myInvitations[props.match.params.id][props.match.params.invno]\n        Participants = [...data.Participants,\n        ...data.Host];\n\n      }\n\n      let accept = [];\n      let decline = [];\n      let maybe = [];\n\n      RSVPList.map((rsvp) => {\n        if (rsvp.Status === \"Accept\") {\n          accept.push(rsvp);\n        }\n        if (rsvp.Status === \"Decline\") {\n          decline.push(rsvp);\n        }\n        if (rsvp.Status === \"May Be\") {\n          maybe.push(rsvp);\n        }\n      });\n\n      let all = [];\n      debugger;\n\n\n      let allrsvp = accept.concat(decline);\n      allrsvp = allrsvp.concat(maybe);\n      let Status = \"Invited\";\n      for (let j = 0; j < Participants.length; j++) {\n        let Status = \"Invited\";\n        let found = false;\n        for (let k = 0; k < allrsvp.length; k++) {\n          if (\n            allrsvp[k].By === Participants[j] ||\n            allrsvp[k].By === \"+91\" + Participants[j]\n          ) {\n            Status = allrsvp[k].Status;\n            found = true;\n            break;\n          } else {\n            console.log(\"x\");\n          }\n        }\n\n        if (Participants[j].toString().startsWith(\"+\")) {\n          all.push({ By: Participants[j], Status: Status });\n        } else {\n          all.push({ By: \"+91\" + Participants[j], Status: Status });\n        }\n        found = false;\n      }\n      setguestList(all);\n      setguestListaccept(accept);\n      setguestListdecline(decline);\n      setguestListmaybe(maybe);\n    }\n  }, [myInvitations, MyEvents]);\n\n  return (\n    <>\n      <div className=\"desktop-only w-100\" >\n        <Header className=\"desktop-only\" />\n      </div>\n      <Container className=\"guest-box\">\n        <Row\n          style={{\n            marginTop: 30,\n            marginRight: 3,\n            marginLeft: 3,\n            width: \"100%\",\n          }}\n        >\n          <Col xs={9}>\n            <p style={{ fontWeight: \"bold\", fontSize: 20 }}>\n              <IoArrowBackCircleOutline\n                size={32}\n                onClick={() => {\n                  console.log(\n                    \"/\" + base + \"/eventpage/\" + props.match.params.id\n                  );\n                  history.push(\n                    \"/\" + base + \"/eventpage/\" + props.match.params.id\n                  );\n                }}\n              />\n              View Guest\n            </p>\n          </Col>\n          <Col>\n            {isAdmin === true ? (\n              <span\n                style={{ fontWeight: \"500\", fontSize: 20 }}\n                onClick={() => {\n                  history.push(\n                    \"/MyEvents\" +\n                    \"/Manage-GuestList/\" +\n                    props.match.params.id +\n                    \"/\" +\n                    props.match.params.invno\n                  );\n                }}\n              >\n                <SupervisedUserCircleIcon />\n                <span className=\"manage_guest\">Manage Guests</span>\n              </span>\n            ) : (\n              <></>\n            )}\n          </Col>\n        </Row>\n\n        <Row style={{ marginLeft: \"auto\" }}>\n          <Col>\n            <Tabs defaultActiveKey=\"All\">\n              <Tab eventKey=\"All\" title=\"All\">\n                {guestList.map((guest) => (\n                  <Container className=\"p-5px\">\n                    <Row className=\"m-0 \">\n                      <Col xs={2} md={1}>\n                        <Userdataurl showIcon={true} Phone={guest.By} />\n                      </Col>\n                      <Col>\n                        <Row className=\"m-0 \">\n                          <Userdataurl showName={true} Phone={guest.By} />\n                        </Row>\n                        <Row className=\"m-0 \">\n                          <span\n                            className={\n                              \"status \" + guest.Status === \"Accept\"\n                                ? \"user-accept \"\n                                : guest.Status === \"Decline\"\n                                  ? \"user-decline\"\n                                  : guest.Status === \"May Be\"\n                                    ? \"user-maybe\"\n                                    : \"user-invited\"\n                            }\n                          >\n                            {guest.Status}\n                          </span>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </Container>\n                ))}\n              </Tab>\n\n              <Tab eventKey=\"Accept\" title=\"Accept\">\n                {guestListaccept.map((guest) => (\n                  <Container className=\"p-5px\">\n                    <Row className=\"m-0 \">\n                      <Col xs={2} md={1}>\n                        <Userdataurl showIcon={true} Phone={guest.By} />\n                      </Col>\n                      <Col>\n                        <Row className=\"m-0 \">\n                          <Userdataurl showName={true} Phone={guest.By} />\n                        </Row>\n                        <Row className=\"m-0 \">\n                          <span\n                            className={\n                              \"status \" + guest.Status === \"Accept\"\n                                ? \"user-accept \"\n                                : guest.Status === \"Decline\"\n                                  ? \"user-decline\"\n                                  : guest.Status === \"May Be\"\n                                    ? \"user-maybe\"\n                                    : \"user-invited\"\n                            }\n                          >\n                            {guest.Status}\n                          </span>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </Container>\n                ))}\n              </Tab>\n              <Tab eventKey=\"Decline\" title=\"Decline\">\n                {guestListdecline.map((guest) => (\n                  <Container className=\"p-5px\">\n                    <Row className=\"m-0 \">\n                      <Col xs={2} md={1}>\n                        <Userdataurl showIcon={true} Phone={guest.By} />\n                      </Col>\n                      <Col>\n                        <Row className=\"m-0 \">\n                          <Userdataurl showName={true} Phone={guest.By} />\n                        </Row>\n                        <Row className=\"m-0 \">\n                          <span\n                            className={\n                              \"status \" + guest.Status === \"Accept\"\n                                ? \"user-accept \"\n                                : guest.Status === \"Decline\"\n                                  ? \"user-decline\"\n                                  : guest.Status === \"May Be\"\n                                    ? \"user-maybe\"\n                                    : \"user-invited\"\n                            }\n                          >\n                            {guest.Status}\n                          </span>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </Container>\n                ))}\n              </Tab>\n              <Tab eventKey=\"Maybe\" title=\"Maybe\">\n                {guestListmaybe.map((guest) => (\n                  <Container className=\"p-5px\">\n                    <Row className=\"m-0 \">\n                      <Col xs={2} md={1}>\n                        <Userdataurl showIcon={true} Phone={guest.By} />\n                      </Col>\n                      <Col>\n                        <Row className=\"m-0 \">\n                          <Userdataurl showName={true} Phone={guest.By} />\n                        </Row>\n                        <Row className=\"m-0 \">\n                          <span\n                            className={\n                              \"status \" + guest.Status === \"Accept\"\n                                ? \"user-accept \"\n                                : guest.Status === \"Decline\"\n                                  ? \"user-decline\"\n                                  : guest.Status === \"May Be\"\n                                    ? \"user-maybe\"\n                                    : \"user-invited\"\n                            }\n                          >\n                            {guest.Status}\n                          </span>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </Container>\n                ))}\n              </Tab>\n            </Tabs>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Sidebar\\SidebarMore.js",["1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436"],"import React, { useState, useEffect } from \"react\";\nimport \"../Sidebar/Sidebar.css\";\nimport { IoArrowBackCircleOutline, IoCall } from \"react-icons/io5\";\nimport { RiArrowRightSLine } from \"react-icons/ri\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport { Component } from \"react\";\nimport Header from \"../Helpers/Header/Header\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport history from \"../../Utils/History\";\nimport DancingImg from \"../../Assets/DancingImg.png\";\nimport { GoBook } from \"react-icons/go\";\nimport { IoImagesSharp, IoPowerSharp } from \"react-icons/io5\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport {\n  GetEvents,\n  GetInvitations,\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport { logout } from '../../Redux/DispatchFuncitons/AuthFunctions'\nexport default function SidebarMore(props) {\n  const [base, setbase] = useState(\"\");\n  const [ishost, setishost] = useState(false);\n  const Auth = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n  const [Eventdata, setEventdata] = useState([]);\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\n\n  useEffect(async () => {\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\n      await dispatch(GetEvents());\n      await dispatch(GetInvitations());\n    } else {\n      if (props.location.pathname === \"/MyEvents/more/\" + props.match.params.id && MyEvents.length > 0) {\n        await setEventdata(MyEvents[props.match.params.id])\n        await setbase(\"MyEvents\");\n        console.log(Eventdata)\n        var Host = MyEvents[props.match.params.id][0].InvId.Host;\n        for (var i = 0; i < Host.length; i++) {\n          if (Host[i] === Auth.Phone) {\n            await setishost(true);\n            console.log(ishost)\n          }\n        }\n      } else if (props.location.pathname === \"/inv/more/\" + props.match.params.id && myInvitations.length > 0) {\n\n        await setEventdata(myInvitations[props.match.params.id])\n        await setbase(\"inv\");\n        console.log(Eventdata)\n        var Host = myInvitations[props.match.params.id][0].InvId.Host;\n        for (var i = 0; i < Host.length; i++) {\n          if (Host[i] === Auth.Phone) {\n            await setishost(true);\n            console.log(ishost)\n          }\n        }\n      }\n    }\n\n  }, [myInvitations, MyEvents]);\n  return (\n    <>\n      <div className=\"w-100 desktop-only \">\n        <Header />\n      </div>\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\n        <Row>\n          <Col>\n            <p\n              style={{\n                fontWeight: 600,\n                fontSize: 20,\n                paddingLeft: \"10px\",\n                marginBottom: 20,\n                marginTop: 20,\n              }}\n            >\n              <IoArrowBackCircleOutline\n                size={30}\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n              More\n            </p>\n          </Col>\n        </Row>\n        <Image src={DancingImg} className=\"sidebar_img\" />\n        <a\n          className=\"linkto-rows\"\n          onClick={() => {\n            history.push(\"../\" + \"story/\" + props.match.params.id);\n          }}\n        >\n          <Row className=\"sidebar-rows\">\n            <Col>\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\n                <GoBook size=\"25\" /> Our Story\n              </p>\n            </Col>\n            <Col>\n              <p>\n                {\" \"}\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n              </p>\n            </Col>\n          </Row>\n        </a>\n\n        {/* <a\n          className=\"linkto-rows\"\n          onClick={() => {\n            history.push(\"../\" + \"albums/\" + props.match.params.id);\n          }}\n        >\n          <Row className=\"sidebar-rows\">\n            <Col>\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\n                {\" \"}\n                <IoImagesSharp size=\"25\" /> Albums\n              </p>\n            </Col>\n            <Col>\n              <p>\n                {\" \"}\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n              </p>\n            </Col>\n          </Row>\n        </a> */}\n        {ishost === true ? (\n          <a\n            className=\"linkto-rows\"\n            onClick={() => {\n              history.push(\"/MyEvents/\" + \"admin/\" + props.match.params.id);\n            }}\n          >\n            <Row className=\"sidebar-rows\">\n              <Col>\n                <p style={{ margin: \"auto\", padding: \"15px\" }}>\n                  <FaUserAlt size=\"20\" /> Admin\n                </p>\n              </Col>\n              <Col>\n                <p>\n                  {\" \"}\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n                </p>\n              </Col>\n            </Row>\n          </a>\n        ) : (\n          <></>\n        )}\n        {/* \n        <a className=\"linkto-rows\">\n          <Row className=\"sidebar-rows\">\n            <Col>Templates</Col>\n            <Col>\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n            </Col>\n          </Row>\n        </a> */}\n\n        {/*  <a className=\"linkto-rows\">\n          <Row className=\"sidebar-rows\">\n            <Col>Articles</Col>\n            <Col>\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n            </Col>\n          </Row>\n        </a> */}\n\n        {/*  <a className=\"linkto-rows\">\n          <Row className=\"sidebar-rows\">\n            <Col>About Us</Col>\n            <Col>\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n            </Col>\n          </Row>\n        </a> */}\n\n        <a className=\"linkto-rows\">\n          <Row className=\"sidebar-rows\">\n\n            <Col>\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\n                <IoCall size=\"25\" /> Contact Us\n              </p>\n            </Col>\n            <Col>\n              <p>\n                {\" \"}\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n              </p>\n            </Col>\n          </Row>\n        </a>\n        <a className=\"linkto-rows\" onClick={() => { dispatch(logout()) }}>\n          <Row className=\"sidebar-rows\">\n\n            <Col>\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\n                <IoPowerSharp size=\"25\" /> Logout\n              </p>\n            </Col>\n            <Col>\n              <p>\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n              </p>\n            </Col>\n          </Row>\n        </a>\n\n        {/* <a className=\"linkto-rows\">\n          <Row className=\"sidebar-rows\">\n            <Col>Recommendaton</Col>\n            <Col>\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n            </Col>\n          </Row>\n        </a> */}\n\n        {/*  <a className=\"linkto-rows\">\n          <Row className=\"sidebar-rows\">\n            <Col>Prices</Col>\n            <Col>\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n            </Col>\n          </Row>\n        </a> */}\n\n      </Container>\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\HomePage.js",["1437","1438"],"import React from \"react\";\nimport \"./styles.css\";\nimport MainBanner from \"./MainBanner\";\nimport Contact from \"./ContactUs\";\nimport Footer from \"./Footer\";\nimport Testimonials from \"./Testimonials\";\nimport Features from \"./Features\";\nimport Additionals from \"./Additionals\";\nimport AboutBanner from \"./AboutBanner\";\nimport CompanySlide from \"./CompanySlide\";\nimport ChatWidget from \"./ChatWidget\";\nclass HomePage extends React.Component {\n  render() {\n    return (\n      <>\n\n        \n        <MainBanner />\n        <ChatWidget />\n        <Features />\n        <AboutBanner />\n        <Additionals />\n        {/* <Testimonials />\n        <CompanySlide /> */}\n        <Contact />\n        <Footer />\n\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\FD\\Fd.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\jitsi\\Jitsivc.js",["1439"],"import React from \"react\";\nimport Jitsi from \"react-jitsi\";\nimport { useSelector } from \"react-redux\";\nimport { Jutsu } from \"react-jutsu\";\nimport Header from \"../Helpers/Header/Header\";\nimport history from \"../../Utils/History\";\nexport default function Jitsivc(props) {\n  const Auth = useSelector((state) => state.Auth);\n  return (\n    <>\n      <Header />\n      <Jutsu\n        roomName={props.match.params.id}\n        displayName={Auth.Name}\n        onMeetingEnd={() => history.goBack()}\n        loadingComponent={<p>loading ...</p>}\n        errorComponent={<p>Oops, something went wrong</p>}\n        // domain=\"live.mobillyinvite.com\"\n      />\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\EditEvent\\EditEvent.js",["1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./EditEvent.css\";\nimport Header from \"../Helpers/Header/Header\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Map from \"../Helpers/Maps/Places\";\nimport AddImg from \"../../Assets/AddImage.svg\";\nimport { Grid, InputLabel, Select, FormControl } from \"@material-ui/core\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport Eventnamebox from \"../AddEvent/CreateEvent/EventNameBox\";\nimport history from \"../../Utils/History\";\nimport { json } from \"body-parser\";\nimport { update_events } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport { deletefile, uploadString } from \"../../Utils/FileUpload_Download\";\nexport default function EditEvent(props) {\n  const useStyles = makeStyles((theme) => ({\n    notchedOutline: {\n      borderWidth: \"3px\",\n      borderColor: \"lightgrey !important\",\n      borderRadius: \"150px\",\n      color: \"#3897f1 !important\",\n    },\n  }));\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [base, setbase] = useState(\"\");\n  const [maincode, setmaincode] = useState(\"\");\n  const [IsSubmitted, setIsSubmitted] = useState(false);\n  const [isError, setisError] = useState(false);\n  const [isfileChanged, setisfileChanged] = useState(false);\n  const [changedfiles, setchangedfiles] = useState([\n    { fileurl: \"\", ischanged: false, type: \"\" },\n    { fileurl: \"\", ischanged: false, type: \"\" },\n    { fileurl: \"\", ischanged: false, type: \"\" },\n    { fileurl: \"\", ischanged: false, type: \"\" },\n  ]);\n  const [urltype, seturltype] = useState(\"\");\n  const [selectedEvent, setselectedEvent] = useState(null);\n  const [_id, Set_id] = useState(\"\");\n  const [Type, SetType] = useState(\"Event\");\n  const [Eventdata, setEventdata] = useState([]);\n  const [Fileurl, setFile] = useState(\"\");\n  const [Filetype, setFiletype] = useState(\"\");\n  const [Name, setName] = useState(\"\");\n  const [Date, setDate] = useState(\"\");\n  const [Time, setTime] = useState(\"\");\n  const [VenueType, setVenueType] = useState(\"\");\n  const [Link, setLink] = useState(\"\");\n  const [Location, setLocation] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [datacopy, setdatacopy] = useState([]);\n  const [urls, seturls] = useState([]);\n  let MyEvents = useSelector(\n    (state) => state.Eventdata.myEvents[props.match.params.id]\n  );\n  let myInvitations = useSelector(\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\n  );\n\n  const [uniqueurl, setuniqueurl] = useState(\"\")\n  const checkIfEventEmpty = async () => {\n    debugger;\n    if (Type === \"\") {\n      setisError(true);\n      return 0;\n    }\n    console.log(Eventdata);\n    let Eventcpy = [...Eventdata];\n    let result = true;\n    let incompleteeventnumber = null;\n    //check for event first\n    Eventcpy = { ...Eventdata[selectedEvent] };\n    if (Eventcpy.Name === \"\") {\n      setisError(true);\n      return 0;\n    } else if (Eventcpy.Date === \"\") {\n      setisError(true);\n      return 0;\n    } else if (Eventcpy.Time === \"\") {\n      setisError(true);\n      return 0;\n    } else if (Eventcpy.Description === \"\") {\n      setisError(true);\n      return 0;\n    } else if (Eventcpy.VenueType === \"\") {\n      setisError(true);\n      return 0;\n    } else if (\n      Eventcpy.VenueType === \"Both\" &&\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\n    ) {\n      setisError(true);\n      return 0;\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\n      setisError(true);\n      return 0;\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\n      setisError(true);\n      return 0;\n    } else if (Eventcpy.file === \"\") {\n      setisError(true);\n      return 0;\n    } else if (Eventcpy.filetype === \"\") {\n      setisError(true);\n      return 0;\n    }\n\n    for (let i = 0; i < Eventdata.length; i++) {\n      incompleteeventnumber = i;\n      Eventcpy = { ...Eventdata[i] };\n      if (Eventcpy.Name === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (Eventcpy.Date === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (Eventcpy.Time === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (Eventcpy.Description === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (Eventcpy.VenueType === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (\n        Eventcpy.VenueType === \"Both\" &&\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\n      ) {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (Eventcpy.file === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      } else if (Eventcpy.filetype === \"\") {\n        setselectedEvent(i);\n        setisError(true);\n        return 0;\n      }\n    }\n\n    // console.log({ status: true, selectedEvent: null, component: \"\" });\n    setisError(false);\n    return 1;\n    // return { status: true, selectedEvent: null, component: \"\" };\n  };\n\n  useEffect(async () => {\n    grabdata();\n  }, []);\n\n  async function grabdata() {\n    await setselectedEvent(null);\n    if (\n      props.location.pathname ===\n      \"/MyEvents/Manage-Event/\" +\n      props.match.params.id +\n      \"/\" +\n      props.match.params.invno\n    ) {\n      await setEventdata(MyEvents);\n      await setmaincode(MyEvents[0].MainCode);\n      console.log(MyEvents[0].MainCode);\n      await setdatacopy(JSON.stringify({ MyEvents }));\n      await setbase(\"MyEvents\");\n      await SetType(MyEvents[0].InvId.Type);\n      await grabUrsl(MyEvents)\n    } else {\n      await setEventdata(myInvitations);\n      await setmaincode(myInvitations[0].MainCode);\n      await setdatacopy(JSON.stringify({ myInvitations }));\n      await setbase(\"inv\");\n      await SetType(myInvitations[0].InvId.Type);\n      await grabUrsl(myInvitations)\n    }\n\n    await setselectedEvent(0);\n  }\n  useEffect(() => {\n    console.log(Eventdata);\n    if (Eventdata.length !== 0 && selectedEvent !== null) {\n      setName(Eventdata[selectedEvent].Name);\n      setFile(Eventdata[selectedEvent].file);\n      setFiletype(Eventdata[selectedEvent].filetype);\n      setDate(Eventdata[selectedEvent].Date);\n      setTime(Eventdata[selectedEvent].Time);\n      setVenueType(Eventdata[selectedEvent].VenueType);\n      setLink(Eventdata[selectedEvent].Link);\n      if (Eventdata[selectedEvent].Location !== \"\") {\n        console.log(\n          Eventdata[selectedEvent].Location.split(\":\")[3]\n            .split('\"}')[0]\n            .split('\"')[1]\n        );\n\n        setaddress(\n          Eventdata[selectedEvent].Location.split(\":\")[3]\n            .split('\"}')[0]\n            .split('\"')[1]\n        );\n      }\n      setLocation(Eventdata[selectedEvent].Location);\n      setDescription(Eventdata[selectedEvent].Description);\n    }\n  }, [selectedEvent]);\n  const addevent = () => {\n    let events = {\n      Name: \"\",\n      Participants: [],\n      file: \"\",\n      filetype: \"\",\n      Date: \"\",\n      Time: \"\",\n      VenueType: \"Online\",\n      Location: \"\",\n      Link: \"\",\n      Description: \"\",\n      GuestInvite: false,\n      Host: \"\",\n      Co_Host: [],\n      Schedule: [],\n    };\n    let Eventdatacpy = [...Eventdata];\n    if (Eventdatacpy.length < 4) {\n      Eventdatacpy.push(events);\n      setEventdata(Eventdatacpy);\n    }\n  };\n  const removeevent = () => {\n    let Eventdatacpy = [...Eventdata];\n    if (Eventdatacpy.length > 1) {\n      Eventdatacpy.pop();\n      setEventdata(Eventdatacpy);\n    }\n  };\n  const save = async () => {\n    // console.log(Eventdata);\n    // console.log(changedfiles);\n    debugger\n    await preserve(selectedEvent);\n    let ischecked = await checkIfEventEmpty();\n    if (ischecked === 0) {\n      alert(\"something is missing\");\n    } else {\n      let Eventdatacpy = [...Eventdata];\n\n      //saveuploadedfiles\n\n      //  uniqueurl = Type + Math.floor(100000 + Math.random() * 900000) + \"/\";\n      for (let i = 0; i < Eventdatacpy.length; i++) {\n        console.log(Eventdatacpy[i])\n        console.log(changedfiles[i])\n        if (changedfiles[i].ischanged === true) {\n          alert(\"file at index \" + i + \" has changed\");\n          if (urls[i] === undefined) {\n            alert(\"url not found\")\n\n            let newurl = await uploadString(\n              changedfiles[i].fileurl,\n              urltype + uniqueurl + \"Event_image/\" + i + Eventdatacpy[i].Name.replaceAll(\" \", '')\n            );\n            Eventdatacpy[i].file = newurl;\n            console.log(newurl);\n          } else {\n            alert(\"url  found\")\n            console.log(\"uploading file\")\n            let newurl = await uploadString(\n              changedfiles[i].fileurl,\n              urls[i]\n            );\n            Eventdatacpy[i].file = newurl;\n            console.log(newurl);\n            console.log(urls[i])\n          }\n        } else {\n        }\n      }\n\n      await setEventdata(Eventdatacpy);\n      console.log(Eventdata);\n      dispatch(update_events(Type, Eventdata, maincode));\n    }\n  };\n\n  const preserve = async (i) => {\n    let Eventdatacpy = [...Eventdata];\n    Eventdatacpy[selectedEvent].Name = Name;\n    Eventdatacpy[selectedEvent].file = Fileurl;\n    Eventdatacpy[selectedEvent].filetype = Filetype;\n    Eventdatacpy[selectedEvent].Date = Date;\n    Eventdatacpy[selectedEvent].Time = Time;\n    Eventdatacpy[selectedEvent].VenueType = VenueType;\n    Eventdatacpy[selectedEvent].Link = Link;\n    Eventdatacpy[selectedEvent].Location = Location;\n    Eventdatacpy[selectedEvent].Description = Description;\n    await setEventdata(Eventdatacpy);\n    await setselectedEvent(i);\n  };\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    setisfileChanged(true);\n    if (acceptedFiles[0].size > 5259265) {\n      alert(\"Max file size 5mb\");\n      return false;\n    }\n\n    let type = acceptedFiles[0].type.split(\"/\");\n    setFiletype(type[1]);\n    var reader = await new FileReader();\n    reader.onload = async function () {\n      let filedata = reader.result;\n      await setFile(filedata);\n      // uploadfile(filedata, type);\n      // console.log(filedata, type);\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n    await reader.readAsDataURL(acceptedFiles[0]);\n  }, []);\n  async function uploadfile(fileurl, type, selectedEvent) {\n    debugger\n    let changedfilescpy = [...changedfiles];\n    console.log(selectedEvent);\n    if (fileurl.includes(\"https://firebasestorage\") || fileurl === \"\") {\n      return false;\n    }\n    if (selectedEvent === null) {\n      if (!changedfilescpy[0].fileurl.includes(\"https://firebasestorage\")) {\n        changedfilescpy[0].fileurl = fileurl;\n        changedfilescpy[0].type = type;\n        changedfilescpy[0].ischanged = true;\n        changedfilescpy[0].selectedEvent = 0\n      }\n\n    } else {\n      if (!changedfilescpy[selectedEvent].fileurl.includes(\"https://firebasestorage\")) {\n        changedfilescpy[selectedEvent].fileurl = fileurl;\n        changedfilescpy[selectedEvent].type = type;\n        changedfilescpy[selectedEvent].ischanged = true;\n        changedfilescpy[selectedEvent].selectedEvent = selectedEvent\n      }\n\n    }\n    console.log(changedfilescpy)\n    await setchangedfiles(changedfilescpy);\n  }\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\n  });\n  async function grabUrsl(eventdata) {\n    debugger\n    let urlscpy = [];\n    let fileurl = \"\"\n    let unuls = \"\"\n    eventdata.map((data, index) => {\n      console.log(data.file)\n      fileurl = data.file.split(\"https://firebasestorage.googleapis.com/v0/b/mobilly-invite.appspot.com/o/\")[1].split(\"?\")[0];\n      fileurl = fileurl.replaceAll(\"%2F\", \"/\");\n      fileurl = fileurl.split(\"Mob-invited/\")[1];\n      console.log(fileurl);\n      unuls = fileurl\n      setuniqueurl(fileurl.split(\"/Event_image\")[0].match(/\\d+/g)[0]);\n      seturltype(fileurl.split(\"/Event_image\")[0].match(/[a-zA-Z]+/g)[0]);\n      urlscpy.push(fileurl)\n    })\n    urlscpy = urlscpy.reverse()\n    await seturls(urlscpy)\n    console.log(urlscpy)\n  }\n  useEffect(async () => {\n    await uploadfile(Fileurl, Filetype, selectedEvent, selectedEvent)\n  }, [Fileurl])\n  return (\n    <div>\n      {/* <Header /> */}\n      <Container>\n        <Row style={{ marginTop: 30, marginRight: 3, marginLeft: 3 }}>\n          <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\n            <IoArrowBackCircleOutline\n              size={40}\n              onClick={() => {\n                history.goBack();\n              }}\n            />\n            Edit Events\n          </p>\n        </Row>\n        <Row>\n          <Col xs={12} md={6}>\n            <FormControl\n              variant=\"outlined\"\n              className=\"w-100-p  m-b-10 \"\n              size=\"small\"\n              variant=\"outlined\"\n              InputProps={{\n                classes: {\n                  notchedOutline: classes.notchedOutline,\n                },\n              }}\n            >\n              <Select\n                native\n                value={Type}\n                onChange={(e) => SetType(e.target.value)}\n                className=\"selectboxblue\"\n              >\n                <option value={Type}>{Type}</option>\n                {Type !== \"Wedding\" ? (\n                  <option value=\"Wedding\">Wedding</option>\n                ) : (\n                  <></>\n                )}\n                {Type !== \"Birthday\" ? (\n                  <option value=\"Birthday\">Birthday</option>\n                ) : (\n                  <></>\n                )}\n                {Type !== \"Wedding Anniversary\" ? (\n                  <option value=\"Wedding Anniversary\">\n                    Wedding Anniversary\n                  </option>\n                ) : (\n                  <></>\n                )}\n                {Type !== \"Get Together\" ? (\n                  <option value=\"Get Together\">Get Together</option>\n                ) : (\n                  <></>\n                )}\n                {Type !== \"Formal Event\" ? (\n                  <option value=\"Formal Event\">Formal Event</option>\n                ) : (\n                  <></>\n                )}\n              </Select>\n              {IsSubmitted === true && Type === \"\" ? (\n                <span className=\"error p-l-5px\">please enter Type</span>\n              ) : (\n                <></>\n              )}\n            </FormControl>\n          </Col>\n          <Col xs={12} md={6}>\n            <div className=\"noe r4vw \">\n              <Grid container spacing={0}>\n                <Grid item xs={false} sm={1} md={2} />\n                <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\n                  Number Of Events\n                </Grid>\n                <Grid item xs={5} sm={5} md={4}>\n                  <Grid container spacing={0}>\n                    <Grid item xs={12}>\n                      <div className=\"Cirlce tar  fl\">\n                        <AddCircleOutlineIcon\n                          className=\"l-blue-t\"\n                          fontSize=\"large\"\n                          onClick={() => {\n                            addevent();\n                          }}\n                        />\n                      </div>\n                      <div className=\"white box  fl\">{Eventdata.length}</div>\n                      <div className=\"Cirlce tal  fl\">\n                        <RemoveCircleOutlineIcon\n                          className=\"l-blue-t \"\n                          fontSize=\"large\"\n                          onClick={() => {\n                            removeevent();\n                          }}\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </div>\n          </Col>\n        </Row>\n        <Container>\n          <Row>\n            <Eventnamebox\n              data={Eventdata}\n              SelectedEvent={selectedEvent}\n              SelectEvent={preserve}\n            />\n          </Row>\n          <Row>\n            <Col xs={12}>\n              {Fileurl === \"\" ? (\n                <center>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <img\n                      src={AddImg}\n                      className={\"add-Img \"}\n                    // onClick={() => {\n                    //   toggleShowPopup(true);\n                    // }}\n                    />{\" \"}\n                  </div>\n                </center>\n              ) : Fileurl !== undefined && Filetype !== undefined ? (\n                Filetype === \"png\" ||\n                  Filetype === \"jpg\" ||\n                  Filetype === \"jpeg\" ? (\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <img\n                      src={Fileurl}\n                      className={\"notTransparent uploaded-file w-100\"}\n                    />\n                  </div>\n                ) : (\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <video\n                      muted\n                      type=\"video/mp4\"\n                      autoPlay={true}\n                      src={Fileurl}\n                      preload=\"none\"\n                      className={\"notTransparent w-100\"}\n                    />\n                  </div>\n                )\n              ) : (\n                <></>\n              )}\n              {IsSubmitted === true && Fileurl === \"\" ? (\n                <span className=\"error p-l-5px\">please Add File</span>\n              ) : (\n                <></>\n              )}\n            </Col>\n          </Row>\n          <Row>\n            <span className=\"label\">Name</span>\n            <TextField\n              id=\"outlined-basics\"\n              variant=\"outlined\"\n              className=\"w-100-p\"\n              size=\"small\"\n              value={Name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              InputProps={{\n                classes: {\n                  notchedOutline: classes.notchedOutline,\n                },\n              }}\n            />\n            {IsSubmitted === true && Name === \"\" ? (\n              <span className=\"error p-l-5px\">please enter Name</span>\n            ) : (\n              <></>\n            )}\n          </Row>\n          <Row>\n            <Col xs={6} md={6} className=\"p-5px\">\n              <span className=\"label\">Time</span>\n              <TextField\n                id=\"time\"\n                // label=\"Time\"\n                variant=\"outlined\"\n                type=\"time\"\n                size=\"small\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                className=\"w-100-p \"\n                inputProps={{\n                  step: 300, // 5 min\n                }}\n                ampm={false}\n                value={Time}\n                onChange={(e) => {\n                  setTime(e.target.value);\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {IsSubmitted === true && Time === \"\" ? (\n                <span className=\"error p-l-5px\">please Add File</span>\n              ) : (\n                <></>\n              )}\n            </Col>\n            <Col xs={6} md={6} className=\"p-5px\">\n              <span className=\"label\">Date</span>\n              <TextField\n                id=\"date\"\n                // label=\"Date\"\n                type=\"date\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                size=\"small\"\n                className=\"w-100-p\"\n                value={Date}\n                onChange={(e) => {\n                  setDate(e.target.value);\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {IsSubmitted === true && Date === \"\" ? (\n                <span className=\"error p-l-5px\">please Add File</span>\n              ) : (\n                <></>\n              )}\n            </Col>\n            <Col xs={6} className=\"p-5px\">\n              <span className=\"label\">Type</span>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                className=\"w-100-p selectboxblue pob0\"\n                value={VenueType}\n                variant=\"outlined\"\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n                size=\"small\"\n              >\n                <MenuItem\n                  className=\"w-100-p\"\n                  onClick={(e) => {\n                    setVenueType(\"Online-Inapp\");\n                  }}\n                  value=\"Online-Inapp\"\n                >\n                  Online-Inapp\n                </MenuItem>\n                <MenuItem\n                  className=\"w-100-p\"\n                  onClick={(e) => {\n                    setVenueType(\"Online\");\n                  }}\n                  value=\"Online\"\n                >\n                  Online\n                </MenuItem>\n\n                <MenuItem\n                  className=\"w-100-p\"\n                  onClick={(e) => {\n                    setVenueType(\"Offline\");\n                  }}\n                  value=\"Offline\"\n                >\n                  Offline\n                </MenuItem>\n                <MenuItem\n                  className=\"w-100-p\"\n                  onClick={(e) => {\n                    setVenueType(\"Both\");\n                  }}\n                  value=\"Both\"\n                >\n                  Both\n                </MenuItem>\n              </Select>\n              {IsSubmitted === true && VenueType === \"\" ? (\n                <span className=\"error p-l-5px\">please Add File</span>\n              ) : (\n                <></>\n              )}\n            </Col>\n            <Col\n              xs={6}\n              className=\"p-5px\"\n              style={{\n                display:\n                  VenueType === \"Online\" || VenueType === \"Both\"\n                    ? \"block\"\n                    : \"none\",\n              }}\n            >\n              <span className=\"label\">Change Links </span>\n              <TextField\n                id=\"outlined-basic\"\n                size=\"small\"\n                variant=\"outlined\"\n                className=\"w-100-p \"\n                value={Link}\n                onChange={(e) => {\n                  setLink(e.target.value);\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {IsSubmitted === true && Link === \"\" ? (\n                <span className=\"error p-l-5px\">please Add File</span>\n              ) : (\n                <></>\n              )}\n            </Col>\n            <Col\n              xs={VenueType === \"Offline\" ? 6 : 12}\n              className=\"p-5px\"\n              style={{\n                display:\n                  VenueType === \"Offline\" || VenueType === \"Both\"\n                    ? \"block\"\n                    : \"none\",\n              }}\n            >\n              <Map\n                setLocation={setLocation}\n                location={address}\n                setaddress={setaddress}\n                type={\"Offline\"}\n              />\n              {IsSubmitted === true && address === \"\" ? (\n                <span className=\"error p-l-5px\">please Add File</span>\n              ) : (\n                <></>\n              )}\n            </Col>\n            <Col xs={12} className=\"p-5px\">\n              <span className=\"label\">Description</span>\n              <TextField\n                id=\"outlined-basic\"\n                // label=\"Description\"\n                size=\"small\"\n                variant=\"outlined\"\n                className=\"w-100-p m-7px \"\n                value={Description}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {IsSubmitted === true && Description === \"\" ? (\n                <span className=\"error p-l-5px\">please Add File</span>\n              ) : (\n                <></>\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n      <div className=\"update\">\n        <center>\n          <Button\n            variant=\"primary\"\n            className=\"update-buttons\"\n            onClick={() => {\n              save();\n              setIsSubmitted(true);\n            }}\n          >\n            Update\n          </Button>\n          <Button\n            variant=\"outline-danger\"\n            className=\"update-buttons\"\n            onClick={() => {\n              //reload();\n              history.goBack();\n            }}\n          >\n            Cancel\n          </Button>\n        </center>\n      </div>\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Sidebar\\AdminSidebar.js",["1463","1464","1465","1466"],"import React from \"react\";\nimport \"../Sidebar/Sidebar.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RiArrowRightSLine } from \"react-icons/ri\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Component } from \"react\";\nimport Header from \"../Helpers/Header/Header\";\nimport history from \"../../Utils/History\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nexport default function AdminSidebar(props) {\n  let Eventdata = [];\n  let base = \"\";\n  let MyEvents = useSelector(\n    (state) => state.Eventdata.myEvents[props.match.params.id]\n  );\n  let myInvitations = useSelector(\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\n  );\n  if (props.location.pathname === \"/MyEvents/admin/\" + props.match.params.id) {\n    Eventdata = MyEvents;\n    base = \"MyEvents\";\n  } else {\n    Eventdata = myInvitations;\n    base = \"inv\";\n  }\n  console.log(Eventdata);\n  return (\n    <>\n      <div className=\"w-100 desktop-only \">\n        <Header />\n      </div>\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\n        <Row>\n          <Col>\n            <p style={{ fontWeight: 700, fontSize: 23 }}>\n              <IoArrowBackCircleOutline\n                size={40}\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n              Admin\n            </p>\n          </Col>\n        </Row>\n        {Eventdata &&\n          Eventdata.map((eventdata, index) => (\n            <a\n              className=\"linkto-rows\"\n              onClick={() => {\n                history.push(\n                  \"/\" + base + \"/admin/\" + props.match.params.id + \"/\" + index\n                );\n              }}\n            >\n              <Row className=\"sidebar-rows\">\n                <Col>{eventdata.Name}</Col>\n                <Col>\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\n                </Col>\n              </Row>\n            </a>\n          ))}\n      </Container>\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Admin\\EventAdmin.js",["1467","1468","1469","1470","1471","1472","1473","1474","1475","1476"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"../Helpers/Header/Header.js\";\nimport Toggler from \"../Helpers/EventInvitoggler/Toggler.js\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport \"./EventAdmin.css\";\nimport Chart from \"react-apexcharts\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport history from \"../../Utils/History\";\nimport { url } from \"../../Utils/Config\";\nimport axios from \"axios\";\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { Grid } from \"@material-ui/core\";\nexport default function EventAdmin(props) {\n  const dispatch = useDispatch();\n  const [options, setoptions] = useState({\n    labels: [\"Yes\", \"No\", \"Maybe\", \"N/A\"],\n    colors: [\"#008744\", \"#E74D5F\", \"#FFA700\", \"#0000fa\"],\n  });\n  const [series, setseries] = useState([1, 1, 1, 1]);\n  const [comment, setcomment] = useState(\"\");\n  const [base, setbase] = useState(\"\")\n  const Auth = useSelector((state) => state.Auth);\n  const [Eventdata, setEventdata] = useState(\"\")\n  const [Rsvplist, setRsvplist] = useState([])\n  let MyEvents = useSelector(\n    (state) =>\n      state.Eventdata.myEvents\n  );\n\n  useEffect(async () => {\n    debugger\n    if (MyEvents && MyEvents.length > 0) {\n      let Rsvplistcpy = []\n      let accept = [];\n      let decline = [];\n      let maybe = [];\n      let Participants = []\n      let Host = []\n      let all = []\n      await setEventdata(MyEvents[props.match.params.id][props.match.params.eid])\n      await setRsvplist(MyEvents[props.match.params.id][props.match.params.eid])\n      await setRsvplist(MyEvents[props.match.params.id][props.match.params.eid].RSVPList)\n      Participants = MyEvents[props.match.params.id][props.match.params.eid].Participants;\n      Host = MyEvents[props.match.params.id][props.match.params.eid].Host;\n      if (MyEvents[props.match.params.id][props.match.params.eid].RSVPList !== undefined || MyEvents[props.match.params.id][props.match.params.eid].RSVPList.length > 0) {\n        Rsvplistcpy = [...MyEvents[props.match.params.id][props.match.params.eid].RSVPList] || [];\n\n        Rsvplistcpy.map((rsvp) => {\n          if (!Host.includes(rsvp.By)) {\n            if (rsvp.Status === \"Accept\") {\n              accept.push(rsvp);\n            }\n            if (rsvp.Status === \"Decline\") {\n              decline.push(rsvp);\n            }\n            if (rsvp.Status === \"May Be\") {\n              maybe.push(rsvp);\n            }\n          }\n\n        });\n        let allrsvp = accept.concat(decline);\n        allrsvp = allrsvp.concat(maybe);\n        for (let j = 0; j < Participants.length; j++) {\n          let Status = \"invited\";\n          let found = false;\n          for (let k = 0; k < allrsvp.length; k++) {\n            if (\n              allrsvp[k].By === Participants[j] ||\n              allrsvp[k].By === \"+91\" + Participants[j]\n            ) {\n              Status = allrsvp[k].Status;\n              found = true;\n              break;\n            } else {\n              console.log(\"x\");\n            }\n          }\n\n          if (Participants[j].toString().startsWith(\"+\")) {\n            all.push({ By: Participants[j], Status: Status });\n          } else {\n            all.push({ By: \"+91\" + Participants[j], Status: Status });\n          }\n          found = false;\n        }\n        setseries([accept.length, decline.length, maybe.length, Participants.length - (accept.length + decline.length + maybe.length)]);\n        console.log(90, [accept.length, decline.length, maybe.length, Participants.length - (accept.length + decline.length + maybe.length)])\n      }\n      else {\n        setseries([0, 0, 0, Participants.length]);\n        console.log(94, [0, 0, 0, Participants.length])\n      }\n    } else {\n      await dispatch(GetEvents());\n\n    }\n\n  }, [MyEvents])\n  const submit = () => {\n    if (comment !== \"\") {\n      console.log({\n        message: comment,\n        Participants: Eventdata.Participants,\n        by: Auth.Phone,\n        img: Eventdata.file,\n        Eid: Eventdata._id,\n        Maincode: Eventdata.MainCode,\n      });\n\n      axios\n        .post(url + \"notification/sendNotifications\", {\n          message: comment,\n          Participants: Eventdata.Participants,\n          by: Auth.Phone,\n          img: Eventdata.file,\n          Eid: Eventdata._id,\n          Maincode: Eventdata.MainCode,\n        })\n        .then((res) => {\n          if (res.data.data) {\n            console.log(res.data.data);\n            setcomment(\"\");\n            alert(\"message Sent as Notification\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(\"message failed \");\n        });\n    }\n  };\n  return (\n    <>\n      <div className=\"w-100 desktop-only \">\n        <Header />\n      </div>\n      <Container style={{ marginTop: 25 }}>\n        <Row>\n          <Col>\n            <p style={{ fontWeight: 700, fontSize: 23 }}>\n              <IoArrowBackCircleOutline\n                size={40}\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n              Event\n            </p>\n          </Col>\n          <Col>\n            {/* <Button\n                  variant=\"dark\"\n                  style={{ float: \"right\", borderRadius: 20 }}\n                  className=\"edit-eventbtn\"\n                  onClick={() => {\n                    history.push(\n                      \"/\" + base + \"/Manage-Event/\" +\n                      props.match.params.id +\n                      \"/\" +\n                      props.match.params.eid\n                    );\n                  }}\n                >\n                  Edit Event\n                </Button> */}\n          </Col>\n        </Row>\n\n        <Chart\n          options={options}\n          series={series}\n          type=\"donut\"\n          width=\"400\"\n          style={{\n            margin: \"auto\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        />\n        <Row style={{ justifyContent: \"center\" }}>\n          <Col>\n            {Eventdata && Eventdata.EntryWay === \"Code\" ? <>\n\n\n              <Grid\n                item\n                xs={12}\n                className=\"tac m-b-25px clipboard\"\n                onClick={() => {\n                  navigator.clipboard.writeText(\n                    \"https://mobillyinvite.com/MyInvitations/\" + Eventdata.MainCode + \"/\" + Eventdata.code\n                  );\n                }}\n              >\n                <Grid container spacing={0} >\n                  <Grid item xs={10} md={11} className=\"link\" >\n                    {\"https://mobillyinvite.com/MyInvitations/xxxxx\"\n                    }\n\n                  </Grid>\n                  <Grid item xs={2} md={1} className=\"p-t-10\">\n                    <FileCopyIcon className=\"v-t\" />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n            </> : <> <Grid\n              item\n              xs={12}\n              className=\"tac m-b-25px clipboard\"\n              onClick={() => {\n                navigator.clipboard.writeText(\n                  \"https://mobillyinvite.com/MyInvitations/\" +\n                  Eventdata.MainCode\n                );\n              }}\n            >\n              <Grid container spacing={0}>\n                <Grid item xs={10} md={11} className=\"link\">\n                  {\"https://mobillyinvite.com/xxxxx\"}\n                </Grid>\n                <Grid item xs={2} md={1} className=\"p-t-10\">\n                  <FileCopyIcon className=\"v-t\" />\n                </Grid>\n              </Grid>\n            </Grid></>}\n\n          </Col>\n        </Row>\n        <Row className=\"messageboard\">\n          <h3 className=\"messageboard-txt\">Message Board</h3>\n        </Row>\n        <Row style={{ justifyContent: \"center\" }}>\n          {\" \"}\n          <Form.Control\n            as=\"textarea\"\n            rows={6}\n            placeholder=\"Write text here\"\n            style={{ marginTop: 10 }}\n            onChange={(e) => {\n              setcomment(e.target.value);\n            }}\n            value={comment}\n          />\n          <Button\n            variant=\"outline-primary\"\n            style={{ width: \"40vh\", borderRadius: 20, marginTop: 30 }}\n            onClick={() => {\n              submit();\n            }}\n          >\n            Send\n          </Button>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Settings\\AlertNotif\\AlertNotif.js",["1477"],"import { Button, Modal } from \"react-bootstrap\";\nimport React from \"react\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nclass AlertNotif extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showHide: false,\n    };\n  }\n\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button variant=\"primary\" onClick={() => this.handleModalShowHide()}>\n          Alert Notification\n        </Button>\n        <Modal show={this.state.showHide}>\n          <CancelIcon\n            onClick={() => this.handleModalShowHide()}\n            color=\"secondary\"\n            className=\"popup-close\"\n            style={{\n              float: \"left\",\n              height: 40,\n              width: 40,\n              marginLeft: 430,\n              marginTop: 10,\n            }}\n          />\n          <Modal.Body>\n            <div className=\"NotificationsAlerts p-5\">\n              <h4 className=\"pb-3\" style={{ fontWeight: \"bold\" }}>\n                Notifications Alerts\n              </h4>\n              <br />\n              <div\n                className=\"Alerts-box1  p-3 mb-3\"\n                style={{\n                  boxShadow: \"0px 0px 10px 4px #f0efef\",\n                  borderRadius: 10,\n                }}\n              >\n                <div className=\"row\">\n                  <div className=\"col-md-6 col-6\">\n                    <h6>All</h6>\n                  </div>\n                  <div className=\"col-md-6 col-6\">\n                    <label className=\"radio-inline\" style={{ float: \"right\" }}>\n                      <input type=\"radio\" name=\"notifalert\" />\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"Alerts-box1  p-3 mb-3\"\n                style={{\n                  boxShadow: \"0px 0px 10px 4px #f0efef\",\n                  borderRadius: 10,\n                }}\n              >\n                <div className=\"row\">\n                  <div className=\"col-md-6 col-6\">\n                    <h6>Admin</h6>\n                  </div>\n                  <div className=\"col-md-6 col-6\">\n                    <label className=\"radio-inline\" style={{ float: \"right\" }}>\n                      <input type=\"radio\" name=\"notifalert\" />\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"Alerts-box1  p-3 mb-3\"\n                style={{\n                  boxShadow: \"0px 0px 10px 4px #f0efef\",\n                  borderRadius: 10,\n                }}\n              >\n                <div className=\"row\">\n                  <div className=\"col-md-6 col-6\">\n                    <h6>Only Me</h6>\n                  </div>\n                  <div className=\"col-md-6 col-6\">\n                    <label className=\"radio-inline\" style={{ float: \"right\" }}>\n                      <input\n                        className=\"buttonwrap\"\n                        type=\"radio\"\n                        name=\"notifalert\"\n                      />\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <a href=\"#\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary mt-3 p-2\"\n                  style={{\n                    width: \"100%\",\n                    borderRadius: 50,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Save\n                </button>\n              </a>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AlertNotif;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\ReducerCombiner.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\Header\\Header.js",["1478","1479","1480","1481","1482","1483","1484"],"import React, { useState, useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./Header.css\";\nimport Headings from \"../../../Utils/Headings\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport { useSelector } from \"react-redux\";\nimport { logout } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\nimport { useDispatch } from \"react-redux\";\nimport Notification from \"../../Notifications/Notification\";\nimport Popup from \"../Popups/Popup\";\nexport default function Header(props) {\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const Auth = useSelector((state) => state.Auth);\n  const [showPopup, toggleShowPopup] = useState(false);\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  useEffect(() => {\n    if (Auth.isExpired === true) {\n      dispatch(logout());\n    }\n  }, [Auth.isExpired]);\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton\n          aria-label=\"show 4 new mails\"\n          color=\"inherit\"\n          className=\"p-0\"\n        >\n          <InfoOutlinedIcon />\n        </IconButton>\n        <span className=\"menu-option\">Info</span>\n      </MenuItem>\n      {props.showextra === true ? (\n        <MenuItem\n          onClick={() => {\n            handleMenuClose(true);\n            toggleShowPopup(true);\n          }}\n        >\n          <IconButton\n            aria-label=\"show 4 new mails\"\n            color=\"inherit\"\n            className=\"p-0\"\n          >\n            <NotificationsIcon />\n          </IconButton>\n          <span className=\"menu-option\">Notification</span>\n        </MenuItem>\n      ) : (\n        <div></div>\n      )}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <SearchIcon className=\"search-button\" />\n        </IconButton>\n        <p>Search</p>\n      </MenuItem> */}\n      <MenuItem\n        onClick={(e) => {\n          handleProfileMenuOpen(e);\n          dispatch(logout());\n        }}\n      >\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className=\"p-0\"\n        >\n          <PowerSettingsNewIcon color=\"secondary\" className=\"search-button\" />\n        </IconButton>\n        <span className=\"menu-option\">Logout</span>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={props.ismobile !== undefined ? props.ismobile : \"grow\"}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className=\"menuButton\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            {/* <MenuIcon /> */}\n          </IconButton>\n\n          <Headings url={props.url} />\n\n          <InputBase\n            className=\"inputRoot inputInput\"\n            inputProps={{ \"aria-label\": \"search\" }}\n          />\n\n          <div className=\"grow\" />\n          <div className=\"sectionDesktop\">\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <SearchIcon className=\"search-button\" />\n            </IconButton> */}\n            {Auth.isLoggedIn === true ? (\n              <>\n                <IconButton\n                  aria-label=\"show 4 new mails\"\n                  color=\"inherit\"\n                  className=\"Nav-icon\"\n                >\n                  <InfoOutlinedIcon color=\"primary\" />\n                </IconButton>\n                {props.showextra === true ? (\n                  <IconButton\n                    aria-label=\"show 4 new mails\"\n                    color=\"inherit\"\n                    className=\"Nav-icon\"\n                    onClick={() => {\n                      toggleShowPopup(true);\n                    }}\n                  >\n                    <NotificationsIcon color=\"default\" />\n                  </IconButton>\n                ) : (\n                  <></>\n                )}\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"account of current user\"\n                  aria-controls={menuId}\n                  aria-haspopup=\"true\"\n                  onClick={handleProfileMenuOpen}\n                  color=\"inherit\"\n                  className=\"Nav-icon\"\n                >\n                  {Auth.Profile === \"\" ? (\n                    <AccountCircle />\n                  ) : (\n                    <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\n                  )}\n                </IconButton>\n                <IconButton\n                  aria-label=\"show 4 new mails\"\n                  color=\"inherit\"\n                  className=\"Nav-icon\"\n                  onClick={() => {\n                    dispatch(logout());\n                  }}\n                >\n                  <PowerSettingsNewIcon color=\"secondary\" />\n                </IconButton>\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n          <div className=\"sectionMobile\">\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {Auth.isLoggedIn === true ? renderMobileMenu : <></>}\n      {Auth.isLoggedIn === true ? renderMenu : <></>}\n      <Popup\n        toggleShowPopup={toggleShowPopup}\n        showPopup={showPopup}\n        component={Notification}\n      />\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\Invitation.js",["1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501"],"import React, { useEffect, useState } from \"react\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport NoInv from \"../../Assets/NoInvitation.svg\";\nimport \"./Invitations.css\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport NotificationsOffIcon from \"@material-ui/icons/NotificationsOff\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport history from \"../../Utils/History\";\nimport Notifications from \"../Notifications/Notification\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport { useSelector } from \"react-redux\";\nimport UserProfile from \"../UserPorfile/UserProfile\";\n\nexport default function Invitation(props) {\n  const [data, setData] = useState(props.data);\n  const [show, setshow] = useState(false);\n  const [MainCode, setmaincode] = useState(\"\");\n  const Auth = useSelector(state => state.Auth)\n  const [showPopup, toggleShowPopup] = useState(false);\n  const [useiinfopopup, setuserInfopopup] = useState(false);\n  useEffect(async () => {\n    console.log(props.data);\n    let datacpy = [...props.data];\n\n    await setData(props.data);\n  }, [props.data]);\n\n  if (props.data !== undefined && props.data.length > 0) {\n  } else {\n    return <img src={NoInv} className=\"nodata\" />;\n  }\n\n  return (\n    <Grid container spacing={0} className=\"mb-100\">\n      <Popup\n        component={UserProfile}\n        setuserInfopopup={setuserInfopopup}\n        toggleShowPopup={setuserInfopopup}\n        showPopup={useiinfopopup}\n        url={\"MyEvents/add-event\"}\n      />\n      <Popup\n        component={Notifications}\n        setuserInfopopup={setshow}\n        toggleShowPopup={setshow}\n        showPopup={show}\n        MainCode={MainCode}\n        showinvitaions={true}\n\n      />\n      {data.map((inv, index) => (\n        <Grid\n          item\n          xs={12}\n          sm={6}\n          className=\"InvitationCard\"\n          key={\"InvitationCard\" + index}\n        >\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\n            src={inv[0].file}\n            className=\"inv-img\"\n            onClick={() => {\n              console.log(Auth.Name)\n              Auth.Name == \"\" || Auth.Name == undefined ?\n                setuserInfopopup(true)\n                :\n                history.push(\"/inv/eventpage/\" + index);\n            }}\n          />) : (\n            <video\n              muted\n              type=\"video/mp4\"\n              autoPlay={true}\n              src={\n                inv[0].file\n              }\n              onClick={() => {\n                console.log(Auth.Name)\n                Auth.Name == \"\" || Auth.Name == undefined ?\n                  setuserInfopopup(true)\n                  :\n                  history.push(\"/inv/eventpage/\" + index);\n              }}\n              preload=\"none\"\n              className='w-100 inv-img'\n            />\n          )}\n\n          <NotificationsNoneIcon\n            className=\"card-button Notifyme t-white\"\n            onClick={async () => {\n              if (Auth.Name !== \"\" || Auth.Name !== undefined) {\n                await setmaincode(inv[0].MainCode)\n                await setshow(true)\n              } else {\n                setuserInfopopup(true)\n              }\n            }}\n          />\n          <div className=\"bottom-bar\">\n            <Grid container spacing={0}>\n              <Grid item xs={9}>\n                <Grid container spacing={0} className=\"event-info\">\n                  <Grid item xs={12} className=\"fs-bold t-white\">\n                    {inv[0].Name}\n                  </Grid>\n                  <Grid item xs={12} className=\"fs-small t-white \">\n                    {inv[0].Date} {inv[0].Time}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={2}>\n                <button\n                  className=\"card-button rsvp-button \"\n                  onClick={(e) => {\n                    console.log(Auth.Name)\n                    Auth.Name == \"\" || Auth.Name == undefined ?\n                      setuserInfopopup(true)\n                      :\n                      history.push(\"/inv/rsvp/\" + index);\n                    e.preventDefault();\n                  }}\n                >\n                  RSVP\n                </button>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js",["1502","1503","1504"],"import axios from \"axios\";\nimport { url } from \"../../Utils/Config\";\nimport jwt_decode from \"jwt-decode\";\nimport history from \"../../Utils/History\";\nimport { SAVECHATS, GOTCHATS, UPDATECHAT } from \"../Actions/ChatActions\";\nexport function savechats(DATA) {\n  return (dispatch) => {\n    dispatch({ type: SAVECHATS, payload: DATA });\n  };\n}\nexport function creategroup(Name, room, Participants, GrpPhoto, Type) {\n  return (dispatch) => {\n    axios\n      .post(url + \"chatgroup/createroom\", {\n        Name: Name,\n        room: room,\n        Participants: Participants,\n        GrpPhoto: GrpPhoto,\n        Type: Type,\n      })\n      .then((res) => {\n        dispatch(getChats());\n      });\n  };\n}\nexport function updatechat(data, room) {\n  return (dispatch) => {\n    dispatch({\n      type: UPDATECHAT,\n      payload: {\n        data,\n        room,\n      },\n    });\n  };\n}\nexport function getChats() {\n  return (dispatch) => {\n    axios.get(url + \"chatgroup/getmyrooms\").then((res) => {\n      dispatch({ type: SAVECHATS, payload: res.data.Chatgroup });\n      console.log(res);\n      return true\n    });\n  };\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\postfunctions.js",["1505"],"import { GOTPOST } from \"../Actions/PostActions\";\nimport axios from \"axios\";\nimport { url } from \"../../Utils/Config\";\nimport { GetEvents } from './Eventfunctions'\nimport { getNotification } from './NotificationFunctions'\nexport function getposts() {\n  return (dispatch) => {\n\n    axios.get(url + \"post/getposts\").then((res) => {\n      dispatch({\n        type: GOTPOST,\n        payload: res.data.data,\n      });\n      return true\n      console.log(res);\n    });\n  };\n}\nexport function likepost(id, by, MainCode) {\n  return (dispatch) => {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    axios.post(url + \"post/like\", { id: id, by: by, date: dateTime, MainCode: MainCode }).then((res) => {\n      dispatch(getNotification());\n      console.log(res);\n    });\n  };\n}\nexport function likecomment(id, by, MainCode) {\n  return (dispatch) => {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    axios.post(url + \"event/likecomment\", { id: id, by: by, date: dateTime, MainCode: MainCode }).then((res) => {\n      dispatch(GetEvents());\n      dispatch(getNotification());\n      console.log(res);\n    });\n  };\n}\nexport function addcomments(id, by, comment, MainCode) {\n  return (dispatch) => {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    axios\n      .post(url + \"post/comment\", { id: id, by: by, comment: comment, date: dateTime, MainCode: MainCode })\n      .then((res) => {\n        console.log(res);\n        dispatch(GetEvents());\n        dispatch(getNotification());\n        return 1;\n\n      });\n  };\n}\n\nexport function addpost(id, by, furl, type, tags, caption) {\n  return (dispatch) => {\n    console.log(\"alling\");\n    axios\n      .post(url + \"post/add\", {\n        id: id,\n        by: by,\n        furl: furl,\n        type: type,\n        tags: tags,\n        caption: caption,\n      })\n      .then((res) => {\n        // dispatch(getposts());\n        dispatch(getNotification());\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js",["1506"],"import {\n  LOGINSUCCESS,\n  LOGINFAIL,\n  GOTOTP,\n  OPTEXPIRED,\n  OTPVERIFIED,\n  SAVEUSER,\n  LOGOUT,\n} from \"../Actions/AuthActions\";\nimport setAuthToken from \"../../Utils/Login\";\nimport axios from \"axios\";\nimport { url, testmode } from \"../../Utils/Config\";\nimport jwt_decode from \"jwt-decode\";\nimport history from \"../../Utils/History\";\nexport function getopt(Phone) {\n  return (dispatch) => {\n    const userData = {\n      Phone,\n    };\n    if (Phone !== \"\") {\n      if (testmode === true) {\n        dispatch(loginuser(Phone))\n      } else {\n        axios.post(url + \"auth/send-otp\", userData).then((res) => {\n          console.log(res);\n          if (res.data.status === \"pending\") {\n            dispatch({\n              type: GOTOTP,\n            });\n          } else {\n          }\n        });\n      }\n\n    }\n  };\n}\nexport function verifyotp(Phone, code) {\n  return async (dispatch) => {\n    if (code !== \"\") {\n      await axios\n        .post(url + \"auth/verify-otp\", { Phone, code })\n        .then(async (res) => {\n          await console.log(res);\n          if (\n            res.data.status === \"checked\" &&\n            res.data.response === \"approved\"\n          ) {\n            console.log(res.data.data);\n            dispatch({\n              type: OTPVERIFIED,\n            });\n          } else {\n            dispatch({\n              type: OPTEXPIRED,\n            });\n          }\n        });\n    }\n  };\n}\nexport function loginuser(Phone) {\n  return (dispatch) => {\n    const userData = {\n      Phone,\n    };\n    if (Phone !== \"\") {\n      axios\n        .post(url + \"auth/login\", userData)\n        .then((res) => {\n          if (res.data.token) {\n            const token = res.data.token;\n            const decoded = jwt_decode(token);\n            setAuthToken(token);\n            //checkfor codeed Events\n            dispatch({\n              type: LOGINSUCCESS,\n              payload: res.data,\n            });\n            // history.push(\"/home\");\n            return \"loggedin\";\n          } else if (res.data.status === \"-1\") {\n            dispatch({\n              type: LOGINFAIL,\n              payload: res.data.message,\n            });\n          } else if (res.data.details[0].message) {\n            dispatch({\n              type: LOGINFAIL,\n              payload: res.data.details[0].message,\n            });\n          }\n        })\n        .catch((err) => console.log(err));\n    } else {\n      alert(\"Auth falied\");\n    }\n  };\n}\nexport function logout(Phone) {\n  return (dispatch) => {\n    dispatch({\n      type: LOGOUT,\n    });\n    history.push(\"/\");\n  };\n}\nexport function saveuserinfo(Name, Gender, DOB, Image, nurl) {\n  return (dispatch) => {\n    console.log(\"/\" + nurl);\n    const userData = {\n      Name: Name,\n      Gender: Gender,\n      DOB: DOB,\n      Image: Image,\n    };\n    if (Name !== \"\" && Gender !== \"\") {\n      axios\n        .post(url + \"auth/userinfo\", userData)\n        .then((res) => {\n          if (res.data.user) {\n            console.log(res.data.user);\n            dispatch({\n              type: SAVEUSER,\n              payload: res.data.user,\n            });\n            if (nurl !== \"\") {\n              history.push(\"/\" + nurl);\n            }\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n}\nexport function getuserdata(Phone) {\n  const userData = {\n    Phone: Phone,\n  };\n  if (Phone !== \"\") {\n    axios\n      .get(url + \"auth/userinfo\", userData)\n      .then((res) => {\n        if (res.data.user) {\n          console.log(res.data.user);\n          return res.data.user;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return { err: \"error 404\" };\n      });\n  }\n}\nexport function checktoken() {\n  return (dispatch) => {\n    axios\n      .get(url + \"auth/verify\")\n      .then((res) => {\n        if (res.data.status !== \"valid\") {\n          dispatch({\n            type: LOGOUT,\n          });\n          history.push(\"\");\n        } else {\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: LOGOUT,\n        });\n      });\n  };\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js",["1507","1508"],"import axios from \"axios\";\nimport { url } from \"../../Utils/Config\";\nimport {\n  EVENTSAVED,\n  EVENTSAVEFAIL,\n  GOTMYEVENTS,\n  GETMYINVITAITONS, DELETEALBUM, DELETESTORY\n} from \"../Actions/EventActions\";\nimport { deleteEvent } from './CodeFunctions';\nimport history from \"../../Utils/History\";\nexport function saveEvent(edata) {\n  return (dispatch) => {\n    console.log(edata);\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    edata.date = dateTime;\n    axios.post(url + \"event/create\", edata).then(async (res) => {\n      console.log(res);\n      await dispatch({\n        type: DELETEALBUM\n      })\n      await dispatch({\n        type: DELETESTORY\n      })\n      history.push(\"/MyEvents/event-create-success/\" + res.data.MainCode);\n    });\n  };\n}\nexport function addme(code, maincode) {\n  return (dispatch) => {\n    console.log(code);\n    axios\n      .post(url + \"event/addme\", { code: code, maincode: maincode })\n      .then(async (res) => {\n\n        if (res.data.status === 'status') {\n          await dispatch(deleteEvent());\n          await dispatch(GetEvents());\n          await dispatch(GetInvitations());\n          alert(\"Event added\");\n        }\n\n      })\n      .catch((err) => {\n        return 0;\n      });\n  };\n}\nexport function GetEvents() {\n  return (dispatch) => {\n    axios.get(url + \"event/getmyEvents\").then((res) => {\n      dispatch({\n        type: GOTMYEVENTS,\n        payload: res.data.MyEvents,\n      });\n      return true\n    });\n  };\n}\n\nexport function GetInvitations() {\n  return (dispatch) => {\n    axios.get(url + \"event/getmyInvitaion\").then((res) => {\n      dispatch({\n        type: GETMYINVITAITONS,\n        payload: res.data.Invitations,\n      });\n      console.log(res);\n      return true\n    });\n  };\n}\nexport function rsvp_event(id, status, Phone) {\n  return (dispatch) => {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    axios\n      .post(url + \"event/rsvp\", { id: id, status: status, Phone: Phone, date: dateTime })\n      .then((res) => {\n        // dispatch(GetInvitations());\n        // dispatch(GetEvents());\n        console.log(res);\n        return 1\n      });\n  };\n}\nexport function like_event(id) {\n  return (dispatch) => {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    axios.post(url + \"event/like\", { id: id, dateTime: dateTime }).then((res) => {\n      dispatch(GetInvitations());\n      dispatch(GetEvents());\n      console.log(res);\n    });\n  };\n}\nexport function comment_event(id, comment) {\n  return (dispatch) => {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    axios\n      .post(url + \"event/comment\", { id: id, comment: comment, date: dateTime })\n      .then(async (res) => {\n\n        await dispatch(GetInvitations());\n        await dispatch(GetEvents());\n\n        return 1;\n      });\n  };\n}\nexport function change_event(id, type, data) {\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  var dateTime = date + ' ' + time;\n  return (dispatch) => {\n    axios\n      .post(url + \"event/updateevents\", { id: id, type: type, data: data, date: dateTime })\n      .then((res) => {\n        dispatch(GetInvitations());\n        dispatch(GetEvents());\n        console.log(res);\n      });\n  };\n}\nexport function add_participants(id, data) {\n  return (dispatch) => {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    axios\n      .post(url + \"event/add_participants\", { id: id, data: data, date: dateTime })\n      .then((res) => {\n        dispatch(GetInvitations());\n        dispatch(GetEvents());\n        console.log(res);\n      });\n  };\n}\nexport function update_participants(id, data) {\n  return (dispatch) => {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    var dateTime = date + ' ' + time;\n    axios\n      .post(url + \"event/UpdateParticipants\", { id: id, data: data, date: dateTime })\n      .then((res) => {\n        dispatch(GetInvitations());\n        dispatch(GetEvents());\n        console.log(res);\n      });\n  };\n}\nexport function update_events(Type, Eventdata, maincode) {\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  var dateTime = date + ' ' + time;\n  return (dispatch) => {\n    axios\n      .post(url + \"event/updateevents\", {\n        Type: Type,\n        Eventdata: Eventdata,\n        maincode: maincode,\n        date: dateTime\n      })\n      .then((res) => {\n        dispatch(GetInvitations());\n        dispatch(GetEvents());\n        console.log(res);\n      });\n  };\n}\nexport function uploadfiletoalbum(Album, MainCode) {\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  var dateTime = date + ' ' + time;\n  return (dispatch) => {\n    axios\n      .post(url + \"event/addalbum\", {\n        Album: Album, _id: MainCode, date: dateTime\n      })\n      .then((res) => {\n        dispatch(GetInvitations());\n        dispatch(GetEvents());\n        console.log(res);\n      });\n  };\n}","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js",["1509"],"import { GOTNOTIFICATIONS } from \"../Actions/NotificationAction\";\nimport axios from \"axios\";\nimport { url } from \"../../Utils/Config\";\nexport function getNotification() {\n  return (dispatch) => {\n    axios.get(url + \"notification/getNotifications\").then((res) => {\n      dispatch({\n        type: GOTNOTIFICATIONS,\n        payload: res.data.data,\n      });\n      return true\n      console.log(res);\n    });\n  };\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\CodeEventReducer.js",["1510","1511"],"const initialState = {\n    Maincode: \"\",\n    Code: \"\"\n};\n\nconst CodeEvent = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADDCODEDEVENT\":\n            return action.payload\n            break;\n        case \"DELETECODEDEVENT\":\n            return initialState;\n            break;\n        default:\n            return state;\n    }\n};\nexport default CodeEvent;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\PostReducer.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\NotificatonReducer.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\ChatReducer.js",["1512"],"const initialState = {\n  groups: [],\n  chats: [],\n};\n\nconst Chatdata = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GOTCHATS\":\n      return {\n        ...state,\n        chats: action.payload,\n      };\n    case \"SAVECHAT\":\n      return {\n        ...state,\n        groups: action.payload,\n      };\n    case \"UPDATECHAT\":\n      let groupscpy = [...state.groups];\n      groupscpy.map((grp) => {\n        if (grp.room === action.payload.room) {\n          grp.chats.push(action.payload.data);\n        }\n      });\n      return {\n        ...state,\n        groups: groupscpy,\n      };\n    default:\n      return state;\n  }\n};\nexport default Chatdata;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\CreateEventFormReducer.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\EventReducer.js",["1513"],"import { reactLocalStorage } from \"reactjs-localstorage\";\n\nconst initialState = {\n  ALBUM: [],\n  STORY: [],\n  myEvents: [],\n  myInvitations: [],\n};\n\nconst Eventdata = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SAVEALBUM\":\n      return {\n        ...state,\n        ALBUM: action.payload,\n      };\n    case \"DELETEALBUM\":\n      return {\n        ...state,\n        ALBUM: [],\n      };\n    case \"SAVESTORY\":\n      return {\n        ...state,\n        STORY: action.payload,\n      };\n    case \"DELETESTORY\":\n      return {\n        ...state,\n        STORY: [],\n      };\n    case \"GOTMYEVENTS\":\n      let datacopy = [];\n      let tracker = [];\n      let mcindex = 0;\n      //get similar events in single array\n      console.log(action.payload);\n      let payload = [];\n      if (action.payload !== undefined) {\n        payload = [...action.payload];\n      } else {\n        payload = [];\n      }\n      for (let i = 0; i < payload.length; i++) {\n        if (tracker.length === 0) {\n          datacopy[0] = [action.payload[i]];\n          tracker.push(action.payload[i].MainCode);\n        } else {\n          mcindex = tracker.includes(action.payload[i].MainCode);\n          if (mcindex === true) {\n            let key = tracker.findIndex(\n              (track) => track === action.payload[i].MainCode\n            );\n            console.log(key);\n            datacopy[key] = [...datacopy[key], action.payload[i]];\n          } else {\n            tracker.push(action.payload[i].MainCode);\n            datacopy.push([action.payload[i]]);\n          }\n        }\n      }\n\n      return {\n        ...state,\n        myEvents: datacopy,\n      };\n    case \"GETMYINVITAITONS\": {\n      let datacopy = [];\n      let tracker = [];\n      let mcindex = 0;\n      //get similar events in single array\n      console.log(action.payload);\n      let payload = [];\n      if (action.payload !== undefined) {\n        payload = [...action.payload];\n      } else {\n        payload = [];\n      }\n\n      for (let i = 0; i < payload.length; i++) {\n        if (tracker.length === 0) {\n          datacopy[0] = [action.payload[i]];\n          tracker.push(action.payload[i].MainCode);\n        } else {\n          mcindex = tracker.includes(action.payload[i].MainCode);\n          if (mcindex === true) {\n            let key = tracker.findIndex(\n              (track) => track === action.payload[i].MainCode\n            );\n            console.log(key);\n            datacopy[key] = [...datacopy[key], action.payload[i]];\n          } else {\n            tracker.push(action.payload[i].MainCode);\n            datacopy.push([action.payload[i]]);\n          }\n        }\n      }\n\n      return {\n        ...state,\n        myInvitations: datacopy,\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default Eventdata;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Reducers\\AuthReducer.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\Config.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\FileUpload_Download.js",["1514"],"import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\nexport async function uploadString(filedata, urlref) {\n  let dataurl = \"\";\n  if (!firebase.apps.length) {\n    firebase.initializeApp({\n      apiKey: \"AIzaSyA5Hi5O5ODsGzQuLsj__E3LecmmoSTRzek\",\n      authDomain: \"mobilly-invite.firebaseapp.com\",\n      projectId: \"mobilly-invite\",\n      storageBucket: \"mobilly-invite.appspot.com\",\n      messagingSenderId: \"828075682004\",\n      appId: \"1:828075682004:web:5a35293a7657af72b1f341\",\n      measurementId: \"G-KX6SQRPLCB\",\n    });\n  }\n\n  const ref = await firebase.storage().ref(\"/Mob-invited/\" + urlref);\n  await ref.putString(filedata, \"data_url\").then(async (snapshot) => {\n    console.log(\"fileuploaded\");\n    await ref.getDownloadURL().then((url) => {\n      dataurl = url;\n    });\n  });\n  return dataurl;\n}\nexport async function getString(urlref) {\n  var url = await firebase\n    .storage()\n    .ref(\"/Mob-invited/\" + urlref)\n    .getDownloadURL();\n  return url;\n}\nexport async function deletefile(urlref) {\n  if (!firebase.apps.length) {\n    firebase.initializeApp({\n      apiKey: \"AIzaSyA5Hi5O5ODsGzQuLsj__E3LecmmoSTRzek\",\n      authDomain: \"mobilly-invite.firebaseapp.com\",\n      projectId: \"mobilly-invite\",\n      storageBucket: \"mobilly-invite.appspot.com\",\n      messagingSenderId: \"828075682004\",\n      appId: \"1:828075682004:web:5a35293a7657af72b1f341\",\n      measurementId: \"G-KX6SQRPLCB\",\n    });\n  }\n  var storage = firebase.storage().ref();\n  var fileRef = await storage\n    .refFromURL(urlref)\n    .delete()\n    .then(function () {\n      // File deleted successfully\n      console.log(\"File Deleted\");\n    })\n    .catch(function (error) {\n      // Some Error occurred\n    });\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Events\\Eventlist.js",["1515","1516","1517","1518","1519"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport NoInv from \"../../Assets/NoInvitation.svg\";\nimport \"./Eventlist.css\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport Notifications from \"../Notifications/Notification\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport history from \"../../Utils/History\";\nexport default function EventList(props) {\n  const [show, setshow] = useState(false);\n  const [MainCode, setmaincode] = useState(\"\");\n\n  const [data, setData] = useState(props.data);\n  useEffect(async () => {\n    console.log(props.data);\n    await setData(props.data);\n  }, [props.data]);\n\n  if (props.data !== undefined && props.data.length > 0) {\n  } else {\n    return <img src={NoInv} className=\"nodata\" />;\n  }\n  return (\n    <Grid container className=\"mb-100 contain-main\">\n      <Popup\n        component={Notifications}\n        toggleShowPopup={setshow}\n        showPopup={show}\n        MainCode={MainCode}\n        showinvitaions={true}\n      // eventCode={eventCode}\n      />\n      {data.map((inv, index) => (\n        <Grid\n          item\n          xs={12}\n          sm={6}\n          className=\"InvitationCard\"\n          key={\"invContainer\" + index}\n\n\n        >\n\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\n            src={inv[0].file}\n            className=\"inv-img\"\n            onClick={() => {\n              history.push(\"/MyEvents/eventpage/\" + index);\n            }}\n          />) : (\n            <video\n              muted\n              type=\"video/mp4\"\n              autoPlay={true}\n              src={\n                inv[0].file\n              }\n              onClick={() => {\n                history.push(\"/MyEvents/eventpage/\" + index);\n              }}\n              preload=\"none\"\n              className='w-100 inv-img'\n            />\n          )}\n          <NotificationsNoneIcon\n            className=\"card-button Notifyme t-white\"\n            onClick={async () => {\n              await setmaincode(inv[0].MainCode);\n              // await seteventcode(inv[index].eventCode);\n              await setshow(true);\n            }}\n          />\n          <div className=\"bottom-bar\">\n            <Grid container spacing={0}>\n              <Grid item xs={8}>\n                <Grid container spacing={0} className=\"event-info\">\n                  <Grid item xs={12} className=\"fs-bold t-white\">\n                    {inv[0].Name}\n                  </Grid>\n                  <Grid item xs={12} className=\"fs-small t-white \">\n                    {inv[0].Date} {inv[0].Time}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={2}></Grid>\n            </Grid>\n          </div>\n        </Grid>\n      ))}\n\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\FootMenu\\FootMenu.js",["1520","1521","1522","1523","1524","1525"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, AppBar, Fab } from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport \"./FooterMenu.css\";\nimport history from \"../../../Utils/History\";\nimport { useSelector } from \"react-redux\";\nimport Popup from \"../Popups/Popup\";\nimport UserProfile from \"../../UserPorfile/UserProfile\";\nimport Entercode from \"../../Entercode/Entercode\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n    background: \"#3897F1\",\n    color: \"#fff\",\n    padding: \"33px\",\n  },\n}));\n\nexport default function FootMenu(props) {\n  const classes = useStyles();\n  const [menu, setMenu] = useState(0);\n  const Auth = useSelector((state) => state.Auth);\n  const [useiinfopopup, setuserInfopopup] = useState(false);\n  const [showPopup, toggleShowPopup] = useState(false);\n  return (\n    <AppBar\n      position=\"fixed\"\n      color=\"primary\"\n      className={classes.appBar}\n      color=\"default\"\n    >\n      <Toolbar>\n        <Fab\n          aria-label=\"add\"\n          className={classes.fabButton}\n          onClick={() => {\n            if (Auth.Name === \"\" || Auth.Name === undefined) {\n              setuserInfopopup(true);\n            } else {\n              history.push(\"MyEvents/add-event\");\n            }\n          }}\n        >\n          <AddIcon />\n        </Fab>\n        <Grid container spacing={0} className={classes.grow}>\n          <Grid\n            item\n            xs={5}\n            className={props.menu === 0 ? \"menubox activemenu\" : \"menubox\"}\n            onClick={() => {\n              props.setMenu(0);\n              history.push(\"/inv\");\n            }}\n          >\n            &nbsp;&nbsp;Invitations&nbsp;&nbsp;\n          </Grid>\n          <Grid xs={2}></Grid>\n          <Grid\n            item\n            xs={5}\n            className={props.menu === 1 ? \"menubox activemenu\" : \"menubox\"}\n            onClick={() => {\n              props.setMenu(1);\n              history.push(\"/MyEvents\");\n            }}\n          >\n            &nbsp;&nbsp;My Events&nbsp;&nbsp;\n          </Grid>\n        </Grid>\n      </Toolbar>\n      <Popup\n        component={UserProfile}\n        toggleShowPopup={setuserInfopopup}\n        showPopup={useiinfopopup}\n        url={\"MyEvents/add-event\"}\n      />\n      {/* <Popup\n        toggleShowPopup={toggleShowPopup}\n        showPopup={showPopup}\n        component={Entercode}\n        url={\"MyEvents/add-event\"}\n      /> */}\n    </AppBar>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js",["1526","1527"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport default function EventNameBox(props) {\n  const handleClick = (index) => {\n    props.SelectEvent(index);\n  };\n  const [rdata, setData] = useState(props.data);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data, props.SelectedEvent]);\n\n  return (\n    <Grid container spacing={1} className=\"eventslider\">\n      {rdata.map((d, index) => (\n        <Grid\n          item\n          xs={12 / rdata.length}\n          sm={12 / rdata.length}\n          md={12 / rdata.length}\n          key={index + \"k\"}\n        >\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={() => {\n              handleClick(index);\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n            className={\n              props.SelectedEvent === index\n                ? \"event-buttons current\"\n                : \"event-buttons \"\n            }\n          >\n            {d.Name === \"\" ? \"Event \" + (index + 1) : d.Name}\n          </Button>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\Maps\\Places.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\ChatWidget.js",["1528"],"import React from 'react';\nimport \"./styles.css\"\nimport { FaWhatsapp } from 'react-icons/fa'\n\nexport default function ChatWidget() {\n    return (\n        <div className=\"zap_widget\">\n            <a className=\"blantershow-chat\" title=\"Show Chat\" href=\"https://api.whatsapp.com/send?phone=919873971865&text=Hii%21%20There.\"><i className=\"fab fa-whatsapp\" />Contact Us</a>\n        </div>\n    )\n}","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\CompanySlide.js",["1529"],"import React from \"react\";\nimport Swiper from \"react-id-swiper\";\nimport BrandImage from \"../../Assets/resources/brand-1-1.png\";\nimport './styles.css'\nimport ZoomIcon from \"../../Assets/logo_zoom.png\";\n\n\nexport default function CompanySlide() {\n  const params = {\n    speed: 1000,\n    spaceBetween: 100,\n    autoplay: {\n      delay: 3000,\n      disableOnInteraction: false,\n    },\n    slidesPerView: 5,\n    rebuildOnUpdate: true,\n    // Responsive breakpoints\n    breakpoints: {\n      0: {\n        spaceBetween: 30,\n        slidesPerView: 2,\n      },\n      767: {\n        spaceBetween: 30,\n        slidesPerView: 3,\n      },\n      991: {\n        spaceBetween: 50,\n        slidesPerView: 4,\n      },\n      1499: {\n        slidesPerView: 5,\n      },\n    },\n  };\n\n  return (\n    <section className=\"brand-one\">\n\n      <Swiper className=\"brand-one__carousel\" {...params}>\n        <div>\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n        <div >\n          <img src={BrandImage} alt=\"\" />\n        </div>\n      </Swiper>\n\n    </section>\n  )\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\AboutBanner.js",["1530","1531","1532","1533"],"import React from \"react\";\nimport \"./styles.css\";\nimport DanceIcon from \"../../Assets/DanceIcon.png\"\nimport Swiper from \"react-id-swiper\";\nimport HappyIcon from \"../../Assets/Group 4317.png\"\nimport celebrateslide from \"../../Assets/celebrateslide.jpg\"\nimport birthdayslide from \"../../Assets/birthdayslide.jpg\"\n\n\nexport default function AboutBanner() {\n  return (\n    <Swiper>\n      <div className=\"personal_area py-75\" style={{ marginTop: 20 }}>\n        <div className=\"container\">\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\n            <div className=\"item\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <img\n                    src={celebrateslide}\n                    className=\"img-fluid\"\n                  />\n                </div>\n                <div className=\"col-md-6\">\n                  <h2 className=\" font-weight-bold\">Personal Events</h2>\n                  <p className=\"text-secondary\">\n                  Invite your guests now digitally on a DIY Platform with no\n                      hassle and also share your excitement by bringing them on\n                      the same platform, with lot more features to keep them all\n                      engaged. You can also share your memories/album with all\n                      the guests at a go and keep them all updated\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"personal_area py-75\">\n        <div className=\"container\">\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\n            <div className=\"item\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <img\n                    src={birthdayslide}\n                    className=\"img-fluid\"\n                  />\n                </div>\n                <div className=\"col-md-6\">\n                  <h2 className=\"font-weight-bold\">Video Conferencing</h2>\n                  <p className=\"text-secondary\">\n                  Excited about your child birthday? Now share your excitement with all your guests digitally. A smart tracker for RSVP and managing your guests. Also, keep your memories with you forever with digital albums. \n<br /><br />\n<span style={{textAlign:\"center\"}}>Create Invite Now!😊</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Swiper>\n  )\n}\n\n\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Additionals.js",["1534","1535","1536","1537","1538","1539"],"import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport PictureIcon from \"../../Assets/PictureIcon.png\"\nimport EngageIcon from \"../../Assets/EngageIcon.png\"\nimport AlbumsIcon from \"../../Assets/AlbumsIcon.png\"\nimport CustomIcon from \"../../Assets/CustomIcon.png\"\nimport PrivateIcon from \"../../Assets/PrivateIcon.png\"\nimport InviteIcon from \"../../Assets/InviteIcon.png\"\nimport EasyIcon from \"../../Assets/EasyIcon.png\"\nimport DestinIcon from \"../../Assets/DestinIcon.png\"\nimport MobilePro from \"../../Assets/MobilePro.png\"\nimport Popup from \"../Helpers/Popups/Popup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport history from \"../../Utils/History\";\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\nimport LoginSignup from \"../Auth/LoginSignup\";\n\nexport default function Additionals() {\n  const [showPopup, toggleShowPopup] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"additional_part py-75\">\n      <Popup\n        toggleShowPopup={toggleShowPopup}\n        showPopup={showPopup}\n        component={LoginSignup}\n      />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"row\">\n              <div className=\"col-md-12 mb-4\">\n                <h2 className=\"font-weight-bold text-color text-left mb-0\">\n                  Additionals\n                </h2>\n              </div>\n              <div className=\"col-md-4 mb-3 col-6\">\n                <div className=\"addition_item\">\n                  <img\n                    src={PictureIcon}\n                    alt=\"img\"\n                    className=\"img-fluid\"\n                  />\n                  <p className=\"text-color mt-2 mb-2\">Pictures and Videos</p>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-3 col-6\">\n                <div className=\"addition_item\">\n                  <img\n                    src={EngageIcon}\n                    alt=\"img\"\n                    className=\"img-fluid\"\n                  />\n                  <p className=\"text-color mt-2 mb-2\">Engagement</p>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-3 col-6\">\n                <div className=\"addition_item\">\n                  <img\n                    src={AlbumsIcon}\n                    alt=\"img\"\n                    className=\"img-fluid\"\n                  />\n                  <p className=\"text-color mt-2 mb-2\">Albums</p>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-3 col-6\">\n                <div className=\"addition_item\">\n                  <img\n                    src={CustomIcon}\n                    alt=\"img\"\n                    className=\"img-fluid\"\n                  />\n                  <p className=\"text-color mt-2 mb-2\">Customize</p>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-3 col-6\">\n                <div className=\"addition_item\">\n                  <img\n                    src={PrivateIcon}\n                    alt=\"img\"\n                    className=\"img-fluid\"\n                  />\n                  <p className=\"text-color mt-2 mb-2\">Private / Secure</p>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-3 col-6\">\n                <div className=\"addition_item\">\n                  <img\n                    src={InviteIcon}\n                    alt=\"img\"\n                    className=\"img-fluid\"\n                  />\n                  <p className=\"text-color mt-2 mb-2\">Invite at GO</p>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-3 col-6\">\n                <div className=\"addition_item\">\n                  <img\n                    src={EasyIcon}\n                    alt=\"img\"\n                    className=\"img-fluid\"\n                  />\n                  <p className=\"text-color mt-2 mb-2\">\n                    Easy to create in 5 Minutes\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-3 col-6\">\n                <div className=\"addition_item\">\n                  <img\n                    src={DestinIcon}\n                    alt=\"img\"\n                    className=\"img-fluid\"\n                  />\n                  <p className=\"text-color mt-2 mb-2\">Destination Event</p>\n                </div>\n              </div>\n              <div className=\"col-md-12 text-left\">\n                <button className=\"addition_btn\" onClick={() => {\n                  toggleShowPopup(true);\n                }}>Create an Invite</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"Additionals_img\">\n              <img\n                src={MobilePro}\n                className=\"img-fluid\"\n                alt=\"img\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Features.js",["1540","1541","1542","1543"],"import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport PeopleIcon from \"../../Assets/PeopleIcon.png\"\nimport RSVPIcon from \"../../Assets/RSVPIcon.png\"\nimport LocationIcon from \"../../Assets/LocationIcon.png\"\nimport MobileIcon from \"../../Assets/MobileIcon.png\"\nimport { Container } from \"react-bootstrap\"\nimport LoginSignup from \"../Auth/LoginSignup\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function Features() {\n  const [showPopup, toggleShowPopup] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"container\" style={{ marginTop: 25 }}>\n      <Popup\n        toggleShowPopup={toggleShowPopup}\n        showPopup={showPopup}\n        component={LoginSignup}\n      />\n      <div className=\"row\">\n        <div className=\"col-md-12 mb-4\">\n          <h2 className=\"font-weight-bold text-color text-center mb-0 our_feature\">\n            Our Features\n          </h2>\n        </div>\n        <div className=\"col-md-3 col-6\">\n          <div className=\"feature_item\">\n            <img\n              src={MobileIcon}\n              alt=\"img\"\n              className=\"img-fluid\"\n              style={{ height: 'auto' }}\n            />\n            <p className=\"text-color mt-3 mb-0 text-center\">No App Required</p>\n          </div>\n        </div>\n        <div className=\"col-md-3 col-6\">\n          <div className=\"feature_item\">\n            <img\n              src={PeopleIcon}\n              alt=\"img\"\n              className=\"img-fluid\"\n              style={{ height: 'auto' }}\n            />\n            <p className=\"text-color mt-3 mb-0 text-center\">Unlimited Guests</p>\n          </div>\n        </div>\n        <div className=\"col-md-3 col-6\">\n          <div className=\"feature_item\">\n            <img\n              src={RSVPIcon}\n              alt=\"img\"\n              className=\"img-fluid\"\n              style={{ height: 'auto' }}\n            />\n            <p className=\"text-color mt-3 mb-0 text-center\">RSVP</p>\n          </div>\n        </div>\n        <div className=\"col-md-3 col-6\">\n          <div className=\"feature_item\">\n            <img\n              src={LocationIcon}\n              alt=\"img\"\n              className=\"img-fluid\"\n              style={{ height: 'auto' }}\n            />\n            <p className=\"text-color mt-3 mb-0 text-center\">Schedule Location</p>\n          </div>\n        </div>\n        <div className=\"col-md-12 text-center mt-5\">\n          <button className=\"feature_btn\" onClick={() => {\n            toggleShowPopup(true);\n          }}>Create an Invite</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\ContactUs.js",["1544","1545"],"import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport ContactImg from \"../../Assets/ContactImg.png\";\nimport { db } from \"./Firebase\";\n\nconst ContactUs = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n\n    db.collection(\"contacts\")\n      .add({\n        name: name,\n        email: email,\n        message: message,\n      })\n      .then(() => {\n        setLoader(false);\n        alert(\"Your message has been submitted👍\");\n      })\n      .catch((error) => {\n        alert(error.message);\n        setLoader(false);\n      });\n\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"contact_us py-75\" style={{ marginTop: 50 }}>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 align-self-end\">\n            <img src={ContactImg} alt=\"img\" className=\"img-fluid\" />\n          </div>\n          <div className=\"col-md-6\">\n            <h2 className=\"font-weight-bold mb-4\">Contact Us</h2>\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <div className=\"form-group mb-4\">\n                <label\n                  className=\"font-weight-bold text-black-50\"\n                  htmlFor=\"Name\"\n                >\n                  Name\n                </label>\n                <input\n                  className=\"form-control contact_field\"\n                  value={name}\n                  placeholder=\"Enter your Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <label\n                  className=\"font-weight-bold text-black-50\"\n                  htmlFor=\"Email\"\n                >\n                  Email\n                </label>\n                <input\n                  className=\"form-control contact_field\"\n                  value={email}\n                  placeholder=\"Enter your Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <label\n                  className=\"font-weight-bold text-black-50\"\n                  htmlFor=\"Message\"\n                >\n                  Message\n                </label>\n                <textarea\n                  rows={5}\n                  className=\"form-control contact_field\"\n                  value={message}\n                  placeholder=\"Enter your Message\"\n                  onChange={(e) => setMessage(e.target.value)}\n                  required\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary w-100 py-2 rounded-pill mt-3\"\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactUs;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Testimonials.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Footer.js",["1546","1547","1548","1549","1550"],"import React from \"react\";\nimport \"./styles.css\";\n\nimport { FaTwitter, FaFacebookF, FaWhatsapp, FaInstagram } from \"react-icons/fa\"\n\n\nexport default function Footer() {\n  return (\n    <footer\n      className=\"footer_wrap p-4 mt-3\"\n      style={{ background: \"#1F1F1F\", marginTop: 50 }}\n    >\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-5 text-md-left text-center mb-2 mb-md-0\">\n            <p className=\"text-white mb-0\">\n              Copyright @ 2021, All Rights Reserved for Mobilly Invite\n            </p>\n          </div>\n          <div className=\"col-md-2 text-center\">\n            {\" \"}\n            <a href=\"#\" className=\"text-white\">\n              Terms &amp; Conditions\n            </a>{\" \"}\n          </div>\n          <div className=\"col-md-3 text-center\">\n            {\" \"}\n            <a href=\"#\" className=\"text-white\">\n              Privacy &amp; Policy\n            </a>{\" \"}\n          </div>\n          <div className=\"col-md-2 text-right\">\n            <div className=\"justify-content-center justify-content-md-end d-flex flex-row\">\n              <a href=\"https://www.facebook.com/Minvitd/\" className=\"ml-3 text-white\">\n                <FaFacebookF size='20' />\n              </a>\n   {/*            <a href=\"#\" className=\"ml-3 text-white\">\n                <FaTwitter size='20' />\n              </a>\n              <a href=\"#\" className=\"ml-3 text-white\">\n                <FaWhatsapp size='20' />\n              </a>\n              <a href=\"#\" className=\"ml-3 text-white\">\n                <FaInstagram size='20' />\n              </a> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\MainBanner.js",["1551","1552","1553","1554","1555","1556","1557"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Button, Form, Image, Col } from \"react-bootstrap\";\nimport Logo from \"../../Assets/LightLogo.png\";\n\nimport Popup from \"../Helpers/Popups/Popup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\nimport history from \"../../Utils/History\";\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\nimport LoginSignup from \"../Auth/LoginSignup\";\nimport Swiper, { Autoplay } from \"react-id-swiper\";\nimport SecondSlide from \"../../Assets/SecondSlide.png\";\nimport DancingImg from \"../../Assets/DancingImg.jpg\";\nimport DarkLogo from \"../../Assets/DarkLogo.png\";\nimport { Provider, LikeButton } from \"@lyket/react\";\n\n\nexport default function MainBanner() {\n  const loop = {\n    loop: true,\n    Autoplay: {\n      delay: 3000,\n      slidesPerView:1,\n      autoplayDisableOnInteraction: false\n    },\n   \n  };\n\n  const [showPopup, toggleShowPopup] = useState(false);\n  const Auth = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let ischeck = reactLocalStorage.get(\"isLoggedIn\");\n    let Phone = reactLocalStorage.get(\"Phone\");\n    // let Token = reactLocalStorage.get(\"Token\", true);\n    if (ischeck === false || ischeck === undefined || ischeck === \"\") {\n      console.log(\"push\");\n      history.push(\"/\");\n    } else {\n      console.log(\"loginuser\");\n      dispatch(loginuser(Phone));\n    }\n  }, []);\n  return (\n    <Swiper {...loop}>\n      {/* Slider One */}\n      <Container fluid className=\"wrapper\">\n        <Popup\n          toggleShowPopup={toggleShowPopup}\n          showPopup={showPopup}\n          component={LoginSignup}\n        />\n        <Row>\n          <img src={Logo} style={{ margin: \"auto\" }} />\n        </Row>\n        <Container className=\"header_containmain\">\n          <Row>\n            <h3 className=\"header_heading\" style={{ marginTop: \"auto\" }}>\n              A Smarter way to invite\n            </h3>\n          </Row>\n          <Row style={{ marginTop: 10 }}>\n            <p className=\"header_slogan\">\n              Invite people to celebrate your occasion\n            </p>\n          </Row>\n          <Row\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}\n          >\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Working on it\"\n              className=\"phonenumber_text\"\n              disabled\n            />\n          </Row>\n          <Row style={{ marginTop: 13 }}>\n            <Button\n              variant=\"primary mobile_numberbtn\"\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n            >\n              Try Now\n            </Button>\n          </Row>\n          <Row className=\"row_down\">\n            <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\n            </Provider>\n            <div className=\"addthis_inline_share_toolbox\">\n            </div>\n          </Row>\n          <Row className=\"alignthat_btnh\">\n            <Button\n              variant=\"light mybutton_here\"\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n            >\n              Login / Signup\n            </Button>\n          </Row>\n        </Container>\n      </Container>\n\n      {/*  Slider two */}\n      <Container fluid className=\"wrapper second_slide\">\n        <Popup\n          toggleShowPopup={toggleShowPopup}\n          showPopup={showPopup}\n          component={LoginSignup}\n        />\n        <Row>\n          <Col style={{display: 'flex', justifyContent: \"center\"}}>\n            <img src={DarkLogo} style={{ margin: \"auto\" }} />\n          </Col>\n        </Row>\n        <Container className=\"header_slidertwo\">\n          <Row>\n            <h3 className=\"secondslide_heading\">\n              Multiple <br />\n              Events\n            </h3>\n          </Row>\n          <Row>\n            <p className=\"secondslide_par\">\n              Manage Multiple Events Simultaneously\n            </p>\n          </Row>\n          <Row>\n            <Image src={SecondSlide} className=\"image_secondslide\" />\n          </Row>\n          <Row style={{ marginTop: 20 }}>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Working on it\"\n              className=\"phonenumber_text\"\n              disabled\n            />\n          </Row>\n          <Row>\n            <Button\n              variant=\"primary slide_numberbtn\"\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n            >\n              Try Now\n            </Button>\n          </Row>\n\n          <Row className=\"row_down\">\n          <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\n            </Provider>\n            <div className=\"addthis_inline_share_toolbox\"></div>\n          </Row>\n          <Row className=\"alignthat_btnh\">\n            <Button\n              variant=\"light mybutton_here\"\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n            >\n              Login / Signup\n            </Button>\n          </Row>\n        </Container>\n      </Container>\n\n      {/*  Slider 3 */}\n      <Container fluid className=\"wrapper third_slide\">\n        <Popup\n          toggleShowPopup={toggleShowPopup}\n          showPopup={showPopup}\n          component={LoginSignup}\n        />\n        <Row>\n        <Col style={{display: 'flex', justifyContent: \"center\"}}>\n            <img src={DarkLogo} style={{ margin: \"auto\" }} />\n          </Col>\n        </Row>\n        <Container style={{ float: \"right\" }}>\n          <Row>\n            <h3 className=\"secondslide_heading\">\n              Video <br />\n              Invitation\n            </h3>\n          </Row>\n          <Row>\n            <p className=\"secondslide_par\">\n              Invite people to celebrate your occasion online via Zoom or Meet\n            </p>\n          </Row>\n          <Row>\n            {\" \"}\n            <p className=\"thirdslide_extra\">Unlimited Timeless Conferencing*</p>\n          </Row>\n\n          <Row style={{ marginTop: 20 }}>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Working on it\"\n              className=\"phonenumber_text\"\n              disabled\n            />\n          </Row>\n          <Row>\n            <Button\n              variant=\"primary slide_numberbtn\"\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n            >\n              Try Now\n            </Button>\n          </Row>\n          <Row className=\"row_down\">\n          <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\n            </Provider>\n            <div className=\"addthis_inline_share_toolbox\"></div>\n          </Row>\n\n          <Row className=\"alignthat_btnh\">\n            <Button\n              variant=\"light mybutton_here\"\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n            >\n              Login/Signup\n            </Button>\n          </Row>\n        </Container>\n      </Container>\n    </Swiper>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\Headings.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\Popups\\Popup.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js",["1558","1559","1560"],"import axios from \"axios\";\nimport { url } from \"../../Utils/Config\";\nimport { ADDCODEDEVENT, DELETECODEDEVENT } from \"../Actions/CodeAction\";\nimport history from \"../../Utils/History\";\nexport function addEvent(Code, Maincode) {\n    return (dispatch) => {\n        dispatch({ type: ADDCODEDEVENT, payload: { Code: Code, Maincode: Maincode } });\n    };\n}\nexport function deleteEvent() {\n    return (dispatch) => {\n        dispatch({ type: DELETECODEDEVENT });\n    };\n}","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Utils\\Login.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\UserPorfile\\UserProfile.js",["1561","1562","1563","1564","1565"],"import React, { useState, useCallback } from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport male from \"../../Assets/Male.svg\";\nimport female from \"../../Assets/Female.svg\";\nimport { useDropzone } from \"react-dropzone\";\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveuserinfo } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\nimport \"./userProfile.css\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nexport default function UserProfile(props) {\n  const [showerror, setshowerror] = useState(false);\n  const [Name, setName] = useState(\"\");\n  const [DOB, setDOB] = useState(\"\");\n  const [Gender, setGender] = useState(\"\");\n  const [Image, setImage] = useState(\"\");\n  const Auth = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n  const onDrop = useCallback(async (acceptedFiles) => {\n    if (acceptedFiles[0].size > 5259265) {\n      alert(\"Max file size 5mb\");\n      return false;\n    }\n    let type = acceptedFiles[0].type.split(\"/\");\n    type = type[1];\n    var reader = await new FileReader();\n    reader.onload = async function () {\n      let url = await uploadString(\n        reader.result,\n        \"Profile/\" + Auth.Phone + \".\" + type\n      );\n      await setImage(url);\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n    await reader.readAsDataURL(acceptedFiles[0]);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png, image/jpg\",\n  });\n  const save = () => {\n    if (Name === \"\" || DOB === \"\" || Gender === \"\") {\n      setshowerror(true);\n    } else {\n      dispatch(saveuserinfo(Name, Gender, DOB, Image, props.url));\n      setshowerror(false);\n      props.hide(false);\n    }\n  };\n\n  return (\n    <Grid container spacing={0} style={{ padding: \"15px\" }}>\n      <Grid item xs={12} {...getRootProps()}>\n        <input {...getInputProps()} />\n        <center>\n          {Image == \"\" ? (\n            <img src={male} className=\"Profile\" />\n          ) : (\n            <img src={Image} className=\"Profile\" />\n          )}\n        </center>\n      </Grid>\n\n      {/*       <Grid item xs={6}>\n        <center\n         \n        >\n          <BiMale\n           \n          />{\" \"}\n          Male\n        </center>\n      </Grid>\n\n      <Grid item xs={6}>\n        <center\n        \n        >\n          <BiFemale\n            \n          />\n          Female\n        </center>\n      </Grid> */}\n\n      <Grid item xs={12}>\n        <span>Name</span>\n        <br />\n        <TextField\n          variant=\"outlined\"\n          className=\"w-100 m-b-5px \"\n          value={Name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n          error={showerror === true && Name === \"\" ? true : false}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <span>DOB</span>\n        <TextField\n          variant=\"outlined\"\n          className=\"w-100 m-b-5px \"\n          type=\"date\"\n          defaultValue=\"2017-05-24\"\n          value={DOB}\n          onChange={(e) => {\n            setDOB(e.target.value);\n          }}\n          error={showerror === true && DOB === \"\" ? true : false}\n        />\n      </Grid>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Gender</FormLabel>\n        <RadioGroup\n          row\n          aria-label=\"position\"\n          name=\"position\"\n          defaultValue=\"top\"\n        >\n          <FormControlLabel\n            value=\"male\"\n            src={Gender === \"M\" && Image !== \"\" ? Image : male}\n            className={\n              Image === \"\"\n                ? showerror === true\n                  ? \"no-proifle \"\n                  : \" Profile\"\n                : \"Profile\"\n            }\n            control={<Radio color=\"primary\" />}\n            label=\"Male\"\n            onClick={() => {\n              setGender(\"M\");\n            }}\n            labelPlacement=\"start\"\n          />\n          <FormControlLabel\n            value=\"female\"\n            control={<Radio color=\"primary\" />}\n            onClick={() => {\n              setGender(\"F\");\n            }}\n            label=\"Female\"\n            src={Gender === \"F\" && Image !== \"\" ? Image : female}\n            className={\n              Image === \"\"\n                ? showerror === true\n                  ? \"no-proifle \"\n                  : \" Profile\"\n                : \"Profile\"\n            }\n            labelPlacement=\"start\"\n          />\n        </RadioGroup>\n      </FormControl>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{\n            backgroundColor: \"#3897F1\",\n            borderRadius: 25,\n            marginTop: 10,\n          }}\n          className=\"w-100 m-b-5px\"\n          onClick={() => {\n            save();\n          }}\n        >\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\NotificationAction.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\EventActions.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\AuthActions.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\PostActions.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\ChatActions.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Auth\\LoginSignup.js",["1566"],"import React, { useState, useEffect } from \"react\";\nimport Login from \"../../Assets/Auth.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Auth.css\";\nimport { Grid } from \"@material-ui/core\";\nimport PhoneInput from \"react-phone-input-2\";\nimport OtpInput from \"react-otp-input\";\nimport Timer from \"../Helpers/timer/timer\";\nimport {\n  loginuser,\n  getopt,\n  verifyotp,\n} from \"../../Redux/DispatchFuncitons/AuthFunctions\";\nimport { Row, Col } from \"react-bootstrap\";\nimport history from '../../Utils/History'\nexport default function LoginSignup() {\n  const Auth = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n  const [todo, settodo] = useState(0);\n  const [step, setStep] = useState(0);\n  const [number, setnumber] = useState(0);\n\n  const [error, setError] = useState(\"\");\n  const [OTP, SetOPT] = useState();\n  const [Phone, setPhone] = useState(\"\");\n  let phone = \"\";\n  const handleClick = (e) => {\n    phone = \"+\" + number.toString();\n    if (phone.length < 9) {\n      setError(\"Invalid Phone Number\");\n    } else {\n      dispatch(getopt(phone));\n      setPhone(phone);\n      setStep(1);\n    }\n  };\n\n  const handleCheck = () => {\n    dispatch(verifyotp(Phone, OTP));\n  };\n  useEffect(() => {\n    if (Auth.isLoggedIn === true) {\n      history.push(\"/home\");\n    }\n  }, [Auth.isLoggedIn])\n\n  useEffect(() => {\n    if (Auth.OTPStatus === true) {\n      if (Auth.isVerified === true) {\n        dispatch(loginuser(Phone));\n      } else if (Auth.isVerified === false) {\n        // setStep(1);\n      } else {\n        setError(\"please check the input\");\n      }\n    }\n  }, [Auth.isVerified, Auth.OTPStatus]);\n\n  if (step === 0) {\n    return (\n      <div>\n        <div id=\"sign-in-button\"></div>\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\n        <Grid container spacing={0}>\n          <Grid item xs={12} className=\"modal-title\">\n            Login\n            <p className=\"modal-title-description\">\n              Enter your Mobile Number and Verify to login\n            </p>\n            <p className=\"phno-text\" style={{ fontSize: 17, marginTop: 24 }}>\n              {\" \"}\n              Phone Number\n            </p>\n          </Grid>\n          <Grid item xs={12} className=\"modal-title\">\n            <PhoneInput\n              country={\"in\"}\n              value={number}\n              onChange={(phone) => setnumber(phone)}\n            />\n            <p className=\"error\">{Auth.Message || error}</p>\n\n            <button\n              onClick={(e) => {\n                handleClick(e);\n              }}\n              className=\"get-otp-button\"\n            >\n              Request OTP\n            </button>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  } else if (step === 1) {\n    return (\n      <div>\n        <div id=\"recaptcha-container\" size=\"invisible\"></div>\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\n        <Grid container spacing={0}>\n          <Grid item xs={12} className=\"modal-title\">\n            Authorized OTP\n            <p className=\"modal-title-description\">\n              Enter the code you recieved on your number\n            </p>\n          </Grid>\n          <Grid item xs={12} className=\"modal-title\">\n            <span style={{ fontSize: 13, color: \"#727272\" }}>\n              Enter One Time Password (OTP)\n            </span>\n          </Grid>\n          <Grid item xs={12} className=\"modal-title\">\n            <OtpInput\n              className=\"OTP\"\n              value={OTP}\n              onChange={(otp) => SetOPT(otp)}\n              numInputs={6}\n              separator={<span></span>}\n              inputStyle=\"Otp-block\"\n              isInputNum={true}\n            />\n            <p className=\"error\">{Auth.Message}</p>\n            <Row style={{ margin: \"auto\" }}>\n              <Col>\n                <button\n                  onClick={(e) => {\n                    handleCheck();\n                  }}\n                  className={todo ? \"resend-otp\" : \"get-otp-button\"}\n                >\n                  Verify\n                </button>\n              </Col>\n              <Col>\n                <button\n                  onClick={(e) => {\n                    handleClick(e);\n                  }}\n                  className={todo ? \"get-otp-button\" : \"resend-otp\"}\n                >\n                  Resend OTP\n                </button>\n              </Col>\n            </Row>\n\n            <p\n              className=\"label w-100 tac\"\n              style={{ marginTop: 10, color: \"#727272\" }}\n            >\n              <Timer setStep={setStep} settodo={settodo} />\n            </p>\n          </Grid>\n          <p style={{ fontSize: 9, color: \"#727272\" }}>\n            By Continuing ,you agree to Mobillyinvite's{\" \"}\n            <b style={{ color: \"black\" }}>\n              Terms {\"&\"} Conditions, Privacy policy\n            </b>{\" \"}\n            and receving updated through WhatsAPP.\n          </p>\n        </Grid>\n      </div>\n    );\n  }\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\HomePage\\Firebase.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\CodeAction.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\timer\\timer.js",["1567","1568"],"import React, { useState, useEffect } from \"react\";\nimport Countdown from \"react-countdown\";\n\nexport default function Timer(props) {\n  const [datetimer, setdatetime] = useState(Date.now() + 60000);\n\n  const renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n      props.settodo(1);\n      return <></>;\n    } else {\n      // Render a countdown\n      return (\n        <>\n          OTP will expire in : {hours}:{minutes}:{seconds}\n        </>\n      );\n    }\n  };\n  return <Countdown date={datetimer} renderer={renderer} />;\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js",["1569","1570","1571","1572","1573"],"import React, { useState, useEffect } from \"react\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { getuserdata } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\nimport { url } from \"../../../Utils/Config\";\nimport { Grid } from \"@material-ui/core\";\nexport default function UserDataUrl(props) {\n  const [User, setUser] = useState({});\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (props.Phone !== \"\") {\n      axios\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\n        .then((res) => {\n          if (res.data.user) {\n            setUser(res.data.user);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          return { err: \"error 404\" };\n        });\n    }\n  }, []);\n  useEffect(() => {\n    if (props.Phone !== \"\") {\n      axios\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\n        .then((res) => {\n          if (res.data.user) {\n            setUser(res.data.user);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          return { err: \"error 404\" };\n        });\n    }\n  }, [props.Phone]);\n  return (\n    <>\n      {props.showIcon === true ? (\n        User.Pic !== undefined && User.Pic !== \"\" ? (\n          <Avatar alt=\"Profile Picture\" src={User.Pic} />\n        ) : (\n          <AccountCircle style={{ height: \"40px\", width: \"40px\" }} />\n        )\n      ) : (\n        <></>\n      )}\n      {props.showName && props.showName === true ? (\n        <span className=\"name\">\n          {User.Name === undefined || User.Name === \"\"\n            ? props.Phone\n            : User.Name}\n        </span>\n      ) : (\n        <span className=\"name\"></span>\n      )}\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js",["1574","1575","1576","1577","1578","1579","1580"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IoChatbubbleEllipsesOutline } from \"react-icons/io5\";\nimport { BiNews } from \"react-icons/bi\";\nimport { AiOutlineBell } from \"react-icons/ai\";\nimport { Container, Row, Col, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport history from \"../../../Utils/History\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Popup from \"../Popups/Popup\";\nimport Notifications from \"../../Notifications/Notification\";\nimport { GoBook } from \"react-icons/go\";\nimport { IoImagesSharp, IoPowerSharp } from \"react-icons/io5\";\nexport default function DesktopNav(props) {\n  const Auth = useSelector((state) => state.Auth);\n  const useStyles = makeStyles({});\n  const [ishost, setishost] = useState(false);\n  const [show, setshow] = useState(false);\n  useEffect(() => {\n    if (props.Eventdata && props.Eventdata.length > 0) {\n      debugger\n      console.log(props.Eventdata)\n      var Host = props.Eventdata[0].InvId.Host;\n      for (var i = 0; i < Host.length; i++) {\n        if (Host[i] === Auth.Phone) {\n          setishost(true);\n        }\n      }\n    }\n    console.log(props.base);\n  }, [props.Eventdata]);\n\n  return (\n    <Container className=\"navigation-box\" fluid>\n      <Row>\n        <Col\n          md={2}\n          className=\"tac\"\n          onClick={() => {\n            history.push(\"../albums/\" + props.id);\n          }}\n        >\n          <IoImagesSharp size={30} />\n          <a>Album</a>\n        </Col>\n        <Col\n          md={2}\n          className=\"tac\"\n          onClick={() => {\n            history.push(\"./feed/\" + props.id);\n          }}\n        >\n          <BiNews size={30} />\n          Feed\n        </Col>\n        <Col\n          md={2}\n          className=\"tac\"\n          onClick={() => {\n            setshow(true);\n          }}\n        >\n          <AiOutlineBell size={30} />\n          Notifications\n        </Col>\n        <Col md={2} className=\"tac\">\n          <DropdownButton id=\"dropdown-item-button\" title=\"More\">\n            <Dropdown.Item\n              as=\"button\"\n              onClick={() => {\n                history.push(\"/\" + props.base + \"/story/\" + props.id);\n              }}\n            >\n              Our Story\n            </Dropdown.Item>\n            <Dropdown.Item\n              as=\"button\"\n              onClick={() => {\n                history.push(\"/\" + props.base + \"/albums/\" + props.id);\n              }}\n            >\n              Albums\n            </Dropdown.Item>\n            {ishost === true ? (\n              <Dropdown.Item\n                as=\"button\"\n                onClick={() => {\n                  history.push(\"/MyEvents/admin/\" + props.id);\n                }}\n              >\n                Admin\n              </Dropdown.Item>\n            ) : (\n              <></>\n            )}\n          </DropdownButton>\n        </Col>\n      </Row>\n      <Popup\n        component={Notifications}\n        toggleShowPopup={setshow}\n        showPopup={show}\n        MainCode={props.MainCode}\n        showinvitaions={true}\n      />\n    </Container>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\NavMobile\\NavMobile.js",["1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596"],"import React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { MdEvent } from \"react-icons/md\";\nimport { IoImagesSharp, IoPowerSharp } from \"react-icons/io5\";\nimport { GoBook } from \"react-icons/go\";\nimport { BiNews } from \"react-icons/bi\";\nimport { AiOutlineBell } from \"react-icons/ai\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport \"./NavMobile.css\";\nimport { Container, Row, Col, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { BiChevronDown } from \"react-icons/bi\";\nimport history from \"../../../Utils/History\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Popup from \"../Popups/Popup\";\nimport Notifications from \"../../Notifications/Notification\";\nexport default function NavMobile(props) {\n  const [show, setshow] = useState(false);\n  const [maincode, setmaincode] = useState(\"\");\n  const [eventcode, seteventcode] = useState(\"\");\n  const Auth = useSelector((state) => state.Auth);\n  const [ishost, setishost] = useState(false);\n\n  useEffect(() => {\n    if (props.Eventdata && props.Eventdata.length > 0) {\n      props.Eventdata[0].InvId.Host.map((host) => {\n        if (host === Auth.Phone) {\n          setishost(true);\n        }\n      });\n      console.log(props.Eventdata[0].InvId.Host);\n    }\n  }, [props.Eventdata]);\n  return (\n    <>\n      <Navbar\n        bg=\"light\"\n        variant=\"light\"\n        style={{ position: \"fixed\", left: 0, bottom: 0, width: \"100vw\", zIndex: 255 }}\n        className=\"deskhide-nav\"\n      >\n        <Nav style={{ margin: \"auto\" }}>\n          <Nav.Link\n            onClick={() => {\n              history.push(\"/\" + props.base + '/eventpage/' + props.id);\n            }}\n            style={{ marginRight: \"4vh\" }}\n          >\n            <MdEvent size={30} />\n          </Nav.Link>\n          <Nav.Link\n            onClick={() => {\n              history.push(\"/\" + props.base + '/albums/' + props.id);\n            }}\n            style={{ marginRight: \"4vh\" }}\n          >\n            <IoImagesSharp size={25} />\n          </Nav.Link>\n          <Nav.Link\n            onClick={() => {\n              history.push(\"/\" + props.base + '/eventpage/' + \"feed/\" + props.id);\n            }}\n            style={{ marginRight: \"4vh\" }}\n          >\n            <BiNews size={25} />\n          </Nav.Link>\n          <Nav.Link\n            onClick={() => {\n              setshow(true);\n            }}\n            style={{ marginRight: \"4vh\" }}\n          >\n            <AiOutlineBell size={25} />\n          </Nav.Link>\n          <Nav.Link\n            onClick={() => {\n              history.push(\"/\" + props.base + \"/more/\" + props.id);\n            }}\n            style={{ marginRight: \"-1vh\" }}\n          >\n            <BsThreeDots size={25} />\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n      <Popup\n        component={Notifications}\n        toggleShowPopup={setshow}\n        showPopup={show}\n        MainCode={props.MainCode}\n        showinvitaions={true}\n        eventcode={eventcode}\n      />\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\AddPost.js",["1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport \"../Feed/Feed.css\";\nimport Header from \"../Helpers/Header/Header.js\";\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport zoomicon from \"../../Assets/zoomicon.png\";\nimport UserData from \"../Helpers/UserData/UserData\";\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\nimport { IoCameraOutline } from \"react-icons/io5\";\nimport { FaTag } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\nimport { useDropzone } from \"react-dropzone\";\nimport { InputTags } from \"react-bootstrap-tagsinput\";\nimport \"react-bootstrap-tagsinput/dist/index.css\";\nimport { FcLike } from \"react-icons/fc\";\nimport { FaRegCommentDots } from \"react-icons/fa\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { FcLikePlaceholder } from \"react-icons/fc\";\nimport history from \"../../Utils/History\";\nimport FeedComments from \"./FeedComments\";\nimport { url } from \"../../Utils/Config\";\nimport { Modal } from \"@material-ui/core\";\nimport Media from \"./Media\";\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddTags from \"./AddTags\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport {\n    GetEvents,\n    GetInvitations,\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function AddPost(props) {\n    const Auth = useSelector((state) => state.Auth);\n\n    const onDrop = useCallback(async (acceptedFiles) => {\n        if (acceptedFiles[0].size > 5259265) {\n            alert(\"Max file size 5mb\");\n            return false;\n        }\n        let url = \"\";\n        let ftype = acceptedFiles[0].type.split(\"/\");\n        console.log(ftype)\n        props.settype(ftype[0]);\n        var reader = await new FileReader();\n        reader.onload = async function () {\n            url = reader.result;\n            props.setimageurl(url);\n        };\n        reader.onerror = function (error) {\n            console.log(\"Error: \", error);\n        };\n        await reader.readAsDataURL(acceptedFiles[0]);\n    }, []);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        multiple: false,\n        accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\n    });\n\n    return (\n        <Container\n            className=\"addpost-event  \"\n            style={{ marginTop: 10, marginBottom: 10 }}\n            fluid\n        >\n            <Row className=\"commentinp\">\n                <Col xs={2} md={1}>\n                    <UserData Phone={Auth.Phone} showIcon={true} />\n                </Col>\n                <Col xs={8} md={10}>\n                    <input\n                        type=\"text\"\n                        onChange={(e) => {\n                            props.setcaption(e.target.value);\n                        }}\n                        value={props.caption}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        className=\"w-100\"\n                        placeholder=\"Add comment\"\n                        style={{\n                            width: \"100%\",\n                            outline: \"none\",\n                            border: \"none\",\n                            background: \"#f6f6f6\",\n                            height: \"100%\",\n                            fontSize: 14,\n                        }}\n                    />\n                </Col>\n                <Col xs={2} md={1}>\n                    {props.isSubmit === false ? (\n                        <IconButton\n                            onClick={() => {\n                                props.submit();\n                            }}\n                        >\n                            <SendIcon style={{ color: \"black\" }} />\n                        </IconButton>\n                    ) : (\n                        <IconButton>\n                            <CircularProgress style={{ color: \"black\" }} />\n                        </IconButton>\n                    )}\n                </Col>\n            </Row>\n\n            <Row className=\"addmedia-tag\" style={{ marginTop: 20 }}>\n                <Col className=\"btn t-blue ll-blue btn-rnd m-5px\" {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <a style={{ color: \"#007bff\" }}>\n                        <IoCameraOutline size={20} /> Add Media\n                    </a>\n                </Col>\n                <Col className=\"btn t-blue ll-blue btn-rnd m-5px\">\n                    <a\n                        style={{ color: \"#007bff\" }}\n                        onClick={() => {\n                            props.setShowTagQuery(true);\n                        }}\n                    >\n                        <FaTag size={17} /> Tag\n                    </a>\n                    {/* )} */}\n                </Col>\n            </Row>\n            {props.imageurl !== \"\" ? (\n                props.type !== \"mp4\" ? (\n                    <Row>\n                        <Col md={12}>\n                            <div {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <img\n                                    src={props.imageurl}\n                                    className=\"w-100\"\n                                    style={{ height: \"30vh\" }}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                ) : (\n                    <Row>\n                        <center>\n                            <video\n                                src={props.imageurl}\n                                type=\"video/mp4\"\n                                controls={true}\n                                preload=\"none\"\n                                height={260}\n                                width={window.innerWidth > 400 ? 800 : window.innerWidth}\n                                autoPlay=\"true\"\n                            />\n                        </center>\n                    </Row>\n                )\n\n            ) : (\n                <></>\n            )}\n        </Container>\n    )\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\AddTags.js",["1633","1634","1635","1636","1637"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\nimport UserData from \"../Helpers/UserData/UserData\";\nimport './Feed.css'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\nexport default function AddTags(props) {\n    const [Tags, setTags] = useState(props.url)\n    const classes = useStyles();\n    useEffect(() => {\n        setTags([...props.url])\n        console.log(props.MainCode)\n    }, [props.url])\n\n    const addTags = (data) => {\n        setTags([...Tags, data])\n    }\n    const removeTags = (data) => {\n        let Tagscpy = [...Tags];\n        Tagscpy = Tagscpy.filter((tag) => {\n            return data != tag;\n        });\n        setTags([...Tagscpy])\n    }\n\n    return (\n        <div><h3>Add Tags</h3>\n\n            <List className={classes.root}>\n                {props.MainCode.map(Participant => (\n                    <ListItem alignItems=\"flex-start\" className={Tags.includes(Participant) ? \"selected m-5px\" : \"m-5px\"}\n                        onClick={() => { Tags.includes(Participant) ? removeTags(Participant) : addTags(Participant) }}>\n                        <ListItemAvatar>\n                            <UserDataUrl showIcon={true} Phone={Participant} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={<UserDataUrl showName={true} Phone={Participant} />}\n                            secondary={\n                                <React.Fragment>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n\n                                    </Typography>\n\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                ))}\n\n\n            </List>\n            <button className=\"btn btn-primary\" onClick={() => { props.showall([...Tags]); props.hide(false) }}\n            style={{ width: \"100%\", borderRadius: 20 }}>\n                Save\n            </button>\n        </div >\n    );\n}","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\Posts.js",["1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669"],"\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"../Feed/Feed.css\";\nimport Header from \"../Helpers/Header/Header.js\";\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport zoomicon from \"../../Assets/zoomicon.png\";\nimport UserData from \"../Helpers/UserData/UserData\";\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\nimport { IoCameraOutline } from \"react-icons/io5\";\nimport { FaTag } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\nimport { useDropzone } from \"react-dropzone\";\nimport { InputTags } from \"react-bootstrap-tagsinput\";\nimport \"react-bootstrap-tagsinput/dist/index.css\";\nimport { FcLike } from \"react-icons/fc\";\nimport { FaRegCommentDots } from \"react-icons/fa\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { FcLikePlaceholder } from \"react-icons/fc\";\nimport history from \"../../Utils/History\";\nimport FeedComments from \"./FeedComments\";\nimport { url } from \"../../Utils/Config\";\nimport { Modal } from \"@material-ui/core\";\nimport Media from \"./Media\";\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddTags from \"./AddTags\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport {\n    GetEvents,\n    GetInvitations,\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function Postrender(props) {\n    const [Posts, setPosts] = useState([])\n    useEffect(() => {\n        if (props.filter === 'All') {\n            setPosts(props.data)\n        } else {\n            setPosts(props.filterdata)\n        }\n\n    }, [props.data, props.filter, props.filterdata])\n    return (\n        <div>\n            <>\n                {Posts.map((post, index) => (\n                    <Container\n                        className=\"main-feed \"\n                        style={{\n                            marginTop: 10,\n                            padding: 20,\n\n                        }}\n                    >\n                        <Row className=\"m-0\">\n                            <Col xs={2} md={1} fluid>\n                                <UserData showIcon={true} Phone={post.by} className=\"fl\" />\n                            </Col>\n                            <Col className=\"m-0 p-0\">\n                                <p className=\" m-5px fs-14\">\n                                    <b>\n                                        <UserDataUrl Phone={post.by} showName={true} />\n                                    </b>\n                                    {post.tags.length > 0 ? (\n                                        <>\n                                            {\" \"}\n                                            is with:{\" \"}\n                                            <b>\n                                                <UserDataUrl Phone={post.tags[0]} showName={true} />\n                                            </b>\n                                            {post.tags.length >= 2 ? (\n                                                <> and {post.tags.length - 1} other(s)</>\n                                            ) : (\n                                                <></>\n                                            )}\n                                            :\n                                        </>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </p>\n                            </Col>\n                            <Col xs={12}>\n                                <p className=\" m-5px fs-14\">{post.caption}</p>\n                            </Col>\n                        </Row>\n\n                        {post.fileurl !== \"\" ? (\n                            post.filetype === \"image\" ? (\n                                <Image src={post.fileurl} fluid />\n                            ) : (\n                                <center>\n                                    {\" \"}\n                                    <video\n                                        height=\"360\"\n                                        width={window.innerWidth > 500 ? 800 : window.innerWidth}\n                                        autoplay={false}\n                                        src={post.fileurl}\n                                        type=\"video/mp4\"\n                                        controls={true}\n                                        preload=\"none\"\n                                    />\n                                </center>\n                            )\n                        ) : (\n                            <></>\n                        )}\n                        <Row className=\"m-0 p-0\">\n                            <Col xs={6} className=\"mt-10px\">\n                                <center>\n                                    <a\n                                        style={{ color: \"rgb(244 67 54)\" }}\n                                        onClick={() => {\n                                            props.getposts();\n                                        }}\n                                    >\n                                        <Like\n                                            index={index}\n                                            LikeList={post.LikeList}\n                                            _id={post._id}\n                                            getposts={props.getposts}\n                                            maincode={props.Eventdata[0].MainCode}\n                                        />\n                                    </a>\n                                </center>\n                            </Col>\n                            <Col xs={6} className=\"mt-10px\">\n                                <center>\n                                    <a\n                                        style={{ color: \"#007bff\" }}\n                                        onClick={async () => {\n                                            console.log(props.showcommmentforpost)\n                                            console.log(!props.showcommment)\n                                            console.log(!props.showcommment)\n                                            if (props.showcommmentforpost === post._id) {\n                                                props.setshowcommment(!props.showcommment);\n                                                props.setshowcommmentforpost(post._id);\n                                                await props.getposts();\n                                            } else {\n                                                props.setshowcommment(true);\n                                                props.setshowcommmentforpost(post._id);\n                                                await props.getposts();\n                                            }\n                                        }}\n                                    >\n                                        <FaRegCommentDots size={25} style={{ marginLeft: 30 }} />\n\n                                        {post.CommentList.length}\n                                    </a>\n                                </center>\n                            </Col>\n                        </Row>\n\n                        <Col>\n                            {props.showcommment === true && props.showcommmentforpost === post._id ? (\n                                <FeedComments\n                                    id={post._id}\n                                    getposts={props.getposts}\n                                    data={post.CommentList}\n                                    maincode={props.Eventdata[0].MainCode}\n                                    post={post}\n                                />\n                            ) : (\n                                <></>\n                            )}\n                        </Col>\n                    </Container>\n                ))}\n            </>\n        </div>\n    )\n}\nexport function Like(props) {\n    const dispatch = useDispatch();\n    const Auth = useSelector((state) => state.Auth);\n    const [isLike, setisLike] = useState(false);\n    const [count, setcount] = useState(0);\n    useEffect(() => {\n        props.LikeList.map((likedata) => {\n            if (likedata.LikeBy === Auth.Phone) {\n                setisLike(true);\n            }\n        });\n        setcount(props.LikeList.length);\n    }, []);\n\n    return (\n        <>\n            {isLike === false ? (\n                <FcLikePlaceholder\n                    size={30}\n                    onClick={async () => {\n                        await dispatch(likepost(props._id, Auth.Phone, props.maincode));\n                        await setisLike(true);\n                        // await props.getposts(props.maincode);\n                        await setcount(count + 1);\n                    }}\n                />\n            ) : (\n                <FcLike\n                    size={30}\n                    onClick={async () => {\n                        await dispatch(likepost(props._id, Auth.Phone, props.maincode));\n                        await setisLike(false);\n                        // await props.getposts(props.maincode);\n                        await setcount(count - 1);\n                    }}\n                />\n            )}\n            {count}\n        </>\n    );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\Media.js",["1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681"],"import React, { useState, useEffect } from 'react'\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\nimport HorizontalSlider from 'react-horizontal-slider'\nimport './Feed.css'\nexport default function Media(props) {\n    const [currentmedia, setcurrentmedia] = useState(0);\n    const [allmedia, setallmedia] = useState([]);\n    useEffect(async () => {\n        debugger\n        let isselected = false;\n        for (let i = 0; i < props.currentPosts.length; i++) {\n            if (isselected === false) {\n                if (props.popuptype === \"Photo\" && props.currentPosts[i].filetype === \"image\") {\n                    await setcurrentmedia(i)\n                    console.log(props.currentPosts[i])\n                    console.log(i)\n                    isselected = true;\n                } else if (props.popuptype === \"Videos\" && props.currentPosts[i].filetype === \"video\") {\n                    await setcurrentmedia(i)\n                    isselected = true;\n                }\n            }\n        }\n\n    }, [])\n    return (\n        <Container fluid >\n            <Row style={{ marginleft: 30, position: 'absolute', top: 0, zIndex: 99999 }}>\n                <IoArrowBackCircleOutline\n                    size={40}\n                    style={{ color: \"black\" }}\n                    onClick={() => props.toggleShowPopup(false)}\n                />\n                <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\n                    {props.popuptype}\n                </h3>\n            </Row>\n            <Row style={{ marginTop: 0, position: 'fixed', top: 0, outline: 'none', left: 0, margin: 0 }}>\n                {props.currentPosts.map((post, index) => (\n\n                    post.fileurl !== \"\" && index === currentmedia ?\n                        (props.popuptype === \"Photo\" && post.filetype === \"image\") ?\n                            <img className=\"Media\" src={post.fileurl} key={index} onClick={() => { setcurrentmedia(index) }} />\n                            : (props.popuptype === \"Videos\" && post.filetype === \"video\") ? <>\n                                <video className=\"Media\" src={post.fileurl} type=\"video/mp4\"\n                                    controls={true} autoplay='true'\n                                    preload=\"none\" height={window.innerWidth - 150} width={window.innerWidth > 400 ? 800 : window.innerWidth} />\n                            </> :\n                                <></>\n                        : <></>\n\n\n                ))}\n\n            </Row>\n            <Row style={{ marginTop: 5, position: 'fixed', bottom: 0, overflowX: 'scroll', width: '100vw', margin: 0, left: 0 }}>\n                {props.currentPosts.map((post, index) => (\n                    post.fileurl !== \"\" ?\n                        (props.popuptype === \"Photo\" && post.filetype === \"image\") ?\n                            <img className=\"item-options\" src={post.fileurl} key={index} onClick={() => { setcurrentmedia(index) }} />\n                            : (props.popuptype === \"Videos\" && post.filetype === \"video\") ?\n                                <video className=\"item-options\" width={50} height={50} src={post.fileurl} type=\"video/mp4\"\n                                    autoPlay={false} preload=\"none\" onClick={() => { setcurrentmedia(index) }} />\n                                :\n                                <></>\n                        : <></>\n\n                ))}\n\n\n            </Row>\n\n        </Container >\n    )\n}","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Feed\\FeedComments.js",["1682","1683","1684","1685","1686"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\nimport { TextField } from \"@material-ui/core\";\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\nimport { addcomments } from \"../../Redux/DispatchFuncitons/postfunctions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SendIcon from '@material-ui/icons/Send';\n\nimport { IconButton } from '@material-ui/core';\nexport default function FeedComments(props) {\n  const dispatch = useDispatch();\n  const Auth = useSelector((state) => state.Auth);\n  const [comment, setcomment] = useState(\"\");\n  const [comments, setcomments] = useState([]);\n  const [isError, setisError] = useState(false);\n  const submit = async () => {\n    if (comment !== \"\") {\n      await dispatch(addcomments(props.id, Auth.Phone, comment, props.maincode));\n\n      let commentscpy = [...comments]\n      await commentscpy.push({ CommentBy: Auth.Phone, Comment: comment })\n      console.log(commentscpy)\n      await setcomments(commentscpy)\n      await setisError(false);\n      await setcomment(\"\")\n      await props.getposts(props.maincode)\n    } else {\n      setisError(true);\n    }\n  };\n  useEffect(() => {\n    console.log(props.data)\n    setcomments(props.data)\n  }, [props.post])\n\n  return (\n    <Container fluid className=\"mt-5px p-0\">\n      <Row className=\"commentinp\">\n        <Col xs={2} md={1} className=\"m-0 p-0\">\n          <UserDataUrl showIcon={true} Phone={Auth.Phone} />\n        </Col>\n        <Col xs={8} className=\"p-0 \">\n          <input\n            type='text'\n            value={comment}\n            onChange={(e) => setcomment(e.target.value)}\n            variant=\"outlined\"\n            size=\"small\"\n            className=\"w-100\"\n            placeholder=\"Add comment\"\n            error={isError}\n            style={{ width: '100%', outline: 'none', border: 'none', background: '#f6f6f6', height: '100%', fontSize: 14 }}\n          />\n        </Col>\n        <Col xs={2} className=\"\">\n          <IconButton onClick={() => {\n            submit();\n          }}>\n            <SendIcon style={{ color: 'black' }} />\n          </IconButton >\n        </Col>\n      </Row>\n      <Row className=\"p-5px m-5px\">\n        {comments &&\n          comments.map((cmt) => (\n            <Row\n              style={{\n                margin: 0,\n                marginTop: '10px !important',\n                width: '100%'\n              }}\n              md={2}\n            >\n              <Col xs={2} md={1} className=\"fs-14\">\n                <UserDataUrl showIcon={true} Phone={cmt.CommentBy} />\n              </Col>\n              <Col xs={10} md={9}>\n                <h5 className=\"m-0 p-0 fs-14\">\n                  <UserDataUrl showName={true} Phone={cmt.CommentBy} />\n                </h5>\n\n                <span className=\"t-grey fs-14\">{cmt.Comment}</span>\n              </Col>\n\n\n            </Row>\n          ))}\n      </Row>\n    </Container>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\UserData\\UserData.js",["1687","1688","1689"],"import React, { useState, useEffect } from \"react\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { getuserdata } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\nimport { url } from \"../../../Utils/Config\";\nimport { Grid } from \"@material-ui/core\";\nexport default function UserData(props) {\n  const [User, setUser] = useState({});\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(props.Phone);\n    if (props.Phone !== \"\") {\n      axios\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\n        .then((res) => {\n          if (res.data.user) {\n            console.log(res.data.user);\n\n            setUser(res.data.user);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          return { err: \"error 404\" };\n        });\n    }\n  }, [props.Phone]);\n  return (\n    <div className=\"w-100\">\n      {props.showIcon === true ? (\n        User.Pic !== undefined && User.Pic !== \"\" ? (\n          <div className=\"fl\">\n            <Avatar alt=\"Profile Picture\" src={User.Pic} />\n          </div>\n        ) : (\n          <div className=\"fl\">\n            <AccountCircle />\n          </div>\n        )\n      ) : (\n        <></>\n      )}\n      {props.showName === true ? (\n        <div className=\"fl  fs-bold \">{User.Name} </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\Addtoalbum.js",["1690","1691","1692","1693","1694","1695","1696"],"\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Gallery from \"../../Assets/ChooseFromGallery.svg\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport \"../AddEvent/Extras/Extras.css\";\nimport { Grid } from \"@material-ui/core\";\nimport \"../Helpers/Popups/Popup.css\";\nimport { Modal } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { uploadString } from '../../Utils/FileUpload_Download'\nimport { uploadfiletoalbum } from '../../Redux/DispatchFuncitons/Eventfunctions'\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function Addtoalbum(props) {\n    const dispatch = useDispatch();\n    const [album, setAlbum] = useState();\n    const onDrop = useCallback(async (acceptedFiles) => {\n        debugger\n        let bkpalbum = [];\n        let filetype = [];\n\n        for (let i = 0; i < acceptedFiles.length; i++) {\n            if (acceptedFiles[i].size > 5259265) {\n            } else {\n                let type = acceptedFiles[i].type.split(\"/\");\n                type = type[1];\n                await getBase64(acceptedFiles[i]).then(async (data) => {\n                    await bkpalbum.push({ file: data, type: type });\n                    await filetype.push(type);\n                });\n            }\n        }\n        await setAlbum([...bkpalbum]);\n        return true;\n    }, []);\n\n    function getBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n    }\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        accept: \"image/jpeg, image/png, image/jpg\",\n    });\n    const cancel = () => {\n        setAlbum([]);\n    };\n    const deleteimage = (i) => {\n        let albumcpy = [...album];\n        albumcpy = albumcpy.filter((item, index) => i !== index);\n        setAlbum([...albumcpy]);\n    };\n    const save = async () => {\n        debugger\n        let albumcopy = [...props.images]\n        let uniqueurl =\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\" + \"Album/\";\n        for (let i = 0; i < album.length; i++) {\n            let newurl = await uploadString(album[i].file, uniqueurl + i + \".\" + album[i].type)\n            await albumcopy.push({ file: newurl, type: album[i].type })\n        }\n        console.log(albumcopy)\n        await dispatch(uploadfiletoalbum(albumcopy, props.MainCode))\n        props.toggleShowPopup(false);\n    }\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className=\"modal\"\n                open={props.showPopup}\n            >\n                <div className=\"modal-card\">\n                    <IconButton\n                        className=\"popup-close\"\n                        onClick={() => {\n                            props.toggleShowPopup(false);\n                        }}\n                    >\n                        <CancelIcon color=\"secondary\" fontSize=\"large\" />\n                    </IconButton>\n\n                    <div {...getRootProps()} style={{ width: '100%' }}>\n                        <input {...getInputProps()} />\n                        <img src={Gallery} className=\"w-100 uploadhere\" />\n                    </div>\n                    <Grid item xs={12} className=\"ofh view\">\n                        <Grid container spacing={4}>\n                            {album && album.length > 0\n                                ? album.map((image, index) => (\n                                    <Grid item xs={4} md={2} key={\"img\" + index}>\n                                        <CancelIcon\n                                            onClick={() => {\n                                                deleteimage(index);\n                                            }}\n                                            color=\"secondary\"\n                                            className=\"delete-img\"\n                                        />\n                                        <img src={image.file} className=\"w-100 preview\" />\n                                    </Grid>\n                                ))\n                                : Array.from({ length: 30 }, (value, key) => (\n                                    <Grid\n                                        item\n                                        xs={2}\n                                        md={1}\n                                        key={\"img\" + key}\n                                        className=\"w-100 preview grey m-5px\"\n                                    ></Grid>\n                                ))}\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} className=\"submit jcc\">\n                        <button\n                            onClick={() => {\n                                save();\n                            }}\n                            className=\"add-album  \"\n                        >\n                            Save\n                        </button>\n                    </Grid>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Chat\\Chatbox.js",["1697","1698","1699","1700","1701","1702","1703","1704","1705","1706"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Grid,\n  Avatar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Paper,\n  InputBase,\n  Divider,\n  IconButton,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { url } from \"../../Utils/Config\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useDropzone } from \"react-dropzone\";\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport axios from \"axios\";\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"96%\",\n    marginLeft: \"1%\",\n    background: \" #f5f0f0\",\n    borderRadius: \"500px\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function Chatbox(props) {\n  const classes = useStyles();\n  const [chats, setchat] = useState([]);\n  const Auth = useSelector((state) => state.Auth);\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    if (acceptedFiles[0].size > 5259265) {\n      alert(\"Max file size 5mb\");\n      return false;\n    }\n\n    let type = acceptedFiles[0].type.split(\"/\");\n    type = type[1];\n    var reader = await new FileReader();\n    reader.onload = async function () {\n      let url = props.SelectedGroup.room + \"/\" + Date.now() + \".\" + type;\n      // console.log(url);\n      let filedata = await uploadString(reader.result, url);\n      props.sendImage({\n        sender: Auth.Phone,\n        type: \"image\",\n        content: filedata,\n        room: props.SelectedGroup.room,\n        _id: props.SelectedGroup._id,\n      });\n      console.log({\n        sender: Auth.Phone,\n        type: \"image\",\n        content: filedata,\n        room: props.SelectedGroup.room,\n        _id: props.SelectedGroup._id,\n      });\n    };\n    reader.onerror = function (error) {\n      // console.log(\"Error: \", error);\n    };\n    await reader.readAsDataURL(acceptedFiles[0]);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png, image/jpg, \",\n  });\n  useEffect(async () => {\n    const interval = setInterval(() => {\n      if (props.SelectedGroup._id !== \"\") {\n        getChats(props.SelectedGroup._id);\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(async () => {\n    props.setIsSubmit(false);\n  }, [props.SelectedGroup.chats, props.IsSubmit]);\n\n  const getChats = (_id) => {\n    axios\n      .post(url + \"chatgroup/getchat\", { _id: _id })\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === \"success\") {\n          setchat(response.data.chatdata);\n          console.log(response.data.chatdata);\n        }\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n  return (\n    <Grid container spacing={0} className=\"h100\">\n      <Grid item xs={12} className=\"h7 white\">\n        <List className=\"p-0 m-0\">\n          <ListItem className=\" m-0\">\n            {props.fullscreen === false ? (\n              <IconButton\n                onClick={() => {\n                  props.setshow(0);\n                }}\n              >\n                <ArrowBackIosIcon />\n              </IconButton>\n            ) : (\n              <></>\n            )}\n            {props.SelectedGroup !== \"\" ? (\n              props.SelectedGroup.Type === \"GRP\" ? (\n                <>\n                  <ListItemIcon>\n                    <Avatar src={props.SelectedGroup.GrpPhoto} />\n                  </ListItemIcon>\n                  <ListItemText>{props.SelectedGroup.Name}</ListItemText>\n                </>\n              ) : (\n                <>\n                  <ListItemAvatar>\n                    <UserDatajustUrl\n                      showIcon={true}\n                      Phone={\n                        props.SelectedGroup.Name === Auth.Phone ||\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\n                            ? props.SelectedGroup.Admin\n                            : \"+91\" + props.SelectedGroup.Admin\n                          : typeof props.SelectedGroup.Name === \"string\" &&\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\n                            ? props.SelectedGroup.Name.toString()\n                            : \"+91\" + props.SelectedGroup.Name\n                      }\n                    />\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <UserDatajustUrl\n                      showName={true}\n                      Phone={\n                        props.SelectedGroup.Name === Auth.Phone ||\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\n                            ? props.SelectedGroup.Admin\n                            : \"+91\" + props.SelectedGroup.Admin\n                          : typeof props.SelectedGroup.Name === \"string\" &&\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\n                            ? props.SelectedGroup.Name.toString()\n                            : \"+91\" + props.SelectedGroup.Name\n                      }\n                    />\n                  </ListItemText>\n                </>\n              )\n            ) : (\n              <></>\n            )}\n          </ListItem>\n        </List>\n      </Grid>\n\n      <Grid item xs={12} className=\"chat\">\n        {chats &&\n          chats.map((chat) => (\n            <>\n              {chat.sender === Auth.Phone ? (\n                <div className=\"sender\">\n                  {chat.type === \"text\" ? (\n                    chat.content\n                  ) : chat.type === \"image\" ? (\n                    <img src={chat.content} className=\"chat-img\" />\n                  ) : (\n                    <></>\n                  )}\n                </div>\n              ) : (\n                <div className=\"recieved\">\n                  {chat.type === \"text\" ? (\n                    <>\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\n                      :\n                      <br />\n                      {chat.content}\n                    </>\n                  ) : chat.type === \"image\" ? (\n                    <>\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\n                      :\n                      <br />\n                      <img src={chat.content} className=\"chat-img\" />\n                    </>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n              )}\n            </>\n          ))}\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        className=\"inputbox\"\n        style={{ display: props.SelectedGroup !== \"\" ? \"block\" : \"none\" }}\n      >\n        <Paper\n          component=\"form\"\n          className={classes.root}\n          onSubmit={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\n              <AttachFileIcon className=\"tilt\" />\n            </IconButton>\n          </div>\n\n          <InputBase\n            className={classes.input}\n            placeholder=\"hi...\"\n            inputProps={{ \"aria-label\": \"search google maps\" }}\n            value={props.text}\n            onChange={(e) => {\n              props.settext(e.target.value);\n            }}\n          />\n\n          <Divider className={classes.divider} orientation=\"vertical\" />\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"directions\"\n            onClick={() => {\n              props.submit();\n              props.settext(\"\");\n            }}\n          >\n            <SendIcon />\n          </IconButton>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Chat\\List.js",["1707","1708","1709","1710","1711","1712","1713"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport history from \"../../Utils/History\";\nimport {\n  Paper,\n  InputBase,\n  Tabs,\n  IconButton,\n  Tab,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useSelector } from \"react-redux\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Popup from \"../Helpers/Popups/Popup\";\nimport SelectParticipant from \"./SelectParticipant\";\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\nconst useStyles = makeStyles((theme) => ({\n  tabroot: {\n    flexGrow: 1,\n  },\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"90%\",\n    marginLeft: \"5%\",\n    borderRadius: \"500px\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\nexport default function CList(props) {\n  const [value, setValue] = useState(0);\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\n  const Auth = useSelector((state) => state.Auth);\n  // console.log(Auth.Phone);\n  const [show, setshow] = useState(false);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const [Groups, setGroups] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    let grpcopy = [];\n    AllGroups.map((sgrpup) => {\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\n        grpcopy.push(sgrpup);\n      }\n    });\n    setGroups(grpcopy);\n  }, []);\n  useEffect(() => {\n    let grpcopy = [];\n    AllGroups.map((sgrpup) => {\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\n        grpcopy.push(sgrpup);\n      }\n    });\n    setGroups(grpcopy);\n  }, [AllGroups]);\n  return (\n    <div className=\"h100 vlgrey\">\n      <Grid container spacing={0} className=\"h7 white\">\n        <Grid item xs={10} className=\"h7 white\">\n          <h2 className=\"chatheadertitle\">\n            {/* <ArrowBackIosIcon\n              onClick={() => {\n                // console.log(props.pushto);\n                history.goBack();\n              }}\n            /> */}\n            Chat\n          </h2>\n        </Grid>\n        <Grid item xs={2}>\n          <AddCircleOutlineIcon\n            fontSize={\"large\"}\n            color={\"primary\"}\n            className=\"m-5px\"\n            onClick={() => {\n              setshow(true);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.tabroot}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Direct\" />\n            <Tab label=\"Group\" />\n          </Tabs>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper component=\"form\" className={classes.root}>\n            <InputBase\n              className={classes.input}\n              placeholder=\"Search for Participants\"\n              inputProps={{ \"aria-label\": \"search google maps\" }}\n            />\n\n            <IconButton\n              color=\"default\"\n              className={classes.iconButton}\n              aria-label=\"directions\"\n            >\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} className=\" w-90-p\">\n          <List>\n            {Groups.map((grp) => (\n              <ListItem\n                className=\" m-5px\"\n                onClick={() => {\n                  // console.log(grp);\n                  props.setSelectedGroup(grp);\n                  props.setchat(grp.chats);\n                  props.updateName();\n                  props.setshow(1);\n                }}\n              >\n                {value === 1 && grp.Type === \"GRP\" ? (\n                  <>\n                    <ListItemAvatar>\n                      <Avatar alt=\"Profile Picture\" src={grp.GrpPhoto} />\n                    </ListItemAvatar>\n                    <ListItemText primary={grp.Name} />\n                  </>\n                ) : (\n                  <></>\n                )}\n                {value === 0 && grp.Type === \"INDV\" ? (\n                  <>\n                    <ListItemAvatar>\n                      <UserDatajustUrl\n                        showIcon={true}\n                        Phone={\n                          grp.Name === Auth.Phone ||\n                            \"+91\" + grp.Name === Auth.Phone\n                            ? typeof grp.Admin === \"string\" &&\n                              grp.Admin.toString().startsWith(\"+\")\n                              ? grp.Admin\n                              : \"+91\" + grp.Admin\n                            : typeof grp.Name === \"string\" &&\n                              grp.Name.toString().startsWith(\"+\")\n                              ? grp.Name.toString()\n                              : \"+91\" + grp.Name\n                        }\n                      />\n                    </ListItemAvatar>\n                    <ListItemText>\n                      <UserDatajustUrl\n                        showName={true}\n                        Phone={\n                          grp.Name === Auth.Phone ||\n                            \"+91\" + grp.Name === Auth.Phone\n                            ? typeof grp.Admin === \"string\" &&\n                              grp.Admin.toString().startsWith(\"+\")\n                              ? grp.Admin\n                              : \"+91\" + grp.Admin\n                            : typeof grp.Name === \"string\" &&\n                              grp.Name.toString().startsWith(\"+\")\n                              ? grp.Name.toString()\n                              : \"+91\" + grp.Name\n                        }\n                      />\n                    </ListItemText>\n                  </>\n                ) : (\n                  <></>\n                )}\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n      </Grid>\n      <Popup\n        component={SelectParticipant}\n        toggleShowPopup={setshow}\n        showPopup={show}\n        url={props.allparticipants}\n        showall={value}\n        MainCode={props.MainCode}\n        Groups={Groups}\n      />\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\VideoOne.js",["1714"],"import React, { useState } from \"react\";\nimport ModalVideo from \"react-modal-video\";\nimport BlockTitle from \"./BlockTitle\";\nimport videoBG from \"../../Assets/resources/video-bg-1-1.jpg\";\n\nconst VideoOne = () => {\n  const [open, setOpen] = useState({\n    isOpen: false,\n  });\n  // const openModal = (e) => {\n  //   e.preventDefault();\n  //   setOpen({\n  //     isOpen: true,\n  //   });\n  // };\n  return (\n    <section className=\"video-one\">\n      <div\n        className=\"container-fluid\"\n        style={{ backgroundImage: `url(${videoBG})` }}\n      >\n        <div\n          className=\"video-one__content wow fadeInLeft\"\n          data-wow-duration=\"1500ms\"\n        >\n          <BlockTitle\n            textAlign=\"left\"\n            paraText=\"How it Works\"\n            titleText={`Watch Now \\n Our Video \\n For More`}\n          />\n        </div>\n        <ModalVideo\n          channel=\"youtube\"\n          isOpen={open.isOpen}\n          videoId=\"USccSZnS8MQ\"\n          onClose={() => setOpen({ isOpen: false })}\n        />\n        <a className=\"video-one__btn video-popup\">\n          <i className=\"fa fa-play\"></i>\n        </a>\n      </div>\n    </section>\n  );\n};\nexport default VideoOne;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Pricing.js",["1715","1716","1717","1718","1719","1720"],"import React, { useState } from \"react\";\nimport BlockTitle from \"./BlockTitle\";\nimport { Grid } from \"@material-ui/core\";\nconst Pricing = (props) => {\n  const [plan, setPlan] = useState(false);\n  return (\n    <section className=\"pricing-one\" id=\"pricing\">\n      <Grid container spacing={0}>\n        <Grid xs={12} md={12}>\n          <BlockTitle\n            textAlign=\"center\"\n            paraText=\"Pricing Tables\"\n            titleText={`Choose Pricing Plans Which \\n Suits Your Needs`}\n          />\n          <ul\n            className=\"list-inline text-center switch-toggler-list\"\n            role=\"tablist\"\n            id=\"switch-toggle-tab\"\n          >\n            <li className={`month ${plan === false ? \"active\" : \"\"}`}>\n              <a\n                href=\"#\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setPlan(false);\n                }}\n              >\n                Paid\n              </a>\n            </li>\n            <li>\n              <label\n                onClick={(e) => {\n                  e.preventDefault();\n                  setPlan(!plan);\n                }}\n                className={`switch ${plan === true ? \"off\" : \"on\"}`}\n              >\n                <span className=\"slider round\"></span>\n              </label>\n            </li>\n            <li className={`year ${plan === true ? \"active\" : \"\"}`}>\n              <a\n                href=\"#\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setPlan(true);\n                }}\n              >\n                Free\n              </a>\n            </li>\n          </ul>\n        </Grid>\n        <Grid item xs={false} md={1}></Grid>\n        <Grid xs={10}>\n          {plan === true ? (\n            <div id=\"yearly\">\n              <Grid container spacing={2}>\n                <Grid xs={false} md={4} item />\n                <Grid xs={12} md={4} item>\n                  <div className=\"pricing-one__single\">\n                    <div className=\"pricing-one__circle\"></div>\n                    <div className=\"pricing-one__inner\">\n                      <p>Free</p>\n                      <h3>₹0</h3>\n                      <ul className=\"list-unstyled pricing-one__list\">\n                        <li>Basic features</li>\n                        <li>Limit 15 Members</li>\n                        <li>Upgrade Option</li>\n                        <li>Limited Features</li>\n                      </ul>\n                      <a href=\"#\" className=\"thm-btn pricing-one__btn\">\n                        <span>Choose Plan</span>\n                      </a>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          ) : (\n            <div id=\"month\">\n              <Grid container spacing={2}>\n                <Grid xs={12} md={4} item>\n                  <div className=\"pricing-one__single\">\n                    <div className=\"pricing-one__circle\"></div>\n                    <div className=\"pricing-one__inner\">\n                      <p>Bronze</p>\n                      <h3>₹200</h3>\n                      <ul className=\"list-unstyled pricing-one__list\">\n                        <li>Upto 50 Members</li>\n                        <li>Free Support</li>\n                        <li>Free In App Messages</li>\n                        <li>Full access</li>\n                      </ul>\n                      <a href=\"#\" className=\"thm-btn pricing-one__btn\">\n                        <span>Choose Plan</span>\n                      </a>\n\n                      <span>No hidden charges!</span>\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid xs={12} md={4} item>\n                  <div className=\"pricing-one__single\">\n                    <div className=\"pricing-one__circle\"></div>\n                    <div className=\"pricing-one__inner\">\n                      <p>Silver</p>\n                      <h3>₹500</h3>\n                      <ul className=\"list-unstyled pricing-one__list\">\n                        <li>Upto 200 Members</li>\n                        <li>Lifetime free support</li>\n                        <li>Multiple Events</li>\n                        <li>Full access</li>\n                      </ul>\n                      <a href=\"#\" className=\"thm-btn pricing-one__btn\">\n                        <span>Choose Plan</span>\n                      </a>\n\n                      <span>No hidden charges!</span>\n                    </div>\n                  </div>\n                </Grid>\n                <Grid xs={12} md={4}>\n                  <div className=\"pricing-one__single\">\n                    <div className=\"pricing-one__circle\"></div>\n                    <div className=\"pricing-one__inner\">\n                      <p>Gold</p>\n                      <h3>₹999</h3>\n                      <ul className=\"list-unstyled pricing-one__list\">\n                        <li>Extra features</li>\n                        <li>Lifetime free support</li>\n                        <li>Super User</li>\n                        <li>Full access</li>\n                      </ul>\n                      <a href=\"#\" className=\"thm-btn pricing-one__btn\">\n                        <span>Choose Plan</span>\n                      </a>\n\n                      <span>No hidden charges!</span>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default Pricing;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Services.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Testimonials.js",["1721","1722","1723"],"import React from \"react\";\nimport SwiperCore, { Pagination, Thumbs, Controller } from \"swiper\";\n\nimport Swiper from \"react-id-swiper\";\nimport BlockTitle from \"./BlockTitle\";\nimport { Grid } from \"@material-ui/core\";\nimport TestiQoute from \"../../Assets/shapes/testi-qoute-1-1.png\";\nimport TestiImageOne from \"../../Assets/resources/testi-1-1.jpg\";\nimport TestiImageTwo from \"../../Assets/resources/testi-1-2.jpg\";\nimport TestiImageThree from \"../../Assets/resources/testi-1-3.jpg\";\nSwiperCore.use([Pagination, Thumbs, Controller]);\nconst Testimonials = (props) => {\n  const paramsTwo = {\n    observer: true,\n    observeParents: true,\n    speed: 1400,\n    mousewheel: false,\n    autoplay: {\n      delay: 3000,\n      disableOnInteraction: false,\n    },\n    pagination: {\n      el: \".testimonials-one__pagination-wrap .swiper-pagination\",\n      clickable: true,\n    },\n  };\n\n  const paramsOne = {\n    slidesPerView: 1,\n    spaceBetween: 0,\n    effect: \"fade\",\n    speed: 1400,\n    watchSlidesVisibility: true,\n    watchSlidesProgress: true,\n    loop: true,\n    autoplay: {\n      delay: 3000,\n      disableOnInteraction: false,\n    },\n  };\n\n  return (\n    <section className=\"testimonials-one\">\n      <Grid container spacing={12}>\n        <Grid item md={6}>\n          <div className=\"testimonials-one__thumb-carousel-wrap\">\n            <div className=\"testimonials-one__icon\">\n              <div className=\"testimonials-one__icon-inner\">\n                <img src={TestiQoute} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"testimonials-one__thumb-carousel\">\n              <Swiper {...paramsOne}>\n                <div className=\"swiper-slide\">\n                  <div className=\"testimonials-one__image\">\n                    <img src={TestiImageOne} alt=\"Awesome Image\" />\n                  </div>\n                </div>\n                <div className=\"swiper-slide\">\n                  <div className=\"testimonials-one__image\">\n                    <img src={TestiImageTwo} alt=\"Awesome Image\" />\n                  </div>\n                </div>\n                <div className=\"swiper-slide\">\n                  <div className=\"testimonials-one__image\">\n                    <img src={TestiImageThree} alt=\"Awesome Image\" />\n                  </div>\n                </div>\n              </Swiper>\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={6} className=\"d-flex\">\n          <div className=\"my-auto\">\n            <BlockTitle\n              textAlign=\"left\"\n              paraText=\"Our Testimonials\"\n              titleText={`What Our Customers Are \\n Talking About`}\n            />\n            <div className=\"testimonials-one__carousel\">\n              <Swiper {...paramsTwo}>\n                <div className=\"swiper-slide\">\n                  <div className=\"testimonials-one__single\">\n                    <p className=\"testimonials-one__text\">\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                      Vivamus tristique eros ante. Pellentesque ultrices\n                      scelerisque eros tristique interdum. Donec imperdiet\n                      tincidunt massa, eget viverra turpis facilisis ac.\n                    </p>\n\n                    <h3 className=\"testimonials-one__title\">Soubhagya</h3>\n                  </div>\n                </div>\n                <div className=\"swiper-slide\">\n                  <div className=\"testimonials-one__single\">\n                    <p className=\"testimonials-one__text\">\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                      Vivamus tristique eros ante. Pellentesque ultrices\n                      scelerisque eros tristique interdum. Donec imperdiet\n                      tincidunt massa, eget viverra turpis facilisis ac.\n                    </p>\n\n                    <h3 className=\"testimonials-one__title\">Soubhagya</h3>\n                  </div>\n                </div>\n                <div className=\"swiper-slide\">\n                  <div className=\"testimonials-one__single\">\n                    <p className=\"testimonials-one__text\">\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                      Vivamus tristique eros ante. Pellentesque ultrices\n                      scelerisque eros tristique interdum. Donec imperdiet\n                      tincidunt massa, eget viverra turpis facilisis ac.\n                    </p>\n\n                    <h3 className=\"testimonials-one__title\">Soubhagya</h3>\n                  </div>\n                </div>\n              </Swiper>\n              <div className=\"testimonials-one__pagination-wrap\">\n                <div className=\"swiper-pagination\"></div>\n              </div>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default Testimonials;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\MobileMenu.js",["1724","1725","1726","1727","1728"],"import React from \"react\";\nimport NavLinks from \"./NavLinks\";\nimport CloseBtn from \"../../Assets/shapes/close-1-1.png\";\n\nconst MobileMenu = () => {\n  return (\n    <div className=\"side-menu__block\">\n      <div className=\"side-menu__block-overlay custom-cursor__overlay\">\n        <div className=\"cursor\"></div>\n        <div className=\"cursor-follower\"></div>\n      </div>\n      <div className=\"side-menu__block-inner \">\n        <div className=\"side-menu__top justify-content-end\">\n          <a href=\"#\" className=\"side-menu__toggler side-menu__close-btn\">\n            <img src={CloseBtn} alt=\"\" />\n          </a>\n        </div>\n\n        <nav className=\"mobile-nav__container\">\n          <NavLinks />\n        </nav>\n        <div className=\"side-menu__sep\"></div>\n        <div className=\"side-menu__content\">\n          <p>\n            Lorem Ipsum is simply dummy text the printing and setting industry.\n            Lorm Ipsum has been the industry's stanard dummy text ever.\n          </p>\n          <p>\n            <a href=\"mailto:teammobillyinvite@gmail.com\">\n              teammobillyinvite@gmail.com\n            </a>\n            <br />\n            <a href=\"tel:9348689987\">+91-9348689987</a>\n          </p>\n          <div className=\"side-menu__social\">\n            <a href=\"#\">\n              <i className=\"fab fa-facebook-square\"></i>\n            </a>\n            <a href=\"#\">\n              <i className=\"fab fa-twitter\"></i>\n            </a>\n            <a href=\"#\">\n              <i className=\"fab fa-instagram\"></i>\n            </a>\n            <a href=\"#\">\n              <i className=\"fab fa-pinterest-p\"></i>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MobileMenu;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js",["1729","1730","1731"],"import React, { useState } from \"react\";\nimport Header from \"../../Helpers/Header/Header\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./InvitaionRSVP.css\";\nimport { Carousel, Button } from \"react-bootstrap\";\n\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\nimport history from \"../../../Utils/History\";\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\nexport default function InvitaionRSVP(props) {\n  const dispatch = useDispatch();\n  const Auth = useSelector((state) => state.Auth);\n\n  const Next = async (i) => {\n    console.log(i, props.Eventdata.length);\n    if (i < props.Eventdata.length) {\n      props.setevno(i);\n      setindex(i);\n      setdirection(\"next\");\n    } else {\n      props.sethasallrsvps(true);\n      await dispatch(GetInvitations());\n      await dispatch(GetEvents());\n      await dispatch(getNotification())\n    }\n  };\n\n  const [index, setindex] = useState(0);\n  const [direction, setdirection] = useState(\"\");\n\n  const handleSelect = (index) => {\n    let newIndex = index + 1;\n  };\n\n  return (\n    <>\n      <div className=\"desktop-only w-100\" >\n        <Header className=\"desktop-only\" />\n      </div>\n      <DesktopNav id={props.id} base={props.base} />\n      <Toggler id={props.id} />\n      <Carousel\n        controls={false}\n        direction={direction}\n        onSelect={(i) => {\n          handleSelect(i);\n        }}\n        activeIndex={index}\n        interval={99999999999999}\n      >\n        {props.Eventdata && props.Eventdata.length > 0 &&\n          props.Eventdata.map((eve, index) => (\n            <Carousel.Item>\n              <img\n                className=\"d-block fullimage\"\n                src={eve.file}\n                alt=\"First slide\"\n              />\n              <div className=\"rsvp-buttons\">\n                <center>\n                  <Button\n                    className=\"btn-weddingmain\"\n                    onClick={async () => {\n                      await dispatch(rsvp_event(eve._id, \"Accept\", Auth.Phone));\n                      Next(index + 1);\n                    }}\n                  >\n                    <CheckIcon />\n                    Accept\n                  </Button>\n                  <Button\n                    className=\"btn-weddingmain\"\n                    onClick={async () => {\n                      await dispatch(rsvp_event(eve._id, \"May Be\", Auth.Phone));\n                      Next(index + 1);\n                    }}\n                  >\n                    <ErrorIcon />\n                    Maybe\n                  </Button>\n                  <Button\n                    className=\"btn-weddingmain\"\n                    onClick={async () => {\n                      await dispatch(\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\n                      );\n                      Next(index + 1);\n                    }}\n                  >\n                    <CancelIcon />\n                    Decline\n                  </Button>\n                </center>\n              </div>\n              <Carousel.Caption></Carousel.Caption>\n            </Carousel.Item>\n          ))}\n      </Carousel>\n      {/* <NavMobile className=\"footnavmobile\" id={props.id} base={props.base} /> */}\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Layout.js",["1732"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\n\nconst Layout = (props) => {\n  const [scrollTop, setScrollTop] = useState(false);\n\n  const handleScrollTop = () => {\n    if (window.scrollY > 70) {\n      setScrollTop(true);\n    } else if (window.scrollY < 70) {\n      setScrollTop(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScrollTop);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScrollTop);\n    };\n  });\n  return (\n    <div>\n      <div className=\"page-wrapper\">{props.children}</div>\n\n      {scrollTop === true ? (\n        <ScrollLink\n          to=\"home\"\n          smooth={true}\n          duration={500}\n          className=\"scroll-to-top\"\n        >\n          <i className=\"fa fa-angle-up\"></i>\n        </ScrollLink>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Layout;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\FAQ.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Header.js",["1733"],"import React, { useState, useEffect } from \"react\";\nimport NavLinks from \"./NavLinks\";\n\nimport LogoImage from \"../../Assets/logo-1-1.png\";\n\nconst HeaderHome = (props) => {\n  const [sticky, setSticky] = useState(false);\n\n  const handleScroll = () => {\n    if (window.scrollY > 70) {\n      setSticky(true);\n    } else if (window.scrollY < 70) {\n      setSticky(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    mobileMenu();\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  const mobileMenu = () => {\n    document\n      .querySelector(\".side-menu__toggler\")\n      .addEventListener(\"click\", function (e) {\n        document.querySelector(\".side-menu__block\").classList.toggle(\"active\");\n        e.preventDefault();\n      });\n\n    //Close Mobile Menu\n    let sideMenuCloser = document.querySelectorAll(\n      \".side-menu__close-btn, .side-menu__block-overlay\"\n    );\n\n    sideMenuCloser.forEach((sideMenuCloserBtn) => {\n      sideMenuCloserBtn.addEventListener(\"click\", function (e) {\n        document.querySelector(\".side-menu__block\").classList.remove(\"active\");\n        e.preventDefault();\n      });\n    });\n  };\n\n  return (\n    <header\n      className={`site-header-one stricky  ${props.extraClassName} ${\n        sticky === true ? \"stricky-fixed stricked-menu\" : \" \"\n      }`}\n    >\n      <div className=\"container-fluid\">\n        <div className=\"site-header-one__logo\">\n          <a href=\"/\">\n            <img src={LogoImage} width=\"129\" alt=\"\" />\n          </a>\n          <span className=\"side-menu__toggler\">\n            <i className=\"fa fa-bars\"></i>\n          </span>\n        </div>\n        <div className=\"main-nav__main-navigation\">\n          <NavLinks />\n        </div>\n        <div className=\"main-nav__right\">\n          <a\n            className={`thm-btn ${props.btnClass}`}\n            onClick={() => {\n              props.toggleShowPopup(true);\n            }}\n          >\n            <span>SignUp/Login</span>\n          </a>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default HeaderHome;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Footer.js",["1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746"],"import React from \"react\";\n\nimport FooterLogo from \"../../Assets/logo-1-1.png\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <footer className=\"site-footer\">\n        <div className=\"site-footer__upper\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-4\">\n                <div className=\"footer-widget footer-widget__about\">\n                  <a href=\"index.html\">\n                    <img src={FooterLogo} width=\"129\" alt=\"\" />\n                  </a>\n                  <p>\n                    Lorem Ipsum is simply dummy text the <br /> printing and\n                    setting industry. Lorm Ipsum\n                    <br /> has been the text ever.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"col-lg-5\">\n                <div className=\"footer-widget__links-wrap\">\n                  <div className=\"footer-widget\">\n                    <h3 className=\"footer-widget__title\">Company</h3>\n                    <ul className=\"list-unstyled footer-widget__links-list\">\n                      <li>\n                        <a href=\"#\">About</a>\n                      </li>\n                      <li>\n                        <a href=\"#\">Our Team</a>\n                      </li>\n                      <li>\n                        <a href=\"#\">Contact</a>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"footer-widget\">\n                    <h3 className=\"footer-widget__title\">Explore</h3>\n                    <ul className=\"list-unstyled footer-widget__links-list\">\n                      <li>\n                        <a href=\"#\">News</a>\n                      </li>\n                      <li>\n                        <a href=\"#\">Features</a>\n                      </li>\n                      <li>\n                        <a href=\"#\">Free Trial</a>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"footer-widget\">\n                    <h3 className=\"footer-widget__title\">Links</h3>\n                    <ul className=\"list-unstyled footer-widget__links-list\">\n                      <li>\n                        <a href=\"#\">Help</a>\n                      </li>\n                      <li>\n                        <a href=\"#\">Privacy Policy</a>\n                      </li>\n                      <li>\n                        <a href=\"#\">Terms of Use</a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-3 d-flex align-items-center justify-content-xl-end justify-content-lg-end justify-content-md-center justify-content-sm-center\">\n                <div className=\"footer-widget\">\n                  <div className=\"footer-widget__social\">\n                    <a href=\"#\">\n                      <i className=\"fab fa-facebook-square\"></i>\n                    </a>\n                    <a href=\"#\">\n                      <i className=\"fab fa-twitter\"></i>\n                    </a>\n                    <a href=\"#\">\n                      <i className=\"fab fa-instagram\"></i>\n                    </a>\n                    <a href=\"#\">\n                      <i className=\"fab fa-pinterest-p\"></i>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"site-footer__bottom\">\n          <div className=\"container text-center\">\n            <p>© copyright 2020- Mobilly Invite</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\CTATwo.js",["1747"],"import React from \"react\";\nimport BlockTitle from \"./BlockTitle\";\n\nimport CTAImage1 from \"../../Assets/resources/cta-2-moc-1.png\";\nimport CTAImage2 from \"../../Assets/resources/cta-2-moc-2.png\";\nimport CTAImage3 from \"../../Assets/resources/cta-2-moc-3.png\";\n\nconst CTATwo = () => {\n  return (\n    <section className=\"cta-two\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"cta-two__content\">\n              <BlockTitle\n                textAlign=\"left\"\n                paraText=\"Feature List\"\n                titleText={`Minvitd Providing You \\n Best Features`}\n              />\n              <div className=\"cta-two__icon-wrap\">\n                <div className=\"cta-two__icon-single\">\n                  <div className=\"cta-two__icon\">\n                    <i className=\"far fa-comment-alt\"></i>\n                  </div>\n                  <h3>\n                    In App <br /> Messages\n                  </h3>\n                </div>\n                <div className=\"cta-two__icon-single\">\n                  <div className=\"cta-two__icon\">\n                    <i className=\"fas fa-hashtag\"></i>\n                  </div>\n                  <h3>\n                    Social <br /> Media\n                  </h3>\n                </div>\n              </div>\n              <div className=\"cta-two__text\">\n                <p>\n                  Engage with your events members with ease, with social media\n                  like timeline and high-quality video conferencing. More\n                  features to be discover by you ;)\n                </p>\n              </div>\n              <a href=\"#\" className=\"thm-btn cta-two__btn\">\n                <span>Discover More</span>\n              </a>\n            </div>\n          </div>\n          <div className=\"col-lg-6 \">\n            <div className=\"cta-two__images d-flex justify-content-end align-items-end flex-column\">\n              <img\n                src={CTAImage1}\n                className=\"wow fadeInUp\"\n                data-wow-duration=\"1500ms\"\n                alt=\"\"\n              />\n              <img\n                src={CTAImage2}\n                className=\"wow fadeInUp\"\n                data-wow-duration=\"1500ms\"\n                alt=\"\"\n              />\n              <img\n                src={CTAImage3}\n                className=\"wow fadeInUp\"\n                data-wow-duration=\"1500ms\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CTATwo;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\CTAOne.js",["1748"],"import React from \"react\";\nimport BlockTitle from \"./BlockTitle\";\n\nimport CtaShape1 from \"../../Assets/shapes/cta-1-shape-1.png\";\nimport CtaShape2 from \"../../Assets/shapes/cta-1-shape-2.png\";\nimport CtaMoc1 from \"../../Assets/resources/cta-1-moc-1.png\";\n\nconst CTAOne = () => {\n  return (\n    <section className=\"cta-one\">\n      <img src={CtaShape1} className=\"cta-one__bg-shape-1\" alt=\"\" />\n      <img src={CtaShape2} className=\"cta-one__bg-shape-2\" alt=\"\" />\n      <div className=\"container\">\n        <div className=\"cta-one__moc wow fadeInLeft\" data-wow-duration=\"1500ms\">\n          <img src={CtaMoc1} className=\"cta-one__moc-img\" alt=\"\" />\n        </div>\n        <div className=\"row justify-content-end\">\n          <div className=\"col-lg-6\">\n            <div className=\"cta-one__content\">\n              <BlockTitle\n                textAlign=\"left\"\n                paraText=\"More Features\"\n                titleText={`Manage Multiple Events \\n Simultaneously`}\n              />\n              <div className=\"cta-one__text\">\n                <p>\n                  Personal Events, Birthdays, Weddings, Destination Events and\n                  in Just One Platform.\n                </p>\n              </div>\n              <ul className=\"list-unstyled cta-one__list\">\n                <li>\n                  <i className=\"fa fa-check-circle\"></i>\n                  Easy to Create in 5 Minutes\n                </li>\n                <li>\n                  <i className=\"fa fa-check-circle\"></i>\n                  Social Timeline for Events\n                </li>\n                <li>\n                  <i className=\"fa fa-check-circle\"></i>\n                  Customise and Invite at GO\n                </li>\n              </ul>\n              <a href=\"#\" className=\"thm-btn cta-one__btn\">\n                <span>Create Events</span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CTAOne;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Banner.js",["1749"],"import React, { useState } from \"react\";\nimport ModalVideo from \"react-modal-video\";\n\nimport BannerShape from \"../../Assets/shapes/banner-shape-1-1.png\";\nimport BannerBG from \"../../Assets/resources/banner-image-1-1.jpg\";\nimport BannerMoc from \"../../Assets/resources/banner-moc-1-1.png\";\n\nconst Banner = (props) => {\n  const [open, setOpen] = useState({\n    isOpen: false,\n  });\n  // const openModal = () => {\n  //   setOpen({\n  //     isOpen: true,\n  //   });\n  // };\n\n  return (\n    <section className=\"banner-one\" id=\"home\">\n      <img src={BannerShape} className=\"banner-one__bg-shape-1\" alt=\"\" />\n      <div\n        className=\"banner-one__bg\"\n        style={{ backgroundImage: `url(${BannerBG})` }}\n      ></div>\n      <div className=\"container\">\n        <ModalVideo\n          channel=\"youtube\"\n          isOpen={open.isOpen}\n          videoId=\"Kl5B6MBAntI\"\n          onClose={() => setOpen({ isOpen: false })}\n        />\n        <div className=\"banner-one__video video-popup\">\n          <i className=\"fa fa-play\"></i>\n        </div>\n        <div className=\"banner-one__moc\">\n          <img\n            src={BannerMoc}\n            className=\"wow fadeInUp\"\n            data-wow-duration=\"1500ms\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-7\">\n            <div className=\"banner-one__content\">\n              <form\n                className=\"banner-one__mc-form mc-form\"\n                data-url=\"phone-number\"\n              >\n                {/* <input\n                  type=\"tel\"\n                  placeholder=\"Phone Number\"\n                  pattern=\"[0-9]{10}\"\n                  required\n                /> */}\n                <button\n                  className=\"thm-btn banner-one__mc-btn\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    props.toggleShowPopup(true);\n                  }}\n                >\n                  <span>Sign In</span>\n                </button>\n              </form>\n              <div className=\"mc-form__response\"></div>\n              <h3>\n                A Smarter Way <br /> To Attend <br /> Events\n              </h3>\n              <p>\n                Invite people to celebrate your occasion. <br />\n                So easy and convinient.\n              </p>\n              <a href=\"#\" className=\"thm-btn banner-one__btn\">\n                <span>Discover More</span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Contact.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\Clients.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Plan\\Plan.js",["1750","1751","1752","1753","1754"],"import React, { useState } from \"react\";\nimport \"./Plan.css\";\nimport {\n  Grid,\n  Paper,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nfunction Plancard(props) {\n  return (\n    <Paper\n      className=\"plancard\"\n      onClick={() => {\n        props.selectplan(props.plani);\n      }}\n    >\n      <Grid container spacing={0}>\n        <Grid item xs={12} className={\"upperplan \" + props.plan}>\n          <Grid xs={12} className=\"tac t-white pfsmall\">\n            {props.plan}\n          </Grid>\n          <Grid xs={12} className=\"tac t-white pflarge\">\n            {props.invites}\n            <br />\n            Invites\n          </Grid>\n          <Grid xs={12} className=\"tac t-white pfmed\">\n            {props.cost}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} className=\"lowerplan\">\n          <ul class=\"a\">\n            <li>Multiple Events</li>\n            <li>Albums</li>\n            <li>Schedule</li>\n            <li>Ousr Story</li>\n            <li>Location</li>\n            <li>Multiple Admin</li>\n          </ul>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\nexport default function Plan(props) {\n  const [selectedplan, selectplan] = useState(0);\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <div className=\"planheadbottom\"></div>\n        <div className=\"planheadtop\"></div>\n      </Grid>\n      <Grid item xs={12} className=\"plancardholder\">\n        <Plancard\n          plan={\"Free\"}\n          selectplan={selectplan}\n          cost={\"RS 00 / Month\"}\n          invites={\"50\"}\n          plani={0}\n        />\n\n        <Plancard\n          plan={\"Bronze\"}\n          selectplan={selectplan}\n          cost={\"RS 99 / Month\"}\n          invites={\"200\"}\n          plani={1}\n        />\n\n        <Plancard\n          plan={\"Silver\"}\n          selectplan={selectplan}\n          cost={\"RS 299 / Month\"}\n          invites={\"400\"}\n          plani={2}\n        />\n\n        <Plancard\n          plan={\"Gold\"}\n          selectplan={selectplan}\n          cost={\"RS 499 / Month\"}\n          invites={\"400+\"}\n          plani={3}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className=\"planpayment\">\n          <Grid container spacing={0}>\n            <Grid item xs={9}>\n              Plan Amount\n            </Grid>\n            <Grid item xs={3}>\n              {selectedplan === 0 ? \"Rs 00\" : <></>}\n              {selectedplan === 1 ? \"Rs 99\" : <></>}\n              {selectedplan === 2 ? \"Rs 299\" : <></>}\n              {selectedplan === 3 ? \"Rs 499\" : <></>}\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper className=\"planpayment\">\n          <Grid container spacing={0}>\n            <Grid item xs={9}>\n              Extra Template\n            </Grid>\n            <Grid item xs={3}>\n              Rs 00\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper className=\"planpayment\">\n          <Grid container spacing={0}>\n            <Grid item xs={9}>\n              Coupon Discount\n            </Grid>\n            <Grid item xs={3}>\n              Rs 00\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className=\"planpayment\">\n          <Grid container spacing={0}>\n            <Grid item xs={9}>\n              Total Amount\n            </Grid>\n            <Grid item xs={3}>\n              <b>\n                <u>\n                  {selectedplan === 0 ? \"Rs 00\" : <></>}\n                  {selectedplan === 1 ? \"Rs 99\" : <></>}\n                  {selectedplan === 2 ? \"Rs 299\" : <></>}\n                  {selectedplan === 3 ? \"Rs 499\" : <></>}\n                </u>\n              </b>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} className=\"m-7px\">\n        <button\n          className=\"custom-file-upload\"\n          onClick={() => props.handleNext()}\n        >\n          Make Payment\n        </button>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js",["1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781","1782","1783","1784","1785"],"\nimport React, { useEffect, useState } from \"react\";\nimport Access from \"../../../Assets/AddAccess.svg\";\nimport \"../AddEvent.css\";\nimport { Grid, Switch, Modal } from \"@material-ui/core\";\nimport readXlsxFile from \"read-excel-file\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveEvent } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\nimport { uploadString } from \"../../../Utils/FileUpload_Download\";\nimport EventNameBox from \"../CreateEvent/EventNameBox\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport AddCode from \"./AddCode\";\nimport { ReactExcel, readFile, generateObjects } from \"@ramonak/react-excel\";\nimport {\n    Container,\n    Row,\n    Button,\n    ListGroup,\n    Tabs,\n    Tab,\n    Col,\n    Spinner,\n} from \"react-bootstrap\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\n\nimport * as XLSX from \"xlsx\";\nimport { json } from \"body-parser\";\nimport Addformultiple from './Addformultiple'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n\n        backgroundColor: theme.palette.background.paper,\n        border: \"solid 1px grey\",\n    },\n}));\nexport default function NewAddParticipants(props) {\n    const classes = useStyles();\n    const [eventKey, setKey] = useState(0);\n    const dispatch = useDispatch();\n    const Eventdata = useSelector((state) => state.Eventdata);\n    let supported = \"\";\n    let attribute = [\"name\", \"tel\"];\n    const opts = { multiple: true };\n    let Eventscpy = [...props.Events];\n    const [EntryWay, setEntryWay] = useState(\"Contact\");\n    const [code, setCodes] = useState([]);\n    const [isMobile, SetIsMobile] = useState(false);\n    const [isSaving, setisSaving] = useState(false);\n    const [openModal, setopenModal] = useState(false);\n    const [participants, setParticipants] = useState([]);\n    let Albumcpy = [];\n    let Storycpy = [];\n    useEffect(async () => {\n        supported = \"contacts\" in navigator && \"ContactsManager\" in window;\n        if (supported === true) {\n            SetIsMobile(true);\n        } else {\n            SetIsMobile(false);\n        }\n    }, []);\n\n\n    const readExcel = async (file) => {\n        debugger;\n        const fileReader = new FileReader();\n        await fileReader.readAsArrayBuffer(file);\n        fileReader.onload = async (e) => {\n            const bufferArray = e.target.result;\n            const wb = await XLSX.read(bufferArray, { type: \"buffer\" });\n            const wsname = await wb.SheetNames[0];\n            const ws = await wb.Sheets[wsname];\n            const data = await XLSX.utils.sheet_to_json(ws);\n            await saveparticipantsfromexcel(data)\n        };\n        fileReader.onerror = (error) => {\n            console.log(error);\n        };\n    };\n\n    const saveparticipantsfromexcel = async (d) => {\n        debugger\n        let result = d.map((cdata) => {\n            if (cdata.Contact) {\n                return cdata.Contact\n            } else {\n                return (cdata)\n            }\n        });\n        for (let i = 0; i < result.length; i++) {\n            if (typeof result[i] === \"string\") {\n                if (result[i].startsWith(\"+\")) {\n                } else {\n                    result[i] = \"+91\" + result[i];\n                }\n            } else {\n                result[i] = \"+91\" + result[i];\n            }\n\n        }\n        let particpantscpy = [...participants];\n        particpantscpy[eventKey] = [...result];\n        await setParticipants([...particpantscpy]);\n        return 1;\n    }\n    const openContactPicker = async () => {\n        try {\n            let ldata = [];\n            let number = \"\";\n            const contacts = await navigator.contacts.select(attribute, opts);\n            contacts.map(async (contact) => {\n                await ldata.push(contact.tel[0])\n            });\n            await saverecipeients(ldata);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    const saverecipeients = async (data) => {\n        let particpantscpy = [...participants];\n        let contactlist = [];\n        let clist = [];\n        data.map(contact => {\n            clist.push(contact)\n            if (typeof contact === \"string\") {\n                if (contact.startsWith(\"+\")) {\n                } else {\n                    contact = \"+91\" + contact;\n                }\n            } else {\n                contact = \"+91\" + contact;\n            }\n            contact = contact.replaceAll(' ', '');\n            contactlist.push(contact)\n        })\n\n        particpantscpy[eventKey] = [...contactlist];\n        await setParticipants([...particpantscpy]);\n    };\n    const save = async () => {\n        debugger;\n        setisSaving(true);\n        let EventCpy = [...props.Events];\n        if (participants.length === 0 && EntryWay !== 'Code') {\n            setisSaving(false);\n            return false;\n        }\n        let particpantsCpy = [...participants];\n        particpantsCpy.map((listdata, index) => {\n            if (listdata.length === 0) {\n                alert(\"Please Add Guests to Event no \" + (index + 1));\n                setisSaving(false);\n                return false;\n            } else {\n                EventCpy[index].Participants = listdata;\n            }\n        });\n        await create_event();\n    };\n    const create_event = async () => {\n        let uniqueurl =\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\";\n        let EventCpy = [...props.Events];\n        let MainCode = \"\";\n        for (let i = 0; i < EventCpy.length; i++) {\n            let furl =\n                uniqueurl + \"Event_image/\" + i + EventCpy[i].Name.replaceAll(\" \", \"\");\n            let url = await uploadString(EventCpy[i].file, furl);\n            EventCpy[i].file = url;\n        }\n        await props.setEvents(EventCpy);\n        if (Eventdata && Eventdata.ALBUM && Eventdata.ALBUM.length > 0) {\n            Albumcpy = [];\n            for (let i = 0; i < Eventdata.ALBUM.length; i++) {\n                let shurl = uniqueurl + \"Album/\" + i + \".\" + Eventdata.ALBUM[i].type;\n\n                let url = await uploadString(Eventdata.ALBUM[i].data, shurl);\n                Eventdata.ALBUM[i].file = url;\n                await Albumcpy.push({ file: url, type: Eventdata.ALBUM[i].type });\n            }\n        }\n        if (Eventdata && Eventdata.STORY && Eventdata.STORY.length > 0) {\n            Storycpy = [];\n            for (let i = 0; i < Eventdata.STORY.length; i++) {\n                let shurl = uniqueurl + \"Story/\" + i + \".\" + Eventdata.STORY[i].type;\n\n                let url = await uploadString(Eventdata.STORY[i].file, shurl);\n                Eventdata.STORY[i].file = url;\n                await Storycpy.push({\n                    ...Eventdata.STORY[i],\n                    file: url,\n                    type: Eventdata.STORY[i].type,\n                });\n            }\n        }\n        await dispatch(\n            saveEvent({\n                Type: props.Type,\n                Events: EventCpy,\n                Album: Albumcpy,\n                Story: Storycpy,\n                code: code,\n                EntryWay: EntryWay,\n            })\n        );\n        setisSaving(false);\n    };\n    return (<>\n        <Modal\n\n            className=\"f-s-modal\"\n            open={openModal}\n        >\n            <div className=\"f-s-modal-card\">\n                <Addformultiple\n                    Name=\"Schedule\"\n                    className=\"modal-component\"\n                    open={setopenModal}\n                    participants={participants}\n                    eventKey={eventKey}\n                    setParticipants={setParticipants}\n                    setKey={setKey}\n                    Events={props.Events}\n                    isMobile={isMobile}\n                    openContactPicker={openContactPicker}\n                    saveparticipantsfromexcel={saveparticipantsfromexcel}\n                    isSaving={isSaving}\n\n                />\n            </div>\n\n        </Modal>\n        <Grid container spacing={0}>\n\n            {isSaving === true ? <CircularProgress className=\"Progress\" /> : <></>}\n            <img src={Access} className=\"access-logo \" />\n            <b className=\"tac w-100 b theme-font \">\n                Give access to your guest or Upload CSV with for group access\n            </b>\n            <Grid item xs={12}>\n                <p className=\"w-100 tac theme-font\">\n                    <b>\n                        <u>Note</u>\n                    </b>\n                    :{\"CSV can only be accessed by using website \"}\n                </p>\n            </Grid>\n            <Grid container spacing={0}>\n                <Grid item xs={12} sm={12}>\n                    <button\n                        className=\" btn custom-file-upload t-white l-blue mt-5px\"\n                        style={{ display: isMobile === true ? \"block\" : \"none\" }}\n                        onClick={() => {\n                            if (props.Events.length === 1) {\n                                openContactPicker();\n                            } else {\n                                setopenModal(true)\n                            }\n\n                        }}\n                    >\n                        PhoneBook\n                    </button>\n                </Grid>\n                <Grid item xs={12} sm={12}>\n                    <label\n                        htmlfor=\"input1\"\n                        className=\"btn excel-file-upload  t-white l-blue mt-5px\"\n                        style={{ display: isMobile === false ? \"block\" : \"none\" }}\n                        onClick={(e) => {\n                            if (props.Events.length > 1) {\n                                alert(\"clicked>\")\n                                console.log(\"done 2\")\n                                e.preventDefault();\n                                setopenModal(true);\n                            } else {\n                                alert(\"clicked<\")\n                            }\n                        }}\n                    >\n                        {props.Events.length === 1 ? \" Upload Excel\" : \"Add Participants\"}\n\n                    </label>\n                    <input\n                        type=\"file\"\n                        id=\"input1\"\n                        className=\"upload-excel mt-10px\"\n\n                        onChange={(e) => {\n                            if (props.Events.length < 2) {\n                                readExcel(e.target.files[0]);\n                                console.log(\"done 1\")\n                            }\n                        }}\n                        style={{ display: isMobile === false ? \"block\" : \"none\" }}\n                        multiple={false}\n                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <AddCode\n                    Events={props.Events}\n                    code={code}\n                    setCodes={setCodes}\n                    setEntryWay={setEntryWay}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                <button\n                    className=\"btn next mt-10px t-blue\"\n                    onClick={() => {\n                        props.handleBack();\n                    }}\n                >\n                    Back\n                </button>\n            </Grid>\n            <Grid item xs={6}>\n                <button\n                    className=\"btn next mt-10px l-blue t-white p-5px\"\n                    onClick={() => {\n                        save();\n                    }}\n                >\n                    Next\n                </button>\n            </Grid>\n        </Grid ></>\n    )\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js",["1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797","1798","1799"],"import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Grid,\n  InputLabel,\n  Select,\n  FormControl,\n  Modal,\n} from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { useDropzone } from \"react-dropzone\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport EventNameBox from \"./EventNameBox\";\nimport AddImg from \"../../../Assets/AddImage.svg\";\nimport Uploading from \"../../../Assets/Uploading.svg\";\nimport EventDetails from \"./EventDetails\";\nimport ImageSelectionModal from \"./ImageSelectionModal\";\nimport \"./CreateEvent.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default function CreateEvent(props) {\n  const useStyles = makeStyles((theme) => ({\n    notchedOutline: {\n      borderWidth: \"3px\",\n      borderColor: \"#3897f1 !important\",\n      borderRadius: \"150px\",\n      color: \"#3897f1 !important\",\n    },\n  }));\n  const classes = useStyles();\n  const [disablesave, setDisablesave] = useState(false);\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n  }, []);\n\n  const [erroring, seterroring] = useState(false);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\n  });\n  const [showPopup, toggleShowPopup] = useState(false);\n  const [url, seturl] = useState(AddImg);\n  useEffect(() => {\n    if (\n      props.Events[props.SelectedEvent] !== undefined &&\n      props.Events[props.SelectedEvent].file !== \"\"\n    ) {\n      if (props.Events[props.SelectedEvent].file === \"uploading\") {\n        seturl(Uploading);\n      } else {\n        seturl(props.Events[props.SelectedEvent].file);\n      }\n    } else {\n      seturl(AddImg);\n    }\n  }, [\n    props.Events[props.SelectedEvent] !== undefined\n      ? props.Events[props.SelectedEvent].file\n      : \"\",\n  ]);\n\n  return (\n    <>\n      <Grid container spacing={0} className=\"m-0  p-15px pt-0 pb-0\">\n        <Grid item xs={12} sm={6}>\n          <FormControl\n            variant=\"outlined\"\n            className=\"w-100-p  m-b-10 \"\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            <Select\n              native\n              value={props.Type}\n              onChange={props.handleChange}\n              error={erroring}\n              className=\"selectboxblue\"\n              displayEmpty\n            >\n              <option value=\"Wedding\">Wedding</option>\n              <option value=\"Birthday\">Birthday</option>\n              <option value=\"Wedding Anniversary\">Wedding Anniversary</option>\n              <option value=\"Get Together\">Get Together</option>\n              <option value=\"Formal Event\">Formal Event</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <div className=\"noe\">\n            <Grid container spacing={0}>\n              <Grid item xs={false} sm={1} md={2} />\n              <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\n                Number Of Events\n              </Grid>\n              <Grid item xs={5} sm={5} md={4}>\n                <Grid container spacing={0}>\n                  <Grid item xs={12}>\n                    <div className=\"Cirlce tar  fl\">\n                      <RemoveCircleOutlineIcon\n                        className=\"l-blue-t \"\n                        fontSize=\"large\"\n                        onClick={() => {\n                          props.removeAnEvent();\n                        }}\n                      />\n                    </div>\n                    <div className=\"white box  fl\">{props.Events.length}</div>\n                    <div className=\"Cirlce tal  fl\">\n\n                      <AddCircleOutlineIcon\n                        className=\"l-blue-t\"\n                        fontSize=\"large\"\n                        onClick={() => {\n                          props.addAnEvent();\n                        }}\n                      />\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"event-Names m-b-10 p-15px pb-0 pt-0\">\n        <EventNameBox\n          data={props.Events}\n          setEvents={props.setEvents}\n          SelectEvent={props.SelectEvent}\n          SelectedEvent={props.SelectedEvent}\n          checkIfEventEmpty={props.checkIfEventEmpty}\n        />\n      </div>\n\n      <Grid item xs={12}>\n        <EventDetails\n          Events={props.Events}\n          setEvents={props.setEvents}\n          SelectedEvent={props.SelectedEvent}\n          SelectEvent={props.SelectEvent}\n          checkIfEventEmpty={props.checkIfEventEmpty}\n          setDisablesave={setDisablesave}\n          disablesave={disablesave}\n          albumdata={props.albumdata}\n          setStory={props.setStory}\n          setalbumdata={props.setalbumdata}\n          Story={props.Story}\n          template={props.template}\n          handleNext={props.handleNext}\n          Type={props.Type}\n          seterroring={seterroring}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <button\n          className={\n            disablesave === false ? \"save-events disabled\" : \"save-events \"\n          }\n          onClick={() => {\n            if (disablesave === true) {\n              props.handleNext();\n            }\n          }}\n        >\n          Next\n        </button>\n      </Grid>\n    </>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\Stepper\\Stepper.js",["1800","1801","1802","1803","1804","1805","1806","1807"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return [\"\", \"\", \"\"];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return \"\";\n    case 1:\n      return \"\";\n    case 2:\n      return \"\";\n    default:\n      return \"\";\n  }\n}\n\nexport default function HorizontalLinearStepper(props) {\n  const classes = useStyles();\n\n  const steps = getSteps();\n\n  return (\n    // <div className={classes.root}>\n    //   <Stepper activeStep={props.activeStep}>\n    //     {steps.map((label, index) => {\n    //       const stepProps = {};\n    //       const labelProps = {};\n\n    //       return (\n    //         // <Step key={index} {...stepProps} c>\n    //         //   <StepLabel {...labelProps} className=\"l-blue-t\">\n    //         //     {label}\n    //         //   </StepLabel>\n    //         // </Step>\n    //\n    //       );\n    //     })}\n    //   </Stepper>\n    //   <div>\n    //     <div>\n    //       <Typography className={classes.instructions}>\n    //         {getStepContent(props.activeStep)}\n    //       </Typography>\n    //     </div>\n    //   </div>\n    // </div>\n    <div className=\"w-100 p-10px\"></div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Chat\\SelectParticipant.js",["1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  List,\n  ListItemAvatar,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  TextField,\n  Avatar,\n  Grid,\n} from \"@material-ui/core\";\nimport Userurl from \"../Helpers/UserData/UserDatajustUrl\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport AddImg from \"../../Assets/AddImage.svg\";\nimport { creategroup } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useDropzone } from \"react-dropzone\";\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\nexport function Participant(props) {\n  const Auth = useSelector((state) => state.Auth);\n  return (\n    <Grid container spacing={2} className=\"mt-10px ofh\">\n      <Grid item xs={12}>\n        <h5>Select Contact</h5>\n      </Grid>\n      <List>\n        {props.url.map((grp) =>\n          grp !== Auth.Phone ? (\n            <ListItem\n              onClick={async () => {\n                await props.setParticipants([grp]);\n                console.log([grp]);\n                await props.setgroupName(grp + \"\");\n                await props.create();\n              }}\n            >\n              <ListItemAvatar>\n                <Userurl\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\n                  showIcon={true}\n                />\n              </ListItemAvatar>\n              <Userurl\n                Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\n                showName={true}\n              />\n            </ListItem>\n          ) : (\n            <></>\n          )\n        )}\n      </List>\n    </Grid>\n  );\n}\nexport function CreateGroup(props) {\n  const onDrop = useCallback(async (acceptedFiles) => {\n    if (acceptedFiles[0].size > 5259265) {\n      alert(\"Max file size 5mb\");\n      return false;\n    }\n\n    let type = acceptedFiles[0].type.split(\"/\");\n    props.setgroupImagetype(type);\n    var reader = await new FileReader();\n    reader.onload = async function () {\n      let fileurl = reader.result;\n      props.setgroupImage(fileurl);\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n    await reader.readAsDataURL(acceptedFiles[0]);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\n  });\n  const [groupName, setgroupName] = useState(\"\");\n  const [participants, setparticipants] = useState([...props.url]);\n  function filterparticipant(grp) {\n    let Participantcopy = [];\n    Participantcopy = participants.filter((sParticipant, i) => {\n      return sParticipant !== grp;\n    });\n    setparticipants(Participantcopy);\n  }\n  const Auth = useSelector((state) => state.Auth);\n\n  return (\n    <div>\n      <h5> Create Group</h5>\n\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        <img\n          src={props.groupImage === \"\" ? AddImg : props.groupImage}\n          style={{\n            width: \"200px\",\n            objectFit: \"cover\",\n            height: \"200px\",\n            borderRadius: \"100%\",\n            margin: \"10px\",\n            marginLeft: \"50px\",\n          }}\n        />\n      </div>\n\n      <TextField\n        variant=\"outlined\"\n        color=\"primary\"\n        label=\"Group Name\"\n        size=\"small\"\n        className=\"w-100 mt-10px\"\n        value={props.groupName}\n        onChange={(e) => {\n          props.setgroupName(e.target.value);\n        }}\n      />\n      <Grid container spacing={2} className=\"mt-10px ofh\">\n        <List>\n          {props.url.map((grp) =>\n            grp !== Auth.Phone ? (\n              <ListItem\n                onClick={async () => {\n                  await props.setParticipants([...props.Participants, grp]);\n                }}\n              >\n                <ListItemAvatar>\n                  <Userurl\n                    Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\n                    showIcon={true}\n                  />\n                </ListItemAvatar>\n                <Userurl\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\n                  showName={true}\n                />\n              </ListItem>\n            ) : (\n              <></>\n            )\n          )}\n        </List>\n      </Grid>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"w-100\"\n        onClick={async () => {\n          await props.create();\n          props.show(false);\n        }}\n      >\n        Create Group\n      </Button>\n    </div>\n  );\n}\n\nexport default function SelectParticipant(props) {\n  const [createGroup, setcreateGroup] = useState(props.showall);\n  const [Participants, setParticipants] = useState([]);\n  const [groupName, setgroupName] = useState(\"\");\n  const [groupImage, setgroupImage] = useState(\"\");\n  const [groupImagetype, setgroupImagetype] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const create = async () => {\n    let fileurl = \"\";\n    if (Participants.length > 0 && groupName !== \"\") {\n      let participants = [...new Set(Participants)];\n      await setParticipants(participants);\n      console.log(\n        groupName,\n        props.MainCode + groupName,\n        groupImage,\n        createGroup === 0 ? \"INDV\" : \"GRP\"\n      );\n      if (groupImage !== \"\") {\n        fileurl = await uploadString(\n          groupImage,\n          \"Groups/\" + props.MainCode + \"/\" + groupName + \".\" + groupImagetype\n        );\n        await setgroupImage(fileurl);\n      }\n      await dispatch(\n        creategroup(\n          groupName,\n          props.MainCode + groupName,\n          Participants,\n          fileurl,\n          createGroup === 0 ? \"INDV\" : \"GRP\"\n        )\n      );\n      props.hide(false);\n    } else {\n      console.log(groupName);\n      console.log(Participants);\n    }\n  };\n  return (\n    <div>\n      {createGroup === 0 ? (\n        <>\n          <Participant\n            url={props.url}\n            setParticipants={setParticipants}\n            setgroupName={setgroupName}\n            create={create}\n            show={props.hide}\n          />\n        </>\n      ) : (\n        <>\n          <CreateGroup\n            url={props.url}\n            Participants={Participants}\n            setParticipants={setParticipants}\n            setgroupImage={setgroupImage}\n            setgroupName={setgroupName}\n            groupName={groupName}\n            groupImage={groupImage}\n            create={create}\n            show={props.hide}\n            setgroupImagetype={setgroupImagetype}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\BlockTitle.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\AccordionItem.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\LandingPage\\NavLinks.js",["1820","1821","1822"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\n\nconst NavLinks = () => {\n  const [dropdownStatus, setDropdownStatus] = useState(false);\n  const handleDropdownStatus = () => {\n    setDropdownStatus(!dropdownStatus);\n    console.log(dropdownStatus);\n  };\n  return (\n    <ul className=\"main-nav__navigation-box\">\n      <li>{/* <Link href=\"/\">\n          <a>Home</a>\n        </Link> */}</li>\n      <li>\n        <ScrollLink\n          activeClass=\"current\"\n          to=\"features\"\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n        >\n          Features\n        </ScrollLink>\n      </li>\n      <li>\n        <ScrollLink\n          activeClass=\"current\"\n          to=\"pricing\"\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n        >\n          Pricing\n        </ScrollLink>\n      </li>\n      <li>\n        <ScrollLink\n          activeClass=\"current\"\n          to=\"contactme\"\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n        >\n          Contact\n        </ScrollLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js",["1823","1824","1825","1826","1827"],"import React, { useState, useCallback } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useDropzone } from \"react-dropzone\";\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\nimport Tenmplate from \"../../../Assets/TemplateNone.svg\";\nexport default function ImageSelectionModal(props) {\n  const onDrop = useCallback(async (acceptedFiles) => {\n    if (acceptedFiles[0].size > 10259265) {\n      alert(\"Max file size 10 mb\");\n      return false;\n    }\n\n    console.log(props.data);\n\n    let EventsCpy = await { ...props.CurrentEventDetails };\n    let type = acceptedFiles[0].type.split(\"/\");\n    EventsCpy.filetype = type[1];\n    var reader = await new FileReader();\n    reader.onload = async function () {\n      EventsCpy.file = reader.result;\n      await props.SetCurrentEventDetails(EventsCpy);\n      props.show(false);\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n    await reader.readAsDataURL(acceptedFiles[0]);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4\",\n  });\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <h2 className=\"tac\">Upload Your Picture</h2>\n      </Grid>\n      <Grid item xs={6}>\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <img src={Gallery} className=\"w-100\" />\n        </div>\n      </Grid>\n      <Grid item xs={6}>\n        <img src={Tenmplate} className=\"w-100\" />\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js",["1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  FormControl,\n  Paper,\n  Modal,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./CreateEvent.css\";\nimport AddImg from \"../../../Assets/AddImage.svg\";\nimport Scehedule from \"../../../Assets/schedule.svg\";\nimport Storyimg from \"../../../Assets/AddStory.svg\";\nimport Albumsimg from \"../../../Assets/gallery.svg\";\nimport Map from \"../../Helpers/Maps/Maps\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Album from \"../Extras/Album\";\nimport Story from \"../Extras/Story\";\nimport AddSchedule from \"../Extras/Schedule\";\nimport ImageSelectionModal from \"./ImageSelectionModal\";\nimport AddDetails from \"../AddDetails/AddDetails\";\nimport { editform } from \"../../../Redux/DispatchFuncitons/EventCreationFormFunction\";\nimport { SAVEFORM } from \"../../../Redux/Actions/EventCreationFormActions\";\nimport { useDispatch } from \"react-redux\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nexport default function EventDetails(props) {\n  const useStyles = makeStyles((theme) => ({\n    notchedOutline: {\n      borderWidth: \"3px\",\n      // borderColor: \"#3897f1 !important\",\n      borderRadius: \"150px\",\n      color: \"#3897f1 !important\",\n      fontSize: \"12px !important\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const [processing, setProcessing] = useState(false);\n  const [showPopup, toggleShowPopup] = useState(false);\n  const [CurrentEventDetails, SetCurrentEventDetails] = useState({\n    ...props.Events[props.SelectedEvent],\n  });\n  const [IsSubmitted, setSubmit] = useState(false);\n  const [shedulevisible, SetScheduleVisible] = useState(false);\n  const [storyvisible, SetStoryVisible] = useState(false);\n  const [albumvisible, SetAlbumVisible] = useState(false);\n  const [Link, setLink] = useState(\"\");\n  const [Location, setLocation] = useState(\"\");\n  const [isEditLocation, setisEditLocation] = useState(false);\n  const [address, setaddress] = useState(\"\");\n  useEffect(() => {\n    if (props.Events[props.SelectedEvent] !== undefined) {\n      SetCurrentEventDetails(props.Events[props.SelectedEvent]);\n    }\n  }, []);\n  useEffect(() => {\n    debugger;\n    props.setDisablesave(false);\n    if (props.Events[props.SelectedEvent] !== undefined) {\n      SetCurrentEventDetails(props.Events[props.SelectedEvent]);\n    }\n\n    if (\n      CurrentEventDetails !== {} &&\n      CurrentEventDetails.Location !== undefined\n    ) {\n      if (CurrentEventDetails.Location === \"\") {\n        setaddress(\"\");\n      } else {\n        try {\n          if (JSON.parse(CurrentEventDetails.Location === {})) {\n            throw \"unwanted\";\n          } else {\n            setaddress(JSON.parse(CurrentEventDetails.Location).address);\n            setLocation(JSON.parse(CurrentEventDetails.Location).address);\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    } else {\n      setaddress(\"\");\n    }\n  }, [props.SelectedEvent]);\n\n  var gapi = window.gapi;\n  /* \n    Update with your own Client Id and Api key \n  */\n  var CLIENT_ID =\n    \"271872414479-lumfn9dkcqh1k1et8dfau81dkcng81s4.apps.googleusercontent.com\";\n  var API_KEY = \"AIzaSyCdk1XolxNow08BXLxbzCeDReSrNTTlXCo\";\n  var clientSecret = \"GpxXOinOWEyYdsbnVjolU9is\";\n  var DISCOVERY_DOCS = [\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n  ];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n  const save = async () => {\n    let eventscpy = props.Events;\n    let currentEvent = props.SelectedEvent;\n    console.log(CurrentEventDetails);\n    eventscpy[props.SelectedEvent] = CurrentEventDetails;\n\n    await props.setEvents(eventscpy);\n    // await props.SelectEvent(0);\n\n    let result = await props.checkIfEventEmpty(\n      eventscpy,\n      props.Type,\n      props.seterroring,\n      props.SelectedEvent\n    );\n    await setSubmit(true);\n    if (result.status === true && props.Type !== \"\") {\n      let EventsCopy = [...props.Events];\n      await props.setDisablesave(true);\n\n      props.handleNext();\n    } else {\n      console.log(\"result false\");\n      console.log(IsSubmitted);\n      await props.SelectEvent(result.index);\n      console.log(result.index);\n    }\n  };\n\n  const changevenue = () => {\n    if (\n      CurrentEventDetails.VenueType === \"Online\" ||\n      CurrentEventDetails.VenueType === \"Both\"\n    ) {\n      // CreateMeeting();\n      SetCurrentEventDetails({\n        ...CurrentEventDetails,\n        Location: \"\",\n      });\n    }\n  };\n  const dispatch = useDispatch();\n\n  // const updatereduxform = async (data) => {\n  //   await dispatch({\n  //     type: SAVEFORM,\n  //     payload: data,\n  //   });\n  // };\n\n  return (\n    <Grid container spacing={1} className=\"p-15px pt-0\">\n      <Grid item xs={12} sm={12}>\n        {CurrentEventDetails !== undefined &&\n          CurrentEventDetails.file === \"\" ? (\n          <center>\n            <img\n              src={AddImg}\n              className={\n                IsSubmitted === true ? \"add-Img error-box\" : \"add-Img \"\n              }\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n            />\n          </center>\n        ) : CurrentEventDetails !== undefined &&\n          CurrentEventDetails.filetype !== undefined ? (\n          CurrentEventDetails.filetype === \"png\" ||\n            CurrentEventDetails.filetype === \"jpg\" ||\n            CurrentEventDetails.filetype === \"jpeg\" ? (\n            <img\n              src={\n                CurrentEventDetails !== undefined\n                  ? CurrentEventDetails.file\n                  : \" \"\n              }\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n              className={\n                processing === true\n                  ? \"transparent uploaded-file w-100 \"\n                  : \"notTransparent uploaded-file w-100 \"\n              }\n            />\n          ) : (\n            <video\n              muted\n              type=\"video/mp4\"\n              autoPlay={true}\n              src={\n                CurrentEventDetails !== undefined\n                  ? CurrentEventDetails.file\n                  : \" \"\n              }\n              onClick={() => {\n                toggleShowPopup(true);\n              }}\n              preload=\"none\"\n              className={\n                processing === true\n                  ? \" transparent w-100 \"\n                  : \"notTransparent w-100 \"\n              }\n            />\n          )\n        ) : (\n          <></>\n        )}\n        <div>\n          <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className=\"modal\"\n            open={showPopup}\n            onClose={() => {\n              toggleShowPopup(false);\n            }}\n          >\n            <div className=\"modal-card\">\n              <CancelIcon\n                onClick={() => {\n                  toggleShowPopup(false);\n                }}\n                color=\"secondary\"\n                className=\"popup-close\"\n                fontSize=\"large\"\n                style={{ bottom: \"10px\", position: \"inherit\" }}\n              />\n\n              <ImageSelectionModal\n                className=\"modal-component\"\n                data={props.Events}\n                setEvents={props.setEvents}\n                SelectEvent={props.SelectEvent}\n                SelectedEvent={props.SelectedEvent}\n                processing={processing}\n                setDisablesave={props.setDisablesave}\n                CurrentEventDetails={CurrentEventDetails}\n                SetCurrentEventDetails={SetCurrentEventDetails}\n                show={toggleShowPopup}\n              />\n            </div>\n          </Modal>\n        </div>\n      </Grid>\n      <Grid item xs={12}>\n        <span className=\"label\">Enter Event Name</span>\n        <TextField\n          placeholder=\"Name\"\n          id=\"outlined-basics\"\n          variant=\"outlined\"\n          className=\"w-100-p \"\n          size=\"small\"\n          value={CurrentEventDetails.Name}\n          onChange={async (e) => {\n            SetCurrentEventDetails({\n              ...CurrentEventDetails,\n              Name: e.target.value,\n            });\n          }}\n          error={\n            IsSubmitted === true && CurrentEventDetails.Name === \"\"\n              ? true\n              : false\n          }\n          InputProps={{\n            classes: {\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={5}>\n        <span className=\"label\">Time</span>\n        <TextField\n          id=\"time\"\n          // label=\"Time\"\n          variant=\"outlined\"\n          type=\"time\"\n          size=\"small\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          className=\"w-100-p \"\n          inputProps={{\n            step: 300, // 5 min\n          }}\n          ampm={false}\n          value={CurrentEventDetails.Time}\n          onChange={(e) => {\n            console.log(e.target.value);\n            SetCurrentEventDetails({\n              ...CurrentEventDetails,\n              Time: e.target.value,\n            });\n          }}\n          error={\n            IsSubmitted === true && CurrentEventDetails.Time === \"\"\n              ? true\n              : false\n          }\n          InputProps={{\n            classes: {\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n        />\n      </Grid>\n      <Grid item xs={7}>\n        <span className=\"label\">Date</span>\n        <TextField\n          id=\"date\"\n          // label=\"Date\"\n          type=\"date\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          size=\"small\"\n          className=\"w-100-p \"\n          value={\n            CurrentEventDetails.Date === \"\"\n              ? \"01-01/2020\"\n              : CurrentEventDetails.Date\n          }\n          placeholder=\"DD-MM-YY\"\n          onChange={(e) => {\n            SetCurrentEventDetails({\n              ...CurrentEventDetails,\n              Date: e.target.value,\n            });\n          }}\n          error={\n            IsSubmitted === true && CurrentEventDetails.Date === \"\"\n              ? true\n              : false\n          }\n          InputProps={{\n            classes: {\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          style={{ fontSize: \"12px\" }}\n        />\n      </Grid>\n      <Grid item xs={5}>\n        <FormControl\n          variant=\"outlined\"\n          className=\"w-100-p \"\n          size=\"small\"\n          variant=\"outlined\"\n          InputProps={{\n            classes: {\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        >\n          <span className=\"label\">Type</span>\n          <Select\n            className=\"w-100-p selectboxblue\"\n            value={CurrentEventDetails.VenueType}\n            error={\n              IsSubmitted === true && CurrentEventDetails.VenueType === \"\"\n                ? true\n                : false\n            }\n            variant=\"outlined\"\n            InputProps={{\n              classes: {\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          >\n            <MenuItem\n              className=\"w-100-p\"\n              onClick={(e) => {\n                changevenue();\n                SetCurrentEventDetails({\n                  ...CurrentEventDetails,\n                  VenueType: \"Online-Inapp\",\n                });\n              }}\n              value=\"Online-Inapp\"\n            >\n              Online-Inapp\n            </MenuItem>\n            <MenuItem\n              className=\"w-100-p\"\n              onClick={(e) => {\n                changevenue();\n                SetCurrentEventDetails({\n                  ...CurrentEventDetails,\n                  VenueType: \"Online\",\n                });\n              }}\n              value=\"Online\"\n            >\n              Online\n            </MenuItem>\n\n            <MenuItem\n              className=\"w-100-p\"\n              onClick={(e) => {\n                changevenue();\n                SetCurrentEventDetails({\n                  ...CurrentEventDetails,\n                  VenueType: \"Offline\",\n                });\n              }}\n              value=\"Offline\"\n            >\n              Offline\n            </MenuItem>\n            <MenuItem\n              className=\"w-100-p\"\n              onClick={(e) => {\n                changevenue();\n                SetCurrentEventDetails({\n                  ...CurrentEventDetails,\n                  VenueType: \"Both\",\n                });\n              }}\n              value=\"Both\"\n            >\n              Both\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <>\n        <Grid\n          item\n          xs={7}\n          className={\n            CurrentEventDetails.VenueType === \"Offline\" ? \"hide\" : \"show\"\n          }\n        >\n          <span className=\"label \"> Link </span>\n          <TextField\n            id=\"outlined-basic\"\n            size=\"small\"\n            variant=\"outlined\"\n            className=\"w-100-p \"\n            placeholder=\"Add Link Below\"\n            value={\n              CurrentEventDetails.VenueType === \"Online\" ||\n                CurrentEventDetails.VenueType === \"Both\"\n                ? CurrentEventDetails.Link\n                : \"Meeting Created\"\n            }\n            disabled={\n              CurrentEventDetails.VenueType === \"Online\" ||\n                CurrentEventDetails.VenueType === \"Both\"\n                ? false\n                : true\n            }\n            onChange={(e) => {\n              SetCurrentEventDetails({\n                ...CurrentEventDetails,\n                Link: e.target.value,\n                Location: \"\",\n              });\n            }}\n            error={\n              IsSubmitted === true && CurrentEventDetails.Link === \"\"\n                ? true\n                : false\n            }\n            InputProps={{\n              classes: {\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={CurrentEventDetails.VenueType === \"Offline\" ? 7 : 12}\n          sm={CurrentEventDetails.VenueType === \"Offline\" ? 7 : 12}\n          className={\n            CurrentEventDetails.VenueType === \"Online\" ||\n              CurrentEventDetails.VenueType === \"Online-Inapp\"\n              ? \"hide\"\n              : \"show\"\n          }\n        >\n          {isEditLocation}\n          {isEditLocation === true ? (\n            <>\n              <Map\n                SetCurrentEventDetails={SetCurrentEventDetails}\n                CurrentEventDetails={CurrentEventDetails}\n                center={{ lat: 20.5937, lng: 78.9629 }}\n                height=\"300px\"\n                zoom={12}\n                setLocation={setLocation}\n                Location={Location}\n                type={\"Offline\"}\n                setisEditLocation={setisEditLocation}\n                setaddress={setaddress}\n              />\n            </>\n          ) : (\n            <Grid container spacing={0} style={{ width: \"100%\" }}>\n              <Grid xs={12}>\n                <span className=\"label \" style={{ width: \"100%\" }}>\n                  Location\n                </span>\n              </Grid>\n              <Grid xs={12}>\n                <div\n                  className=\"fs-14\"\n                  onClick={() => setisEditLocation(true)}\n                  style={{\n                    width: \"100%\",\n                    border: \"Solid 2px #3897f1\",\n                    borderRadius: \"150px\",\n                    padding: \"8px\",\n                    position: 'relative',\n                    bottom: '6px'\n                  }}\n                >\n                  {Location === \"\"\n                    ? \"Please Enter A location\"\n                    : Location.length > 25\n                      ? Location.substring(0, 25)\n                      : Location}\n                </div>\n              </Grid>\n            </Grid>\n          )}\n          <span\n            className={\n              IsSubmitted === true && CurrentEventDetails.Location === \"\"\n                ? \"error\"\n                : \"hide\"\n            }\n            style={{ width: '100%' }}\n          >\n            Please add Location\n          </span>\n        </Grid>\n        <Grid\n          item\n          xs={isEditLocation === true ? 1 : false}\n          sm={isEditLocation === true ? 1 : false}\n          className={\n            CurrentEventDetails.VenueType === \"Online\" ||\n              CurrentEventDetails.VenueType === \"Online-Inapp\"\n              ? \"hide\"\n              : \"show\"\n          }\n        >\n          {isEditLocation === true ? (\n            <SaveIcon\n              onClick={() => {\n                setisEditLocation(false);\n              }}\n              style={{ position: \"relative\", top: \"30px\", color: \"green\" }}\n            />\n          ) : (\n            <></>\n          )}\n        </Grid>\n      </>\n\n      <Grid item xs={12}>\n        <span className=\"label\">Description</span>\n        {/* <TextField\n          id=\"standard-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            classes: {\n              root: classes.cssLabel,\n              focused: classes.cssFocused,\n            },\n          }}\n          InputProps={{\n            classes: {\n              root: classes.cssOutlinedInput,\n              focused: classes.cssFocused,\n              notchedOutline: classes.notchedOutline,\n            },\n            inputMode: \"numeric\"\n          }}\n        /> */}\n        <TextField\n          id=\"outlined-basic\"\n          // label=\"Description\"\n          size=\"small\"\n          variant=\"outlined\"\n          className=\"w-100-p   \"\n          value={CurrentEventDetails.Description}\n          onChange={(e) => {\n            SetCurrentEventDetails({\n              ...CurrentEventDetails,\n              Description: e.target.value,\n            });\n          }}\n          error={\n            IsSubmitted === true && CurrentEventDetails.Description === \"\"\n              ? true\n              : false\n          }\n          // InputProps={{\n          //   classes: {\n          //     notchedOutline: classes.notchedOutline,\n          //   },\n          // }}\n          multiline={true}\n          rows={2}\n        />\n      </Grid>\n      {/* <Grid item xs={8} className=\"talc fs-bold m-b-25px label\">\n        Guest can Invite (max 3)\n      </Grid>\n      <Grid item xs={4}>\n        <Switch\n          checked={CurrentEventDetails.GuestInvite}\n          color=\"primary\"\n          name=\"checkedB\"\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          className=\"fr\"\n          onChange={(e) => {\n            SetCurrentEventDetails({\n              ...CurrentEventDetails,\n              GuestInvite: !CurrentEventDetails.GuestInvite,\n            });\n          }}\n        />\n      </Grid> */}\n      <Grid\n        item\n        xs={props.SelectedEvent === 0 ? 4 : 12}\n        md={props.SelectedEvent === 0 ? 4 : 12}\n      >\n        <Paper\n          elevation={3}\n          className=\"schedule-card\"\n          onClick={() => {\n            SetScheduleVisible(true);\n          }}\n        >\n          <center>\n            <img src={Scehedule} alt=\"schedule\" className=\"schedule-icon\" />\n\n            <button className=\"add-schedule theme-font\">Schedule</button>\n          </center>\n        </Paper>\n        <div>\n          <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className=\"f-s-modal\"\n            open={shedulevisible}\n            onClose={() => {\n              SetScheduleVisible(false);\n            }}\n          >\n            <div className=\"f-s-modal-card\">\n              <AddDetails\n                Name=\"Schedule\"\n                className=\"modal-component\"\n                data={props.Events}\n                setEvents={props.setEvents}\n                SelectEvent={props.SelectEvent}\n                SelectedEvent={props.SelectedEvent}\n                CurrentEventDetails={CurrentEventDetails}\n                Events={props.Events}\n                SelectedEvent={props.SelectedEvent}\n                SetCurrentEventDetails={SetCurrentEventDetails}\n                SetScheduleVisible={SetScheduleVisible}\n                open={SetScheduleVisible}\n              />\n            </div>\n          </Modal>\n        </div>\n      </Grid>\n      {props.SelectedEvent === 0 ? (\n        <>\n          <Grid item xs={4} md={4}>\n            <Paper\n              elevation={3}\n              className=\"schedule-card\"\n              onClick={() => {\n                SetStoryVisible(true);\n              }}\n            >\n              <center>\n                <img src={Storyimg} alt=\"schedule\" className=\"schedule-icon\" />\n\n                <button className=\"add-schedule theme-font\">Story</button>\n              </center>\n            </Paper>\n            <div>\n              <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className=\"f-s-modal\"\n                open={storyvisible}\n                onClose={() => {\n                  SetStoryVisible(false);\n                }}\n              >\n                <div className=\"f-s-modal-card\">\n                  <AddDetails\n                    Name=\"Story\"\n                    className=\"modal-component\"\n                    data={props.Events}\n                    setEvents={props.setEvents}\n                    SelectEvent={props.SelectEvent}\n                    SelectedEvent={props.SelectedEvent}\n                    CurrentEventDetails={CurrentEventDetails}\n                    Events={props.Events}\n                    SelectedEvent={props.SelectedEvent}\n                    SetCurrentEventDetails={SetCurrentEventDetails}\n                    SetScheduleVisible={SetScheduleVisible}\n                    open={SetStoryVisible}\n                  />\n                </div>\n              </Modal>\n            </div>\n          </Grid>\n          <Grid item xs={4} md={4}>\n            <Paper\n              elevation={3}\n              className=\"schedule-card\"\n              onClick={() => {\n                SetAlbumVisible(true);\n              }}\n            >\n              <center>\n                <img src={Albumsimg} alt=\"schedule\" className=\"schedule-icon\" />\n\n                <button className=\"add-schedule theme-font\">Albums</button>\n              </center>\n            </Paper>\n            <div>\n              <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className=\"f-s-modal\"\n                open={albumvisible}\n                onClose={() => {\n                  SetAlbumVisible(false);\n                }}\n              >\n                <div className=\"f-s-modal-card\">\n                  <AddDetails\n                    Name=\"Album\"\n                    className=\"modal-component\"\n                    data={props.Events}\n                    setEvents={props.setEvents}\n                    SelectEvent={props.SelectEvent}\n                    SelectedEvent={props.SelectedEvent}\n                    CurrentEventDetails={CurrentEventDetails}\n                    Events={props.Events}\n                    SelectedEvent={props.SelectedEvent}\n                    SetCurrentEventDetails={SetCurrentEventDetails}\n                    SetScheduleVisible={SetScheduleVisible}\n                    open={SetAlbumVisible}\n                  />\n                </div>\n              </Modal>\n            </div>\n          </Grid>\n        </>\n      ) : (\n        <></>\n      )}\n\n      <Grid item xs={12}>\n        <button\n          className={\n            props.disablesave === false\n              ? \"btn save-event \"\n              : \"btn save-event  disabled\"\n          }\n          onClick={() => {\n            if (props.disablesave === false) {\n              save();\n            }\n          }}\n        >\n          Next\n        </button>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js",["1860"],"import React, { useState, useEffect } from \"react\";\n\nimport { Button, Modal, Container, Row, Col, Form } from \"react-bootstrap\";\nexport default function AddCode(props) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [codes, setCodes] = useState([]);\n  const [usercode, setusercode] = useState([]);\n  var codescpy = [];\n  var usercodecpy = [];\n  function randomString(length, chars) {\n    var result = \"\";\n    for (var i = length; i > 0; --i)\n      result += chars[Math.floor(Math.random() * chars.length)];\n    return result;\n  }\n  useEffect(() => {\n    if (show === true && props.code.length !== props.Events.length) {\n      for (var i = 0; i < props.Events.length; i++) {\n        codescpy.push({\n          Name: props.Events[i].Name,\n          code: randomString(\n            8,\n            \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n          ),\n        });\n        usercodecpy.push(codescpy[i].code);\n      }\n      console.log(codescpy);\n      setCodes(codescpy);\n      setusercode(usercodecpy);\n    }\n  }, [show]);\n  return (\n    <div>\n      <button className=\" next btn btn-dark mt-10px\" onClick={handleShow}>\n        Use Code\n      </button>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        style={{ position: \"absolute\", top: \"0vh\" }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Code For Events</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container fluid style={{ padding: '5px' }}>\n            <Row className=\"m-0 m-5px\">\n              <Col xs={5} md={3}>\n                <b>Name</b>\n              </Col>\n              <Col xs={7} md={9}>\n                <b>Code</b>\n              </Col>\n            </Row>\n            <br />\n            {codes.map((code, index) => (\n              <Row className=\"m-0 mt-5px\" key={code.code}>\n                <Col xs={5} md={3} className=\"m-0 mt-5px\">\n                  {code.Name + \":\"}\n                </Col>\n                <Col xs={7} md={9} className=\"m-0 mt-5px\"  style={{paddingBottom: '10px'}}>\n                  <Form.Control\n                    disabled={true}\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    style={{ borderRadius: 20 }}\n                    value={usercode[index]}\n                    onChange={(e) => {\n                      usercodecpy[index] = e.target.value;\n                      setusercode(usercodecpy);\n                    }}\n                    maxLength={4}\n                  />\n                </Col>\n              </Row>\n            ))}\n            <br />\n            <Row className=\"m-0\">\n              <Button\n                variant=\"success\"\n                style={{ borderRadius: 20, backgroundColor: \"#3897f1\" }}\n                className=\"w-100 mt-10px\"\n                onClick={() => {\n                  props.setEntryWay(\"Code\");\n                  props.setCodes(usercode);\n                  handleClose(false);\n                }}\n              >\n                Done\n              </Button>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js",["1861","1862","1863","1864","1865","1866","1867","1868"],"import React, { useState, useEffect } from 'react'\nimport {\n    Container,\n    Row,\n    Button,\n    ListGroup,\n    Tabs,\n    Tab,\n    Col,\n    Spinner,\n} from \"react-bootstrap\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { BsFillPeopleFill } from \"react-icons/bs\";\nimport { FaArrowRight } from \"react-icons/fa\";\nimport * as XLSX from \"xlsx\";\n\nexport default function Addformultiple(props) {\n    const [participants, setparticipants] = useState([])\n    const [width, setwidth] = useState('100%')\n    useEffect(async () => {\n        console.log(props)\n        await setparticipants(props.participants)\n        await setwidth(100 / props.Events.length + \"vw\")\n    }, [props.participants])\n    const readExcel = async (file) => {\n        debugger;\n        const fileReader = new FileReader();\n        await fileReader.readAsArrayBuffer(file);\n        fileReader.onload = async (e) => {\n            const bufferArray = e.target.result;\n            const wb = await XLSX.read(bufferArray, { type: \"buffer\" });\n            const wsname = await wb.SheetNames[0];\n            const ws = await wb.Sheets[wsname];\n            const data = await XLSX.utils.sheet_to_json(ws);\n            await props.saveparticipantsfromexcel(data)\n        };\n        fileReader.onerror = (error) => {\n            console.log(error);\n        };\n    };\n    const DeleteThisContact = (index) => {\n        let particpantscpy = [...props.participants];\n        let NexteventKey = parseInt(props.eventKey) + 1;\n        particpantscpy[props.eventKey] = particpantscpy[props.eventKey].filter((word, i) => index !== i);\n        props.setParticipants(particpantscpy);\n    };\n\n    const copyToNext = () => {\n        let particpantscpy = [...props.participants];\n        if (particpantscpy.length === 0) {\n            alert(\"Please add contacts to this event Firts\");\n        } else {\n            if (props.eventKey < 3 && props.eventKey < props.Events.length - 1) {\n\n                let NexteventKey = parseInt(props.eventKey) + 1;\n                particpantscpy[NexteventKey] = particpantscpy[props.eventKey];\n                console.log(particpantscpy);\n                props.setParticipants(particpantscpy);\n            } else {\n                alert(\"No more Events to copy\");\n            }\n        }\n    };\n\n    return (\n        <>\n            <Container fluid className=\"p-0\">\n                <h3 className=\"p-15px\">Add Guests</h3>\n\n                <Tabs\n                    activeKey={props.eventKey}\n                    onSelect={(k) => {\n                        console.log(k);\n                        props.setKey(k);\n                    }}\n                >\n                    {props.Events &&\n                        props.Events.map((eve, index) => (\n                            <Tab eventKey={index} title={eve.Name.substring(1, 4) + \"...\"} style={{ width: width }}>\n                                <ListGroup style={{ margin: \"auto\" }} className=\"listitems_box\">\n                                    {participants && participants[props.eventKey] && participants[props.eventKey].map((listdata, i) => (\n                                        <ListGroup.Item>\n                                            {listdata}\n                                            <AiFillCloseCircle\n                                                size=\"25\"\n                                                style={{ float: \"right\", color: \"red\" }}\n                                                onClick={() => {\n                                                    DeleteThisContact(i);\n                                                }}\n                                            />\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            </Tab>\n                        ))}\n                </Tabs>\n                <Row>\n                    {\n                        props.isMobile === true ? (\n                            <Button\n                                variant=\"outline-primary\"\n                                className=\"addcontacts_btn\"\n                                style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\n                                onClick={() => {\n                                    props.openContactPicker();\n                                }}\n                            >\n                                <BsFillPeopleFill /> Add Contacts mob\n                            </Button>\n                        ) : (\n                            <>\n                                <label\n                                    htmlFor=\"input2\"\n                                    className=\"addcontacts_btn btn btn-outline-primary\"\n                                    style={{ display: props.isMobile === false ? \"block\" : \"none\" }}\n                                    style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\n                                    onClick={() => { console.log(\"done 3\") }}\n                                >\n                                    <BsFillPeopleFill /> Add Contacts\n                                </label>\n                                <input\n                                    id=\"input2\"\n                                    type=\"file\"\n                                    accept=\".xlsx\"\n                                    onChange={(e) => {\n                                        console.log(\"done 4\")\n                                        const file = e.target.files[0];\n                                        readExcel(file);\n\n                                    }}\n                                    placeholder=\"Add Participants\"\n                                    style={{ display: \"none\" }}\n                                />\n                            </>\n                        )\n\n                    }\n                    <Button\n                        variant=\"outline-primary\"\n                        style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\n\n                        onClick={() => {\n                            copyToNext();\n                        }}\n                        style={{ display: props.eventKey == props.Events.length - 1 ? 'none' : 'block' }}\n                        className=\"addcontacts_btn\"\n                    >\n                        {props.eventKey}  Copy to Next Event{props.Events.length - 1}\n                        <FaArrowRight />\n                    </Button>\n                </Row>\n                <Button\n                    variant=\"outline-primary\"\n                    style={{\n                        float: \"right\",\n                        width: \"20%\",\n                        borderRadius: 20,\n                        marginTop: 50,\n                    }}\n                    className=\"addcontacts_btn\"\n                    onClick={() => { props.open(false) }}\n                >Close</Button>\n                <Button\n                    variant=\"primary\"\n                    style={{\n                        float: \"right\",\n                        width: \"20%\",\n                        borderRadius: 20,\n                        marginTop: 50,\n                    }}\n                    className=\"addcontacts_btn\"\n                    onClick={() => {\n                        props.eventKey == props.Events.length - 1\n                            ? props.open(false)\n                            : props.setKey(parseInt(props.eventKey) + 1);\n                    }}\n                    disabled={props.isSaving}\n                >\n                    {props.isSaving === true ? (\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Saving...</span>\n                        </Spinner>\n                    ) : (\n                        <>\n                            {props.eventKey === props.Events.length - 1 ? (\n                                \"Save\"\n                            ) : (\n                                <>\n                                    Save\n                                </>\n                            )}\n                        </>\n                    )}\n                </Button>\n            </Container>\n        </>\n    );\n}","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\Extras\\Schedule.js",["1869","1870","1871","1872","1873","1874","1875"],"import React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\nimport { Grid, TextField, IconButton } from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\";\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontWeight: theme.typography.fontWeightRegular,\n    wordBreak: \"break-word\",\n  },\n}));\nexport default function AddSchedule(props) {\n  const [subEvent, setSubevent] = useState([\n    ...props.CurrentEventDetails.Schedule,\n  ]);\n  const [edit, setedit] = useState(false);\n  const [add, setadd] = useState(true);\n  const [editselected, settoedit] = useState(null);\n  const [subname, setsubname] = useState(\"\");\n  const [venue, setvenue] = useState(\"\");\n  const [datetime, setdatetime] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [isError, setError] = useState(false);\n  const save = async () => {\n    if (subname !== \"\" && datetime !== \"\" && description !== \"\") {\n      let data = {\n        Name: subname,\n        datetime: datetime,\n        description: description,\n        Venue: venue,\n      };\n      console.log([...subEvent, data]);\n\n      await setSubevent([...props.CurrentEventDetails.Schedule, data]);\n\n      var EventsCopy = { ...props.CurrentEventDetails };\n      console.log(EventsCopy);\n      EventsCopy.Schedule = [...props.CurrentEventDetails.Schedule, data];\n      console.log(props.EventsCopy);\n      await props.SetCurrentEventDetails(EventsCopy);\n      // props.updatereduxform(EventsCopy);\n      console.log(props.Events);\n      Delete();\n      setadd(false);\n    } else {\n      setError(true);\n    }\n  };\n  const saveedit = async () => {\n    if (subname !== \"\" && datetime !== \"\" && description !== \"\") {\n      let data = {\n        Name: subname,\n        datetime: datetime,\n        description: description,\n        Venue: venue,\n      };\n      let subEventcpy = [...subEvent];\n      subEventcpy[editselected] = data;\n      await setSubevent(subEventcpy);\n      var EventsCopy = { ...props.CurrentEventDetails };\n      EventsCopy.Schedule = [...subEventcpy];\n      console.log(props.EventsCopy);\n      await props.SetCurrentEventDetails(EventsCopy);\n      console.log(props.Events);\n      // props.updatereduxform(EventsCopy);\n      Delete();\n      setedit(false);\n      settoedit(null);\n    } else {\n      setError(true);\n    }\n  };\n  const classes = useStyles();\n  const Delete = () => {\n    setsubname(\"\");\n    setdatetime(\"\");\n    setdescription(\"\");\n    setvenue(\"\");\n  };\n  const Deleteone = async (i) => {\n    let subeventcpy = [...subEvent];\n    subeventcpy = subeventcpy.filter((sube, index) => {\n      return index !== i;\n    });\n    await setSubevent([...subeventcpy]);\n\n    var EventsCopy = { ...props.CurrentEventDetails };\n    console.log(EventsCopy);\n    EventsCopy.Schedule = [...subeventcpy];\n    console.log(props.EventsCopy);\n    await props.SetCurrentEventDetails(EventsCopy);\n    // props.updatereduxform(EventsCopy);\n    console.log(props.Events);\n  };\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        {subEvent.map((eve, index) => (\n          <Grid item xs={12} className=\"card-shadow m-b-10 schedule-details\">\n            <Grid container spacing={0}>\n              <Grid item xs={8} md={10}>\n                {edit === true && editselected === index ? (\n                  <>\n                    <TextField\n                      className=\"w-100 m-7px\"\n                      size=\"small\"\n                      label=\"Event Name\"\n                      onChange={(e) => {\n                        setsubname(e.target.value);\n                      }}\n                      value={subname}\n                    />\n\n                    <form noValidate>\n                      <TextField\n                        id=\"datetime-local\"\n                        label=\"Schedule timing\"\n                        type=\"datetime-local\"\n                        defaultValue=\"2017-05-24T10:30\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        className=\"w-100 m-7px\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onChange={(e) => {\n                          setdatetime(e.target.value);\n                        }}\n                        value={datetime}\n                      />\n                    </form>\n                  </>\n                ) : (\n                  <>\n                    <Grid\n                      container\n                      spacing={0}\n                      className=\"padding-left-7 p-10-p \"\n                    >\n                      <Grid item xs={12}>\n                        <div className=\"ScheduleName l-blue-t m-0\">\n                          {eve.Name}\n                        </div>\n                      </Grid>\n                      <Grid item xs={12}>\n                        {eve.Venue}\n                      </Grid>\n                      <Grid item xs={12} className=\"dtime\">\n                        {eve.datetime.split(\"T\")[0] +\n                          \" \" +\n                          eve.datetime.split(\"T\")[1]}\n                      </Grid>\n                      {/* <Grid item xs={12} className=\"mt-10px\">\n                        {eve.description}\n                      </Grid> */}\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n              <Grid item xs={4} md={2}>\n                {edit === true && editselected === index ? (\n                  <center>\n                    <IconButton\n                      onClick={() => {\n                        saveedit();\n                      }}\n                    >\n                      <CheckCircleOutlineIcon color=\"success\" />\n                    </IconButton>\n                    <IconButton\n                      onClick={() => {\n                        Delete();\n                      }}\n                    >\n                      <DeleteForeverIcon color=\"error\" />\n                    </IconButton>\n                  </center>\n                ) : (\n                  <center>\n                    <IconButton\n                      onClick={() => {\n                        setsubname(eve.Name);\n                        setdatetime(eve.datetime);\n                        setdescription(eve.description);\n                        setvenue(eve.Venue);\n                        setedit(true);\n                        settoedit(index);\n                        setadd(false);\n                      }}\n                    >\n                      <CreateIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={() => {\n                        Deleteone(index);\n                      }}\n                    >\n                      <DeleteForeverIcon color=\"error\" />\n                    </IconButton>\n                  </center>\n                )}\n              </Grid>\n              <Grid item xs={8} md={10}>\n                {edit === true && editselected === index ? (\n                  <TextField\n                    className=\"w-100 m-7px\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Sub-Event description\"\n                    onChange={(e) => {\n                      setdescription(e.target.value);\n                    }}\n                    value={description}\n                  />\n                ) : (\n                  <></>\n                )}\n              </Grid>\n              <Grid item xs={4} md={2}>\n                {/* <center>\n                  {props.CurrentEventDetails.VenueType === \"Online\" ? (\n                    <ControlPointIcon className=\"schedule-l-icon\" />\n                  ) : (\n                    <LocationOnRoundedIcon className=\"schedule-l-icon\" />\n                  )}\n                </center> */}\n              </Grid>\n            </Grid>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={classes.heading}>\n                  {eve.description.substring(0, 155)}...\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography className=\"p-10px\">\n                  {eve.description.substring(155, 10000000000000)}\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n          </Grid>\n        ))}\n      </Grid>\n      {add == true ? (\n        <Grid item xs={12} className=\"card-shadow mb-100\">\n          <Grid container spacing={2}>\n            <Grid item xs={7} md={10}>\n              <TextField\n                className=\"w-100 m-7px l-blue-t\"\n                size=\"small\"\n                label=\"Event Name\"\n                onChange={(e) => {\n                  setsubname(e.target.value);\n                }}\n                value={subname}\n                variant=\"standard\"\n                InputProps={{\n                  className: \"nounder\",\n                }}\n              />\n\n              <form noValidate>\n                <TextField\n                  id=\"datetime-local\"\n                  label=\"Schedule timing\"\n                  type=\"datetime-local\"\n                  defaultValue=\"2017-05-24T10:30\"\n                  className=\"w-100 m-7px\"\n                  variant=\"standard\"\n                  InputProps={{\n                    className: \"nounder\",\n                  }}\n                  size=\"small\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) => {\n                    setdatetime(e.target.value);\n                  }}\n                  value={datetime}\n                />\n              </form>\n              <TextField\n                className=\"w-100 m-7px\"\n                variant=\"standard\"\n                InputProps={{\n                  className: \"nounder\",\n                }}\n                size=\"small\"\n                label=\"Sub-Event description \"\n                onChange={(e) => {\n                  setdescription(e.target.value);\n                }}\n                value={description}\n              />\n            </Grid>\n            <Grid item xs={5} md={2}>\n              <center>\n                <IconButton\n                  onClick={() => {\n                    save();\n                  }}\n                >\n                  <CheckCircleOutlineIcon\n                    color=\"inherit\"\n                    fontSize={\"large\"}\n                    style={{ color: \"green\" }}\n                  />\n                </IconButton>\n                <IconButton\n                  onClick={() => {\n                    Delete();\n                    setadd(false);\n                  }}\n                >\n                  <DeleteForeverIcon color=\"error\" fontSize={\"large\"} />\n                </IconButton>\n              </center>\n              {/* <center>\n                {props.CurrentEventDetails.VenueType === \"Online\" ? (\n                  <ControlPointIcon\n                    className=\"schedule-l-icon\"\n                    fontSize={\"large\"}\n                  />\n                ) : (\n                  <LocationOnRoundedIcon\n                    className=\"schedule-l-icon\"\n                    fontSize={\"large\"}\n                  />\n                )}\n              </center> */}\n            </Grid>\n            <Grid item xs={8} md={10}></Grid>\n            <Grid item xs={4} md={2}></Grid>\n          </Grid>\n        </Grid>\n      ) : (\n        <></>\n      )}\n      <Grid item xs={12} md={12}>\n        <center>\n          <AddCircleRoundedIcon\n            onClick={() => {\n              setadd(true);\n              setedit(false);\n              settoedit(null);\n            }}\n            fontSize=\"large\"\n            className=\"add-button  m-5px \"\n          />\n        </center>\n      </Grid>\n      <Grid item xs={12} md={12}>\n        <button\n          class=\"save-Schedule  bottom\"\n          onClick={() => {\n            props.SelectedEvent === 0\n              ? props.SetName(\"Story\")\n              : props.SetScheduleVisible(false);\n          }}\n        >\n          Next\n        </button>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\Helpers\\Maps\\Maps.js",["1876","1877","1878","1879","1880"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\nimport { formatRelative } from \"date-fns\";\nimport \"./Maps.css\";\nimport \"@reach/combobox/styles.css\";\nimport Geocode from \"react-geocode\";\nlet mapStyles = [\n  {\n    featureType: \"all\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        weight: \"2.00\",\n      },\n    ],\n  },\n  {\n    featureType: \"all\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        color: \"#9c9c9c\",\n      },\n    ],\n  },\n  {\n    featureType: \"all\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#f2f2f2\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape.man_made\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"all\",\n    stylers: [\n      {\n        saturation: -100,\n      },\n      {\n        lightness: 45,\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#eeeeee\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#7b7b7b\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#46bcec\",\n      },\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#c8d7d4\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#070707\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n];\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"400px\",\n  width: \"100%\",\n  border: \"solid\",\n  display: \"none\",\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: false,\n  zoomControl: true,\n  gestureHandling: \"cooperative\",\n};\nconst center = {\n  lat: 20.5937,\n  lng: 78.9629,\n};\n\nexport default function Map(props) {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\",\n    libraries,\n  });\n\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\n\n  Geocode.setLanguage(\"en\");\n  const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [adderss, setAddress] = useState(\"\");\n  const [Location, setLocation] = useState(\"\");\n  useEffect(() => {\n    try {\n      let data = JSON.parse(props.CurrentEventDetails.location);\n      setAddress(data.Location);\n      setLocation(data.Location);\n    } catch (err) {\n      setLocation(\"\");\n    }\n  }, []);\n\n  const onMapClick = useCallback(async (e) => {\n    let lat = e.latLng.lat();\n    let long = e.latLng.lng();\n    setMarkers((current) => [\n      {\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n    Geocode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(\n      (response) => {\n        const faddress = response.results[0].formatted_address;\n\n        setAddress(faddress);\n\n        let location = JSON.stringify({ lat, long, faddress });\n        console.log({\n          ...props.CurrentEventDetails,\n          Location: location,\n        });\n        // props.setLocation(location);\n        // if (props.CurrentEventDetails.VenueType === \"Offline\") {\n        //   props.SetCurrentEventDetails({\n        //     ...props.CurrentEventDetails,\n        //     Location: location,\n        //     Link: \"\",\n        //   });\n        // } else {\n        //   props.SetCurrentEventDetails({\n        //     ...props.CurrentEventDetails,\n        //     Location: location,\n        //   });\n        // }\n\n        console.log(faddress);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }, []);\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = useCallback(({ lat, lng }) => {\n    let location = JSON.stringify({ lat, lng });\n    console.log(location);\n\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(20);\n  }, []);\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <div>\n      <h1></h1>\n\n      <Search\n        panTo={panTo}\n        Location={Location}\n        CurrentEventDetails={props.CurrentEventDetails}\n        SetCurrentEventDetails={props.SetCurrentEventDetails}\n        setLocation={props.setLocation}\n      />\n\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={5}\n        center={center}\n        options={options}\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n        options={{ scrollwheel: false }}\n        style={{ display: \"none\" }}\n      >\n        {markers.map((marker) => (\n          <Marker\n            key={`${marker.lat}-${marker.lng}`}\n            position={{ lat: marker.lat, lng: marker.lng }}\n            onClick={() => {\n              setSelected(marker);\n            }}\n          />\n        ))}\n\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => {\n              setSelected(null);\n            }}\n          >\n            <div>\n              <h2>{adderss}</h2>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}\n\nfunction Search(props) {\n  console.log(props);\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\n      radius: 100 * 1000,\n    },\n  });\n\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      debugger\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n      props.panTo({ lat, lng });\n      console.log(results);\n      let location = await JSON.stringify({ lat, lng, address });\n\n      if (props.CurrentEventDetails.VenueType === \"Offline\") {\n        await props.SetCurrentEventDetails({\n          ...props.CurrentEventDetails,\n          Location: location,\n          Link: \"\",\n        });\n      } else {\n        await props.SetCurrentEventDetails({\n          ...props.CurrentEventDetails,\n          Location: location,\n        });\n      }\n      props.setisEditLocation(false)\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return (\n    <div className=\"w-90\">\n      <Combobox\n        onSelect={async (address) => { await handleSelect(address); await props.setLocation(address) }}\n        CurrentEventDetails={props.CurrentEventDetails}\n        setCurrentEventDetails={props.setCurrentEventDetails}\n      >\n        <span\n          className={\n            props.CurrentEventDetails.VenueType === \"Offline\"\n              ? \"label top-5\"\n              : \"label\"\n          }\n        >\n          Location\n        </span>\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          Placeholder=\"Search your location\"\n          className={\"locationSearch\"}\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div >\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\Extras\\Album.js",["1881","1882","1883","1884","1885","1886","1887","1888"],"import React, { useState, useCallback } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useDropzone } from \"react-dropzone\";\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport \"./Extras.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SAVEALBUM, DELETEALBUM } from \"../../../Redux/Actions/EventActions\";\nexport default function Album(props) {\n  const dispatch = useDispatch();\n  const Eventdata = useSelector((state) => state.Eventdata);\n  let bkpalbum = [];\n  let filetype = [];\n  const [album, setAlbum] = useState([...Eventdata.ALBUM]);\n\n  const save = async () => {\n    dispatch({\n      type: SAVEALBUM,\n      payload: album,\n    });\n    props.open(false);\n  };\n\n  const cancel = () => {\n    setAlbum([]);\n  };\n  const onDrop = useCallback(async (acceptedFiles) => {\n    bkpalbum = [];\n    filetype = [];\n\n    for (let i = 0; i < acceptedFiles.length; i++) {\n      if (acceptedFiles[i].size > 5259265) {\n      } else {\n        let type = acceptedFiles[i].type.split(\"/\");\n        type = type[1];\n        await getBase64(acceptedFiles[i]).then(async (data) => {\n          await bkpalbum.push({ data: data, type: type });\n          await filetype.push(type);\n        });\n      }\n    }\n    await setAlbum(bkpalbum);\n    return true;\n  }, []);\n\n  function getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: \"image/jpeg, image/png, image/jpg\",\n  });\n\n  const deleteimage = (i) => {\n    let albumcpy = [...album];\n    albumcpy = albumcpy.filter((item, index) => i !== index);\n    setAlbum([...albumcpy]);\n  };\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12}>\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <img src={Gallery} className=\"w-100 uploadhere\" />\n        </div>\n      </Grid>\n      <Grid item xs={12} className=\"ofh view\">\n        <Grid container spacing={4}>\n          {album.length > 0\n            ? album.map((image, index) => (\n              <Grid item xs={4} md={2} key={\"img\" + index}>\n                <CancelIcon\n                  onClick={() => {\n                    deleteimage(index);\n                  }}\n                  color=\"secondary\"\n                  className=\"delete-img\"\n                />\n                <img src={image.data} className=\"w-100 preview\" />\n              </Grid>\n            ))\n            : Array.from({ length: 30 }, (value, key) => (\n              <Grid\n                item\n                xs={2}\n                md={1}\n                key={\"img\" + key}\n                className=\"w-100 preview grey m-5px\"\n              ></Grid>\n            ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className=\"submit jcc\">\n        <button\n          onClick={() => {\n            save();\n          }}\n          className=\"add-album  \"\n        >\n          Save\n        </button>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\Actions\\EventCreationFormActions.js",[],"C:\\Projects\\personalp\\MobillyInvite-master\\src\\Redux\\DispatchFuncitons\\EventCreationFormFunction.js",["1889"],"import { SAVEFORM } from \"../Actions/EventCreationFormActions\";\nexport function editform(data) {\n  return (dispatch) => {\n    console.log(\"SAVEFORM\");\n    console.log(data);\n    dispatch({ action: \"SAVEFORM\", payload: data });\n  };\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\Extras\\Story.js",["1890","1891","1892","1893","1894","1895","1896","1897"],"import React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\nimport { Grid, TextField, IconButton } from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SAVESTORY, DELETESTORY } from \"../../../Redux/Actions/EventActions\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\nexport default function Story(props) {\n  const dispatch = useDispatch();\n\n  const Eventdata = useSelector((state) => state.Eventdata);\n  const [subStory, setsubStory] = useState(Eventdata.STORY);\n  const [subname, setsubname] = useState(\"\");\n  const [file, setfile] = useState(\"\");\n  const [filetype, setfiletype] = useState(\"\");\n  const [datetime, setdatetime] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [currentedited, setcurrentedited] = useState(null);\n  const [add, setadd] = useState(true);\n  const [edit, setedit] = useState(false);\n  const [isError, setError] = useState(false);\n  const save = async () => {\n    if (\n      subname !== \"\" &&\n      datetime !== \"\" &&\n      description !== \"\" &&\n      file !== \"\"\n    ) {\n      setError(false);\n      let data = {\n        Name: subname,\n        datetime: datetime,\n        description: description,\n        file: file,\n        filetype: filetype,\n      };\n      console.log([...subStory, data]);\n      await setsubStory([...subStory, data]);\n\n      dispatch({\n        type: SAVESTORY,\n        payload: [...subStory, data],\n      });\n      Delete();\n    } else {\n      setError(true);\n    }\n  };\n  const onDrop = useCallback(async (acceptedFiles) => {\n    let dataurl = \"\";\n\n    if (acceptedFiles[0].size > 5259265) {\n    } else {\n      let type = acceptedFiles[0].type.split(\"/\");\n      await getBase64(acceptedFiles[0]).then(async (data) => {\n        setfile(data);\n        setfiletype(type[1]);\n      });\n    }\n  }, []);\n\n  function getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png, image/jpg\",\n  });\n\n  const Delete = () => {\n    setsubname(\"\");\n    setfile(\"\");\n    setfiletype(\"\");\n    setdatetime(\"\");\n    setdescription(\"\");\n    setadd(false);\n  };\n  const Deletesingle = (i) => {\n    let subStorycpy = [...subStory];\n\n    subStorycpy = subStorycpy.filter((eventdata, index) => {\n      return index !== i;\n    });\n    dispatch({\n      type: SAVESTORY,\n      payload: subStorycpy,\n    });\n    setsubStory(subStorycpy);\n    setedit(false);\n    setcurrentedited(null);\n  };\n  const settoedit = (i) => {\n    let data = { ...subStory[i] };\n    setsubname(data.Name);\n    setfile(data.file);\n    setfiletype(data.filetype);\n    setdatetime(data.datetime);\n    setdescription(data.description);\n  };\n  const saveedit = async () => {\n    let subStorycpy = [...subStory];\n    if (\n      subname !== \"\" &&\n      datetime !== \"\" &&\n      description !== \"\" &&\n      file !== \"\"\n    ) {\n      setError(false);\n      let data = {\n        Name: subname,\n        datetime: datetime,\n        description: description,\n        file: file,\n        filetype: filetype,\n      };\n      subStorycpy[currentedited] = data;\n      await setsubStory([...subStorycpy]);\n      dispatch({\n        type: SAVESTORY,\n        payload: subStory,\n      });\n      Delete();\n      setedit(false);\n    } else {\n      setError(true);\n    }\n  };\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}></Grid>\n      <Grid item xs={12}>\n        {subStory.map((eve, index) => (\n          <Grid\n            key={eve.Name + index}\n            container\n            spacing={0}\n            className=\"card-shadow  m-b-10  \"\n          >\n            <Grid item xs={4} md={3}>\n              {edit === true && currentedited === index ? (\n                <div {...getRootProps()} className=\"w-100\">\n                  <input {...getInputProps()} className=\"w-100\" />\n                  {eve.filetype === \"png\" ||\n                    eve.filetype === \"jpg\" ||\n                    eve.filetype === \"jpeg\" ? (\n                    <img\n                      src={eve.file === undefined ? \" \" : eve.file}\n                      className=\"w-100 story-image\"\n                    />\n                  ) : (\n                    <video\n                      src={eve.file === undefined ? \" \" : eve.file}\n                      className=\"w-100 story-image\"\n                    />\n                  )}\n                  {isError === true && file === \"\" ? (\n                    <span className=\"error\">please add valid image</span>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n              ) : eve.filetype === \"png\" ||\n                eve.filetype === \"jpg\" ||\n                eve.filetype === \"jpeg\" ? (\n                <img\n                  src={eve.file === undefined ? \" \" : eve.file}\n                  className=\"w-100  story-image\"\n                />\n              ) : (\n                <video\n                  src={eve.file === undefined ? \" \" : eve.file}\n                  className=\"w-100  story-image\"\n                />\n              )}\n            </Grid>\n            <Grid item xs={8} md={7}>\n              <Grid container spacing={0} className=\"m-5px\">\n                <Grid item xs={12}>\n                  {edit === true && currentedited === index ? (\n                    <TextField\n                      className=\"w-100\"\n                      label=\"Event Name\"\n                      onChange={(e) => {\n                        setsubname(e.target.value);\n                      }}\n                      value={subname}\n                      error={isError === true && subname === \"\" ? true : false}\n                    />\n                  ) : (\n                    <h2 className=\"m-0\">{eve.Name}</h2>\n                  )}\n                </Grid>\n                <Grid item xs={12}>\n                  {edit === true && currentedited === index ? (\n                    <TextField\n                      className=\"w-100 m-b-5px \"\n                      label=\"Event description\"\n                      onChange={(e) => {\n                        setdescription(e.target.value);\n                      }}\n                      value={description}\n                      error={\n                        isError === true && description === \"\" ? true : false\n                      }\n                    />\n                  ) : (\n                    <p> {eve.description}</p>\n                  )}\n                </Grid>\n                <Grid item xs={12}>\n                  {edit === true && currentedited === index ? (\n                    <form noValidate>\n                      <TextField\n                        id=\"datetime-local\"\n                        label=\"Schedule timing\"\n                        type=\"datetime-local\"\n                        defaultValue=\"2017-05-24T10:30\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        className=\"w-100 \"\n                        onChange={(e) => {\n                          setdatetime(e.target.value);\n                        }}\n                        value={datetime}\n                        error={\n                          isError === true && datetime === \"\" ? true : false\n                        }\n                      />\n                    </form>\n                  ) : (\n                    eve.datetime\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={2}>\n              <center>\n                {edit === true && currentedited === index ? (\n                  <IconButton\n                    onClick={() => {\n                      saveedit();\n                    }}\n                  >\n                    <CheckCircleOutlineIcon color=\"success\" />\n                  </IconButton>\n                ) : (\n                  <>\n                    <IconButton\n                      onClick={async () => {\n                        setedit(true);\n                        setadd(false);\n                        Delete();\n                        await setcurrentedited(index);\n                        await settoedit(index);\n                      }}\n                    >\n                      <CreateIcon\n                        color=\"inherit\"\n                        fontSize={\"large\"}\n                        style={{ color: \"green\" }}\n                      />\n                    </IconButton>\n                  </>\n                )}\n                <IconButton\n                  onClick={() => {\n                    Deletesingle(index);\n                  }}\n                >\n                  <DeleteForeverIcon color=\"error\" fontSize={\"large\"} />\n                </IconButton>\n              </center>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={add === false ? \"hide\" : \"show card-shadow m-b-10 \"}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4} md={2}>\n            {file === \"\" ? (\n              <div {...getRootProps()} className=\"w-100\">\n                <input {...getInputProps()} className=\"w-100\" />\n                <img\n                  src={Gallery}\n                  className=\"w-100 uploadhere\"\n                  className=\"w-100\"\n                />\n              </div>\n            ) : filetype === \"png\" ||\n              filetype === \"jpg\" ||\n              filetype === \"jpeg\" ? (\n              <img src={file} className=\"w-100 story-image\" />\n            ) : (\n              <div {...getRootProps()} className=\"w-100\">\n                <input {...getInputProps()} className=\"w-100\" />\n                <video src={file} className=\"w-100  story-image\" />\n              </div>\n            )}\n            {isError === true && file === \"\" ? (\n              <span className=\"error\">please add valid image</span>\n            ) : (\n              <></>\n            )}\n          </Grid>\n          <Grid item xs={8} md={8} className=\"\">\n            <TextField\n              className=\"w-100\"\n              label=\"Event Name\"\n              onChange={(e) => {\n                setsubname(e.target.value);\n              }}\n              value={subname}\n              error={isError === true && subname === \"\" ? true : false}\n            />\n\n            <TextField\n              className=\"w-100 m-b-5px \"\n              label=\"Event description\"\n              onChange={(e) => {\n                setdescription(e.target.value);\n              }}\n              value={description}\n              error={isError === true && description === \"\" ? true : false}\n              inputProps={{ maxLength: 120 }}\n            />\n\n            <form noValidate>\n              <TextField\n                id=\"datetime-local\"\n                label=\"Schedule timing\"\n                type=\"datetime-local\"\n                defaultValue=\"2017-05-24T10:30\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                className=\"w-100 \"\n                onChange={(e) => {\n                  setdatetime(e.target.value);\n                }}\n                error={isError === true && datetime === \"\" ? true : false}\n                value={datetime}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <center>\n              <IconButton\n                onClick={() => {\n                  save();\n                }}\n              >\n                <CheckCircleOutlineIcon\n                  color=\"inherit\"\n                  fontSize={\"large\"}\n                  style={{ color: \"green\" }}\n                />\n              </IconButton>\n              <IconButton\n                onClick={() => {\n                  Delete();\n                }}\n              >\n                <DeleteForeverIcon color=\"error\" fontSize={\"large\"} />\n              </IconButton>\n            </center>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} md={12}>\n        <button\n          class=\"btn save-event m-5px\"\n          onClick={() => {\n            props.SetName(\"Album\");\n          }}\n        >\n          Next\n        </button>\n      </Grid>\n      <Grid item xs={12} md={12}>\n        <center>\n          <AddCircleRoundedIcon\n            fontSize=\"large\"\n            className=\"add-button bottom\"\n            onClick={() => {\n              Delete();\n              setcurrentedited(\"\");\n              setedit(false);\n              setadd(true);\n            }}\n          />\n        </center>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Projects\\personalp\\MobillyInvite-master\\src\\Components\\AddEvent\\AddDetails\\AddDetails.js",["1898","1899","1900","1901","1902","1903"],"import React, { useState, useEffect } from \"react\";\nimport \"./AddDetails.css\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"../../Helpers/Header/Header\";\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\nimport Back from \"../../../Assets/Back.svg\";\nimport BackNavBar from \"../../Helpers/BackNavbar/BackNavBar\";\nimport AddSchedule from \"../Extras/Schedule\";\nimport Album from \"../Extras/Album\";\nimport Story from \"../Extras/Story\";\nimport history from \"../../../Utils/History\";\nexport default function AddDetails(props) {\n  const [Name, SetName] = useState(props.Name);\n\n  return (\n    <>\n      <Header />\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\n\n      <BackNavBar\n        logo={<img src={Back} />}\n        Name={\"Add \" + Name}\n        functionality={() => {\n          props.open(false);\n        }}\n        icon={\n          <button\n            className=\"Skip-button\"\n            onClick={() => {\n              props.open(false);\n            }}\n          >\n            Skip\n          </button>\n        }\n      />\n      <Grid container spacing={0} style={{ marginTop: 10 }}>\n        <Grid item xs={12} className=\"tab-header\"></Grid>\n        <Grid item xs={false} sm={2} md={2} />\n\n        <Grid item xs={12} sm={8} md={8} className=\"p-15px pt-0\">\n          <Grid container spacing={0} className=\"DetailHeader\">\n            <Grid\n              item\n              xs={4}\n              md={2}\n              onClick={() => {\n                SetName(\"Schedule\");\n              }}\n              className={\n                Name === \"Schedule\" ? \"l-blue-t tac u theme-font\" : \"tac\"\n              }\n            >\n              Schedule\n            </Grid>\n            <Grid\n              item\n              xs={4}\n              md={2}\n              onClick={() => {\n                SetName(\"Story\");\n              }}\n              className={\n                props.SelectedEvent === 0\n                  ? Name === \"Story\"\n                    ? \"tac show l-blue-t u theme-font\"\n                    : \"tac show theme-font\"\n                  : \"tac hide\"\n              }\n            >\n              Our Story\n            </Grid>\n            <Grid\n              item\n              xs={4}\n              md={2}\n              onClick={() => {\n                SetName(\"Album\");\n              }}\n              className={\n                props.SelectedEvent === 0\n                  ? Name === \"Album\"\n                    ? \"tac show l-blue-t u theme-font\"\n                    : \"tac show theme-font\"\n                  : \"tac hide\"\n              }\n            >\n              Album\n            </Grid>\n          </Grid>\n          {Name === \"Schedule\" ? (\n            <AddSchedule\n              data={props.data}\n              setEvents={props.setEvents}\n              SelectEvent={props.SelectEvent}\n              SelectedEvent={props.SelectedEvent}\n              CurrentEventDetails={props.CurrentEventDetails}\n              Events={props.Events}\n              SelectedEvent={props.SelectedEvent}\n              SetCurrentEventDetails={props.SetCurrentEventDetails}\n              SetScheduleVisible={props.SetScheduleVisible}\n              SetName={SetName}\n            />\n          ) : (\n            <>\n              {Name === \"Story\" ? (\n                <Story\n                  data={props.data}\n                  setEvents={props.setEvents}\n                  SelectEvent={props.SelectEvent}\n                  SelectedEvent={props.SelectedEvent}\n                  CurrentEventDetails={props.CurrentEventDetails}\n                  Events={props.Events}\n                  SelectedEvent={props.SelectedEvent}\n                  SetCurrentEventDetails={props.SetCurrentEventDetails}\n                  SetScheduleVisible={props.SetScheduleVisible}\n                  SetName={SetName}\n                />\n              ) : (\n                <></>\n              )}\n              {Name === \"Album\" ? (\n                <Album\n                  data={props.data}\n                  setEvents={props.setEvents}\n                  SelectEvent={props.SelectEvent}\n                  SelectedEvent={props.SelectedEvent}\n                  CurrentEventDetails={props.CurrentEventDetails}\n                  Events={props.Events}\n                  SelectedEvent={props.SelectedEvent}\n                  SetCurrentEventDetails={props.SetCurrentEventDetails}\n                  open={props.open}\n                />\n              ) : (\n                <></>\n              )}\n            </>\n          )}\n        </Grid>\n        <Grid item xs={false} sm={2} md={2} />\n      </Grid>\n    </>\n  );\n}\n",["1904","1905"],"C:\\Projects\\MobillyInvite\\src\\index.js",[],["1906","1907"],"C:\\Projects\\MobillyInvite\\src\\reportWebVitals.js",[],"C:\\Projects\\MobillyInvite\\src\\serviceWorkerRegistration.js",[],"C:\\Projects\\MobillyInvite\\src\\App.js",["1908","1909","1910","1911","1912","1913","1914","1915","1916","1917"],"import \"./App.css\";\r\nimport \"./Colors.css\";\r\nimport \"./Responsive.css\";\r\nimport \"./Scrollbar.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport ReactGa from \"react-ga\"\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport Redirector from \"./Utils/Routing\";\r\nimport history from \"./Utils/History\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MobileAuth from \"./Components/Auth/MobileAuth\";\r\nimport Landingpage from \"./Components/LandingPage/Landingpage\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport AddEvent from \"./Components/AddEvent/AddEvent\";\r\nimport Rsvp from \"./Components/Invitations/RSVP/Rsvp\";\r\nimport AddEventSucess from \"./Components/AddEvent/AddEventSucess\";\r\nimport Notification from \"./Components/Notifications/Notification\";\r\nimport EventDone from \"./Components/EventDone/EventDone\";\r\nimport AlertNotif from \"./Components/Settings/AlertNotif/AlertNotif\";\r\nimport EnterCode from \"./Components/Entercode/Entercode\";\r\nimport Chat from \"./Components/Chat/Chat\";\r\nimport Feed from \"./Components/Feed/Feed\";\r\nimport Comment from \"./Components/Comments/Coments\";\r\nimport Blankpages from \"./Components/BlankPages/404\";\r\nimport ShowSchedule from \"./Components/Invitations/ShowSchedule\";\r\nimport InvitaionviewToggler from \"./Components/Invitations/InvitaionviewToggler\";\r\nimport InvitaionMain from \"./Components/Invitations/InvitationMain/InvitaionMain\";\r\nimport Locationofline from \"./Components/Location Offline/LocationOffline\";\r\nimport Jitsi from \"./Components/jitsi/Jitsivc\";\r\nimport GuestList from \"./Components/Guest/Guest\";\r\nimport Hoxinvitation from \"./Components/Invitations/hoxinvitation\";\r\nimport SidebarMore from \"./Components/Sidebar/SidebarMore\";\r\nimport AdminSidebar from \"./Components/Sidebar/AdminSidebar\";\r\nimport EventAdmin from \"./Components/Admin/EventAdmin\";\r\nimport ManageGuest from \"./Components/Guest/ManageGuest\";\r\nimport EditEvent from \"./Components/EditEvent/EditEvent\";\r\nimport HomePage from \"./Components/HomePage/HomePage\";\r\nimport FD from \"./Components/FD/Fd\";\r\nimport ShowStory from './Components/Invitations/ShowStory';\r\nimport ShowAlbum from './Components/Invitations/ShowAlbum';\r\n\r\nfunction App() {\r\n\r\n  window.OneSignal = window.OneSignal || [];\r\n  const OneSignal = window.OneSignal;\r\n  useEffect(() => {\r\n    OneSignal.push(() => {\r\n      OneSignal.init({\r\n        appId: \"3dbe4838-6b6b-4241-9ab6-d13c46bfa846\"\r\n      })\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ReactGa.initialize('UA-201872924-1')\r\n    ReactGa.pageview(window.location.pathname + window.location.search)\r\n  }, []\r\n  )\r\n  const Auth = useSelector((state) => state.Auth);\r\n  if (Auth.isLoggedIn === false) {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode/:Code\"\r\n              component={Hoxinvitation}\r\n            />\r\n\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/*\" component={Redirector} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  } else {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            {/* <Route\r\n              exact\r\n              path=\"/Profile\"\r\n              component={UserProfile}\r\n            /> */}\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyInvitations/:maincode/:Code\"\r\n              component={Hoxinvitation}\r\n            />\r\n            <Route exact path=\"/MyEvents/eventpage/chat/:id\" component={Chat} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/GuestList/:id/:invno\"\r\n              component={GuestList}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Manage-GuestList/:id/:invno\"\r\n              component={ManageGuest}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Manage-Event/:id/:invno\"\r\n              component={EditEvent}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Admin/:id/:eid\"\r\n              component={EventAdmin}\r\n            />\r\n            <Route exact path=\"/MyEvents/Admin/:id\" component={AdminSidebar} />\r\n            <Route exact path=\"/MyEvents/More/:id\" component={SidebarMore} />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/Location/:id/:event\"\r\n              component={Locationofline}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/schedule/:id/:event\"\r\n              component={ShowSchedule}\r\n            />\r\n            <Route exact path=\"/MyEvents/rsvp/:id\" component={Rsvp} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/eventpage/:id\"\r\n              component={InvitaionviewToggler}\r\n            />\r\n            <Route exact path=\"/MyEvents/eventpage/feed/:id/:MainCode\" component={Feed} />\r\n            <Route exact path=\"/MyEvents/comments/:id/:_id\" component={Comment} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/albums/:id\"\r\n              component={ShowAlbum}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/story/:id\"\r\n              component={ShowStory}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/albums/:id\"\r\n              component={ShowAlbum}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/story/:id\"\r\n              component={ShowStory}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Manage-Event/:id/:invno\"\r\n              component={EditEvent}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Admin/:id/:eid\"\r\n              component={EventAdmin}\r\n            />\r\n            {/* <Route\r\n              exact\r\n              path=\"/inv/Admin/:id/\"\r\n              component={AdminSidebar}\r\n            /> */}\r\n            <Route exact path=\"/inv/More/:id\" component={SidebarMore} />\r\n            <Route exact path=\"/inv/comments/:id/:_id\" component={Comment} />\r\n            <Route exact path=\"/inv/eventpage/feed/:id/:MainCode\" component={Feed} />\r\n            <Route exact path=\"/inv/videoconf/:id/\" component={Jitsi} />\r\n            <Route exact path=\"/inv/eventpage/chat/:id\" component={Chat} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/Location/:id/:event\"\r\n              component={Locationofline}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/schedule/:id/:event\"\r\n              component={ShowSchedule}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/inv/GuestList/:id/:invno\"\r\n              component={GuestList}\r\n            />\r\n\r\n            {/* <Route exact path=\"/inv/info/:id\" component={Invitationlist} /> */}\r\n            <Route exact path=\"/inv/rsvp/:id\" component={Rsvp} />\r\n            <Route\r\n              exact\r\n              path=\"/inv/eventpage/:id\"\r\n              component={InvitaionviewToggler}\r\n            />\r\n            <Route exact path=\"/MyEvents\" component={Home} />\r\n            <Route exact path=\"/MyInvitations\" component={Home} />\r\n            <Route\r\n              exact\r\n              path=\"/MyEvents/event-create-success/:id\"\r\n              component={AddEventSucess}\r\n            />\r\n            <Route exact path=\"/MyEvents/add-event\" component={AddEvent} />\r\n            <Route exact path=\"/add-event\" component={AddEvent} />\r\n            <Route exact path=\"/user-profile\" component={AddEvent} />\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/*\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\store.js",[],"C:\\Projects\\MobillyInvite\\src\\Utils\\History.js",[],"C:\\Projects\\MobillyInvite\\src\\Utils\\Routing.js",["1918","1919","1920","1921","1922"],"import React, { useEffect } from \"react\";\r\nimport history from \"./History\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { loginuser } from \"../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getposts } from \"../Redux/DispatchFuncitons/postfunctions\";\r\nimport { getNotification } from \"../Redux/DispatchFuncitons/NotificationFunctions\";\r\nimport { getChats } from \"../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nexport default function Redirector() {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => {\r\n    let ischeck = await reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = await reactLocalStorage.get(\"Phone\");\r\n    let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === \"false\" || ischeck === undefined || ischeck === \"\") {\r\n      console.log(\"logout\");\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"loginuser\");\r\n      await dispatch(loginuser(Phone));\r\n    }\r\n  }, [])\r\n  useEffect(async () => {\r\n    if (Auth.isLoggedIn === true) {\r\n\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n      await dispatch(getNotification());\r\n      await dispatch(getposts());\r\n      await dispatch(getChats());\r\n      //  await history.goBack();\r\n    }\r\n  }, [Auth.isLoggedIn])\r\n  return <div><CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} /></div>;\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Auth\\MobileAuth.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\ReducerCombiner.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Notifications\\Notification.js",["1923","1924","1925","1926","1927","1928","1929","1930","1931"],"import { Button, Modal } from \"react-bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport \"./Notifications.css\"\r\nimport { useSelector } from \"react-redux\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport NoNotfcations from '../../Assets/NoNotifications.svg'\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nexport default function Notification(props) {\r\n  const Notifications = useSelector((state) => state.Notifications);\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Notificationportion-strt p-2 \">\r\n        <div className=\"Notifications-header d-flex flex-row\" style={{ marginTop: -15 }}>\r\n          <h4\r\n            className=\"font-weight-bold pr-5 pt-2\"\r\n            style={{ marginRight: \"0%\" }}\r\n          >\r\n            Notifications\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      {Notifications.length > 0 ? (\r\n        <div className=\"ofh \" style={{ marginTop: \"13px\", height: '40vh' }}>\r\n          {Notifications.map((note, index) =>\r\n            note.by === Auth.Phone ? <></> : (props.MainCode && note.MainCode === props.MainCode ?\r\n              <div className=\"media  mb-3\">\r\n                <Avatar className=\"mr-3\" src={note.img} alt=\"img\" style={{ top: '4px' }} />\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"mt-0 font-weight-bold small\">\r\n                    {note.Notification}\r\n                  </h5>\r\n                  <p className=\"text-secondary time_notification\"><Dateformatter Date={note.date.split('T')[0] + ' ' + note.date.split('T')[1].substring(0, 5)} /></p>\r\n                </div>\r\n              </div> : <></>)\r\n          )}\r\n        </div>) :\r\n        <>\r\n          <img src={NoNotfcations} className=\"w-100\" />\r\n          <br />\r\n          <h4 className=\"tac\">No Notification</h4>\r\n        </>\r\n      }\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Entercode\\Entercode.js",["1932","1933","1934","1935","1936","1937","1938","1939"],"import React, { useState } from \"react\";\r\nimport check from \"../../Assets/check-circle.1.png\";\r\nimport history from \"../../Utils/History\";\r\nimport eventimage from \"../../Assets/eventimage.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addme } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Entercode(props) {\r\n  const [code, setcode] = useState(\"\");\r\n  const [iserror, setiserror] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <img\r\n        src={eventimage}\r\n        className=\"rounded mx-auto d-block\"\r\n        style={{ height: 100, width: 100 }}\r\n      />\r\n      {/* <h4\r\n        style={{\r\n          float: \"left\",\r\n          marginTop: 60,\r\n          fontWeight: \"bold\",\r\n          fontStretch: \"normal\",\r\n          fontStyle: \"normal\",\r\n          fontSize: 16,\r\n          marginLeft: 5,\r\n        }}\r\n      >\r\n        Enter Code\r\n      </h4>\r\n      <input\r\n        className=\"form-control form-control-sm\"\r\n        type=\"text\"\r\n        placeholder=\"Code\"\r\n        style={{\r\n          borderRadius: 30,\r\n          margin: \"10px 0.2px 4.8px 0\",\r\n          height: \"40px\",\r\n        }}\r\n        value={code}\r\n        onChange={(e) => {\r\n          setcode(e.target.value);\r\n        }}\r\n      />\r\n      {iserror === true ? (\r\n        <span className=\"error\">please enter valid code</span>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mt-3 p-2\"\r\n        style={{ width: \"100%\", borderRadius: 50, fontWeight: \"bold\" }}\r\n        onClick={async () => {\r\n          if (code !== \"\") {\r\n            setiserror(false);\r\n            await dispatch(addme(code));\r\n\r\n            props.hide(false);\r\n          } else {\r\n            setiserror(true);\r\n          }\r\n        }}\r\n      >\r\n        Use Code\r\n      </button>  <h6 style={{ textAlign: \"center\", marginTop: \"10px\" }}>OR</h6> */}\r\n\r\n      <br />\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mt-1 p-2 createevent\"\r\n        style={{\r\n          width: \"100%\",\r\n          borderRadius: 50,\r\n          fontWeight: \"bold\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n        onClick={() => {\r\n          history.push(\"/MyEvents/add-event\");\r\n        }}\r\n      >\r\n        Create Event\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddEventSucess.js",["1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport check from \"../../Assets/check-circle.1.png\";\r\nimport Share from \"../../Assets/Shareon.svg\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useSelector } from \"react-redux\";\r\nimport { WhatsappShareButton } from 'react-share'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Lottie from \"react-lottie\";\r\nimport celebration from \"../Animations/celebrations.json\"\r\n\r\n\r\nconst defaultOptions = {\r\n  loop: 2,\r\n  autoplay: true,\r\n  animationData: celebration,\r\n  rendererSettings: {\r\n    // preserveAspectRatio: \"xMidYMid slice\"\r\n  }\r\n};\r\n\r\nexport default function AddEventSucess(props) {\r\n  const Auth = useSelector(state => state.Auth)\r\n  const [maincode, setmaincode] = useState(props.match.params.id);\r\n  const [allevents, setallevents] = useState([]);\r\n  const [mode, setmode] = useState();\r\n  const [sharelink, setcodesharelink] = useState(\"\");\r\n  const [Watsapp, setWatsapp] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(url + \"event/viewinvitation\", {\r\n        MainCode: props.match.params.id,\r\n      })\r\n      .then(async (res) => {\r\n\r\n        await setallevents(res.data.Events)\r\n        if (res.data.Events[0].EntryWay === 'Code') {\r\n\r\n\r\n          setcodesharelink(\" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\r\n          await setWatsapp(\r\n            \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + res.data.Events[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n            \" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\r\n        } else {\r\n          setcodesharelink(\" https://mobillyinvite.com/MyInvitations/\" + maincode + \"/\" + res.data.Events[0].code)\r\n          await setWatsapp(\r\n            \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + res.data.Events[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n            \" https://mobillyinvite.com/MyInvitations/\" +\r\n            maincode)\r\n        }\r\n\r\n        await setmode(res.data.Events[0].EntryWay)\r\n      });\r\n  }, [])\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = async (data) => {\r\n    await setcodesharelink(\" https://mobily-invited-server.herokuapp.com/MyInvitations/\" + maincode + \"/\" + data)\r\n    await setWatsapp(\r\n      \"Hi there ! You have been invited by \" + Auth.Name + \" to \" + allevents[0].Name + \". Share Your Excitement🤩 by Clicking the Below Link. Have Fun🤪! \" +\r\n      \" https://mobily-invited-server.herokuapp.com/MyInvitations/\" + maincode + \"/\" + allevents[0].code)\r\n    setAnchorEl(null);\r\n\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <Header />\r\n      </Grid>\r\n      <Grid item xs={false} sm={3} md={3} />\r\n      <Grid item xs={12} sm={6} md={6}>\r\n        <Grid container spacing={0} className=\"p-10px\">\r\n          <Grid item xs={12}>\r\n            <center>\r\n              <img src={check} className=\"p-10px \" />\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h2 className=\"tac theme-font\">\r\n              Your Invitation has been sucessfully created.\r\n            </h2>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <p className=\"w-100 tac\"> Click on the Link to copy</p>\r\n          </Grid>\r\n\r\n          {allevents && allevents.length > 0 && allevents[0].EntryWay === \"Code\" ? <>\r\n\r\n\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              className=\"tac m-b-25px clipboard\"\r\n\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={10} md={11} className=\"link\" onClick={(e) => { handleClick(e) }}>\r\n                  {sharelink.substr(0, 40)}\r\n\r\n                </Grid>\r\n                <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                  <FileCopyIcon className=\"v-t\" onClick={() => {\r\n                    navigator.clipboard.writeText(sharelink);\r\n                  }} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </> : <> <Grid\r\n            item\r\n            xs={12}\r\n            className=\"tac m-b-25px clipboard\"\r\n            onClick={() => {\r\n              navigator.clipboard.writeText(\r\n                \"https://mobily-invited-server.herokuapp.com/MyInvitations/\" +\r\n                maincode\r\n              );\r\n            }}\r\n          >\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={10} md={11} className=\"link\">\r\n                {\"https://mobily-invited-server.herokuapp.com/xxxxx\"}\r\n              </Grid>\r\n              <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                <FileCopyIcon className=\"v-t\" />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid></>}\r\n          <Grid item xs={12} className=\"w-100 tac\">\r\n            Share on\r\n          </Grid>\r\n          <Grid item xs={12} className=\"tac m-b-25px\">\r\n            <center>\r\n\r\n              <WhatsappShareButton\r\n                url={\" \"}\r\n                title={Watsapp}\r\n\r\n                separator=\" \"\r\n                className=\"Demo__some-network__share-button\"\r\n              >\r\n                <img src={Share} className=\"\" />\r\n              </WhatsappShareButton>\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"tac\">\r\n            Note: Only those who have invite can access.\r\n          </Grid>\r\n          <Lottie options={defaultOptions} height={400} style={{ position: 'absolute', margin: 'auto', width: 'auto' }} />\r\n          <Grid item xs={12} className=\"down-float\">\r\n            <button\r\n              className=\"btn save-event mt-10px\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Done\r\n            </button>\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Grid>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n\r\n      >\r\n        {allevents && allevents.map(eve => (\r\n          <MenuItem onClick={() => handleClose(\"/\" + eve.code)}>{\"Event Name: \" + eve.Name + \", EventCode :\" + eve.code}</MenuItem>\r\n        ))}\r\n\r\n      </Menu>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Landingpage.js",["1952","1953"],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddEvent.js",["1954","1955","1956","1957","1958","1959","1960","1961"],"C:\\Projects\\MobillyInvite\\src\\Components\\Home\\Home.js",["1962","1963","1964","1965","1966","1967"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport FootMenu from \"../Helpers/FootMenu/FootMenu\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Invitation from \"../Invitations/Invitation\";\r\nimport EventList from \"../Events/Eventlist\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { getposts } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { getNotification } from \"../../Redux/DispatchFuncitons/NotificationFunctions\";\r\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport { addme } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Home(props) {\r\n  const dispatch = useDispatch();\r\n  const [Menu, setMenu] = useState(0);\r\n  const CodeEvent = useSelector(state => state.CodeEvent)\r\n  const EventState = useSelector((state) => state.Eventdata);\r\n  useEffect(async () => {\r\n    if (CodeEvent.Code !== \"\") {\r\n      await dispatch(addme(CodeEvent.Code, CodeEvent.Name));\r\n    }\r\n\r\n    dispatch(GetEvents());\r\n    dispatch(GetInvitations());\r\n    dispatch(getNotification());\r\n    dispatch(getChats());\r\n\r\n    if (\r\n      props.location.pathname === \"/inv\" ||\r\n      props.location.pathname === \"/\" ||\r\n      props.location.pathname === \"/home\"\r\n    ) {\r\n      await setMenu(0);\r\n    } else {\r\n      setMenu(1);\r\n    }\r\n\r\n\r\n  }, []);\r\n  useEffect(async () => {\r\n    const interval = setInterval(() => {\r\n      dispatch(GetEvents());\r\n      dispatch(GetInvitations());\r\n      dispatch(getNotification());\r\n      dispatch(getChats());\r\n    }, 30000);\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><div className=\"w-100\" >\r\n      <Header url={props.location.pathname} />\r\n    </div>\r\n      {/* <MobileHeader /> */}\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} sm={12} md={12}>\r\n          {Menu === 0 ? (\r\n            <Invitation data={EventState.myInvitations} className=\"w-100\" />\r\n          ) : (\r\n            <EventList data={EventState.myEvents} className=\"w-100\" />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FootMenu menu={Menu} setMenu={setMenu} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowSchedule.js",["1968","1969","1970","1971","1972","1973"],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\hoxinvitation.js",["1974","1975","1976","1977","1978","1979","1980","1981","1982"],"import React, { useState, useEffect } from \"react\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport \"./InvitationMain/InvitaionMain.css\"\r\nimport { Container, Row, Col, Carousel, Form } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header\"\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../Helpers/DesktopNav/DesktopNav\";\r\nimport axios from \"axios\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport SendIcon from \"../../Assets/ic-send.png\";\r\nimport { AiOutlineLike, AiOutlineSync } from \"react-icons/ai\"\r\nimport { GoCalendar, GoLocation } from \"react-icons/go\"\r\nimport CommentIcon from \"../../Assets/comment-dot.png\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport Location from \"../../Assets/Location.png\";\r\nimport history from \"../../Utils/History\";\r\nimport LIKE from \"../../Assets/LIKE.png\";\r\nimport RSVP from \"../../Assets/RSVP.png\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport './Invitations.css'\r\nimport './InvitationMain/InvitaionMain.css'\r\nimport { addEvent } from '../../Redux/DispatchFuncitons/CodeFunctions'\r\nexport default function Hoxinvitation(props) {\r\n  const [Invitations, setInvitations] = useState([]);\r\n  const [show, setshow] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => {\r\n    if (Auth.isLoggedIn === false) {\r\n      if (props.match.params.maincode !== undefined && props.match.params.Code !== \"\") {\r\n        await dispatch(addEvent(props.match.params.Code, props.match.params.maincode))\r\n        // await dispatch(GetInvitations());\r\n        // history.push(\"/\");\r\n      }\r\n    }\r\n    else {\r\n      await dispatch(GetInvitations());\r\n      myInvitations.map((invite, index) => {\r\n        console.log(invite);\r\n        if (invite[0].MainCode === props.match.params.maincode) {\r\n          history.push(\"/inv/eventpage/\" + index);\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  }, [Auth.isLoggedIn]);\r\n  useEffect(async () => {\r\n    if (props.match.params.Name === undefined) {\r\n      console.log(props.match.params.maincode);\r\n      await axios\r\n        .post(url + \"event/viewinvite\", {\r\n          MainCode: props.match.params.maincode,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.Status === \"success\") {\r\n            setInvitations(res.data.Events);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    } else {\r\n      await axios\r\n        .post(url + \"event/viewEvent\", {\r\n          maincode: props.match.params.maincode,\r\n          Code: props.match.params.Code\r\n        })\r\n        .then(async (res) => {\r\n          if (res.data.Status === \"success\") {\r\n            await dispatch(addEvent(res.data.Events[0].code, res.data.Events[0].maincode))\r\n            setInvitations(res.data.Events);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav />\r\n      <Popup\r\n        component={LoginSignup}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n      />\r\n      <Carousel controls={false} interval={99999999999999} className=\"mb-10\">\r\n        {Invitations &&\r\n          Invitations.map((eve, index) => (\r\n            <Carousel.Item\r\n              onClick={() => {\r\n                setshow(true);\r\n              }}\r\n            >\r\n              <Container className=\"upper-menu\">\r\n                <Row\r\n                  style={{\r\n                    marginTop: 20,\r\n                    marginRight: 3,\r\n                    marginLeft: 3,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p style={{ fontWeight: \"bold\", fontSize: 20, color: \"white\" }}>\r\n                    <IoArrowBackCircleOutline\r\n                      style={{ backgroundColor: '#313131', borderRadius: '50px' }}\r\n                      size={40} />\r\n                  </p>\r\n                  <Col></Col>\r\n                  <FaUserFriends\r\n                    size={30}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"black\",\r\n                      borderRadius: 20,\r\n                      padding: \"0.1em 0.4em\",\r\n                    }} />\r\n                </Row>\r\n              </Container>\r\n              <Container className=\"container-event\">\r\n                <Image src={eve.file} className=\"fullimagemain\" />\r\n                <Container className=\"box-event\" fluid style={{ marginTop: \"5vh\" }}>\r\n\r\n                  <UserDataUrl\r\n                    Phone={eve.Host[0]}\r\n                    showIcon={true}\r\n                    className=\"m-10px\"\r\n                  />\r\n                  <div style={{ position: \"relative\", float: \"right\" }}>\r\n                    <Image src={SendIcon} style={{\r\n                      height: \"20px\",\r\n                      width: \"20px\",\r\n                      marginRight: \"1.5vh\",\r\n                    }} />\r\n\r\n                    <Image src={CommentIcon} className=\"go-chat\" />\r\n                  </div>\r\n                  <h4 className=\"avatar-name\">\r\n                    <UserDataUrl Phone={eve.Host[0]} showName={true} />\r\n                  </h4>\r\n                  <Form.Control\r\n                    size=\"sm\"\r\n                    placeholder=\"Write Comment\"\r\n                    className=\"form-control\"\r\n                    style={{\r\n                      border: 0,\r\n                      width: \"auto\",\r\n                      height: \"20px\",\r\n                      marginLeft: \"60px\",\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <center>\r\n                        <span className=\"Like-count\">0</span>\r\n\r\n                        <AiOutlineLike size=\"25\" className=\"info-icon\"\r\n                          style={{ color: \"#4e4e4e\" }} />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <AiOutlineSync size=\"25\"\r\n                          style={{ color: \"#4e4e4e\" }} />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <GoCalendar\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\" />\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n\r\n                        <GoLocation\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\" />\r\n                      </center>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n\r\n                  <h3 className=\"event-date\"><Dateformatter Date={eve.Date + \" \" + eve.Time} /></h3>\r\n                  <p className=\"event-des\">{eve.Description}</p>\r\n                  <a href=\"#\" className=\"invitationmain_link\">Read More</a>\r\n                </Container>\r\n              </Container>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      <NavMobile />\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitaionviewToggler.js",["1983","1984","1985","1986"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport InvitaionRSVP from \"./InvitaionRSVP/InvitaionRSVP\";\r\nimport InvitaionMain from \"./InvitationMain/InvitaionMain\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nexport default function InvitaionviewToggler(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Eventdata, setEventdata] = useState(true)\r\n  const [base, setbase] = useState(\"\")\r\n\r\n  const [dataloading, setdataloading] = useState(true)\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n\r\n    } else {\r\n\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/\" + props.match.params.id && MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n        await setbase(\"MyEvents\");\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/\" + props.match.params.id && myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n        await setbase(\"inv\");\r\n      }\r\n      setdataloading(false)\r\n    }\r\n  }, [MyEvents, myInvitations])\r\n\r\n\r\n  const [evno, setevno] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [hasallrsvps, sethasallrsvps] = useState(false);\r\n  const [rsvpnumber, setrsvpnumber] = useState(0);\r\n  useEffect(() => {\r\n    if (Eventdata && evno < Eventdata.length) {\r\n      let EVcount = 0;\r\n      for (let i = 0; i < Eventdata.length; i++) {\r\n        if (Eventdata[i].RSVPList.length > 0) {\r\n          let RSVPList = Eventdata[i].RSVPList;\r\n\r\n          for (let j = 0; j < RSVPList.length; j++) {\r\n            if (RSVPList[j].By === Auth.Phone) {\r\n              EVcount++;\r\n            } else {\r\n              setrsvpnumber(i);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (EVcount === Eventdata.length) {\r\n        sethasallrsvps(true);\r\n      } else {\r\n      }\r\n    }\r\n    console.log(Eventdata);\r\n    console.log(props);\r\n  }, [Eventdata]);\r\n  return (\r\n    <>{dataloading === false ? <div>\r\n      {hasallrsvps === false ? (\r\n        <InvitaionRSVP\r\n          Eventdata={Eventdata}\r\n          setevno={setevno}\r\n          id={props.match.params.id}\r\n          sethasallrsvps={sethasallrsvps}\r\n          toggle={true}\r\n          base={base}\r\n        />\r\n      ) : (\r\n        <InvitaionMain\r\n          Eventdata={Eventdata}\r\n          id={props.match.params.id}\r\n          base={base}\r\n        />\r\n      )}\r\n    </div> : <CircularProgress style={{ width: '6vw', position: 'fixed', top: '45vh', left: '47vw' }} />}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\Chat.js",["1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport CList from \"./List\";\r\nimport Chatbox from \"./Chatbox\";\r\nimport \"./Chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updatechat } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport NavMobile from '../Helpers/NavMobile/NavMobile'\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Chat(props) {\r\n  const dispatch = useDispatch();\r\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\r\n  let socketurl = url.split(\"api/\");\r\n  // console.log(socketurl);\r\n  let socket = io(socketurl[0], { transports: [\"websocket\"] });\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [show, setshow] = useState(0);\r\n  const [windowwidth, setwindowwidth] = useState(1280);\r\n  const [fullscreen, setfullscreen] = useState(true);\r\n  const [SelectedGroup, setSelectedGroup] = useState(\"\");\r\n  const [inroom, setinroom] = useState(false);\r\n  let Eventdata = [];\r\n  const [base, setbase] = useState(\"\")\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const [MainCode, setMainCode] = useState(\"\");\r\n  const [allparticipants, setallparticipants] = useState([]);\r\n  const [chats, setchat] = useState([]);\r\n  const [text, settext] = useState(\"\");\r\n  const [IndvName, setIndvName] = useState(\"\");\r\n  // console.log(MyEvents);\r\n  const [IsSubmit, setIsSubmit] = useState(false);\r\n  function handleResize() {\r\n    setwindowwidth(window.innerWidth);\r\n    // console.log(window.innerWidth);\r\n    if (window.innerWidth > 959) {\r\n      setfullscreen(true);\r\n      // console.log(true);\r\n    } else {\r\n      setfullscreen(false);\r\n      // console.log(false);\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/chat/\" + props.match.params.id && MyEvents.length > 0\r\n      ) {\r\n        Eventdata = MyEvents[props.match.params.id];\r\n        await setbase(\"MyEvents\");\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/chat/\" + props.match.params.id && myInvitations.length > 0\r\n      ) {\r\n        Eventdata = myInvitations[props.match.params.id];\r\n        await setbase(\"inv\");\r\n      }\r\n      let participants = [];\r\n      Eventdata.map((singleevent) => {\r\n        singleevent.Participants.map((participant) => {\r\n          participants.push(participant);\r\n          setMainCode(singleevent.MainCode);\r\n        });\r\n      });\r\n      // console.log(participants);\r\n      participants = [...new Set(participants)];\r\n      setallparticipants(participants);\r\n    }\r\n  }, [myInvitations, MyEvents]);\r\n  useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let selectedgrpcpr = SelectedGroup;\r\n    let chat = [...chats];\r\n    socket.on(\r\n      \"init\",\r\n      () => {\r\n        socket.emit(\"connectit\", { Phone: Auth.Phone });\r\n        if (inroom === false) {\r\n          // console.log(\"join rooms\");\r\n          socket.emit(\"rooms\", { Phone: Auth.Phone });\r\n          setinroom(true);\r\n        }\r\n      },\r\n      [\"abc\"]\r\n    );\r\n\r\n    socket.on(\"joined\", (rooms) => { });\r\n    socket.once(\"msg_saved\", (data) => {\r\n      dispatch(updatechat(data, data.room));\r\n    });\r\n  });\r\n\r\n  function submit() {\r\n    socket.emit(\"message\", {\r\n      sender: Auth.Phone,\r\n      content: text,\r\n      type: \"text\",\r\n      room: SelectedGroup.room,\r\n      _id: SelectedGroup._id,\r\n    });\r\n    setIsSubmit(true);\r\n  }\r\n  function sendImage(data) {\r\n    socket.emit(\"message\", data);\r\n    setIsSubmit(true);\r\n  }\r\n  const updateName = () => {\r\n    if (SelectedGroup.Name && SelectedGroup.Type === \"INDV\") {\r\n      if (\r\n        SelectedGroup.Admin === Auth.Phone ||\r\n        \"+91\" + SelectedGroup.Admin === Auth.Phone\r\n      ) {\r\n        if (typeof SelectedGroup.Name === \"string\") {\r\n          if (SelectedGroup.Name.startsWith(\"+\")) {\r\n            setIndvName(SelectedGroup.Name);\r\n          } else {\r\n            setIndvName(\"+91\" + SelectedGroup.Name);\r\n          }\r\n        } else {\r\n          setIndvName(\"+91\" + SelectedGroup.Name);\r\n        }\r\n      } else {\r\n        if (typeof SelectedGroup.Admin === \"string\") {\r\n          if (SelectedGroup.Admin.startsWith(\"+\")) {\r\n            setIndvName(SelectedGroup.Admin);\r\n          } else {\r\n            setIndvName(\"+91\" + SelectedGroup.Admin);\r\n          }\r\n        } else {\r\n          setIndvName(\"+91\" + SelectedGroup.Admin);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={3}\r\n        className={\r\n          fullscreen === true ? \"show h93\" : show === 1 ? \"hide\" : \"show h100\"\r\n        }\r\n      >\r\n        <CList\r\n          MyEvents={MyEvents}\r\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\r\n          fullscreen={fullscreen}\r\n          allparticipants={allparticipants}\r\n          MainCode={MainCode}\r\n          setSelectedGroup={setSelectedGroup}\r\n          setshow={setshow}\r\n          chats={chats}\r\n          setchat={setchat}\r\n          updateName={updateName}\r\n          setIsSubmit={setIsSubmit}\r\n          IsSubmit={IsSubmit}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={9}\r\n        className={\r\n          fullscreen === true ? \"show h93\" : show === 0 ? \"hide\" : \"show h100\"\r\n        }\r\n      >\r\n        <Chatbox\r\n          MyEvents={MyEvents}\r\n          pushto={\"/\" + base + \"/eventpage/\" + props.match.params.id}\r\n          fullscreen={fullscreen}\r\n          allparticipants={allparticipants}\r\n          MainCode={MainCode}\r\n          setSelectedGroup={setSelectedGroup}\r\n          setshow={setshow}\r\n          chats={chats}\r\n          setchat={setchat}\r\n          updateName={updateName}\r\n          submit={submit}\r\n          text={text}\r\n          settext={settext}\r\n          SelectedGroup={SelectedGroup}\r\n          sendImage={sendImage}\r\n          setIsSubmit={setIsSubmit}\r\n          IsSubmit={IsSubmit}\r\n        />\r\n      </Grid>\r\n      <NavMobile base={base} id={props.match.params.id} />\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\EventDone\\EventDone.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowStory.js",["2007","2008","2009","2010","2011","2012","2013","2014","2015","2016"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./OurStory.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport MobileNav from \"../Helpers/NavMobile/NavMobile\";\r\nimport { Container, Card, Button, Row, Col, Figure } from \"react-bootstrap\";\r\nimport { FcCalendar, FcLike } from \"react-icons/fc\";\r\nimport BlankSchedule from \"../../Assets/NoStory.svg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    GetEvents,\r\n    GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport Dateformatter from \"../Helpers/DateFormatter/Dateformatter\";\r\nexport default function ShowStory(props) {\r\n    const [Eventdata, setEventdata] = useState([]);\r\n    const [base, setbase] = useState(\"\");\r\n    const [images, setimages] = useState([]);\r\n    const dispatch = useDispatch();\r\n    let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n\r\n    let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n    useEffect(async () => {\r\n        if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n            await dispatch(GetEvents());\r\n            await dispatch(GetInvitations());\r\n        } else {\r\n            if (\r\n                props.location.pathname ===\r\n                \"/MyEvents/story/\" + props.match.params.id &&\r\n                MyEvents.length > 0\r\n            ) {\r\n                console.log(MyEvents[props.match.params.id][0]);\r\n                await setEventdata(MyEvents[props.match.params.id][0].InvId.Story);\r\n                await setbase(\"MyEvents\");\r\n            } else if (\r\n                props.location.pathname === \"/inv/story/\" + props.match.params.id &&\r\n                myInvitations.length > 0\r\n            ) {\r\n                console.log(myInvitations[0]);\r\n                await setEventdata(myInvitations[props.match.params.id][0].InvId.Story);\r\n                await setbase(\"inv\");\r\n            }\r\n        }\r\n    }, [MyEvents, myInvitations]);\r\n    return (\r\n        <div>\r\n            <div className=\"desktop-only w-100\">\r\n                <Header className=\"desktop-only\" />\r\n            </div>\r\n            <MobileNav id={props.match.params.id} base={base} />\r\n            <Container fluid className=\"p-0\">\r\n                {Eventdata.length > 0 ? (\r\n                    Eventdata.map((stry, index) => (\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 mt-3\" style={{ padding: '30px', paddingTop: 'inherit', paddingBottom: 'inherit' }}>\r\n                                <div\r\n                                    className=\"card\"\r\n                                    style={{ boxShadow: \"1px 1px 7px 1px #b9b9b9\" }}\r\n                                >\r\n                                    <div className=\"card-horizontal\">\r\n                                        <div className=\"card-body\">\r\n                                            <Row>\r\n                                                <Col xs={4} style={{ margin: \"auto\" }}>\r\n                                                    <img src={stry.file} className=\"w-100 card_image\" />\r\n                                                </Col>\r\n                                                <Col xs={8}>\r\n                                                    <h4 className=\"card-title ourstory_heading\">\r\n                                                        {stry.Name}\r\n                                                    </h4>\r\n                                                    <p\r\n                                                        className=\"card-text ourstory_text\"\r\n                                                        style={{ fontSize: 13, color: 'grey', height: '32px', overflow: 'scroll' }}\r\n                                                    >\r\n                                                        {stry.description}\r\n                                                    </p>\r\n                                                    {/* <p className=\"card-text\"><FcLike size=\"30\" /> 20</p> */}\r\n                                                    <p className=\"card-text ourstory_date\" style={{ color: '#007bff' }}>\r\n                                                        <FcCalendar size=\"20\" />\r\n                                                        <Dateformatter Date={stry.datetime} />\r\n                                                    </p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <>\r\n                        {\" \"}\r\n                        <img src={BlankSchedule} className=\"blank-img\" />\r\n                        <br />\r\n                        <h3 className=\"tac\">Story not Added yet </h3>\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\BlankPages\\404.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Feed.js",["2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zoomicon from \"../../Assets/zoomicon.png\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { IoCameraOutline } from \"react-icons/io5\";\r\nimport { FaTag } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { InputTags } from \"react-bootstrap-tagsinput\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport history from \"../../Utils/History\";\r\nimport FeedComments from \"./FeedComments\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Media from \"./Media\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport AddTags from \"./AddTags\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Postrender from './Posts'\r\nimport AddPost from \"./AddPost\";\r\nexport default function Feed(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let Posts = useSelector((state) => state.Posts[props.match.params.id]);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n  const dispatch = useDispatch();\r\n  const [isSubmit, setisSubmit] = useState(false);\r\n  const [isloaded, toggleisloaded] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [ShowTagQuery, setShowTagQuery] = useState(false);\r\n  const [showcommment, setshowcommment] = useState(false);\r\n  const [currentPosts, setcurrentPosts] = useState([]);\r\n  const [currentfilteredPosts, setcurrentfilteredPosts] = useState([]);\r\n  const [participant, setparticipant] = useState([]);\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [admins, setadmins] = useState([]);\r\n  const [Tags, setTags] = useState([]);\r\n\r\n  const [base, setbase] = useState(\"\");\r\n  const [filter, setfilter] = useState(\"All\");\r\n  const [caption, setcaption] = useState(\"\");\r\n  const [imageurl, setimageurl] = useState(\"\");\r\n  const [type, settype] = useState(\"\");\r\n  const [popuptype, setpopuptype] = useState(\"\");\r\n  const [showcommmentforpost, setshowcommmentforpost] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    await getposts()\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      await setfilter('All')\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/eventpage/feed/\" + props.match.params.id + \"/\" + props.match.params.MainCode &&\r\n        MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n\r\n        await setbase(\"MyEvents\");\r\n        await setadmins(MyEvents[props.match.params.id][0].Host);\r\n        await guestlist([...MyEvents[props.match.params.id][0].Participants, ...MyEvents[props.match.params.id][0].Host]);\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/eventpage/feed/\" + props.match.params.id + \"/\" + props.match.params.MainCode &&\r\n        myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n\r\n        await setbase(\"inv\");\r\n        await setadmins(myInvitations[props.match.params.id][0].Host);\r\n        await guestlist([...myInvitations[props.match.params.id][0].Participants, ...myInvitations[props.match.params.id][0].Host]);\r\n      }\r\n\r\n    }\r\n  }, [MyEvents, myInvitations]);\r\n\r\n  const submit = async () => {\r\n    await setisSubmit(true);\r\n    var d = new Date();\r\n    let unique = d.getTime();\r\n    let url = Eventdata[0].MainCode + unique + \".\" + type;\r\n    console.log(url);\r\n    let newurl = \"\";\r\n    if (imageurl !== \"\") {\r\n      newurl = await uploadString(imageurl, url);\r\n    }\r\n    await dispatch(\r\n      addpost(Eventdata[0].MainCode, Auth.Phone, newurl, type, Tags, caption)\r\n    );\r\n    await setcaption(\"\");\r\n    await setimageurl(\"\");\r\n    await settype(\"\");\r\n    await setTags([]);\r\n    await setisSubmit(false);\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n    let url = \"\";\r\n    let ftype = acceptedFiles[0].type.split(\"/\");\r\n    settype(ftype[0]);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      url = reader.result;\r\n      setimageurl(url);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n\r\n  const getposts = async () => {\r\n    if (props.match.params.id !== undefined && props.match.params.id !== \"\") {\r\n      axios\r\n        .post(url + \"post/getposts\", { maincode: props.match.params.MainCode })\r\n        .then(async function (response) {\r\n          toggleisloaded(true);\r\n          if (response.data.Posts.length !== 0) {\r\n            await setcurrentPosts(response.data.Posts);\r\n            await filterposts(response.data.Posts, Eventdata[0].Host)\r\n          }\r\n\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n          // always executed\r\n        });\r\n    }\r\n  };\r\n  const filterposts = async (Posts, admins) => {\r\n    let Postscpy = [];\r\n    for (let i = 0; i < Posts.length; i++) {\r\n      if (admins.includes(Posts[i].by) === true) {\r\n        Postscpy.push(Posts[i]);\r\n      }\r\n    }\r\n    await setcurrentfilteredPosts(Postscpy)\r\n  };\r\n\r\n\r\n\r\n  const guestlist = async (Participants) => {\r\n    var ParticipantsCPY = [];\r\n    for (let i = 0; i < Participants.length; i++) {\r\n      var Phone = \"\";\r\n      if (Participants[i] !== Auth.Phone) {\r\n        if (typeof Participants[i] === \"string\") {\r\n          Phone = Participants[i].includes(\"+\")\r\n            ? Participants[i]\r\n            : \"+91\" + Participants[i];\r\n        } else {\r\n          Phone = Participants[i].toString().includes(\"+\")\r\n            ? Participants[i]\r\n            : \"+91\" + Participants[i];\r\n        }\r\n\r\n        // await axios\r\n        //   .post(url + \"auth/getuserdetails\", {\r\n        //     Phone: Phone,\r\n        //   })\r\n        //   .then(async (res) => {\r\n        //     if (res.data.user) {\r\n        //       await ParticipantsCPY.push({\r\n        //         name: res.data.user.Name,\r\n        //         id: Participants[i],\r\n        //       });\r\n        //     } else {\r\n        //       await ParticipantsCPY.push({\r\n        //         name: Participants[i],\r\n        //         id: Participants[i],\r\n        //       });\r\n        //     }\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //     return { err: \"error 404\" };\r\n        //   });\r\n      }\r\n    }\r\n    console.log(Participants);\r\n    await setparticipant(Participants);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getposts();\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [Eventdata]);\r\n\r\n  useEffect(() => {\r\n    console.log(admins)\r\n    console.log(admins.includes('+917447525123'))\r\n  }, [filter])\r\n\r\n  return (\r\n    <>\r\n      <NavMobile base={base} id={props.match.params.id} />\r\n      <Popup\r\n        component={AddTags}\r\n        toggleShowPopup={setShowTagQuery}\r\n        showPopup={ShowTagQuery}\r\n        MainCode={[...participant]}\r\n        showall={setTags}\r\n        url={Tags}\r\n      />\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"f-s-modal\"\r\n        open={showPopup}\r\n        onClose={() => {\r\n          toggleShowPopup(false);\r\n        }}\r\n      >\r\n        <Container fluid className=\"p-0 m-0\">\r\n          <div className=\"f-s-modal-card \">\r\n            <Media\r\n              toggleShowPopup={toggleShowPopup}\r\n              currentPosts={currentPosts}\r\n              popuptype={popuptype}\r\n            />\r\n          </div>\r\n        </Container>\r\n      </Modal>\r\n      <Container className=\"guestlist-box\" fluid>\r\n        <div className=\"back-navigation desktop-only\">\r\n          <Row style={{ marginTop: 5, marginRight: 3, marginLeft: 3 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              style={{ color: \"black\" }}\r\n              onClick={() => history.goBack()}\r\n            />\r\n            <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n              Feed\r\n            </h3>\r\n          </Row>\r\n        </div>\r\n        {Eventdata && Eventdata.length > 0 ? (\r\n          <>\r\n            {Eventdata[0].filetype === \"png\" ||\r\n              Eventdata[0].filetype === \"jpg\" ||\r\n              Eventdata[0].filetype === \"jpeg\" ? (\r\n              <Image src={Eventdata[0].file} fluid style={{ height: \"30vh\" }} />\r\n            ) : (\r\n              <video\r\n                muted\r\n                type=\"video/mp4\"\r\n                autoPlay={true}\r\n                src={Eventdata[0].file}\r\n                preload=\"none\"\r\n                className=\"w-100\"\r\n                style={{ height: \"30vh\" }}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Image src={zoomicon} className=\"profile-avatar\" />\r\n        <h3 className=\"event-headings\">\r\n          {Eventdata[0] ? Eventdata[0].Name : \"\"}\r\n        </h3>\r\n\r\n        <div className=\"select-list\">\r\n          <Row className=\"p-0 m-0\">\r\n            <Col>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                style={{ width: \"30vw\", borderRadius: 20 }}\r\n                onClick={async () => {\r\n                  await setpopuptype(\"Photo\");\r\n                  toggleShowPopup(true);\r\n                }}\r\n              >\r\n                Photos\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                onClick={async () => {\r\n                  await setpopuptype(\"Videos\");\r\n                  toggleShowPopup(true);\r\n                }}\r\n                style={{ width: \"30vw\", borderRadius: 20, marginLeft: 20 }}\r\n              >\r\n                Videos\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"select-list mt-10px\">\r\n          <Row className=\"filterbox\">\r\n            <Col\r\n              onClick={async () => {\r\n                await setfilter(\"All\");\r\n                // await filterposts(currentPosts);\r\n              }}\r\n              className={filter === \"All\" ? \"filter-type\" : \"\"}\r\n            >\r\n              <span style={{ width: \"30vw\", borderRadius: 20 }}>All</span>\r\n            </Col>\r\n            <Col\r\n              onClick={async () => {\r\n                await setfilter(\"Update\");\r\n\r\n                // await filterposts(currentPosts);\r\n              }}\r\n              className={filter === \"Update\" ? \"filter-type\" : \"\"}\r\n            >\r\n              <span style={{ width: \"30vw\", borderRadius: 20 }}> Update</span>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n      <AddPost settype={settype} setimageurl={setimageurl} setcaption={setcaption}\r\n        caption={caption} submit={submit} setShowTagQuery={setShowTagQuery} imageurl={imageurl} isSubmit={isSubmit} />\r\n\r\n      {isloaded === false ? (\r\n        <center>\r\n          <CircularProgress style={{ color: \"black\" }} />\r\n        </center>\r\n      ) : (\r\n        <Postrender data={currentPosts} filter={filter} filterdata={currentfilteredPosts} getposts={getposts}\r\n          Eventdata={Eventdata} showcommmentforpost={showcommmentforpost} showcommment={showcommment} Maincode={props.match.params.Maincode}\r\n          setshowcommmentforpost={setshowcommmentforpost}\r\n          setshowcommment={setshowcommment} />\r\n      )}\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\jitsi\\Jitsivc.js",["2044"],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\ShowAlbum.js",["2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./AlbumStyle.css\";\r\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport { IoChevronBackCircleOutline } from \"react-icons/io5\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ImageGallery from 'react-image-gallery';\r\nimport Header from \"../Helpers/Header/Header\"\r\nimport MobileNav from \"../Helpers/NavMobile/NavMobile.js\";\r\nimport DesktopNav from \"../Helpers/DesktopNav/DesktopNav.js\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport BlankSchedule from \"../../Assets/NOAlbums.svg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { uploadfiletoalbum } from '../../Redux/DispatchFuncitons/Eventfunctions'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport Addtoalbum from './Addtoalbum'\r\nimport Swiper from \"react-id-swiper\";\r\n\r\nexport default function ShowAlbum(props) {\r\n    const [isUploaded, setisUploaded] = useState(false)\r\n    const [Eventdata, setEventdata] = useState([])\r\n    const [Name, setName] = useState(\"\")\r\n    const [IsAdmin, setIsAdmin] = useState(false)\r\n    const [MainCode, setMainCode] = useState(\"\")\r\n    const [base, setbase] = useState(\"\")\r\n    const [images, setimages] = useState([])\r\n    const [Prevfiles, setPrevfiles] = useState([])\r\n    const dispatch = useDispatch();\r\n    const [Type, setType] = useState(\"\")\r\n    const [show, setshow] = useState(false);\r\n    let MyEvents = useSelector(\r\n        (state) => state.Eventdata.myEvents\r\n    );\r\n    const Auth = useSelector(state => state.Auth)\r\n    let myInvitations = useSelector(\r\n        (state) => state.Eventdata.myInvitations\r\n    );\r\n\r\n    const params = {\r\n        spaceBetween: 30,\r\n        centeredSlides: true,\r\n        autoplay: {\r\n            delay: 2500,\r\n            disableOnInteraction: false\r\n        },\r\n        pagination: {\r\n            el: '.swiper-pagination',\r\n            clickable: true\r\n        },\r\n        navigation: {\r\n            nextEl: '.swiper-button-next',\r\n            prevEl: '.swiper-button-prev'\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n            await dispatch(GetEvents());\r\n            await dispatch(GetInvitations());\r\n        } else {\r\n            if (\r\n                props.location.pathname ===\r\n                \"/MyEvents/albums/\" +\r\n                props.match.params.id\r\n                && MyEvents.length > 0\r\n            ) {\r\n                console.log(MyEvents[0])\r\n                await setEventdata(MyEvents[props.match.params.id][0].InvId.Album);\r\n                await setbase(\"MyEvents\");\r\n                await setType(MyEvents[props.match.params.id][0].InvId.Type)\r\n                await setName(MyEvents[props.match.params.id][0].Name)\r\n                await setMainCode(MyEvents[props.match.params.id][0].MainCode)\r\n                await setIsAdmin(MyEvents[props.match.params.id][0].Host.includes(Auth.Phone))\r\n            } else if (\r\n                props.location.pathname ===\r\n                \"/inv/albums/\" +\r\n                props.match.params.id\r\n                && myInvitations.length > 0\r\n            ) {\r\n                console.log(myInvitations[0])\r\n                await setEventdata(myInvitations[props.match.params.id][0].InvId.Album);\r\n                await setbase(\"inv\");\r\n                await setType(myInvitations[props.match.params.id][0].InvId.Type)\r\n                await setName(myInvitations[props.match.params.id][0].Name)\r\n                await setMainCode(myInvitations[props.match.params.id][0].MainCode)\r\n                await setIsAdmin(myInvitations[props.match.params.id][0].Host.includes(Auth.Phone))\r\n            }\r\n            console.log(Eventdata)\r\n        }\r\n    }, [MyEvents, myInvitations])\r\n    useEffect(() => {\r\n        let imagescpy = []\r\n        let Prevfilescpy = []\r\n\r\n        if (Eventdata.length > 0) {\r\n            Eventdata.map(eve => {\r\n                Prevfilescpy.push({ file: eve.file, type: eve.type })\r\n                imagescpy.push({\r\n                    file: eve.file,\r\n                    type: eve.type\r\n                })\r\n            })\r\n\r\n        }\r\n        setimages(imagescpy)\r\n\r\n        setPrevfiles(Prevfilescpy)\r\n        console.log(images)\r\n    }, [Eventdata])\r\n    const save = async () => {\r\n        let Album = []\r\n        let uniqueurl =\r\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\" + \"Album/\" + props.match.params.id + Eventdata[0].Name;\r\n        images.map(async (fildeata, index) => {\r\n            if (index > Prevfiles.length) {\r\n                let newurl = await uploadString(fildeata.file, uniqueurl + \".\" + fildeata.type)\r\n                Album.push({ file: newurl, type: fildeata.type })\r\n            } else {\r\n                Album.push({ file: fildeata.file, type: fildeata.type })\r\n            }\r\n        })\r\n        console.log(Album)\r\n        await dispatch(uploadfiletoalbum(Album, Eventdata[0].MainCode))\r\n        setisUploaded(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"desktop-only w-100\" >\r\n                <Header className=\"desktop-only\" />\r\n            </div>\r\n            <Addtoalbum\r\n                toggleShowPopup={setshow}\r\n                showPopup={show}\r\n                images={Prevfiles}\r\n                _id={props.match.params.id}\r\n                eventname={Name}\r\n                Type={Type}\r\n                MainCode={MainCode}\r\n            />\r\n            <DesktopNav id={props.match.params.id} base={base} />\r\n            <MobileNav id={props.match.params.id} base={base} />\r\n            <Container style={{ margin: 0, padding: 0, marginTop: 0 }} fluid>\r\n                <Row className=\"p-0 m-0\">\r\n                    <Col xs={10}>  <h3 className=\"p-5px\">    Albums</h3></Col>\r\n                    <Col xs={2}>\r\n                        {IsAdmin === true ?\r\n                            <IconButton onClick={() => { setshow(true) }} style={{ float: 'right' }}>\r\n                                <AddPhotoAlternateIcon color=\"primary\" style={{ fontSize: 25 }} />\r\n                            </IconButton>\r\n                            : <></>}\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                {images.length === 0 ? <> <img src={BlankSchedule} className=\"blank-img\" />\r\n\r\n                    <br />\r\n                    <h3 className=\"tac\">Add Albums😍 Now!</h3>\r\n\r\n                </>\r\n                    :\r\n                    <Swiper {...params}>\r\n                        {images.map(img => (\r\n                            <div>\r\n                                <Image alt=\"img\" src={img.file} fluid className=\"image-gallery-image\" />\r\n                            </div>\r\n                        ))}\r\n\r\n                    </Swiper>}\r\n\r\n            </Container>\r\n        </div >\r\n    )\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\RSVP\\Rsvp.js",["2060","2061","2062","2063","2064","2065","2066","2067"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import \"../EventInfo/EventInfo.css\";\r\nimport { Carousel, Button } from \"react-bootstrap\";\r\nimport eventimg from \"../../../Assets/eventimg.png\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport history from \"../../../Utils/History\";\r\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport \"./Rsvp.css\";\r\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\r\nexport default function Rsvp(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [base, setbase] = useState(\"\");\r\n  const Eventdata1 = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  const Eventdata2 = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  useEffect(async () => {\r\n    if (props.location.pathname === \"/MyEvents/rsvp/\" + props.match.params.id) {\r\n      await setbase(\"MyEvents\");\r\n      setEventdata(Eventdata2);\r\n    } else {\r\n      await setbase(\"inv\");\r\n      setEventdata(Eventdata1);\r\n    }\r\n  }, []);\r\n  const Next = async (i) => {\r\n    if (Eventdata && Eventdata.length > 0) {\r\n      console.log(i, Eventdata.length);\r\n      if (i < Eventdata.length) {\r\n        setindex(i);\r\n        setdirection(\"next\");\r\n      } else {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n        await dispatch(getNotification())\r\n        history.goBack()\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const [index, setindex] = useState(0);\r\n\r\n  const [direction, setdirection] = useState(\"\");\r\n\r\n  const handleSelect = (index) => {\r\n    let newIndex = index + 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*  <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav />\r\n      <Toggler /> */}\r\n      <Carousel\r\n        controls={false}\r\n        direction={direction}\r\n        onSelect={(i) => {\r\n          handleSelect(i);\r\n        }}\r\n        activeIndex={index}\r\n        interval={99999999999999}\r\n      >\r\n        {base === \"inv\"\r\n          ? Eventdata1 &&\r\n          Eventdata1.map((eve, index) => (\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block rsvpimage\"\r\n                src={eve.file}\r\n                alt=\"First slide\"\r\n              />\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain \"\r\n                    onClick={async () => {\r\n\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))\r\n          : Eventdata2 &&\r\n          Eventdata2.map((eve, index) => (\r\n            <Carousel.Item>\r\n              {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  className=\"d-block rsvpimage\"\r\n                  src={eve.file}\r\n                  alt=\"First slide\"\r\n                />) : (\r\n                <video\r\n                  muted\r\n                  type=\"video/mp4\"\r\n                  autoPlay={true}\r\n                  src={\r\n                    eve.file\r\n                  }\r\n                  preload=\"none\"\r\n                  className=\"d-block rsvpimage\"\r\n                />\r\n              )}\r\n\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain \"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Accept\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"May Be\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      {/* <NavMobile className=\"footnavmobile\" base={base} id={props.match.params.id} /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Location Offline\\LocationOffline.js",["2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Accordion, Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport \"../Location Offline/LocationOffline.css\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { json } from \"body-parser\";\r\nimport vcimage from \"../../Assets/videocall.png\";\r\nimport history from \"../../Utils/History\";\r\nimport { GoogleMapsAPI } from \"../../Utils/Config\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nconst libraries = [\"places\"];\r\n\r\nconst options = {\r\n  // styles: mapStyles,\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  gestureHandling: \"cooperative\",\r\n};\r\n\r\nexport default function Location(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GoogleMapsAPI,\r\n    libraries,\r\n  });\r\n  // const Eventdata = useSelector(\r\n  //   (state) =>\r\n  //     state.Eventdata.myInvitations[props.match.params.id][\r\n  //       props.match.params.event\r\n  //     ]\r\n  // );\r\n\r\n  let Eventdata = [];\r\n  let base = \"\";\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  console.log(props.location.pathname);\r\n  if (\r\n    props.location.pathname ===\r\n    \"/MyEvents/location/\" +\r\n    props.match.params.id +\r\n    \"/\" +\r\n    props.match.params.event\r\n  ) {\r\n    Eventdata = MyEvents[props.match.params.event];\r\n    base = \"MyEvents\";\r\n  } else {\r\n    Eventdata = myInvitations[props.match.params.event];\r\n    base = \"inv\";\r\n  }\r\n\r\n  let center = {};\r\n  if (Eventdata.VenueType === \"Both\" || Eventdata.VenueType === \"Offline\") {\r\n    let locationdata = JSON.parse(Eventdata.Location);\r\n    center = {\r\n      lat: locationdata.lat,\r\n      lng: locationdata.lng,\r\n    };\r\n  } else {\r\n    center = {\r\n      lat: 20.5937,\r\n      lng: 78.9629,\r\n    };\r\n  }\r\n\r\n  const mapContainerStyle = {\r\n    height: \"400px\",\r\n    width: \"100%\",\r\n    border: \"solid\",\r\n    display:\r\n      Eventdata.VenueType === \"Offline\" || Eventdata.VenueType === \"Both\"\r\n        ? \"block\"\r\n        : \"none\",\r\n  };\r\n  console.log(Eventdata);\r\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\r\n\r\n  Geocode.setLanguage(\"en\");\r\n\r\n  const [marker, setMarker] = useState(center);\r\n  const [selected, setSelected] = useState(null);\r\n  const [adderss, setAddress] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    let location = JSON.stringify({ lat, lng });\r\n    console.log(location);\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(70);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <Col className=\"mt-15px\">\r\n        <p style={{ fontWeight: 700, fontSize: 23 }}>\r\n          <IoArrowBackCircleOutline\r\n            size={40}\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}\r\n          />\r\n          Location\r\n        </p>\r\n      </Col>\r\n      <img\r\n        src={vcimage}\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"70vh\",\r\n          objectFit: \"contain\",\r\n          display:\r\n            Eventdata.VenueType === \"Online\" ||\r\n              Eventdata.VenueType === \"Online-Inapp\"\r\n              ? \"block\"\r\n              : \"none\",\r\n        }}\r\n      />\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={5}\r\n        center={center}\r\n        options={options}\r\n        // onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n        options={{ scrollwheel: false }}\r\n      >\r\n        <Marker\r\n          key={`${marker.lat}-${marker.lng}`}\r\n          position={{ lat: marker.lat, lng: marker.lng }}\r\n          onClick={() => {\r\n            setSelected(marker);\r\n          }}\r\n        />\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{adderss}</h2>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n\r\n      <Accordion>\r\n        <Card>\r\n          <Card.Header\r\n            style={{\r\n              display:\r\n                Eventdata.VenueType === \"Offline\" ||\r\n                  Eventdata.VenueType === \"Both\"\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            <a\r\n              href={\"http://maps.google.com?q=\" + center.lat + \",\" + center.lng}\r\n            >\r\n              <Accordion.Toggle\r\n                eventKey=\"-1\"\r\n                style={{\r\n                  color: \"skyblue\",\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  border: \"none\",\r\n                  background: \"none\",\r\n                  color: \"#000\",\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                <LocationOnOutlinedIcon style={{ color: \"skyblue\" }} />\r\n                Directions\r\n              </Accordion.Toggle>\r\n            </a>\r\n          </Card.Header>\r\n\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body\r\n              style={{\r\n                margin: 0,\r\n                padding: 0,\r\n                display:\r\n                  Eventdata.VenueType === \"Offline\" ||\r\n                    Eventdata.VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            ></Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Card.Header\r\n            style={{\r\n              display:\r\n                Eventdata.VenueType === \"Online\" ||\r\n                  Eventdata.VenueType === \"Both\" ||\r\n                  Eventdata.VenueType === \"Online-Inapp\"\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            <Accordion.Toggle\r\n              eventKey=\"1\"\r\n              style={{\r\n                color: \"skyblue\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                border: \"none\",\r\n                background: \"none\",\r\n                color: \"#000\",\r\n                textAlign: \"left\",\r\n              }}\r\n              onClick={() => {\r\n                if (Eventdata.VenueType === \"Online\") {\r\n                  window.open(Eventdata.Link);\r\n                } else if (\r\n                  Eventdata.VenueType === \"Online-Inapp\" ||\r\n                  Eventdata.VenueType === \"Both\"\r\n                ) {\r\n                  history.push(\"/inv/videoconf/\" + Eventdata.eventCode);\r\n                }\r\n              }}\r\n            >\r\n              <VideocamIcon style={{ color: \"skyblue\" }} /> Join Meeting\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body\r\n              style={{\r\n                display:\r\n                  Eventdata.VenueType === \"Online\" ||\r\n                    Eventdata.VenueType === \"Both\" ||\r\n                    Eventdata.VenueType === \"Online-Inapp\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            ></Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Card.Header\r\n            style={{\r\n              display:\r\n                Eventdata.VenueType === \"Offline\" ||\r\n                  Eventdata.VenueType === \"Both\"\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            <Accordion.Toggle\r\n              eventKey=\"2\"\r\n              style={{\r\n                color: \"skyblue\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                border: \"none\",\r\n                background: \"none\",\r\n                color: \"#000\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <LocationOnOutlinedIcon style={{ color: \"skyblue\" }} /> Other\r\n              <KeyboardArrowDownIcon\r\n                style={{ float: \"right\", color: \"skyblue\" }}\r\n              />\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body\r\n              style={{\r\n                display:\r\n                  Eventdata.VenueType === \"Offline\" ||\r\n                    Eventdata.VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry. Lorem Ipsum has been the industry's standard dummy text\r\n              ever since the 1500s, when an unknown printer took a galley of\r\n              type and scrambled it to make a type specimen book. It has\r\n              survived not only five centuries, but also the leap into\r\n              electronic typesetting, remaining essentially unchanged. It was\r\n              popularised in the 1960s with the release of Letraset sheets\r\n              containing Lorem Ipsum passages, and more recently with desktop\r\n              publishing software like Aldus PageMaker including versions of\r\n              Lorem Ipsum. Why do we use it? It is a long established fact that\r\n              a reader will be distracted by the readable content of a page when\r\n              looking at its layout. The point of using Lorem Ipsum is that it\r\n              has a more-or-less normal distribution of letters, as opposed to\r\n              using 'Content here, content here', making it look like readable\r\n              English. Many desktop publishing packages and web page editors now\r\n              use Lorem Ipsum as their default model text, and a search for\r\n              'lorem ipsum' will uncover many web sites still in their infancy.\r\n              Various versions have evolved over the years, sometimes by\r\n              accident, sometimes on purpose (injected humour and the like).\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Sidebar\\SidebarMore.js",["2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { IoArrowBackCircleOutline, IoCall } from \"react-icons/io5\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { Component } from \"react\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport DancingImg from \"../../Assets/DancingImg.png\";\r\nimport { GoBook } from \"react-icons/go\";\r\nimport { IoImagesSharp, IoPowerSharp, IoTrashOutline } from \"react-icons/io5\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations, deleteInvite\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { logout } from '../../Redux/DispatchFuncitons/AuthFunctions'\r\nexport default function SidebarMore(props) {\r\n  const [base, setbase] = useState(\"\");\r\n  const [ishost, setishost] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  let MyEvents = useSelector((state) => state.Eventdata.myEvents);\r\n  let myInvitations = useSelector((state) => state.Eventdata.myInvitations);\r\n\r\n  useEffect(async () => {\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (props.location.pathname === \"/MyEvents/more/\" + props.match.params.id && MyEvents.length > 0) {\r\n        await setEventdata(MyEvents[props.match.params.id])\r\n        await setbase(\"MyEvents\");\r\n        console.log(Eventdata)\r\n        var Host = MyEvents[props.match.params.id][0].Host;\r\n        for (var i = 0; i < Host.length; i++) {\r\n          if (Host[i] === Auth.Phone) {\r\n            await setishost(true);\r\n            console.log(ishost)\r\n          }\r\n        }\r\n      } else if (props.location.pathname === \"/inv/more/\" + props.match.params.id && myInvitations.length > 0) {\r\n\r\n        await setEventdata(myInvitations[props.match.params.id])\r\n        await setbase(\"inv\");\r\n        console.log(Eventdata)\r\n        var Host = myInvitations[props.match.params.id][0].Host;\r\n        for (var i = 0; i < Host.length; i++) {\r\n          if (Host[i] === Auth.Phone) {\r\n            await setishost(true);\r\n            console.log(ishost)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [myInvitations, MyEvents]);\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\r\n        <Row>\r\n          <Col>\r\n            <p\r\n              style={{\r\n                fontWeight: 600,\r\n                fontSize: 20,\r\n                paddingLeft: \"10px\",\r\n                marginBottom: 20,\r\n                marginTop: 20,\r\n\r\n              }}\r\n            >\r\n              <IoArrowBackCircleOutline\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              More\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Image src={DancingImg} className=\"sidebar_img\" />\r\n        <a\r\n          className=\"linkto-rows\"\r\n          onClick={() => {\r\n            history.push(\"../\" + \"story/\" + props.match.params.id);\r\n          }}\r\n        >\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <GoBook size=\"25\" /> Our Story\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n\r\n        <a\r\n          className=\"linkto-rows\"\r\n          onClick={() => {\r\n            dispatch(deleteInvite(Eventdata[0].MainCode))\r\n          }}\r\n        >\r\n          <Row className=\"sidebar-rows\">\r\n            <Col xs={8}>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                {\" \"}\r\n                <IoTrashOutline size=\"25\" /> Delete Invite\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        {ishost === true ? (\r\n          <a\r\n            className=\"linkto-rows\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/\" + \"admin/\" + props.match.params.id);\r\n            }}\r\n          >\r\n            <Row className=\"sidebar-rows\">\r\n              <Col>\r\n                <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                  <FaUserAlt size=\"20\" /> Admin\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p>\r\n                  {\" \"}\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {/* \r\n        <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Templates</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        {/*  <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Articles</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        {/*  <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>About Us</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <IoCall size=\"25\" /> Contact Us\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {\" \"}\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n        <a className=\"linkto-rows\" onClick={() => { dispatch(logout()) }}>\r\n          <Row className=\"sidebar-rows\">\r\n\r\n            <Col>\r\n              <p style={{ margin: \"auto\", padding: \"15px\" }}>\r\n                <IoPowerSharp size=\"25\" /> Logout\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </a>\r\n\r\n        {/* <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Recommendaton</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n        {/*  <a className=\"linkto-rows\">\r\n          <Row className=\"sidebar-rows\">\r\n            <Col>Prices</Col>\r\n            <Col>\r\n              <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n            </Col>\r\n          </Row>\r\n        </a> */}\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Sidebar\\AdminSidebar.js",["2099","2100","2101","2102"],"import React from \"react\";\r\nimport \"../Sidebar/Sidebar.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Component } from \"react\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nexport default function AdminSidebar(props) {\r\n  let Eventdata = [];\r\n  let base = \"\";\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  if (props.location.pathname === \"/MyEvents/admin/\" + props.match.params.id) {\r\n    Eventdata = MyEvents;\r\n    base = \"MyEvents\";\r\n  } else {\r\n    Eventdata = myInvitations;\r\n    base = \"inv\";\r\n  }\r\n  console.log(Eventdata);\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"guestlist-box\" style={{ padding: \"25px\" }}>\r\n        <Row>\r\n          <Col>\r\n            <p style={{\r\n                fontWeight: 600,\r\n                fontSize: 20,\r\n                paddingLeft: \"10px\",\r\n                marginBottom: 20,\r\n                marginTop: 20,\r\n            \r\n              }}>\r\n              <IoArrowBackCircleOutline\r\n                size={30}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Admin\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        {Eventdata &&\r\n          Eventdata.map((eventdata, index) => (\r\n            <a\r\n              className=\"linkto-rows\"\r\n              onClick={() => {\r\n                history.push(\r\n                  \"/\" + base + \"/admin/\" + props.match.params.id + \"/\" + index\r\n                );\r\n              }}\r\n            >\r\n              <Row className=\"sidebar-rows\">\r\n                <Col style={{ margin: \"auto\", padding: \"10px\" }}>{eventdata.Name}</Col>\r\n                <Col>\r\n                  <RiArrowRightSLine size={20} className=\"arrow-iconcs\" />\r\n                </Col>\r\n              </Row>\r\n            </a>\r\n          ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Guest\\Guest.js",["2103","2104","2105","2106","2107","2108","2109"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Image, Tab, Tabs } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"../Guest/Guest.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport Userdataurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Guest(props) {\r\n  const [Events, setEvents] = useState([]);\r\n  const [guestList, setguestList] = useState([]);\r\n  const [guestListaccept, setguestListaccept] = useState([]);\r\n  const [guestListdecline, setguestListdecline] = useState([]);\r\n  const [guestListmaybe, setguestListmaybe] = useState([]);\r\n  const [isAdmin, setisAdmin] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [base, setbase] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  useEffect(async () => {\r\n    let RSVPList = []\r\n    let Participants = []\r\n    if (MyEvents.length === 0 && myInvitations.length === 0) {\r\n      await dispatch(GetEvents());\r\n      await dispatch(GetInvitations());\r\n    } else {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/guestlist/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.invno && MyEvents.length > 0\r\n      ) {\r\n        await setEventdata(MyEvents[props.match.params.id]);\r\n        await setbase(\"MyEvents\");\r\n        await setEvents(Eventdata);\r\n        console.log(MyEvents[props.match.params.id][props.match.params.invno].RSVPList);\r\n        await setguestList([...MyEvents[props.match.params.id][props.match.params.invno].RSVPList,\r\n        ...MyEvents[props.match.params.id][props.match.params.invno].Host]);\r\n        RSVPList = MyEvents[props.match.params.id][props.match.params.invno].RSVPList;\r\n        if (MyEvents[props.match.params.id][props.match.params.invno].Host.includes(Auth.Phone)) {\r\n          setisAdmin(true);\r\n        } else {\r\n          setisAdmin(false);\r\n        }\r\n        let data = MyEvents[props.match.params.id][props.match.params.invno]\r\n        Participants = [...data.Participants,\r\n        ...data.Host];\r\n      } else if (\r\n        props.location.pathname ===\r\n        \"/inv/guestlist/\" +\r\n        props.match.params.id +\r\n        \"/\" +\r\n        props.match.params.invno && myInvitations.length > 0\r\n      ) {\r\n        await setEventdata(myInvitations[props.match.params.id]);\r\n        await setbase(\"inv\");\r\n        await setEvents(Eventdata);\r\n        await setguestList([...myInvitations[props.match.params.id][props.match.params.invno].RSVPList,\r\n        ...myInvitations[props.match.params.id][props.match.params.invno].Host]);\r\n        RSVPList = myInvitations[props.match.params.id][props.match.params.invno].RSVPList;\r\n        if (myInvitations[props.match.params.id][props.match.params.invno].Host.includes(Auth.Phone)) {\r\n          setisAdmin(true);\r\n        } else {\r\n          setisAdmin(false);\r\n        }\r\n        let data = myInvitations[props.match.params.id][props.match.params.invno]\r\n        Participants = [...data.Participants,\r\n        ...data.Host];\r\n\r\n      }\r\n\r\n      let accept = [];\r\n      let decline = [];\r\n      let maybe = [];\r\n\r\n      RSVPList.map((rsvp) => {\r\n        if (rsvp.Status === \"Accept\") {\r\n          accept.push(rsvp);\r\n        }\r\n        if (rsvp.Status === \"Decline\") {\r\n          decline.push(rsvp);\r\n        }\r\n        if (rsvp.Status === \"May Be\") {\r\n          maybe.push(rsvp);\r\n        }\r\n      });\r\n\r\n      let all = [];\r\n\r\n\r\n\r\n      let allrsvp = accept.concat(decline);\r\n      allrsvp = allrsvp.concat(maybe);\r\n      let Status = \"Invited\";\r\n      for (let j = 0; j < Participants.length; j++) {\r\n        let Status = \"Invited\";\r\n        let found = false;\r\n        for (let k = 0; k < allrsvp.length; k++) {\r\n          if (\r\n            allrsvp[k].By === Participants[j] ||\r\n            allrsvp[k].By === \"+91\" + Participants[j]\r\n          ) {\r\n            Status = allrsvp[k].Status;\r\n            found = true;\r\n            break;\r\n          } else {\r\n            console.log(\"x\");\r\n          }\r\n        }\r\n\r\n        if (Participants[j].toString().startsWith(\"+\")) {\r\n          all.push({ By: Participants[j], Status: Status });\r\n        } else {\r\n          all.push({ By: \"+91\" + Participants[j], Status: Status });\r\n        }\r\n        found = false;\r\n      }\r\n      setguestList(all);\r\n      setguestListaccept(accept);\r\n      setguestListdecline(decline);\r\n      setguestListmaybe(maybe);\r\n    }\r\n  }, [myInvitations, MyEvents]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <Container className=\"guest-box\">\r\n        <Row\r\n          style={{\r\n            marginTop: 30,\r\n            marginRight: 3,\r\n            marginLeft: 3,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Col xs={9}>\r\n            <p style={{ fontWeight: \"bold\", fontSize: 20 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={32}\r\n                onClick={() => {\r\n                  console.log(\r\n                    \"/\" + base + \"/eventpage/\" + props.match.params.id\r\n                  );\r\n                  history.push(\r\n                    \"/\" + base + \"/eventpage/\" + props.match.params.id\r\n                  );\r\n                }}\r\n              />\r\n              View Guest\r\n            </p>\r\n          </Col>\r\n          <Col>\r\n            {isAdmin === true ? (\r\n              <span\r\n                style={{ fontWeight: \"500\", fontSize: 20 }}\r\n                onClick={() => {\r\n                  history.push(\r\n                    \"/MyEvents\" +\r\n                    \"/Manage-GuestList/\" +\r\n                    props.match.params.id +\r\n                    \"/\" +\r\n                    props.match.params.invno\r\n                  );\r\n                }}\r\n              >\r\n                <SupervisedUserCircleIcon />\r\n                <span className=\"manage_guest\">Manage Guests</span>\r\n              </span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ marginLeft: \"auto\" }}>\r\n          <Col>\r\n            <Tabs defaultActiveKey=\"All\">\r\n              <Tab eventKey=\"All\" title=\"All\">\r\n                {guestList.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept\"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n\r\n              <Tab eventKey=\"Accept\" title=\"Accept\">\r\n                {guestListaccept.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n              <Tab eventKey=\"Decline\" title=\"Decline\">\r\n                {guestListdecline.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n              <Tab eventKey=\"Maybe\" title=\"Maybe\">\r\n                {guestListmaybe.map((guest) => (\r\n                  <Container className=\"p-5px\">\r\n                    <Row className=\"m-0 \">\r\n                      <Col xs={2} md={1}>\r\n                        <Userdataurl showIcon={true} Phone={guest.By} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Row className=\"m-0 \">\r\n                          <Userdataurl showName={true} Phone={guest.By} />\r\n                        </Row>\r\n                        <Row className=\"m-0 \">\r\n                          <span\r\n                            className={\r\n                              \"status \" + guest.Status === \"Accept\"\r\n                                ? \"user-accept \"\r\n                                : guest.Status === \"Decline\"\r\n                                  ? \"user-decline\"\r\n                                  : guest.Status === \"May Be\"\r\n                                    ? \"user-maybe\"\r\n                                    : \"user-invited\"\r\n                            }\r\n                          >\r\n                            {guest.Status}\r\n                          </span>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                ))}\r\n              </Tab>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Admin\\EventAdmin.js",["2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport Toggler from \"../Helpers/EventInvitoggler/Toggler.js\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"./EventAdmin.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport axios from \"axios\";\r\nimport { GetEvents, GetInvitations } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function EventAdmin(props) {\r\n  const dispatch = useDispatch();\r\n  const [options, setoptions] = useState({\r\n    labels: [\"Yes\", \"No\", \"Maybe\", \"N/A\"],\r\n    colors: [\"#008744\", \"#E74D5F\", \"#FFA700\", \"#0000fa\"],\r\n  });\r\n  const [series, setseries] = useState([1, 1, 1, 1]);\r\n  const [comment, setcomment] = useState(\"\");\r\n  const [base, setbase] = useState(\"\")\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [Eventdata, setEventdata] = useState(\"\")\r\n  const [Rsvplist, setRsvplist] = useState([])\r\n  let MyEvents = useSelector(\r\n    (state) =>\r\n      state.Eventdata.myEvents\r\n  );\r\n\r\n  useEffect(async () => {\r\n    if (MyEvents && MyEvents.length > 0) {\r\n      let Rsvplistcpy = []\r\n      let accept = [];\r\n      let decline = [];\r\n      let maybe = [];\r\n      let Participants = []\r\n      let Host = []\r\n      let all = []\r\n      await setEventdata(MyEvents[props.match.params.id][props.match.params.eid])\r\n      await setRsvplist(MyEvents[props.match.params.id][props.match.params.eid])\r\n      await setRsvplist(MyEvents[props.match.params.id][props.match.params.eid].RSVPList)\r\n      Participants = MyEvents[props.match.params.id][props.match.params.eid].Participants;\r\n      Host = MyEvents[props.match.params.id][props.match.params.eid].Host;\r\n      if (MyEvents[props.match.params.id][props.match.params.eid].RSVPList !== undefined || MyEvents[props.match.params.id][props.match.params.eid].RSVPList.length > 0) {\r\n        Rsvplistcpy = [...MyEvents[props.match.params.id][props.match.params.eid].RSVPList] || [];\r\n\r\n        Rsvplistcpy.map((rsvp) => {\r\n          if (!Host.includes(rsvp.By)) {\r\n            if (rsvp.Status === \"Accept\") {\r\n              accept.push(rsvp);\r\n            }\r\n            if (rsvp.Status === \"Decline\") {\r\n              decline.push(rsvp);\r\n            }\r\n            if (rsvp.Status === \"May Be\") {\r\n              maybe.push(rsvp);\r\n            }\r\n          }\r\n\r\n        });\r\n        let allrsvp = accept.concat(decline);\r\n        allrsvp = allrsvp.concat(maybe);\r\n        for (let j = 0; j < Participants.length; j++) {\r\n          let Status = \"invited\";\r\n          let found = false;\r\n          for (let k = 0; k < allrsvp.length; k++) {\r\n            if (\r\n              allrsvp[k].By === Participants[j] ||\r\n              allrsvp[k].By === \"+91\" + Participants[j]\r\n            ) {\r\n              Status = allrsvp[k].Status;\r\n              found = true;\r\n              break;\r\n            } else {\r\n              console.log(\"x\");\r\n            }\r\n          }\r\n\r\n          if (Participants[j].toString().startsWith(\"+\")) {\r\n            all.push({ By: Participants[j], Status: Status });\r\n          } else {\r\n            all.push({ By: \"+91\" + Participants[j], Status: Status });\r\n          }\r\n          found = false;\r\n        }\r\n        setseries([accept.length, decline.length, maybe.length, Participants.length - (accept.length + decline.length + maybe.length)]);\r\n        console.log(90, [accept.length, decline.length, maybe.length, Participants.length - (accept.length + decline.length + maybe.length)])\r\n      }\r\n      else {\r\n        setseries([0, 0, 0, Participants.length]);\r\n        console.log(94, [0, 0, 0, Participants.length])\r\n      }\r\n    } else {\r\n      await dispatch(GetEvents());\r\n\r\n    }\r\n\r\n  }, [MyEvents])\r\n  const submit = () => {\r\n    if (comment !== \"\") {\r\n      console.log({\r\n        message: comment,\r\n        Participants: Eventdata.Participants,\r\n        by: Auth.Phone,\r\n        img: Eventdata.file,\r\n        Eid: Eventdata._id,\r\n        Maincode: Eventdata.MainCode,\r\n      });\r\n\r\n      axios\r\n        .post(url + \"notification/sendNotifications\", {\r\n          message: comment,\r\n          Participants: Eventdata.Participants,\r\n          by: Auth.Phone,\r\n          img: Eventdata.file,\r\n          Eid: Eventdata._id,\r\n          Maincode: Eventdata.MainCode,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.data) {\r\n            console.log(res.data.data);\r\n            setcomment(\"\");\r\n            alert(\"message Sent as Notification\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"message failed \");\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container style={{ marginTop: 25 }}>\r\n        <Row>\r\n          <Col>\r\n            <p style={{ fontWeight: 700, fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Event\r\n            </p>\r\n          </Col>\r\n          <Col>\r\n            {/* <Button\r\n                  variant=\"dark\"\r\n                  style={{ float: \"right\", borderRadius: 20 }}\r\n                  className=\"edit-eventbtn\"\r\n                  onClick={() => {\r\n                    history.push(\r\n                      \"/\" + base + \"/Manage-Event/\" +\r\n                      props.match.params.id +\r\n                      \"/\" +\r\n                      props.match.params.eid\r\n                    );\r\n                  }}\r\n                >\r\n                  Edit Event\r\n                </Button> */}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Chart\r\n          options={options}\r\n          series={series}\r\n          type=\"donut\"\r\n          width=\"400\"\r\n          style={{\r\n            margin: \"auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        />\r\n        <Row style={{ justifyContent: \"center\" }}>\r\n          <Col>\r\n            {Eventdata && Eventdata.EntryWay === \"Code\" ? <>\r\n\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className=\"tac m-b-25px clipboard\"\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(\r\n                    \"https://mobillyinvite.com/MyInvitations/\" + Eventdata.MainCode + \"/\" + Eventdata.code\r\n                  );\r\n                }}\r\n              >\r\n                <Grid container spacing={0} >\r\n                  <Grid item xs={10} md={11} className=\"link\" >\r\n                    {\"https://mobillyinvite.com/MyInvitations/xxxxx\"\r\n                    }\r\n\r\n                  </Grid>\r\n                  <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                    <FileCopyIcon className=\"v-t\" />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n            </> : <> <Grid\r\n              item\r\n              xs={12}\r\n              className=\"tac m-b-25px clipboard\"\r\n              onClick={() => {\r\n                navigator.clipboard.writeText(\r\n                  \"https://mobillyinvite.com/MyInvitations/\" +\r\n                  Eventdata.MainCode\r\n                );\r\n              }}\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={10} md={11} className=\"link\">\r\n                  {\"https://mobillyinvite.com/xxxxx\"}\r\n                </Grid>\r\n                <Grid item xs={2} md={1} className=\"p-t-10\">\r\n                  <FileCopyIcon className=\"v-t\" />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid></>}\r\n\r\n          </Col>\r\n        </Row>\r\n        {/* <Row className=\"messageboard\">\r\n          <h3 className=\"messageboard-txt\">Message Board</h3>\r\n        </Row>\r\n        <Row style={{ justifyContent: \"center\" }}>\r\n          {\" \"}\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={6}\r\n            placeholder=\"Write text here\"\r\n            style={{ marginTop: 10 }}\r\n            onChange={(e) => {\r\n              setcomment(e.target.value);\r\n            }}\r\n            value={comment}\r\n          />\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            style={{ width: \"40vh\", borderRadius: 20, marginTop: 30 }}\r\n            onClick={() => {\r\n              submit();\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Row> */}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\FD\\Fd.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Guest\\ManageGuest.js",["2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Tab,\r\n  Tabs,\r\n  Button,\r\n  ListGroup,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport \"../Guest/Guest.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../Utils/History\";\r\nimport Userdataurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport {\r\n  change_event,\r\n  update_participants,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { ReactExcel, readFile, generateObjects } from \"@ramonak/react-excel\";\r\nexport default function ManageGuest(props) {\r\n  const dispatch = useDispatch();\r\n  const [isDisable, setDisabled] = useState(true);\r\n  const [list, setlist] = useState([]);\r\n  const [guestList, setguestList] = useState([]);\r\n  const [isMobile, SetIsMobile] = useState(false);\r\n  const [_id, Set_id] = useState(\"\");\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  let supported = \"\";\r\n  const [base, setbase] = useState(\"\");\r\n\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations\r\n  );\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  let attribute = [\"name\", \"tel\"];\r\n  const opts = { multiple: true };\r\n\r\n  useEffect(async () => {\r\n    supported = \"contacts\" in navigator && \"ContactsManager\" in window;\r\n    if (supported === true) {\r\n      SetIsMobile(true);\r\n    } else {\r\n      SetIsMobile(false);\r\n    }\r\n  }, []);\r\n\r\n  const readExcel = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n\r\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n\r\n        const wsname = wb.SheetNames[0];\r\n\r\n        const ws = wb.Sheets[wsname];\r\n\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n        resolve(data);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        console.log(error);\r\n        reject(error);\r\n      };\r\n    });\r\n\r\n    promise.then((d) => {\r\n      console.log(d);\r\n      let result = d.map((data) => data.Contact);\r\n\r\n      console.log(result);\r\n      let Status = \"\";\r\n      result = result.map((data) => {\r\n        if (typeof data === \"string\") {\r\n          if (data.includes(\"+\")) {\r\n          } else {\r\n            data = \"+91\" + data;\r\n          }\r\n        } else {\r\n          data = \"+91\" + data;\r\n        }\r\n        let jdata = { By: data, Status: Status };\r\n        return jdata;\r\n      });\r\n      console.log(result);\r\n      setguestList([...guestList, ...result]);\r\n      setlist([...guestList, ...result]);\r\n      setDisabled(false);\r\n    });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let Listcpy = [];\r\n    let accept = [];\r\n    let decline = [];\r\n    let maybe = [];\r\n    let RSVPList = []\r\n    let all = [];\r\n    let Participants = [];\r\n    if (\r\n      props.location.pathname ===\r\n      \"/MyEvents/Manage-GuestList/\" +\r\n      props.match.params.id +\r\n      \"/\" +\r\n      props.match.params.invno\r\n    ) {\r\n      await setEventdata(MyEvents[props.match.params.id]);\r\n      await setbase(\"MyEvents\");\r\n      await Set_id(MyEvents[props.match.params.id][props.match.params.invno]._id);\r\n      await setguestList(MyEvents[props.match.params.id][props.match.params.invno].RSVPList);\r\n      RSVPList = MyEvents[props.match.params.id][props.match.params.invno].RSVPList;\r\n      Participants = MyEvents[props.match.params.id][props.match.params.invno].Participants\r\n    } else {\r\n      await setEventdata(myInvitations[props.match.params.id]);\r\n      await setbase(\"inv\");\r\n      await Set_id(myInvitations[props.match.params.id][props.match.params.invno]._id);\r\n      await setguestList(myInvitations[props.match.params.id][props.match.params.invno].RSVPList);\r\n      RSVPList = myInvitations[props.match.params.id][props.match.params.invno].RSVPList;\r\n      Participants = MyEvents[props.match.params.id][props.match.params.invno].Participants\r\n    }\r\n    RSVPList.map((rsvp) => {\r\n      if (rsvp.Status === \"Accept\") {\r\n        accept.push(rsvp);\r\n      }\r\n      if (rsvp.Status === \"Decline\") {\r\n        decline.push(rsvp);\r\n      }\r\n      if (rsvp.Status === \"May Be\") {\r\n        maybe.push(rsvp);\r\n      }\r\n    });\r\n\r\n    let allrsvp = accept.concat(decline);\r\n    allrsvp = allrsvp.concat(maybe);\r\n    let Status = \"invited\";\r\n    for (let j = 0; j < Participants.length; j++) {\r\n      let Status = \"invited\";\r\n      let found = false;\r\n      for (let k = 0; k < allrsvp.length; k++) {\r\n        if (\r\n          allrsvp[k].By === Participants[j] ||\r\n          allrsvp[k].By === \"+91\" + Participants[j]\r\n        ) {\r\n          Status = allrsvp[k].Status;\r\n          found = true;\r\n          break;\r\n        } else {\r\n        }\r\n      }\r\n\r\n      if (Participants[j].toString().startsWith(\"+\")) {\r\n        Listcpy.push(Participants[j]);\r\n        all.push({ By: Participants[j], Status: Status });\r\n      } else {\r\n        Listcpy.push(\"+91\" + Participants[j]);\r\n        all.push({ By: \"+91\" + Participants[j], Status: Status });\r\n      }\r\n      found = false;\r\n    }\r\n    setlist(all);\r\n    setguestList(all);\r\n  }, [MyEvents]);\r\n\r\n  const deleteparticipant = async (by) => {\r\n    let all = guestList;\r\n\r\n    all = all.filter((allcontact) => {\r\n      return by != allcontact.By;\r\n    });\r\n    console.log(all);\r\n    await setguestList([]);\r\n    await setguestList(all);\r\n  };\r\n  const removeall = () => {\r\n    setguestList([]);\r\n    setDisabled(false);\r\n  };\r\n  const openContactPicker = async () => {\r\n    try {\r\n      let ldata = [];\r\n      let number = \"\";\r\n      const contacts = await navigator.contacts.select(attribute, opts);\r\n\r\n      contacts.map(async (contact) => {\r\n        if (contact.tel.length > 1) {\r\n          if (contact.tel[0].includes(\"+\")) {\r\n            await ldata.push(contact.tel[0]);\r\n          } else {\r\n            await ldata.push('+91' + contact.tel[0]);\r\n          }\r\n\r\n\r\n        } else {\r\n          await ldata.push(contact.tel[0]);\r\n        }\r\n      });\r\n\r\n      console.log(ldata);\r\n      let Status = \"\";\r\n      ldata = ldata.map((data) => {\r\n        if (typeof data === \"string\") {\r\n          if (data.startsWith(\"+\")) {\r\n          } else {\r\n            data = \"+91\" + data;\r\n          }\r\n        } else {\r\n          data = \"+91\" + data;\r\n        }\r\n        let jdata = { By: data, Status: Status };\r\n        return jdata;\r\n      });\r\n      console.log(ldata);\r\n      setguestList([...guestList, ...ldata]);\r\n      setlist(ldata);\r\n      setDisabled(false);\r\n      await setlist([...ldata]);\r\n      console.log(_id);\r\n      let participants = [...ldata];\r\n      // await dispatch(update_participants(_id, participants));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  function save() {\r\n    let listdata = [];\r\n    guestList.map((data) => {\r\n      listdata.push(data.By);\r\n    });\r\n    setguestList(guestList);\r\n    setlist(guestList);\r\n    setDisabled(true);\r\n    console.log(listdata);\r\n    dispatch(update_participants(_id, listdata));\r\n  }\r\n  function cancelchanges() {\r\n    setguestList(list);\r\n    setDisabled(true);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        animation={false}\r\n        className=\"delete-modal\"\r\n      >\r\n        {/* <Modal.Header>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\"></Modal.Title>\r\n      </Modal.Header> */}\r\n        <Modal.Body>\r\n          <p> Do You Want to Remove all Participants ?</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleClose} variant=\"danger\">\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} variant=\"success\">\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Container className=\"guest-box\">\r\n        <Row style={{ marginTop: 30, marginRight: 3, marginLeft: 3 }}>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            />\r\n            Manage Guest\r\n          </p>\r\n        </Row>\r\n        <Row className=\"m-1\">\r\n          <Col xs={false} md={6}></Col>\r\n          <Col>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"w-100 label\"\r\n              onClick={() => {\r\n                removeall();\r\n              }}\r\n            >\r\n              Remove All\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              variant=\"info\"\r\n              className=\"w-100 label\"\r\n              style={{ display: isMobile === true ? \"block\" : \"none\" }}\r\n              onClick={() => {\r\n                openContactPicker();\r\n              }}\r\n            >\r\n              Add Participants\r\n            </Button>\r\n            <>\r\n              <label\r\n                htmlFor=\"input\"\r\n                className=\"btn btn-info label\"\r\n                style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n              >\r\n                Add Participants\r\n              </label>\r\n              <input\r\n                id=\"input\"\r\n                type=\"file\"\r\n                accept=\".xlsx\"\r\n                onChange={(e) => {\r\n                  const file = e.target.files[0];\r\n                  readExcel(file);\r\n                }}\r\n                placeholder=\"Add Participants\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginLeft: \"auto\" }}>\r\n          <Col>\r\n            <ListGroup className=\"list-data\">\r\n              {guestList.map((guest, index) => (\r\n                <ListGroup.Item className=\"m-1\">\r\n                  <Row className=\"m-0 \">\r\n                    <Col xs={2} md={1}>\r\n                      <Userdataurl\r\n                        showIcon={true}\r\n                        Phone={guest.By}\r\n                        key={index}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={8} md={10}>\r\n                      <Row className=\"m-0 \">\r\n                        <Userdataurl showName={true} Phone={guest.By} />\r\n                      </Row>\r\n                      <Row className=\"m-0 \">\r\n                        <span\r\n                          className={\r\n                            \"status \" + guest.Status === \"Accept\"\r\n                              ? \"user-accept \"\r\n                              : guest.Status === \"Decline\"\r\n                                ? \"user-decline\"\r\n                                : guest.Status === \"May Be\"\r\n                                  ? \"user-maybe\"\r\n                                  : \"user-invited\"\r\n                          }\r\n                        >\r\n                          {guest.Status || \"\"}\r\n                        </span>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={2} md={1}>\r\n                      <HighlightOffRoundedIcon\r\n                        color=\"error\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          setDisabled(false);\r\n                          deleteparticipant(guest.By);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n              {/* {list.map((item) => (\r\n                <ListGroup.Item className=\"m-1\">\r\n                  <Row className=\"m-0 \">\r\n                    <Col xs={2} md={1}>\r\n                      <Userdataurl showIcon={true} Phone={item} />\r\n                    </Col>\r\n                    <Col xs={8} md={10}>\r\n                      <Row className=\"m-0 \">\r\n                        <Userdataurl showName={true} Phone={item} />\r\n                      </Row>\r\n                      <Row className=\"m-0 \"></Row>\r\n                    </Col>\r\n                    <Col xs={2} md={1}>\r\n                      <HighlightOffRoundedIcon color=\"error\" fontSize=\"large\" />\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))} */}\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n        {isDisable === true ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"lg\"\r\n              className=\"fr label\"\r\n              onClick={() => {\r\n                cancelchanges();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              className=\"fr label\"\r\n              onClick={() => {\r\n                save();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Comments\\Coments.js",["2145","2146","2147","2148","2149","2150","2151","2152","2153","2154"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport \"../Comments/Comments.css\";\r\nimport CommentAvt from \"../../Assets/CommentAvt.png\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport history from \"../../Utils/History\";\r\nimport { likecomment } from '../../Redux/DispatchFuncitons/postfunctions'\r\nimport { comment_event } from '../../Redux/DispatchFuncitons/Eventfunctions'\r\nimport {\r\n  GetEvents,\r\n  GetInvitations\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Coments(props) {\r\n  const dispatch = useDispatch()\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let Events = useSelector((state) => state.Eventdata);\r\n  const [MainCode, setMainCode] = useState(\"\");\r\n  const [eveid, seteveid] = useState(\"\");\r\n  const [comments, setcomments] = useState([]);\r\n  const [comment, setcomment] = useState(\"\");\r\n  let base = \"\";\r\n  let Eventdata = [];\r\n  const getcomments = () => {\r\n    axios\r\n      .post(url + \"post/getEventcomments\", {\r\n        id: props.match.params._id,\r\n        Phone: Auth.Phone,\r\n      })\r\n      .then(async (res) => {\r\n        if (res.data.data) {\r\n          console.log(res.data.data);\r\n          await setcomments(res.data.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return { err: \"error 404\" };\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getcomments()\r\n    const interval = setInterval(() => {\r\n      getcomments();\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [])\r\n\r\n  const submit = async () => {\r\n    if (comment !== \"\") {\r\n      var saved = await dispatch(comment_event(props.match.params._id, comment))\r\n      if (saved === 1) {\r\n        await setcomment(\"\");\r\n        await getcomments();\r\n      }\r\n\r\n    }\r\n  };\r\n  useEffect(async () => {\r\n\r\n    // console.log(\"/MyEvents/eventpage/chat/\" + props.match.params.id);\r\n    if (Events.myEvents.length > 0 && Events.myInvitations > 0) {\r\n      if (\r\n        props.location.pathname ===\r\n        \"/MyEvents/comments/\" + props.match.params.id\r\n      ) {\r\n        Eventdata = Events.myEvents[props.match.params.id];\r\n        base = \"MyEvents\";\r\n        await seteveid(Eventdata[0]._id)\r\n        await setMainCode(Eventdata[0].MainCode)\r\n      } else {\r\n        Eventdata = Events.myInvitations[props.match.params.id];\r\n        base = \"inv\";\r\n        await seteveid(Eventdata[0]._id)\r\n        await setMainCode(Eventdata[0].MainCode)\r\n      }\r\n    } else {\r\n      await dispatch(GetEvents())\r\n      await dispatch(GetInvitations())\r\n    }\r\n\r\n\r\n    // Eventdata.map((singleevent) => {\r\n    //   setcomments(singleevent.CommentList);\r\n    // });\r\n  }, [Eventdata]);\r\n\r\n  useEffect(() => {\r\n    if (props.showcommment === true) {\r\n      console.log(props.id);\r\n      axios\r\n        .post(url + \"post/getpostcomments\", {\r\n          id: props.id,\r\n          Phone: Auth.Phone,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.data) {\r\n            console.log(res.data.data);\r\n            setcomments(res.data.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, [props.showcommment]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <Container className=\"p-0 ofh h80\" fluid>\r\n        <Container>\r\n          <Row\r\n            style={{\r\n              marginTop: 20,\r\n              marginRight: 3,\r\n              marginLeft: 3,\r\n              marginBottom: 5,\r\n            }}\r\n          >\r\n            <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n              <IoArrowBackCircleOutline\r\n                size={40}\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n              Event\r\n            </p>\r\n            <Col></Col>\r\n          </Row>\r\n        </Container>\r\n        {comments.map((comment) => (\r\n          <Row\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              paddingLeft: 5,\r\n              marginRight: 5,\r\n            }}\r\n            md={2}\r\n          >\r\n            <Col xs={2} md={1}>\r\n              <UserDataUrl showIcon={true} Phone={comment.CommentBy} />\r\n            </Col>\r\n            <Col xs={8} md={9}>\r\n              <h5 className=\"m-0 p-0\">\r\n                <UserDataUrl showName={true} Phone={comment.CommentBy} />\r\n              </h5>\r\n              <p className=\" m-5px fs-14\">{comment.Comment}</p>\r\n            </Col>\r\n            <Col xs={2} md={1}>\r\n              <Like likeby={comment.likeby} MainCode={MainCode} _id={comment._id} />\r\n              {comment.likeby ? comment.likeby.Length : 0}\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </Container>\r\n      <Container fluid className=\"p-0\">\r\n        <Row\r\n          style={{\r\n            marginTop: 25,\r\n\r\n            marginLeft: \"auto\",\r\n            boxShadow: \"4px 7px 7px -7px rgba(0,0,0,0.54)\",\r\n          }}\r\n        >\r\n          <Col xs={10}>\r\n            <Form.Control\r\n              placeholder=\"Write a Comment\"\r\n              style={{\r\n                width: \"100%\",\r\n                margin: 0,\r\n                marginTop: \"5px\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n              value={comment}\r\n              onChange={(e) => {\r\n                setcomment(e.target.value);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col\r\n            xs={2}\r\n            onClick={() => {\r\n              submit();\r\n            }}\r\n          >\r\n            <IoMdSend\r\n              size={20}\r\n              style={{ float: \"right\", margin: \"auto\", marginTop: \"5px\" }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport function Like(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [isliked, setisliked] = useState(false);\r\n  useEffect(() => {\r\n    setisliked(props.likeby ? props.likeby.includes(Auth.Phone) : false);\r\n  }, []);\r\n  async function Dislike() {\r\n    let likelistcpy = [...props.likeby];\r\n    likelistcpy[props.index] = false;\r\n    await setisliked(false)\r\n  }\r\n  async function Like() {\r\n    let likelistcpy = [...props.likeby];\r\n    likelistcpy[props.index] = true;\r\n    // props.setLikeList(likelistcpy);\r\n    await setisliked(true)\r\n  }\r\n  const likethecomment = () => { };\r\n  return (\r\n    <>\r\n      {isliked === false ? (\r\n        <FcLikePlaceholder\r\n          size={30}\r\n          onClick={() => {\r\n            dispatch(likecomment(props._id, Auth.Phone, props.MainCode));\r\n            Like();\r\n            likethecomment();\r\n          }}\r\n        />\r\n      ) : (\r\n        <FcLike\r\n          size={30}\r\n          onClick={() => {\r\n            dispatch(likecomment(props._id, Auth.Phone, props.MainCode));\r\n            Dislike();\r\n            likethecomment();\r\n          }}\r\n        />\r\n      )}\r\n      Like {props.likeby.Length}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\EditEvent\\EditEvent.js",["2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./EditEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Map from \"../Helpers/Maps/Places\";\r\nimport AddImg from \"../../Assets/AddImage.svg\";\r\nimport { Grid, InputLabel, Select, FormControl } from \"@material-ui/core\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\nimport Eventnamebox from \"../AddEvent/CreateEvent/EventNameBox\";\r\nimport history from \"../../Utils/History\";\r\nimport { json } from \"body-parser\";\r\nimport { update_events } from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { deletefile, uploadString } from \"../../Utils/FileUpload_Download\";\r\nexport default function EditEvent(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"lightgrey !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [base, setbase] = useState(\"\");\r\n  const [maincode, setmaincode] = useState(\"\");\r\n  const [IsSubmitted, setIsSubmitted] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n  const [isfileChanged, setisfileChanged] = useState(false);\r\n  const [changedfiles, setchangedfiles] = useState([\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n    { fileurl: \"\", ischanged: false, type: \"\" },\r\n  ]);\r\n  const [urltype, seturltype] = useState(\"\");\r\n  const [selectedEvent, setselectedEvent] = useState(null);\r\n  const [_id, Set_id] = useState(\"\");\r\n  const [Type, SetType] = useState(\"Event\");\r\n  const [Eventdata, setEventdata] = useState([]);\r\n  const [Fileurl, setFile] = useState(\"\");\r\n  const [Filetype, setFiletype] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Date, setDate] = useState(\"\");\r\n  const [Time, setTime] = useState(\"\");\r\n  const [VenueType, setVenueType] = useState(\"\");\r\n  const [Link, setLink] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [datacopy, setdatacopy] = useState([]);\r\n  const [urls, seturls] = useState([]);\r\n  let MyEvents = useSelector(\r\n    (state) => state.Eventdata.myEvents[props.match.params.id]\r\n  );\r\n  let myInvitations = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n\r\n  const [uniqueurl, setuniqueurl] = useState(\"\")\r\n  const checkIfEventEmpty = async () => {\r\n\r\n    if (Type === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    }\r\n    console.log(Eventdata);\r\n    let Eventcpy = [...Eventdata];\r\n    let result = true;\r\n    let incompleteeventnumber = null;\r\n    //check for event first\r\n    Eventcpy = { ...Eventdata[selectedEvent] };\r\n    if (Eventcpy.Name === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Date === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Time === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.Description === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (\r\n      Eventcpy.VenueType === \"Both\" &&\r\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n    ) {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.file === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    } else if (Eventcpy.filetype === \"\") {\r\n      setisError(true);\r\n      return 0;\r\n    }\r\n\r\n    for (let i = 0; i < Eventdata.length; i++) {\r\n      incompleteeventnumber = i;\r\n      Eventcpy = { ...Eventdata[i] };\r\n      if (Eventcpy.Name === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Date === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Time === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.Description === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (\r\n        Eventcpy.VenueType === \"Both\" &&\r\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n      ) {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.file === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      } else if (Eventcpy.filetype === \"\") {\r\n        setselectedEvent(i);\r\n        setisError(true);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    // console.log({ status: true, selectedEvent: null, component: \"\" });\r\n    setisError(false);\r\n    return 1;\r\n    // return { status: true, selectedEvent: null, component: \"\" };\r\n  };\r\n\r\n  useEffect(async () => {\r\n    grabdata();\r\n  }, []);\r\n\r\n  async function grabdata() {\r\n    await setselectedEvent(null);\r\n    if (\r\n      props.location.pathname ===\r\n      \"/MyEvents/Manage-Event/\" +\r\n      props.match.params.id +\r\n      \"/\" +\r\n      props.match.params.invno\r\n    ) {\r\n      await setEventdata(MyEvents);\r\n      await setmaincode(MyEvents[0].MainCode);\r\n      console.log(MyEvents[0].MainCode);\r\n      await setdatacopy(JSON.stringify({ MyEvents }));\r\n      await setbase(\"MyEvents\");\r\n      await SetType(MyEvents[0].InvId.Type);\r\n      await grabUrsl(MyEvents)\r\n    } else {\r\n      await setEventdata(myInvitations);\r\n      await setmaincode(myInvitations[0].MainCode);\r\n      await setdatacopy(JSON.stringify({ myInvitations }));\r\n      await setbase(\"inv\");\r\n      await SetType(myInvitations[0].InvId.Type);\r\n      await grabUrsl(myInvitations)\r\n    }\r\n\r\n    await setselectedEvent(0);\r\n  }\r\n  useEffect(() => {\r\n    console.log(Eventdata);\r\n    if (Eventdata.length !== 0 && selectedEvent !== null) {\r\n      setName(Eventdata[selectedEvent].Name);\r\n      setFile(Eventdata[selectedEvent].file);\r\n      setFiletype(Eventdata[selectedEvent].filetype);\r\n      setDate(Eventdata[selectedEvent].Date);\r\n      setTime(Eventdata[selectedEvent].Time);\r\n      setVenueType(Eventdata[selectedEvent].VenueType);\r\n      setLink(Eventdata[selectedEvent].Link);\r\n      if (Eventdata[selectedEvent].Location !== \"\") {\r\n        console.log(\r\n          Eventdata[selectedEvent].Location.split(\":\")[3]\r\n            .split('\"}')[0]\r\n            .split('\"')[1]\r\n        );\r\n\r\n        setaddress(\r\n          Eventdata[selectedEvent].Location.split(\":\")[3]\r\n            .split('\"}')[0]\r\n            .split('\"')[1]\r\n        );\r\n      }\r\n      setLocation(Eventdata[selectedEvent].Location);\r\n      setDescription(Eventdata[selectedEvent].Description);\r\n    }\r\n  }, [selectedEvent]);\r\n  const addevent = () => {\r\n    let events = {\r\n      Name: \"\",\r\n      Participants: [],\r\n      file: \"\",\r\n      filetype: \"\",\r\n      Date: \"\",\r\n      Time: \"\",\r\n      VenueType: \"Online\",\r\n      Location: \"\",\r\n      Link: \"\",\r\n      Description: \"\",\r\n      GuestInvite: false,\r\n      Host: \"\",\r\n      Co_Host: [],\r\n      Schedule: [],\r\n    };\r\n    let Eventdatacpy = [...Eventdata];\r\n    if (Eventdatacpy.length < 4) {\r\n      Eventdatacpy.push(events);\r\n      setEventdata(Eventdatacpy);\r\n    }\r\n  };\r\n  const removeevent = () => {\r\n    let Eventdatacpy = [...Eventdata];\r\n    if (Eventdatacpy.length > 1) {\r\n      Eventdatacpy.pop();\r\n      setEventdata(Eventdatacpy);\r\n    }\r\n  };\r\n  const save = async () => {\r\n    // console.log(Eventdata);\r\n    // console.log(changedfiles);\r\n    await preserve(selectedEvent);\r\n    let ischecked = await checkIfEventEmpty();\r\n    if (ischecked === 0) {\r\n      alert(\"something is missing\");\r\n    } else {\r\n      let Eventdatacpy = [...Eventdata];\r\n\r\n      //saveuploadedfiles\r\n\r\n      //  uniqueurl = Type + Math.floor(100000 + Math.random() * 900000) + \"/\";\r\n      for (let i = 0; i < Eventdatacpy.length; i++) {\r\n        console.log(Eventdatacpy[i])\r\n        console.log(changedfiles[i])\r\n        if (changedfiles[i].ischanged === true) {\r\n          alert(\"file at index \" + i + \" has changed\");\r\n          if (urls[i] === undefined) {\r\n            alert(\"url not found\")\r\n\r\n            let newurl = await uploadString(\r\n              changedfiles[i].fileurl,\r\n              urltype + uniqueurl + \"Event_image/\" + i + Eventdatacpy[i].Name.replaceAll(\" \", '')\r\n            );\r\n            Eventdatacpy[i].file = newurl;\r\n            console.log(newurl);\r\n          } else {\r\n            alert(\"url  found\")\r\n            console.log(\"uploading file\")\r\n            let newurl = await uploadString(\r\n              changedfiles[i].fileurl,\r\n              urls[i]\r\n            );\r\n            Eventdatacpy[i].file = newurl;\r\n            console.log(newurl);\r\n            console.log(urls[i])\r\n          }\r\n        } else {\r\n        }\r\n      }\r\n\r\n      await setEventdata(Eventdatacpy);\r\n      console.log(Eventdata);\r\n      dispatch(update_events(Type, Eventdata, maincode));\r\n    }\r\n  };\r\n\r\n  const preserve = async (i) => {\r\n    let Eventdatacpy = [...Eventdata];\r\n    Eventdatacpy[selectedEvent].Name = Name;\r\n    Eventdatacpy[selectedEvent].file = Fileurl;\r\n    Eventdatacpy[selectedEvent].filetype = Filetype;\r\n    Eventdatacpy[selectedEvent].Date = Date;\r\n    Eventdatacpy[selectedEvent].Time = Time;\r\n    Eventdatacpy[selectedEvent].VenueType = VenueType;\r\n    Eventdatacpy[selectedEvent].Link = Link;\r\n    Eventdatacpy[selectedEvent].Location = Location;\r\n    Eventdatacpy[selectedEvent].Description = Description;\r\n    await setEventdata(Eventdatacpy);\r\n    await setselectedEvent(i);\r\n  };\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    setisfileChanged(true);\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    setFiletype(type[1]);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let filedata = reader.result;\r\n      await setFile(filedata);\r\n      // uploadfile(filedata, type);\r\n      // console.log(filedata, type);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  async function uploadfile(fileurl, type, selectedEvent) {\r\n\r\n    let changedfilescpy = [...changedfiles];\r\n    console.log(selectedEvent);\r\n    if (fileurl.includes(\"https://firebasestorage\") || fileurl === \"\") {\r\n      return false;\r\n    }\r\n    if (selectedEvent === null) {\r\n      if (!changedfilescpy[0].fileurl.includes(\"https://firebasestorage\")) {\r\n        changedfilescpy[0].fileurl = fileurl;\r\n        changedfilescpy[0].type = type;\r\n        changedfilescpy[0].ischanged = true;\r\n        changedfilescpy[0].selectedEvent = 0\r\n      }\r\n\r\n    } else {\r\n      if (!changedfilescpy[selectedEvent].fileurl.includes(\"https://firebasestorage\")) {\r\n        changedfilescpy[selectedEvent].fileurl = fileurl;\r\n        changedfilescpy[selectedEvent].type = type;\r\n        changedfilescpy[selectedEvent].ischanged = true;\r\n        changedfilescpy[selectedEvent].selectedEvent = selectedEvent\r\n      }\r\n\r\n    }\r\n    console.log(changedfilescpy)\r\n    await setchangedfiles(changedfilescpy);\r\n  }\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  async function grabUrsl(eventdata) {\r\n    let urlscpy = [];\r\n    let fileurl = \"\"\r\n    let unuls = \"\"\r\n    eventdata.map((data, index) => {\r\n      console.log(data.file)\r\n      fileurl = data.file.split(\"https://firebasestorage.googleapis.com/v0/b/mobilly-invite.appspot.com/o/\")[1].split(\"?\")[0];\r\n      fileurl = fileurl.replaceAll(\"%2F\", \"/\");\r\n      fileurl = fileurl.split(\"Mob-invited/\")[1];\r\n      console.log(fileurl);\r\n      unuls = fileurl\r\n      setuniqueurl(fileurl.split(\"/Event_image\")[0].match(/\\d+/g)[0]);\r\n      seturltype(fileurl.split(\"/Event_image\")[0].match(/[a-zA-Z]+/g)[0]);\r\n      urlscpy.push(fileurl)\r\n    })\r\n    urlscpy = urlscpy.reverse()\r\n    await seturls(urlscpy)\r\n    console.log(urlscpy)\r\n  }\r\n  useEffect(async () => {\r\n    await uploadfile(Fileurl, Filetype, selectedEvent, selectedEvent)\r\n  }, [Fileurl])\r\n  return (\r\n    <div>\r\n      {/* <Header /> */}\r\n      <Container>\r\n        <Row style={{ marginTop: 30, marginRight: 3, marginLeft: 3 }}>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 23 }}>\r\n            <IoArrowBackCircleOutline\r\n              size={40}\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            />\r\n            Edit Events\r\n          </p>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              className=\"w-100-p  m-b-10 \"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.notchedOutline,\r\n                },\r\n              }}\r\n            >\r\n              <Select\r\n                native\r\n                value={Type}\r\n                onChange={(e) => SetType(e.target.value)}\r\n                className=\"selectboxblue\"\r\n              >\r\n                <option value={Type}>{Type}</option>\r\n                {Type !== \"Wedding\" ? (\r\n                  <option value=\"Wedding\">Wedding</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Birthday\" ? (\r\n                  <option value=\"Birthday\">Birthday</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Wedding Anniversary\" ? (\r\n                  <option value=\"Wedding Anniversary\">\r\n                    Wedding Anniversary\r\n                  </option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Get Together\" ? (\r\n                  <option value=\"Get Together\">Get Together</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {Type !== \"Formal Event\" ? (\r\n                  <option value=\"Formal Event\">Formal Event</option>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Select>\r\n              {IsSubmitted === true && Type === \"\" ? (\r\n                <span className=\"error p-l-5px\">please enter Type</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </FormControl>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <div className=\"noe r4vw \">\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={false} sm={1} md={2} />\r\n                <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\r\n                  Number Of Events\r\n                </Grid>\r\n                <Grid item xs={5} sm={5} md={4}>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"Cirlce tar  fl\">\r\n                        <AddCircleOutlineIcon\r\n                          className=\"l-blue-t\"\r\n                          fontSize=\"large\"\r\n                          onClick={() => {\r\n                            addevent();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"white box  fl\">{Eventdata.length}</div>\r\n                      <div className=\"Cirlce tal  fl\">\r\n                        <RemoveCircleOutlineIcon\r\n                          className=\"l-blue-t \"\r\n                          fontSize=\"large\"\r\n                          onClick={() => {\r\n                            removeevent();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Container>\r\n          <Row>\r\n            <Eventnamebox\r\n              data={Eventdata}\r\n              SelectedEvent={selectedEvent}\r\n              SelectEvent={preserve}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12}>\r\n              {Fileurl === \"\" ? (\r\n                <center>\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <img\r\n                      src={AddImg}\r\n                      className={\"add-Img \"}\r\n                    // onClick={() => {\r\n                    //   toggleShowPopup(true);\r\n                    // }}\r\n                    />{\" \"}\r\n                  </div>\r\n                </center>\r\n              ) : Fileurl !== undefined && Filetype !== undefined ? (\r\n                Filetype === \"png\" ||\r\n                  Filetype === \"jpg\" ||\r\n                  Filetype === \"jpeg\" ? (\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <img\r\n                      src={Fileurl}\r\n                      className={\"notTransparent uploaded-file w-100\"}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <video\r\n                      muted\r\n                      type=\"video/mp4\"\r\n                      autoPlay={true}\r\n                      src={Fileurl}\r\n                      preload=\"none\"\r\n                      className={\"notTransparent w-100\"}\r\n                    />\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {IsSubmitted === true && Fileurl === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <span className=\"label\">Name</span>\r\n            <TextField\r\n              id=\"outlined-basics\"\r\n              variant=\"outlined\"\r\n              className=\"w-100-p\"\r\n              size=\"small\"\r\n              value={Name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.notchedOutline,\r\n                },\r\n              }}\r\n            />\r\n            {IsSubmitted === true && Name === \"\" ? (\r\n              <span className=\"error p-l-5px\">please enter Name</span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Row>\r\n          <Row>\r\n            <Col xs={6} md={6} className=\"p-5px\">\r\n              <span className=\"label\">Time</span>\r\n              <TextField\r\n                id=\"time\"\r\n                // label=\"Time\"\r\n                variant=\"outlined\"\r\n                type=\"time\"\r\n                size=\"small\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                className=\"w-100-p \"\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                ampm={false}\r\n                value={Time}\r\n                onChange={(e) => {\r\n                  setTime(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Time === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={6} md={6} className=\"p-5px\">\r\n              <span className=\"label\">Date</span>\r\n              <TextField\r\n                id=\"date\"\r\n                // label=\"Date\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                size=\"small\"\r\n                className=\"w-100-p\"\r\n                value={Date}\r\n                onChange={(e) => {\r\n                  setDate(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Date === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={6} className=\"p-5px\">\r\n              <span className=\"label\">Type</span>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                className=\"w-100-p selectboxblue pob0\"\r\n                value={VenueType}\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n                size=\"small\"\r\n              >\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Online-Inapp\");\r\n                  }}\r\n                  value=\"Online-Inapp\"\r\n                >\r\n                  Online-Inapp\r\n                </MenuItem>\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Online\");\r\n                  }}\r\n                  value=\"Online\"\r\n                >\r\n                  Online\r\n                </MenuItem>\r\n\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Offline\");\r\n                  }}\r\n                  value=\"Offline\"\r\n                >\r\n                  Offline\r\n                </MenuItem>\r\n                <MenuItem\r\n                  className=\"w-100-p\"\r\n                  onClick={(e) => {\r\n                    setVenueType(\"Both\");\r\n                  }}\r\n                  value=\"Both\"\r\n                >\r\n                  Both\r\n                </MenuItem>\r\n              </Select>\r\n              {IsSubmitted === true && VenueType === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col\r\n              xs={6}\r\n              className=\"p-5px\"\r\n              style={{\r\n                display:\r\n                  VenueType === \"Online\" || VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              <span className=\"label\">Change Links </span>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className=\"w-100-p \"\r\n                value={Link}\r\n                onChange={(e) => {\r\n                  setLink(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Link === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col\r\n              xs={VenueType === \"Offline\" ? 6 : 12}\r\n              className=\"p-5px\"\r\n              style={{\r\n                display:\r\n                  VenueType === \"Offline\" || VenueType === \"Both\"\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              <Map\r\n                setLocation={setLocation}\r\n                location={address}\r\n                setaddress={setaddress}\r\n                type={\"Offline\"}\r\n              />\r\n              {IsSubmitted === true && address === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n            <Col xs={12} className=\"p-5px\">\r\n              <span className=\"label\">Description</span>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                // label=\"Description\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className=\"w-100-p m-7px \"\r\n                value={Description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n              {IsSubmitted === true && Description === \"\" ? (\r\n                <span className=\"error p-l-5px\">please Add File</span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n      <div className=\"update\">\r\n        <center>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"update-buttons\"\r\n            onClick={() => {\r\n              save();\r\n              setIsSubmitted(true);\r\n            }}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            className=\"update-buttons\"\r\n            onClick={() => {\r\n              //reload();\r\n              history.goBack();\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitationMain\\InvitaionMain.js",["2178","2179","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./InvitaionMain.css\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport SendIcon from \"../../../Assets/ic-send.png\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CalendarIcon from \"../../../Assets/Calender.png\";\r\nimport { GrSync } from \"react-icons/gr\";\r\nimport LIKE from \"../../../Assets/LIKE.png\";\r\nimport RSVP from \"../../../Assets/RSVP.png\";\r\nimport { HiHome } from \"react-icons/hi\";\r\nimport { GoCalendar, GoLocation } from \"react-icons/go\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport CommentIcon from \"../../../Assets/comment-dot.png\";\r\nimport UserDataUrl from \"../../Helpers/UserData/UserDatajustUrl\";\r\nimport Location from \"../../../Assets/Location.png\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { AiOutlineLike, AiOutlineSync } from \"react-icons/ai\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Dateformatter from '../../Helpers/DateFormatter/Dateformatter'\r\nimport {\r\n  like_event,\r\n  comment_event,\r\n  GetInvitations,\r\n  GetEvents,\r\n} from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport history from \"../../../Utils/History\";\r\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nexport default function InvitaionMain(props) {\r\n  const dispatch = useDispatch();\r\n  const [comment, setcomment] = useState(\"\");\r\n  const [likeCount, setlikeCount] = useState([]);\r\n  const [MainCode, setmaincode] = useState();\r\n  const [commentcountplus, setcommentcountplus] = useState(0);\r\n  const [showfulldescription, setshowfulldescription] = useState(false)\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const checkiflike = (index) => {\r\n    let likeCountCopy = [...likeCount];\r\n    if (likeCount.length > 0) {\r\n      if (likeCount[index].me === true) {\r\n        likeCountCopy[index].me = false;\r\n        likeCountCopy[index].count -= 1;\r\n      } else {\r\n        likeCountCopy[index].me = true;\r\n        likeCountCopy[index].count += 1;\r\n      }\r\n    } else {\r\n      likeCountCopy[index].me = true;\r\n      likeCountCopy[index].count = 1;\r\n    }\r\n    setlikeCount(likeCountCopy);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    console.log(props.Eventdata);\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      await setmaincode(props.Eventdata[0].MainCode);\r\n      let countarray = [];\r\n      let liked = false;\r\n      for (let i = 0; i < props.Eventdata.length; i++) {\r\n        if (props.Eventdata[i].LikeList.length <= 0) {\r\n          countarray.push({ count: 0, me: false });\r\n        } else {\r\n          for (let j = 0; j < props.Eventdata[i].LikeList.length; j++) {\r\n            if (props.Eventdata[i].LikeList.LikeBy === Auth.Phone) {\r\n              liked = true;\r\n            } else {\r\n            }\r\n          }\r\n          countarray.push({\r\n            count: props.Eventdata[i].LikeList.length,\r\n            me: liked,\r\n          });\r\n          liked = false;\r\n        }\r\n      }\r\n      console.log(countarray);\r\n      setlikeCount(countarray);\r\n    }\r\n    setcommentcountplus(0);\r\n  }, [props.Eventdata]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 desktop-only \">\r\n        <Header />\r\n      </div>\r\n      <DesktopNav\r\n        id={props.id}\r\n        MainCode={MainCode}\r\n        base={props.base}\r\n        Eventdata={props.Eventdata}\r\n\r\n      />\r\n      {/*  <Toggler /> */}\r\n\r\n      <Carousel controls={false} interval={99999999999999} className=\"mb-10\">\r\n        {props.Eventdata &&\r\n          props.Eventdata.map((eve, index) => (\r\n            <Carousel.Item>\r\n              <Container className=\"upper-menu\">\r\n                <Row\r\n                  style={{\r\n                    marginTop: 20,\r\n                    marginRight: 3,\r\n                    marginLeft: 3,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <p style={{ color: \"black\" }}>\r\n                    <HiHome\r\n                      style={{ backgroundColor: \"white\", borderRadius: \"50px\" }}\r\n                      size={30}\r\n                      onClick={() => {\r\n                        history.push(\"/\" + props.base);\r\n                      }}\r\n                    />\r\n                  </p>\r\n                  <Col></Col>\r\n                  <FaUserFriends\r\n                    size={30}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"black\",\r\n                      borderRadius: 20,\r\n                      padding: \"0.1em 0.4em\",\r\n                    }}\r\n                    onClick={() => {\r\n                      history.push(\r\n                        \"/\" +\r\n                        props.base +\r\n                        \"/guestlist/\" +\r\n                        props.id +\r\n                        \"/\" +\r\n                        index\r\n                      );\r\n                    }}\r\n                  />\r\n                </Row>\r\n              </Container>\r\n              <Container className=\"container-event\">\r\n                {eve.filetype === \"png\" || eve.filetype === \"jpg\" || eve.filetype === \"jpeg\" ? (\r\n                  <Image src={eve.file} className=\"fullimagemain\" />) : (\r\n                  <video\r\n                    muted\r\n                    type=\"video/mp4\"\r\n                    autoPlay={true}\r\n                    src={eve.file}\r\n                    preload=\"none\"\r\n                    className=\"w-100\"\r\n                  />\r\n                )}\r\n                <Container\r\n                  className=\"box-event\"\r\n                  fluid\r\n                  style={{ marginTop: \"5vh\" }}\r\n                >\r\n                  <div\r\n                    style={{ position: \"relative\", left: \"10px\", top: \"3px\" }}\r\n                  >\r\n                    <UserDataUrl\r\n                      Phone={eve.Host[0]}\r\n                      showIcon={true}\r\n                      className=\"m-10px\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"event-chat-buttons\"\r\n                    style={{ marginTop: \"1vh\" }}\r\n                  >\r\n\r\n                    <Image\r\n                      src={SendIcon}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"20px\",\r\n                        marginRight: \"1.5vh\",\r\n                      }}\r\n                      onClick={async () => {\r\n                        if (comment !== \"\") {\r\n                          await dispatch(comment_event(eve._id, comment));\r\n                          setcomment(\"\");\r\n\r\n                          await setcommentcountplus(commentcountplus + 1)\r\n                        }\r\n                      }}\r\n                    /><>\r\n                      <span className=\"Like-count comment_like\">\r\n                        {eve.CommentList\r\n                          ? eve.CommentList.length + commentcountplus\r\n                          : 0 + commentcountplus}\r\n                      </span>\r\n                      <Image\r\n                        src={CommentIcon}\r\n                        className=\"go-chat\"\r\n                        onClick={() => {\r\n                          history.push(\r\n                            \"/\" + props.base + \"/comments/\" + props.id + \"/\" + eve._id\r\n                          );\r\n                        }}\r\n                      /></>\r\n                  </div>\r\n                  <h4 className=\"avatar-name\">\r\n                    <UserDataUrl Phone={eve.Host[0]} showName={true} />\r\n                  </h4>\r\n                  <Form.Control\r\n                    size=\"sm\"\r\n                    placeholder=\"Write Comment\"\r\n                    className=\"form-control\"\r\n                    value={comment}\r\n                    onChange={(e) => {\r\n                      setcomment(e.target.value);\r\n                    }}\r\n                    style={{\r\n                      border: 0,\r\n                      width: \"auto\",\r\n                      height: \"20px\",\r\n                      marginLeft: \"60px\",\r\n                      boxShadow: \"none\"\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <Row style={{ marginTop: 10 }}>\r\n                    <Col>\r\n                      <center>\r\n                        <span className=\"Like-count\">\r\n                          {likeCount[index] != undefined\r\n                            ? likeCount[index].count\r\n                            : 0}\r\n                        </span>\r\n                        <AiOutlineLike\r\n                          size=\"25\"\r\n                          className=\"info-icon\"\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          onClick={() => {\r\n                            checkiflike(index);\r\n                            dispatch(like_event(eve._id));\r\n                          }}\r\n                        />\r\n                      </center>\r\n                    </Col>\r\n                    <Col\r\n                      onClick={() => {\r\n                        history.push(\"/\" + props.base + \"/rsvp/\" + props.id);\r\n                      }}\r\n                    >\r\n                      <center>\r\n                        <div>\r\n                          <IsRsvp RSVPList={eve.RSVPList} />\r\n                          <AiOutlineSync\r\n                            size=\"25\"\r\n                            style={{ color: \"#4e4e4e\" }}\r\n                          />\r\n                          {/* <Image\r\n                            src={RSVP}\r\n\r\n                            className=\"info-icon\"\r\n                          /> */}\r\n                        </div>\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n                        <GoCalendar\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\"\r\n                          onClick={() => {\r\n                            history.push(\r\n                              \"/\" +\r\n                              props.base +\r\n                              \"/schedule/\" +\r\n                              props.id +\r\n                              \"/\" +\r\n                              index\r\n                            );\r\n                          }} />\r\n                        {/*  <Image\r\n                          src={CalendarIcon}\r\n                          \r\n                        /> */}\r\n                      </center>\r\n                    </Col>\r\n                    <Col>\r\n                      <center>\r\n                        <GoLocation\r\n                          style={{ color: \"#4e4e4e\" }}\r\n                          size=\"25\"\r\n                          onClick={() => {\r\n                            history.push(\r\n                              \"/\" +\r\n                              props.base +\r\n                              \"/location/\" +\r\n                              props.id +\r\n                              \"/\" +\r\n                              index\r\n                            );\r\n                          }} />\r\n                        {/*  <Image\r\n                          src={Location}\r\n                          \r\n                        /> */}\r\n                      </center>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n\r\n                  <h2 className=\"event-date\">{eve.Name}</h2>\r\n                  <h3 className=\"event-date\"><Dateformatter Date={eve.Date + \" \" + eve.Time} /></h3>\r\n                  <p className=\"event-des\">{showfulldescription === false ? eve.Description.slice(0, 50) + '...' : eve.Description}</p>\r\n                  {eve.Description.length > 50 ?\r\n                    <a href=\"#\" className=\"invitationmain_link\" onClick={() => { setshowfulldescription(!showfulldescription) }}>\r\n                      {showfulldescription === false ? 'Show More' : 'Show Less'}\r\n                    </a> : <></>}\r\n                </Container>\r\n              </Container>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      <NavMobile\r\n        className=\"footnavmobile\"\r\n        id={props.id}\r\n        MainCode={MainCode}\r\n        base={props.base}\r\n        Eventdata={props.Eventdata}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport function IsRsvp(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [showicon, setshowicon] = useState(\"\");\r\n  useEffect(() => {\r\n    for (let i = 0; i < props.RSVPList.length; i++) {\r\n      if (\r\n        props.RSVPList[i].By === Auth.Phone &&\r\n        props.RSVPList[i].Status === \"Accept\"\r\n      ) {\r\n        setshowicon(\"Accept\");\r\n      } else if (\r\n        props.RSVPList[i].By === Auth.Phone &&\r\n        props.RSVPList[i].Status === \"May Be\"\r\n      ) {\r\n        setshowicon(\"May Be\");\r\n      } else if (\r\n        props.RSVPList[i].By === Auth.Phone &&\r\n        props.RSVPList[i].Status === \"Decline\"\r\n      ) {\r\n        setshowicon(\"Decline\");\r\n      } else {\r\n      }\r\n    }\r\n    console.log(showicon);\r\n  }, [props.RSVPList]);\r\n  return (\r\n    <span className=\"RSVP-count\">\r\n      {showicon === \"Accept\" ? (\r\n        <CheckCircleIcon style={{ color: \"Green\" }} />\r\n      ) : showicon === \"Decline\" ? (\r\n        <CancelIcon color=\"secondary\" />\r\n      ) : showicon === \"May Be\" ? (\r\n        <ErrorIcon style={{ color: \"#dec509\" }} />\r\n      ) : (\r\n        <HelpIcon color=\"primary\" />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\HomePage.js",["2193","2194"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport MainBanner from \"./MainBanner\";\r\nimport Contact from \"./ContactUs\";\r\nimport Footer from \"./Footer\";\r\nimport Testimonials from \"./Testimonials\";\r\nimport Features from \"./Features\";\r\nimport Additionals from \"./Additionals\";\r\nimport AboutBanner from \"./AboutBanner\";\r\nimport CompanySlide from \"./CompanySlide\";\r\nimport ChatWidget from \"./ChatWidget\";\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        \r\n        <MainBanner />\r\n        <ChatWidget />\r\n        <Features />\r\n        <AboutBanner />\r\n        <Additionals />\r\n        {/* <Testimonials />\r\n        <CompanySlide /> */}\r\n        <Contact />\r\n        <Footer />\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Settings\\AlertNotif\\AlertNotif.js",["2195"],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\NotificatonReducer.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\PostReducer.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\CodeEventReducer.js",["2196","2197"],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\EventReducer.js",["2198"],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\CreateEventFormReducer.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\ChatReducer.js",["2199"],"C:\\Projects\\MobillyInvite\\src\\Redux\\Reducers\\AuthReducer.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Chatgroupfunctions.js",["2200","2201","2202"],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\postfunctions.js",["2203"],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js",["2204","2205"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport {\r\n  EVENTSAVED,\r\n  EVENTSAVEFAIL,\r\n  GOTMYEVENTS,\r\n  GETMYINVITAITONS, DELETEALBUM, DELETESTORY\r\n} from \"../Actions/EventActions\";\r\nimport { deleteEvent } from './CodeFunctions';\r\nimport history from \"../../Utils/History\";\r\nexport function saveEvent(edata) {\r\n  return (dispatch) => {\r\n    console.log(edata);\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    edata.date = dateTime;\r\n    axios.post(url + \"event/create\", edata).then(async (res) => {\r\n      console.log(res);\r\n      await dispatch({\r\n        type: DELETEALBUM\r\n      })\r\n      await dispatch({\r\n        type: DELETESTORY\r\n      })\r\n      history.push(\"/MyEvents/event-create-success/\" + res.data.MainCode);\r\n    });\r\n  };\r\n}\r\nexport function addme(code, maincode) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/addme\", { code: code, maincode: maincode })\r\n      .then(async (res) => {\r\n\r\n        if (res.data.status === 'success') {\r\n          await dispatch(deleteEvent());\r\n          await dispatch(GetEvents());\r\n          await dispatch(GetInvitations());\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return 0;\r\n      });\r\n  };\r\n}\r\nexport function GetEvents() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"event/getmyEvents\").then((res) => {\r\n      dispatch({\r\n        type: GOTMYEVENTS,\r\n        payload: res.data.MyEvents,\r\n      });\r\n      return true\r\n    });\r\n  };\r\n}\r\n\r\nexport function GetInvitations() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"event/getmyInvitaion\").then((res) => {\r\n      dispatch({\r\n        type: GETMYINVITAITONS,\r\n        payload: res.data.Invitations,\r\n      });\r\n      console.log(res);\r\n      return true\r\n    });\r\n  };\r\n}\r\nexport function rsvp_event(id, status, Phone) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/rsvp\", { id: id, status: status, Phone: Phone, date: dateTime })\r\n      .then((res) => {\r\n        // dispatch(GetInvitations());\r\n        // dispatch(GetEvents());\r\n        console.log(res);\r\n        return 1\r\n      });\r\n  };\r\n}\r\nexport function like_event(id) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios.post(url + \"event/like\", { id: id, dateTime: dateTime }).then((res) => {\r\n      dispatch(GetInvitations());\r\n      dispatch(GetEvents());\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function comment_event(id, comment) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/comment\", { id: id, comment: comment, date: dateTime })\r\n      .then(async (res) => {\r\n\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n        return 1;\r\n      });\r\n  };\r\n}\r\nexport function change_event(id, type, data) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateevents\", { id: id, type: type, data: data, date: dateTime })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function add_participants(id, data) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/add_participants\", { id: id, data: data, date: dateTime })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function update_participants(id, data) {\r\n  return (dispatch) => {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + ' ' + time;\r\n    axios\r\n      .post(url + \"event/UpdateParticipants\", { id: id, data: data, date: dateTime })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function update_events(Type, Eventdata, maincode) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateevents\", {\r\n        Type: Type,\r\n        Eventdata: Eventdata,\r\n        maincode: maincode,\r\n        date: dateTime\r\n      })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function uploadfiletoalbum(Album, MainCode) {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dateTime = date + ' ' + time;\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/addalbum\", {\r\n        Album: Album, _id: MainCode, date: dateTime\r\n      })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function deleteInvite(MainCode) {\r\n\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/delete\", {\r\n        maincode: MainCode,\r\n      })\r\n      .then(async (res) => {\r\n        dispatch(GetInvitations());\r\n        dispatch(GetEvents());\r\n        history.push('/inv')\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function UpdateSchedules(eid, Schedule) {\r\n\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateSchedule\", {\r\n        eid: eid, Schedule: Schedule,\r\n      })\r\n      .then(async (res) => {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n      });\r\n  };\r\n}\r\nexport function UpdateAlbum(eid, Schedule) {\r\n\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateAlbum\", {\r\n        eid: eid, Schedule: Schedule,\r\n      })\r\n      .then(async (res) => {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n      });\r\n  };\r\n}\r\nexport function UpdateStory(eid, Schedule) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/updateStory\", {\r\n        eid: eid, Schedule: Schedule,\r\n      })\r\n      .then(async (res) => {\r\n        await dispatch(GetInvitations());\r\n        await dispatch(GetEvents());\r\n\r\n      });\r\n  };\r\n}","C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\NotificationFunctions.js",["2206"],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js",["2207"],"C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\ChatWidget.js",["2208"],"import React from 'react';\r\nimport \"./styles.css\"\r\nimport { FaWhatsapp } from 'react-icons/fa'\r\n\r\nexport default function ChatWidget() {\r\n    return (\r\n        <div className=\"zap_widget\">\r\n            <a className=\"blantershow-chat\" title=\"Show Chat\" href=\"https://api.whatsapp.com/send?phone=919873971865&text=Hii%21%20There.\"><i className=\"fab fa-whatsapp\" />Contact Us</a>\r\n        </div>\r\n    )\r\n}","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\AboutBanner.js",["2209","2210","2211","2212"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport DanceIcon from \"../../Assets/DanceIcon.png\"\r\nimport Swiper from \"react-id-swiper\";\r\nimport HappyIcon from \"../../Assets/Group 4317.png\"\r\nimport celebrateslide from \"../../Assets/celebrateslide.jpg\"\r\nimport birthdayslide from \"../../Assets/birthdayslide.jpg\"\r\n\r\n\r\nexport default function AboutBanner() {\r\n  return (\r\n    <Swiper>\r\n      <div className=\"personal_area py-75\" style={{ marginTop: 20 }}>\r\n        <div className=\"container\">\r\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\r\n            <div className=\"item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    src={celebrateslide}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\" font-weight-bold\">Personal Events</h2>\r\n                  <p className=\"text-secondary\">\r\n                  Invite your guests now digitally on a DIY Platform with no\r\n                      hassle and also share your excitement by bringing them on\r\n                      the same platform, with lot more features to keep them all\r\n                      engaged. You can also share your memories/album with all\r\n                      the guests at a go and keep them all updated\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"personal_area py-75\">\r\n        <div className=\"container\">\r\n          <div className=\"owl-carousel owl-theme owlPresonalArea\">\r\n            <div className=\"item\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    src={birthdayslide}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\"font-weight-bold\">Video Conferencing</h2>\r\n                  <p className=\"text-secondary\">\r\n                  Excited about your child birthday? Now share your excitement with all your guests digitally. A smart tracker for RSVP and managing your guests. Also, keep your memories with you forever with digital albums. \r\n<br /><br />\r\n<span style={{textAlign:\"center\"}}>Create Invite Now!😊</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Swiper>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\CompanySlide.js",["2213"],"import React from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\nimport BrandImage from \"../../Assets/resources/brand-1-1.png\";\r\nimport './styles.css'\r\nimport ZoomIcon from \"../../Assets/logo_zoom.png\";\r\n\r\n\r\nexport default function CompanySlide() {\r\n  const params = {\r\n    speed: 1000,\r\n    spaceBetween: 100,\r\n    autoplay: {\r\n      delay: 3000,\r\n      disableOnInteraction: false,\r\n    },\r\n    slidesPerView: 5,\r\n    rebuildOnUpdate: true,\r\n    // Responsive breakpoints\r\n    breakpoints: {\r\n      0: {\r\n        spaceBetween: 30,\r\n        slidesPerView: 2,\r\n      },\r\n      767: {\r\n        spaceBetween: 30,\r\n        slidesPerView: 3,\r\n      },\r\n      991: {\r\n        spaceBetween: 50,\r\n        slidesPerView: 4,\r\n      },\r\n      1499: {\r\n        slidesPerView: 5,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"brand-one\">\r\n\r\n      <Swiper className=\"brand-one__carousel\" {...params}>\r\n        <div>\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n        <div >\r\n          <img src={BrandImage} alt=\"\" />\r\n        </div>\r\n      </Swiper>\r\n\r\n    </section>\r\n  )\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Features.js",["2214","2215","2216","2217"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport PeopleIcon from \"../../Assets/PeopleIcon.png\"\r\nimport RSVPIcon from \"../../Assets/RSVPIcon.png\"\r\nimport LocationIcon from \"../../Assets/LocationIcon.png\"\r\nimport MobileIcon from \"../../Assets/MobileIcon.png\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nexport default function Features() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: 25 }}>\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 mb-4\">\r\n          <h2 className=\"font-weight-bold text-color text-center mb-0 our_feature\">\r\n            Our Features\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={MobileIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">No App Required</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={PeopleIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">Unlimited Guests</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={RSVPIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">RSVP</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-6\">\r\n          <div className=\"feature_item\">\r\n            <img\r\n              src={LocationIcon}\r\n              alt=\"img\"\r\n              className=\"img-fluid\"\r\n              style={{ height: 'auto' }}\r\n            />\r\n            <p className=\"text-color mt-3 mb-0 text-center\">Schedule Location</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 text-center mt-5\">\r\n          <button className=\"feature_btn\" onClick={() => {\r\n            toggleShowPopup(true);\r\n          }}>Create an Invite</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Additionals.js",["2218","2219","2220","2221","2222","2223"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport PictureIcon from \"../../Assets/PictureIcon.png\"\r\nimport EngageIcon from \"../../Assets/EngageIcon.png\"\r\nimport AlbumsIcon from \"../../Assets/AlbumsIcon.png\"\r\nimport CustomIcon from \"../../Assets/CustomIcon.png\"\r\nimport PrivateIcon from \"../../Assets/PrivateIcon.png\"\r\nimport InviteIcon from \"../../Assets/InviteIcon.png\"\r\nimport EasyIcon from \"../../Assets/EasyIcon.png\"\r\nimport DestinIcon from \"../../Assets/DestinIcon.png\"\r\nimport MobilePro from \"../../Assets/MobilePro.png\"\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\n\r\nexport default function Additionals() {\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"additional_part py-75\">\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={LoginSignup}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 mb-4\">\r\n                <h2 className=\"font-weight-bold text-color text-left mb-0\">\r\n                  Additionals\r\n                </h2>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={PictureIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Pictures and Videos</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={EngageIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Engagement</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={AlbumsIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Albums</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={CustomIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Customize</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={PrivateIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Private / Secure</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={InviteIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Invite at GO</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={EasyIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">\r\n                    Easy to create in 5 Minutes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3 col-6\">\r\n                <div className=\"addition_item\">\r\n                  <img\r\n                    src={DestinIcon}\r\n                    alt=\"img\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <p className=\"text-color mt-2 mb-2\">Destination Event</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 text-left\">\r\n                <button className=\"addition_btn\" onClick={() => {\r\n                  toggleShowPopup(true);\r\n                }}>Create an Invite</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"Additionals_img\">\r\n              <img\r\n                src={MobilePro}\r\n                className=\"img-fluid\"\r\n                alt=\"img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\ContactUs.js",["2224","2225"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport ContactImg from \"../../Assets/ContactImg.png\";\r\nimport { db } from \"./Firebase\";\r\n\r\nconst ContactUs = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    db.collection(\"contacts\")\r\n      .add({\r\n        name: name,\r\n        email: email,\r\n        message: message,\r\n      })\r\n      .then(() => {\r\n        setLoader(false);\r\n        alert(\"Your message has been submitted👍\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n        setLoader(false);\r\n      });\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact_us py-75\" style={{ marginTop: 50 }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 align-self-end\">\r\n            <img src={ContactImg} alt=\"img\" className=\"img-fluid\" />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h2 className=\"font-weight-bold mb-4\">Contact Us</h2>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Name\"\r\n                >\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"form-control contact_field\"\r\n                  value={name}\r\n                  placeholder=\"Enter your Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Email\"\r\n                >\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"form-control contact_field\"\r\n                  value={email}\r\n                  placeholder=\"Enter your Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mb-4\">\r\n                <label\r\n                  className=\"font-weight-bold text-black-50\"\r\n                  htmlFor=\"Message\"\r\n                >\r\n                  Message\r\n                </label>\r\n                <textarea\r\n                  rows={5}\r\n                  className=\"form-control contact_field\"\r\n                  value={message}\r\n                  placeholder=\"Enter your Message\"\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 py-2 rounded-pill mt-3\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Footer.js",["2226","2227","2228","2229","2230"],"C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Testimonials.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\MainBanner.js",["2231","2232","2233","2234","2235","2236","2237"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Button, Form, Image, Col } from \"react-bootstrap\";\r\nimport Logo from \"../../Assets/LightLogo.png\";\r\n\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport history from \"../../Utils/History\";\r\nimport { loginuser } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport LoginSignup from \"../Auth/LoginSignup\";\r\nimport Swiper, { Autoplay } from \"react-id-swiper\";\r\nimport SecondSlide from \"../../Assets/SecondSlide.png\";\r\nimport DancingImg from \"../../Assets/DancingImg.jpg\";\r\nimport DarkLogo from \"../../Assets/DarkLogo.png\";\r\nimport { Provider, LikeButton } from \"@lyket/react\";\r\n\r\n\r\nexport default function MainBanner() {\r\n  const loop = {\r\n    loop: true,\r\n    Autoplay: {\r\n      delay: 3000,\r\n      slidesPerView:1,\r\n      autoplayDisableOnInteraction: false\r\n    },\r\n   \r\n  };\r\n\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let ischeck = reactLocalStorage.get(\"isLoggedIn\");\r\n    let Phone = reactLocalStorage.get(\"Phone\");\r\n    // let Token = reactLocalStorage.get(\"Token\", true);\r\n    if (ischeck === false || ischeck === undefined || ischeck === \"\") {\r\n      console.log(\"push\");\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"loginuser\");\r\n      dispatch(loginuser(Phone));\r\n    }\r\n  }, []);\r\n  return (\r\n    <Swiper {...loop}>\r\n      {/* Slider One */}\r\n      <Container fluid className=\"wrapper\">\r\n        <Popup\r\n          toggleShowPopup={toggleShowPopup}\r\n          showPopup={showPopup}\r\n          component={LoginSignup}\r\n        />\r\n        <Row>\r\n          <img src={Logo} style={{ margin: \"auto\" }} />\r\n        </Row>\r\n        <Container className=\"header_containmain\">\r\n          <Row>\r\n            <h3 className=\"header_heading\" style={{ marginTop: \"auto\" }}>\r\n              A Smarter way to invite\r\n            </h3>\r\n          </Row>\r\n          <Row style={{ marginTop: 10 }}>\r\n            <p className=\"header_slogan\">\r\n              Invite people to celebrate your occasion\r\n            </p>\r\n          </Row>\r\n          <Row\r\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}\r\n          >\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Working on it\"\r\n              className=\"phonenumber_text\"\r\n              disabled\r\n            />\r\n          </Row>\r\n          <Row style={{ marginTop: 13 }}>\r\n            <Button\r\n              variant=\"primary mobile_numberbtn\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Try Now\r\n            </Button>\r\n          </Row>\r\n          <Row className=\"row_down\">\r\n            <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\r\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\r\n            </Provider>\r\n            <div className=\"addthis_inline_share_toolbox\">\r\n            </div>\r\n          </Row>\r\n          <Row className=\"alignthat_btnh\">\r\n            <Button\r\n              variant=\"light mybutton_here\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Login / Signup\r\n            </Button>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n\r\n      {/*  Slider two */}\r\n      <Container fluid className=\"wrapper second_slide\">\r\n        <Popup\r\n          toggleShowPopup={toggleShowPopup}\r\n          showPopup={showPopup}\r\n          component={LoginSignup}\r\n        />\r\n        <Row>\r\n          <Col style={{display: 'flex', justifyContent: \"center\"}}>\r\n            <img src={DarkLogo} style={{ margin: \"auto\" }} />\r\n          </Col>\r\n        </Row>\r\n        <Container className=\"header_slidertwo\">\r\n          <Row>\r\n            <h3 className=\"secondslide_heading\">\r\n              Multiple <br />\r\n              Events\r\n            </h3>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"secondslide_par\">\r\n              Manage Multiple Events Simultaneously\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <Image src={SecondSlide} className=\"image_secondslide\" />\r\n          </Row>\r\n          <Row style={{ marginTop: 20 }}>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Working on it\"\r\n              className=\"phonenumber_text\"\r\n              disabled\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              variant=\"primary slide_numberbtn\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Try Now\r\n            </Button>\r\n          </Row>\r\n\r\n          <Row className=\"row_down\">\r\n          <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\r\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\r\n            </Provider>\r\n            <div className=\"addthis_inline_share_toolbox\"></div>\r\n          </Row>\r\n          <Row className=\"alignthat_btnh\">\r\n            <Button\r\n              variant=\"light mybutton_here\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Login / Signup\r\n            </Button>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n\r\n      {/*  Slider 3 */}\r\n      <Container fluid className=\"wrapper third_slide\">\r\n        <Popup\r\n          toggleShowPopup={toggleShowPopup}\r\n          showPopup={showPopup}\r\n          component={LoginSignup}\r\n        />\r\n        <Row>\r\n        <Col style={{display: 'flex', justifyContent: \"center\"}}>\r\n            <img src={DarkLogo} style={{ margin: \"auto\" }} />\r\n          </Col>\r\n        </Row>\r\n        <Container style={{ float: \"right\" }}>\r\n          <Row>\r\n            <h3 className=\"secondslide_heading\">\r\n              Video <br />\r\n              Invitation\r\n            </h3>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"secondslide_par\">\r\n              Invite people to celebrate your occasion online via Zoom or Meet\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            {\" \"}\r\n            <p className=\"thirdslide_extra\">Unlimited Timeless Conferencing*</p>\r\n          </Row>\r\n\r\n          <Row style={{ marginTop: 20 }}>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Working on it\"\r\n              className=\"phonenumber_text\"\r\n              disabled\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              variant=\"primary slide_numberbtn\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Try Now\r\n            </Button>\r\n          </Row>\r\n          <Row className=\"row_down\">\r\n          <Provider apiKey=\"acc0dbccce8e557db5ebbe6d605aaa\">\r\n              <LikeButton namespace=\"testing-react\"  id=\"how-to-reduce-footprint\" totalLikes=\"number\" />\r\n            </Provider>\r\n            <div className=\"addthis_inline_share_toolbox\"></div>\r\n          </Row>\r\n\r\n          <Row className=\"alignthat_btnh\">\r\n            <Button\r\n              variant=\"light mybutton_here\"\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            >\r\n              Login/Signup\r\n            </Button>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    </Swiper>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Utils\\FileUpload_Download.js",["2238"],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Header\\Header.js",["2239","2240","2241"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Header.css\";\r\nimport Headings from \"../../../Utils/Headings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { logout } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notification from \"../../Notifications/Notification\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport history from '../../../Utils/History'\r\nimport UserProfile from \"../../../Components/UserPorfile/UserProfile\";\r\nexport default function Header(props) {\r\n  const dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  useEffect(() => {\r\n    if (Auth.isExpired === true) {\r\n      dispatch(logout());\r\n    }\r\n  }, [Auth.isExpired]);\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton\r\n          aria-label=\"show 4 new mails\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n          onClick={() => { setuserInfopopup(true); }}\r\n        >\r\n          {Auth.Profile === \"\" ? (\r\n            <AccountCircle />\r\n          ) : (\r\n            <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n          )}\r\n        </IconButton>\r\n        <span className=\"menu-option\">Profile</span>\r\n      </MenuItem>\r\n      {props.showextra === true ? (\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleMenuClose(true);\r\n            toggleShowPopup(true);\r\n          }}\r\n        >\r\n          <IconButton\r\n            aria-label=\"show 4 new mails\"\r\n            color=\"inherit\"\r\n            className=\"p-0\"\r\n          >\r\n            <NotificationsIcon />\r\n          </IconButton>\r\n          <span className=\"menu-option\">Notification</span>\r\n        </MenuItem>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <SearchIcon className=\"search-button\" />\r\n        </IconButton>\r\n        <p>Search</p>\r\n      </MenuItem> */}\r\n      <MenuItem\r\n        onClick={(e) => {\r\n          handleProfileMenuOpen(e);\r\n          dispatch(logout());\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          <PowerSettingsNewIcon color=\"secondary\" className=\"search-button\" />\r\n        </IconButton>\r\n        <span className=\"menu-option\">Logout</span>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={props.ismobile !== undefined ? props.ismobile : \"grow\"}>\r\n      <Popup\r\n        component={UserProfile}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n\r\n      />\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"menuButton\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            {/* <MenuIcon /> */}\r\n          </IconButton>\r\n\r\n          <Headings url={props.url} />\r\n\r\n          <InputBase\r\n            className=\"inputRoot inputInput\"\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n\r\n          <div className=\"grow\" />\r\n          <div className=\"sectionDesktop\">\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <SearchIcon className=\"search-button\" />\r\n            </IconButton> */}\r\n            {Auth.isLoggedIn === true ? (\r\n              <>\r\n\r\n\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                  onClick={() => { setuserInfopopup(true); }}\r\n                >\r\n                  {Auth.Profile === \"\" ? (\r\n                    <AccountCircle />\r\n                  ) : (\r\n                    <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n                  )}\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"show 4 new mails\"\r\n                  color=\"inherit\"\r\n                  className=\"Nav-icon\"\r\n                  onClick={() => {\r\n                    dispatch(logout());\r\n                  }}\r\n                >\r\n                  <PowerSettingsNewIcon color=\"secondary\" />\r\n                </IconButton>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"sectionMobile\">\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {Auth.isLoggedIn === true ? renderMobileMenu : <></>}\r\n      {Auth.isLoggedIn === true ? renderMenu : <></>}\r\n      <Popup\r\n        toggleShowPopup={toggleShowPopup}\r\n        showPopup={showPopup}\r\n        component={Notification}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\NavMobile\\NavMobile.js",["2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2252","2253","2254","2255","2256","2257","2258","2259","2260"],"import React, { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { MdEvent } from \"react-icons/md\";\r\nimport { IoImagesSharp, IoPowerSharp } from \"react-icons/io5\";\r\nimport { GoBook } from \"react-icons/go\";\r\nimport { GrGallery } from \"react-icons/gr\";\r\nimport { BiNews, BiHomeAlt, BiPhotoAlbum } from \"react-icons/bi\";\r\nimport { AiOutlineBell } from \"react-icons/ai\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport \"./NavMobile.css\";\r\nimport { Container, Row, Col, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { BiChevronDown } from \"react-icons/bi\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport Notifications from \"../../Notifications/Notification\";\r\nexport default function NavMobile(props) {\r\n  const [show, setshow] = useState(false);\r\n  const [maincode, setmaincode] = useState(\"\");\r\n  const [eventcode, seteventcode] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [ishost, setishost] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      props.Eventdata[0].Host.map((host) => {\r\n        if (host === Auth.Phone) {\r\n          setishost(true);\r\n        }\r\n      });\r\n      console.log(props.Eventdata[0].Host);\r\n    }\r\n  }, [props.Eventdata]);\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg=\"light\"\r\n        variant=\"light\"\r\n        style={{\r\n          position: \"fixed\",\r\n          left: 0,\r\n          bottom: 0,\r\n          width: \"100vw\",\r\n          zIndex: 255\r\n\r\n        }}\r\n        className=\"deskhide-nav\"\r\n      >\r\n        <Nav\r\n          style={{\r\n            margin: \"auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            columnGap: \"23px\",\r\n            height: '4.5vh'\r\n          }}\r\n          className=\"navigation_mobile\"\r\n        >\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + '/eventpage/' + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiHomeAlt size={25} className=\"reacticons_align\" />\r\n            <p className=\"mobilebar_text\">Home</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + '/albums/' + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiPhotoAlbum size={25} />\r\n            <p className=\"mobilebar_text\">Gallery</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + '/eventpage/' + \"feed/\" + props.id + \"/\" + props.MainCode);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BiNews size={25} />\r\n            <p className=\"mobilebar_text\">Feed</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              setshow(true);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <AiOutlineBell size={25} style={{ marginLeft: '8px' }} />\r\n            <p className=\"mobilebar_text_notif\">Notifications</p>\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              history.push(\"/\" + props.base + \"/more/\" + props.id);\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <BsThreeDots size={25} />\r\n            <p className=\"mobilebar_text\">More</p>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={props.MainCode}\r\n        showinvitaions={true}\r\n        eventcode={eventcode}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserDatajustUrl.js",["2261","2262","2263","2264","2265"],"import React, { useState, useEffect } from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getuserdata } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { url } from \"../../../Utils/Config\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function UserDataUrl(props) {\r\n  const [User, setUser] = useState({});\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (props.Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            setUser(res.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (props.Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            setUser(res.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, [props.Phone]);\r\n  return (\r\n    <>\r\n      {props.showIcon === true ? (\r\n        User.Pic !== undefined && User.Pic !== \"\" ? (\r\n          <Avatar alt=\"Profile Picture\" src={User.Pic} />\r\n        ) : (\r\n          <AccountCircle style={{ height: \"40px\", width: \"40px\" }} />\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showName && props.showName === true ? (\r\n        <span className=\"name\">\r\n          {User.Name === undefined || User.Name === \"\"\r\n            ? props.Phone\r\n            : User.Name}\r\n        </span>\r\n      ) : (\r\n        <span className=\"name\"></span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\DesktopNav\\DesktopNav.js",["2266","2267","2268","2269","2270","2271"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IoChatbubbleEllipsesOutline } from \"react-icons/io5\";\r\nimport { BiNews } from \"react-icons/bi\";\r\nimport { AiOutlineBell } from \"react-icons/ai\";\r\nimport { Container, Row, Col, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport Notifications from \"../../Notifications/Notification\";\r\nimport { GoBook } from \"react-icons/go\";\r\nimport { IoImagesSharp, IoPowerSharp } from \"react-icons/io5\";\r\nimport { deleteInvite } from '../../../Redux/DispatchFuncitons/Eventfunctions'\r\n\r\nexport default function DesktopNav(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const useStyles = makeStyles({});\r\n  const [ishost, setishost] = useState(false);\r\n  const [show, setshow] = useState(false);\r\n  useEffect(() => {\r\n    if (props.Eventdata && props.Eventdata.length > 0) {\r\n      console.log(props.Eventdata)\r\n      var Host = props.Eventdata[0].Host;\r\n      for (var i = 0; i < Host.length; i++) {\r\n        if (Host[i] === Auth.Phone) {\r\n          setishost(true);\r\n        }\r\n      }\r\n    }\r\n    console.log(props.base);\r\n  }, [props.Eventdata]);\r\n\r\n  return (\r\n    <Container className=\"navigation-box\" fluid>\r\n      <Row>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            history.push(\"../albums/\" + props.id);\r\n          }}\r\n        >\r\n          <IoImagesSharp size={30} />\r\n          <a>Album</a>\r\n        </Col>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            history.push(\"./feed/\" + props.id + \"/\" + props.MainCode);\r\n          }}\r\n        >\r\n          <BiNews size={30} />\r\n          Feed\r\n        </Col>\r\n        <Col\r\n          md={2}\r\n          className=\"tac\"\r\n          onClick={() => {\r\n            setshow(true);\r\n          }}\r\n        >\r\n          <AiOutlineBell size={30} />\r\n          Notifications\r\n        </Col>\r\n        <Col md={2} className=\"tac\">\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"More\">\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/\" + props.base + \"/story/\" + props.id);\r\n              }}\r\n            >\r\n              Our Story\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/\" + props.base + \"/albums/\" + props.id);\r\n              }}\r\n            >\r\n              Albums\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              onClick={() => {\r\n                dispatch(deleteInvite(props.Eventdata[0].MainCode))\r\n              }}\r\n            >\r\n              Delete Invite\r\n            </Dropdown.Item>\r\n            {ishost === true ? (\r\n\r\n              <Dropdown.Item\r\n                as=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/MyEvents/admin/\" + props.id);\r\n                }}\r\n              >\r\n                Admin\r\n              </Dropdown.Item>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </DropdownButton>\r\n        </Col>\r\n      </Row>\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={props.MainCode}\r\n        showinvitaions={true}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js",["2272","2273"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function EventNameBox(props) {\r\n  const handleClick = (index) => {\r\n    props.SelectEvent(index);\r\n  };\r\n  const [rdata, setData] = useState(props.data);\r\n\r\n  useEffect(() => {\r\n    setData(props.data);\r\n  }, [props.data, props.SelectedEvent]);\r\n\r\n  return (\r\n    <Grid container spacing={1} className=\"eventslider\">\r\n      {rdata.map((d, index) => (\r\n        <Grid\r\n          item\r\n          xs={12 / rdata.length}\r\n          sm={12 / rdata.length}\r\n          md={12 / rdata.length}\r\n          key={index + \"k\"}\r\n        >\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={() => {\r\n              handleClick(index);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={\r\n              props.SelectedEvent === index\r\n                ? \"event-buttons current\"\r\n                : \"event-buttons \"\r\n            }\r\n          >\r\n            {d.Name === \"\" ? \"Event \" + (index + 1) : d.Name}\r\n          </Button>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Auth\\LoginSignup.js",["2274"],"C:\\Projects\\MobillyInvite\\src\\Components\\HomePage\\Firebase.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Places.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Popups\\Popup.js",[],"C:\\Projects\\MobillyInvite\\src\\Utils\\Config.js",[],"C:\\Projects\\MobillyInvite\\src\\Utils\\Headings.js",["2275"],"// import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"../Assets/Logo.svg\";\r\nimport history from \"./History\";\r\nimport MobileLogo from \"../Assets/MobileLogo.png\"\r\nexport default function Headings(props) {\r\n  // const [url, seturl] = useState(\"\");\r\n  // useEffect(() => {\r\n  //   let urlstr = props.url.split(\"/\");\r\n  //   seturl(urlstr[1]);\r\n  // }, []);\r\n\r\n  return (\r\n    <span className=\"black-t title-name\">\r\n      <img\r\n        src={MobileLogo}\r\n        className=\"Logo\"\r\n        alt=\"logo\"\r\n        width=\"30\"\r\n        height=\"30\"\r\n        onClick={() => history.push(\"/home\")}\r\n      />\r\n    </span>\r\n  );\r\n\r\n  //return <span className=\"black-t\">{props.url}123</span>;\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\timer\\timer.js",["2276","2277"],"import React, { useState, useEffect } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nexport default function Timer(props) {\r\n  const [datetimer, setdatetime] = useState(Date.now() + 60000);\r\n\r\n  const renderer = ({ hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      props.settodo(1);\r\n      return <></>;\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <>\r\n          OTP will expire in : {hours}:{minutes}:{seconds}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return <Countdown date={datetimer} renderer={renderer} />;\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Utils\\Login.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\CodeFunctions.js",["2278","2279","2280"],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\NotificationAction.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\AuthActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\PostActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\EventActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\ChatActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\Addtoalbum.js",["2281","2282","2283","2284","2285","2286","2287"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../Assets/ChooseFromGallery.svg\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"../AddEvent/Extras/Extras.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"../Helpers/Popups/Popup.css\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { uploadString } from '../../Utils/FileUpload_Download'\r\nimport { uploadfiletoalbum } from '../../Redux/DispatchFuncitons/Eventfunctions'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nexport default function Addtoalbum(props) {\r\n    const dispatch = useDispatch();\r\n    const [album, setAlbum] = useState();\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        let bkpalbum = [];\r\n        let filetype = [];\r\n\r\n        for (let i = 0; i < acceptedFiles.length; i++) {\r\n            if (acceptedFiles[i].size > 5259265) {\r\n            } else {\r\n                let type = acceptedFiles[i].type.split(\"/\");\r\n                type = type[1];\r\n                await getBase64(acceptedFiles[i]).then(async (data) => {\r\n                    await bkpalbum.push({ file: data, type: type });\r\n                    await filetype.push(type);\r\n                });\r\n            }\r\n        }\r\n        await setAlbum([...bkpalbum]);\r\n        return true;\r\n    }, []);\r\n\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: \"image/jpeg, image/png, image/jpg\",\r\n    });\r\n    const cancel = () => {\r\n        setAlbum([]);\r\n    };\r\n    const deleteimage = (i) => {\r\n        let albumcpy = [...album];\r\n        albumcpy = albumcpy.filter((item, index) => i !== index);\r\n        setAlbum([...albumcpy]);\r\n    };\r\n    const save = async () => {\r\n        let albumcopy = [...props.images]\r\n        let uniqueurl =\r\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\" + \"Album/\";\r\n        for (let i = 0; i < album.length; i++) {\r\n            let newurl = await uploadString(album[i].file, uniqueurl + i + \".\" + album[i].type)\r\n            await albumcopy.push({ file: newurl, type: album[i].type })\r\n        }\r\n        console.log(albumcopy)\r\n        await dispatch(uploadfiletoalbum(albumcopy, props.MainCode))\r\n        props.toggleShowPopup(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"modal\"\r\n                open={props.showPopup}\r\n            >\r\n                <div className=\"modal-card\">\r\n                    <IconButton\r\n                        className=\"popup-close\"\r\n                        onClick={() => {\r\n                            props.toggleShowPopup(false);\r\n                        }}\r\n                    >\r\n                        <CancelIcon color=\"secondary\" fontSize=\"large\" />\r\n                    </IconButton>\r\n\r\n                    <div {...getRootProps()} style={{ width: '100%' }}>\r\n                        <input {...getInputProps()} />\r\n                        <img src={Gallery} className=\"w-100 uploadhere\" />\r\n                    </div>\r\n                    <Grid item xs={12} className=\"ofh view\">\r\n                        <Grid container spacing={4}>\r\n                            {album && album.length > 0\r\n                                ? album.map((image, index) => (\r\n                                    <Grid item xs={4} md={2} key={\"img\" + index}>\r\n                                        <CancelIcon\r\n                                            onClick={() => {\r\n                                                deleteimage(index);\r\n                                            }}\r\n                                            color=\"secondary\"\r\n                                            className=\"delete-img\"\r\n                                        />\r\n                                        <img src={image.file} className=\"w-100 preview\" />\r\n                                    </Grid>\r\n                                ))\r\n                                : Array.from({ length: 30 }, (value, key) => (\r\n                                    <Grid\r\n                                        item\r\n                                        xs={2}\r\n                                        md={1}\r\n                                        key={\"img\" + key}\r\n                                        className=\"w-100 preview grey m-5px\"\r\n                                    ></Grid>\r\n                                ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} className=\"submit jcc\">\r\n                        <button\r\n                            onClick={() => {\r\n                                save();\r\n                            }}\r\n                            className=\"add-album  \"\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </Grid>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\AddPost.js",["2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zoomicon from \"../../Assets/zoomicon.png\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { IoCameraOutline } from \"react-icons/io5\";\r\nimport { FaTag } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { InputTags } from \"react-bootstrap-tagsinput\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport history from \"../../Utils/History\";\r\nimport FeedComments from \"./FeedComments\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Media from \"./Media\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport AddTags from \"./AddTags\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport {\r\n    GetEvents,\r\n    GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function AddPost(props) {\r\n    const Auth = useSelector((state) => state.Auth);\r\n\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        if (acceptedFiles[0].size > 5259265) {\r\n            alert(\"Max file size 5mb\");\r\n            return false;\r\n        }\r\n        let url = \"\";\r\n        let ftype = acceptedFiles[0].type.split(\"/\");\r\n        console.log(ftype)\r\n        props.settype(ftype[0]);\r\n        var reader = await new FileReader();\r\n        reader.onload = async function () {\r\n            url = reader.result;\r\n            props.setimageurl(url);\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log(\"Error: \", error);\r\n        };\r\n        await reader.readAsDataURL(acceptedFiles[0]);\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        multiple: false,\r\n        accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n    });\r\n\r\n    return (\r\n        <Container\r\n            className=\"addpost-event  \"\r\n            style={{ marginTop: 10, marginBottom: 10 }}\r\n            fluid\r\n        >\r\n            <Row className=\"commentinp\">\r\n                <Col xs={2} md={1}>\r\n                    <UserData Phone={Auth.Phone} showIcon={true} />\r\n                </Col>\r\n                <Col xs={8} md={10}>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            props.setcaption(e.target.value);\r\n                        }}\r\n                        value={props.caption}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"w-100\"\r\n                        placeholder=\"Add comment\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            outline: \"none\",\r\n                            border: \"none\",\r\n                            background: \"#f6f6f6\",\r\n                            height: \"100%\",\r\n                            fontSize: 14,\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col xs={2} md={1}>\r\n                    {props.isSubmit === false ? (\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                props.submit();\r\n                            }}\r\n                        >\r\n                            <SendIcon style={{ color: \"black\" }} />\r\n                        </IconButton>\r\n                    ) : (\r\n                        <IconButton>\r\n                            <CircularProgress style={{ color: \"black\" }} />\r\n                        </IconButton>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"addmedia-tag\" style={{ marginTop: 20 }}>\r\n                <Col className=\"btn t-blue ll-blue btn-rnd m-5px\" {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <a style={{ color: \"#007bff\" }}>\r\n                        <IoCameraOutline size={20} /> Add Media\r\n                    </a>\r\n                </Col>\r\n                <Col className=\"btn t-blue ll-blue btn-rnd m-5px\">\r\n                    <a\r\n                        style={{ color: \"#007bff\" }}\r\n                        onClick={() => {\r\n                            props.setShowTagQuery(true);\r\n                        }}\r\n                    >\r\n                        <FaTag size={17} /> Tag\r\n                    </a>\r\n                    {/* )} */}\r\n                </Col>\r\n            </Row>\r\n            {props.imageurl !== \"\" ? (\r\n                props.type !== \"mp4\" ? (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <img\r\n                                    src={props.imageurl}\r\n                                    className=\"w-100\"\r\n                                    style={{ height: \"30vh\" }}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    <Row>\r\n                        <center>\r\n                            <video\r\n                                src={props.imageurl}\r\n                                type=\"video/mp4\"\r\n                                controls={true}\r\n                                preload=\"none\"\r\n                                height={260}\r\n                                width={window.innerWidth > 400 ? 800 : window.innerWidth}\r\n                                autoPlay=\"true\"\r\n                            />\r\n                        </center>\r\n                    </Row>\r\n                )\r\n\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\AddTags.js",["2324","2325","2326","2327","2328"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport './Feed.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\nexport default function AddTags(props) {\r\n    const [Tags, setTags] = useState(props.url)\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        setTags([...props.url])\r\n        console.log(props.MainCode)\r\n    }, [props.url])\r\n\r\n    const addTags = (data) => {\r\n        setTags([...Tags, data])\r\n    }\r\n    const removeTags = (data) => {\r\n        let Tagscpy = [...Tags];\r\n        Tagscpy = Tagscpy.filter((tag) => {\r\n            return data != tag;\r\n        });\r\n        setTags([...Tagscpy])\r\n    }\r\n\r\n    return (\r\n        <div><h3>Add Tags</h3>\r\n\r\n            <List className={classes.root}>\r\n                {props.MainCode.map(Participant => (\r\n                    <ListItem alignItems=\"flex-start\" className={Tags.includes(Participant) ? \"selected m-5px\" : \"m-5px\"}\r\n                        onClick={() => { Tags.includes(Participant) ? removeTags(Participant) : addTags(Participant) }}>\r\n                        <ListItemAvatar>\r\n                            <UserDataUrl showIcon={true} Phone={Participant} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={<UserDataUrl showName={true} Phone={Participant} />}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n\r\n                                    </Typography>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                ))}\r\n\r\n\r\n            </List>\r\n            <button className=\"btn btn-primary\" onClick={() => { props.showall([...Tags]); props.hide(false) }}\r\n            style={{ width: \"100%\", borderRadius: 20 }}>\r\n                Save\r\n            </button>\r\n        </div >\r\n    );\r\n}","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Posts.js",["2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360"],"\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../Feed/Feed.css\";\r\nimport Header from \"../Helpers/Header/Header.js\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zoomicon from \"../../Assets/zoomicon.png\";\r\nimport UserData from \"../Helpers/UserData/UserData\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { IoCameraOutline } from \"react-icons/io5\";\r\nimport { FaTag } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { addpost, likepost } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { InputTags } from \"react-bootstrap-tagsinput\";\r\nimport \"react-bootstrap-tagsinput/dist/index.css\";\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { FcLikePlaceholder } from \"react-icons/fc\";\r\nimport history from \"../../Utils/History\";\r\nimport FeedComments from \"./FeedComments\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Media from \"./Media\";\r\nimport NavMobile from \"../Helpers/NavMobile/NavMobile\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport AddTags from \"./AddTags\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport {\r\n    GetEvents,\r\n    GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function Postrender(props) {\r\n    const [Posts, setPosts] = useState([])\r\n    useEffect(() => {\r\n        if (props.filter === 'All') {\r\n            setPosts(props.data)\r\n        } else {\r\n            setPosts(props.filterdata)\r\n        }\r\n\r\n    }, [props.data, props.filter, props.filterdata])\r\n    return (\r\n        <div>\r\n            <>\r\n                {Posts.map((post, index) => (\r\n                    <Container\r\n                        className=\"main-feed \"\r\n                        style={{\r\n                            marginTop: 10,\r\n                            padding: 20,\r\n\r\n                        }}\r\n                    >\r\n                        <Row className=\"m-0\">\r\n                            <Col xs={2} md={1} fluid>\r\n                                <UserData showIcon={true} Phone={post.by} className=\"fl\" />\r\n                            </Col>\r\n                            <Col className=\"m-0 p-0\">\r\n                                <p className=\" m-5px fs-14\">\r\n                                    <b>\r\n                                        <UserDataUrl Phone={post.by} showName={true} />\r\n                                    </b>\r\n                                    {post.tags.length > 0 ? (\r\n                                        <>\r\n                                            {\" \"}\r\n                                            is with:{\" \"}\r\n                                            <b>\r\n                                                <UserDataUrl Phone={post.tags[0]} showName={true} />\r\n                                            </b>\r\n                                            {post.tags.length >= 2 ? (\r\n                                                <> and {post.tags.length - 1} other(s)</>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n                                            :\r\n                                        </>\r\n                                    ) : (\r\n                                        <></>\r\n                                    )}\r\n                                </p>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <p className=\" m-5px fs-14\">{post.caption}</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {post.fileurl !== \"\" ? (\r\n                            post.filetype === \"image\" ? (\r\n                                <Image src={post.fileurl} fluid />\r\n                            ) : (\r\n                                <center>\r\n                                    {\" \"}\r\n                                    <video\r\n                                        height=\"360\"\r\n                                        width={window.innerWidth > 500 ? 800 : window.innerWidth}\r\n                                        autoplay={false}\r\n                                        src={post.fileurl}\r\n                                        type=\"video/mp4\"\r\n                                        controls={true}\r\n                                        preload=\"none\"\r\n                                    />\r\n                                </center>\r\n                            )\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                        <Row className=\"m-0 p-0\">\r\n                            <Col xs={6} className=\"mt-10px\">\r\n                                <center>\r\n                                    <a\r\n                                        style={{ color: \"rgb(244 67 54)\" }}\r\n                                        onClick={() => {\r\n                                            props.getposts();\r\n                                        }}\r\n                                    >\r\n                                        <Like\r\n                                            index={index}\r\n                                            LikeList={post.LikeList}\r\n                                            _id={post._id}\r\n                                            getposts={props.getposts}\r\n                                            maincode={props.Maincode}\r\n                                        />\r\n                                    </a>\r\n                                </center>\r\n                            </Col>\r\n                            <Col xs={6} className=\"mt-10px\">\r\n                                <center>\r\n                                    <a\r\n                                        style={{ color: \"#007bff\" }}\r\n                                        onClick={async () => {\r\n                                            console.log(props.showcommmentforpost)\r\n                                            console.log(!props.showcommment)\r\n                                            console.log(!props.showcommment)\r\n                                            if (props.showcommmentforpost === post._id) {\r\n                                                props.setshowcommment(!props.showcommment);\r\n                                                props.setshowcommmentforpost(post._id);\r\n                                                await props.getposts();\r\n                                            } else {\r\n                                                props.setshowcommment(true);\r\n                                                props.setshowcommmentforpost(post._id);\r\n                                                await props.getposts();\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <FaRegCommentDots size={25} style={{ marginLeft: 30 }} />\r\n\r\n                                        {post.CommentList.length}\r\n                                    </a>\r\n                                </center>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Col>\r\n                            {props.showcommment === true && props.showcommmentforpost === post._id ? (\r\n                                <FeedComments\r\n                                    id={post._id}\r\n                                    getposts={props.getposts}\r\n                                    data={post.CommentList}\r\n                                    maincode={props.MainCode}\r\n                                    post={post}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </Col>\r\n                    </Container>\r\n                ))}\r\n            </>\r\n        </div>\r\n    )\r\n}\r\nexport function Like(props) {\r\n    const dispatch = useDispatch();\r\n    const Auth = useSelector((state) => state.Auth);\r\n    const [isLike, setisLike] = useState(false);\r\n    const [count, setcount] = useState(0);\r\n    useEffect(() => {\r\n        props.LikeList.map((likedata) => {\r\n            if (likedata.LikeBy === Auth.Phone) {\r\n                setisLike(true);\r\n            }\r\n        });\r\n        setcount(props.LikeList.length);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLike === false ? (\r\n                <FcLikePlaceholder\r\n                    size={30}\r\n                    onClick={async () => {\r\n                        await dispatch(likepost(props._id, Auth.Phone, props.maincode));\r\n                        await setisLike(true);\r\n                        // await props.getposts(props.maincode);\r\n                        await setcount(count + 1);\r\n                    }}\r\n                />\r\n            ) : (\r\n                <FcLike\r\n                    size={30}\r\n                    onClick={async () => {\r\n                        await dispatch(likepost(props._id, Auth.Phone, props.maincode));\r\n                        await setisLike(false);\r\n                        // await props.getposts(props.maincode);\r\n                        await setcount(count - 1);\r\n                    }}\r\n                />\r\n            )}\r\n            {count}\r\n        </>\r\n    );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\Media.js",["2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372"],"import React, { useState, useEffect } from 'react'\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport HorizontalSlider from 'react-horizontal-slider'\r\nimport './Feed.css'\r\nexport default function Media(props) {\r\n    const [currentmedia, setcurrentmedia] = useState(0);\r\n    const [allmedia, setallmedia] = useState([]);\r\n    useEffect(async () => {\r\n        let isselected = false;\r\n        for (let i = 0; i < props.currentPosts.length; i++) {\r\n            if (isselected === false) {\r\n                if (props.popuptype === \"Photo\" && props.currentPosts[i].filetype === \"image\") {\r\n                    await setcurrentmedia(i)\r\n                    console.log(props.currentPosts[i])\r\n                    console.log(i)\r\n                    isselected = true;\r\n                } else if (props.popuptype === \"Videos\" && props.currentPosts[i].filetype === \"video\") {\r\n                    await setcurrentmedia(i)\r\n                    isselected = true;\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [])\r\n    return (\r\n        <Container fluid >\r\n            <Row style={{ marginleft: 30, position: 'absolute', top: 0, zIndex: 99999 }}>\r\n                <IoArrowBackCircleOutline\r\n                    size={40}\r\n                    style={{ color: \"black\" }}\r\n                    onClick={() => props.toggleShowPopup(false)}\r\n                />\r\n                <h3 style={{ color: \"black\", fontSize: 28, fontWeight: \"900\" }}>\r\n                    {props.popuptype}\r\n                </h3>\r\n            </Row>\r\n            <Row style={{ marginTop: 0, position: 'fixed', top: 0, outline: 'none', left: 0, margin: 0 }}>\r\n                {props.currentPosts.map((post, index) => (\r\n\r\n                    post.fileurl !== \"\" && index === currentmedia ?\r\n                        (props.popuptype === \"Photo\" && post.filetype === \"image\") ?\r\n                            <img className=\"Media\" src={post.fileurl} key={index} onClick={() => { setcurrentmedia(index) }} />\r\n                            : (props.popuptype === \"Videos\" && post.filetype === \"video\") ? <>\r\n                                <video className=\"Media\" src={post.fileurl} type=\"video/mp4\"\r\n                                    controls={true} autoplay='true'\r\n                                    preload=\"none\" height={window.innerWidth - 150} width={window.innerWidth > 400 ? 800 : window.innerWidth} />\r\n                            </> :\r\n                                <></>\r\n                        : <></>\r\n\r\n\r\n                ))}\r\n\r\n            </Row>\r\n            <Row style={{ marginTop: 5, position: 'fixed', bottom: 0, overflowX: 'scroll', width: '100vw', margin: 0, left: 0 }}>\r\n                {props.currentPosts.map((post, index) => (\r\n                    post.fileurl !== \"\" ?\r\n                        (props.popuptype === \"Photo\" && post.filetype === \"image\") ?\r\n                            <img className=\"item-options\" src={post.fileurl} key={index} onClick={() => { setcurrentmedia(index) }} />\r\n                            : (props.popuptype === \"Videos\" && post.filetype === \"video\") ?\r\n                                <video className=\"item-options\" width={50} height={50} src={post.fileurl} type=\"video/mp4\"\r\n                                    autoPlay={false} preload=\"none\" onClick={() => { setcurrentmedia(index) }} />\r\n                                :\r\n                                <></>\r\n                        : <></>\r\n\r\n                ))}\r\n\r\n\r\n            </Row>\r\n\r\n        </Container >\r\n    )\r\n}","C:\\Projects\\MobillyInvite\\src\\Components\\Feed\\FeedComments.js",["2373","2374","2375","2376","2377"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport UserDataUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport { addcomments } from \"../../Redux/DispatchFuncitons/postfunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nexport default function FeedComments(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [comment, setcomment] = useState(\"\");\r\n  const [comments, setcomments] = useState([]);\r\n  const [isError, setisError] = useState(false);\r\n  const submit = async () => {\r\n    if (comment !== \"\") {\r\n      await dispatch(addcomments(props.id, Auth.Phone, comment, props.maincode));\r\n\r\n      let commentscpy = [...comments]\r\n      await commentscpy.push({ CommentBy: Auth.Phone, Comment: comment })\r\n      console.log(commentscpy)\r\n      await setcomments(commentscpy)\r\n      await setisError(false);\r\n      await setcomment(\"\")\r\n      await props.getposts(props.maincode)\r\n    } else {\r\n      setisError(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(props.data)\r\n    setcomments(props.data)\r\n  }, [props.post])\r\n\r\n  return (\r\n    <Container fluid className=\"mt-5px p-0\">\r\n      <Row className=\"commentinp\">\r\n        <Col xs={2} md={1} className=\"m-0 p-0\">\r\n          <UserDataUrl showIcon={true} Phone={Auth.Phone} />\r\n        </Col>\r\n        <Col xs={8} className=\"p-0 \">\r\n          <input\r\n            type='text'\r\n            value={comment}\r\n            onChange={(e) => setcomment(e.target.value)}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className=\"w-100\"\r\n            placeholder=\"Add comment\"\r\n            error={isError}\r\n            style={{ width: '100%', outline: 'none', border: 'none', background: '#f6f6f6', height: '100%', fontSize: 14 }}\r\n          />\r\n        </Col>\r\n        <Col xs={2} className=\"\">\r\n          <IconButton onClick={() => {\r\n            submit();\r\n          }}>\r\n            <SendIcon style={{ color: 'black' }} />\r\n          </IconButton >\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"p-5px m-5px\">\r\n        {comments &&\r\n          comments.map((cmt) => (\r\n            <Row\r\n              style={{\r\n                margin: 0,\r\n                marginTop: '10px !important',\r\n                width: '100%'\r\n              }}\r\n              md={2}\r\n            >\r\n              <Col xs={2} md={1} className=\"fs-14\">\r\n                <UserDataUrl showIcon={true} Phone={cmt.CommentBy} />\r\n              </Col>\r\n              <Col xs={10} md={9}>\r\n                <h5 className=\"m-0 p-0 fs-14\">\r\n                  <UserDataUrl showName={true} Phone={cmt.CommentBy} />\r\n                </h5>\r\n\r\n                <span className=\"t-grey fs-14\">{cmt.Comment}</span>\r\n              </Col>\r\n\r\n\r\n            </Row>\r\n          ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\UserData\\UserData.js",["2378","2379","2380"],"import React, { useState, useEffect } from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getuserdata } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { url } from \"../../../Utils/Config\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function UserData(props) {\r\n  const [User, setUser] = useState({});\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(props.Phone);\r\n    if (props.Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            console.log(res.data.user);\r\n\r\n            setUser(res.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, [props.Phone]);\r\n  return (\r\n    <div className=\"w-100\">\r\n      {props.showIcon === true ? (\r\n        User.Pic !== undefined && User.Pic !== \"\" ? (\r\n          <div className=\"fl\">\r\n            <Avatar alt=\"Profile Picture\" src={User.Pic} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"fl\">\r\n            <AccountCircle />\r\n          </div>\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showName === true ? (\r\n        <div className=\"fl  fs-bold \">{User.Name} </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\Chatbox.js",["2381","2382","2383","2384","2385","2386","2387","2388","2389","2390"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport axios from \"axios\";\r\nimport { getChats } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"96%\",\r\n    marginLeft: \"1%\",\r\n    background: \" #f5f0f0\",\r\n    borderRadius: \"500px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function Chatbox(props) {\r\n  const classes = useStyles();\r\n  const [chats, setchat] = useState([]);\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    type = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let url = props.SelectedGroup.room + \"/\" + Date.now() + \".\" + type;\r\n      // console.log(url);\r\n      let filedata = await uploadString(reader.result, url);\r\n      props.sendImage({\r\n        sender: Auth.Phone,\r\n        type: \"image\",\r\n        content: filedata,\r\n        room: props.SelectedGroup.room,\r\n        _id: props.SelectedGroup._id,\r\n      });\r\n      console.log({\r\n        sender: Auth.Phone,\r\n        type: \"image\",\r\n        content: filedata,\r\n        room: props.SelectedGroup.room,\r\n        _id: props.SelectedGroup._id,\r\n      });\r\n    };\r\n    reader.onerror = function (error) {\r\n      // console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, \",\r\n  });\r\n  useEffect(async () => {\r\n    const interval = setInterval(() => {\r\n      if (props.SelectedGroup._id !== \"\") {\r\n        getChats(props.SelectedGroup._id);\r\n      }\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  useEffect(async () => {\r\n    props.setIsSubmit(false);\r\n  }, [props.SelectedGroup.chats, props.IsSubmit]);\r\n\r\n  const getChats = (_id) => {\r\n    axios\r\n      .post(url + \"chatgroup/getchat\", { _id: _id })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        if (response.data.status === \"success\") {\r\n          setchat(response.data.chatdata);\r\n          console.log(response.data.chatdata);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n  return (\r\n    <Grid container spacing={0} className=\"h100\">\r\n      <Grid item xs={12} className=\"h7 white\">\r\n        <List className=\"p-0 m-0\">\r\n          <ListItem className=\" m-0\">\r\n            {props.fullscreen === false ? (\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.setshow(0);\r\n                }}\r\n              >\r\n                <ArrowBackIosIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {props.SelectedGroup !== \"\" ? (\r\n              props.SelectedGroup.Type === \"GRP\" ? (\r\n                <>\r\n                  <ListItemIcon>\r\n                    <Avatar src={props.SelectedGroup.GrpPhoto} />\r\n                  </ListItemIcon>\r\n                  <ListItemText>{props.SelectedGroup.Name}</ListItemText>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ListItemAvatar>\r\n                    <UserDatajustUrl\r\n                      showIcon={true}\r\n                      Phone={\r\n                        props.SelectedGroup.Name === Auth.Phone ||\r\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\r\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\r\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Admin\r\n                            : \"+91\" + props.SelectedGroup.Admin\r\n                          : typeof props.SelectedGroup.Name === \"string\" &&\r\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Name.toString()\r\n                            : \"+91\" + props.SelectedGroup.Name\r\n                      }\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText>\r\n                    <UserDatajustUrl\r\n                      showName={true}\r\n                      Phone={\r\n                        props.SelectedGroup.Name === Auth.Phone ||\r\n                          \"+91\" + props.SelectedGroup.Name === Auth.Phone\r\n                          ? typeof props.SelectedGroup.Admin === \"string\" &&\r\n                            props.SelectedGroup.Admin.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Admin\r\n                            : \"+91\" + props.SelectedGroup.Admin\r\n                          : typeof props.SelectedGroup.Name === \"string\" &&\r\n                            props.SelectedGroup.Name.toString().startsWith(\"+\")\r\n                            ? props.SelectedGroup.Name.toString()\r\n                            : \"+91\" + props.SelectedGroup.Name\r\n                      }\r\n                    />\r\n                  </ListItemText>\r\n                </>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </ListItem>\r\n        </List>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} className=\"chat\">\r\n        {chats &&\r\n          chats.map((chat) => (\r\n            <>\r\n              {chat.sender === Auth.Phone ? (\r\n                <div className=\"sender\">\r\n                  {chat.type === \"text\" ? (\r\n                    chat.content\r\n                  ) : chat.type === \"image\" ? (\r\n                    <img src={chat.content} className=\"chat-img\" />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"recieved\">\r\n                  {chat.type === \"text\" ? (\r\n                    <>\r\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\r\n                      :\r\n                      <br />\r\n                      {chat.content}\r\n                    </>\r\n                  ) : chat.type === \"image\" ? (\r\n                    <>\r\n                      <UserDatajustUrl showName={true} Phone={chat.sender} />\r\n                      :\r\n                      <br />\r\n                      <img src={chat.content} className=\"chat-img\" />\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </>\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className=\"inputbox\"\r\n        style={{ display: props.SelectedGroup !== \"\" ? \"block\" : \"none\" }}\r\n      >\r\n        <Paper\r\n          component=\"form\"\r\n          className={classes.root}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n              <AttachFileIcon className=\"tilt\" />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <InputBase\r\n            className={classes.input}\r\n            placeholder=\"hi...\"\r\n            inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            value={props.text}\r\n            onChange={(e) => {\r\n              props.settext(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Divider className={classes.divider} orientation=\"vertical\" />\r\n          <IconButton\r\n            color=\"primary\"\r\n            className={classes.iconButton}\r\n            aria-label=\"directions\"\r\n            onClick={() => {\r\n              props.submit();\r\n              props.settext(\"\");\r\n            }}\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\List.js",["2391","2392","2393","2394","2395","2396","2397"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport history from \"../../Utils/History\";\r\nimport {\r\n  Paper,\r\n  InputBase,\r\n  Tabs,\r\n  IconButton,\r\n  Tab,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport SelectParticipant from \"./SelectParticipant\";\r\nimport UserDatajustUrl from \"../Helpers/UserData/UserDatajustUrl\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabroot: {\r\n    flexGrow: 1,\r\n  },\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    borderRadius: \"500px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\nexport default function CList(props) {\r\n  const [value, setValue] = useState(0);\r\n  const AllGroups = useSelector((state) => state.Chatdata.groups);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  // console.log(Auth.Phone);\r\n  const [show, setshow] = useState(false);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const [Groups, setGroups] = useState([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    let grpcopy = [];\r\n    AllGroups.map((sgrpup) => {\r\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\r\n        grpcopy.push(sgrpup);\r\n      }\r\n    });\r\n    setGroups(grpcopy);\r\n  }, []);\r\n  useEffect(() => {\r\n    let grpcopy = [];\r\n    AllGroups.map((sgrpup) => {\r\n      if (sgrpup.room.toString().startsWith(props.MainCode)) {\r\n        grpcopy.push(sgrpup);\r\n      }\r\n    });\r\n    setGroups(grpcopy);\r\n  }, [AllGroups]);\r\n  return (\r\n    <div className=\"h100 vlgrey\">\r\n      <Grid container spacing={0} className=\"h7 white\">\r\n        <Grid item xs={10} className=\"h7 white\">\r\n          <h2 className=\"chatheadertitle\">\r\n            {/* <ArrowBackIosIcon\r\n              onClick={() => {\r\n                // console.log(props.pushto);\r\n                history.goBack();\r\n              }}\r\n            /> */}\r\n            Chat\r\n          </h2>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <AddCircleOutlineIcon\r\n            fontSize={\"large\"}\r\n            color={\"primary\"}\r\n            className=\"m-5px\"\r\n            onClick={() => {\r\n              setshow(true);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.tabroot}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Direct\" />\r\n            <Tab label=\"Group\" />\r\n          </Tabs>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search for Participants\"\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n\r\n            <IconButton\r\n              color=\"default\"\r\n              className={classes.iconButton}\r\n              aria-label=\"directions\"\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} className=\" w-90-p\">\r\n          <List>\r\n            {Groups.map((grp) => (\r\n              <ListItem\r\n                className=\" m-5px\"\r\n                onClick={() => {\r\n                  // console.log(grp);\r\n                  props.setSelectedGroup(grp);\r\n                  props.setchat(grp.chats);\r\n                  props.updateName();\r\n                  props.setshow(1);\r\n                }}\r\n              >\r\n                {value === 1 && grp.Type === \"GRP\" ? (\r\n                  <>\r\n                    <ListItemAvatar>\r\n                      <Avatar alt=\"Profile Picture\" src={grp.GrpPhoto} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={grp.Name} />\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {value === 0 && grp.Type === \"INDV\" ? (\r\n                  <>\r\n                    <ListItemAvatar>\r\n                      <UserDatajustUrl\r\n                        showIcon={true}\r\n                        Phone={\r\n                          grp.Name === Auth.Phone ||\r\n                            \"+91\" + grp.Name === Auth.Phone\r\n                            ? typeof grp.Admin === \"string\" &&\r\n                              grp.Admin.toString().startsWith(\"+\")\r\n                              ? grp.Admin\r\n                              : \"+91\" + grp.Admin\r\n                            : typeof grp.Name === \"string\" &&\r\n                              grp.Name.toString().startsWith(\"+\")\r\n                              ? grp.Name.toString()\r\n                              : \"+91\" + grp.Name\r\n                        }\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText>\r\n                      <UserDatajustUrl\r\n                        showName={true}\r\n                        Phone={\r\n                          grp.Name === Auth.Phone ||\r\n                            \"+91\" + grp.Name === Auth.Phone\r\n                            ? typeof grp.Admin === \"string\" &&\r\n                              grp.Admin.toString().startsWith(\"+\")\r\n                              ? grp.Admin\r\n                              : \"+91\" + grp.Admin\r\n                            : typeof grp.Name === \"string\" &&\r\n                              grp.Name.toString().startsWith(\"+\")\r\n                              ? grp.Name.toString()\r\n                              : \"+91\" + grp.Name\r\n                        }\r\n                      />\r\n                    </ListItemText>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Popup\r\n        component={SelectParticipant}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        url={props.allparticipants}\r\n        showall={value}\r\n        MainCode={props.MainCode}\r\n        Groups={Groups}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\CodeAction.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\InvitaionRSVP\\InvitaionRSVP.js",["2398","2399","2400","2401","2402","2403"],"import React, { useState } from \"react\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./InvitaionRSVP.css\";\r\nimport { Carousel, Button } from \"react-bootstrap\";\r\n\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { rsvp_event, GetInvitations, GetEvents } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport history from \"../../../Utils/History\";\r\nimport NavMobile from \"../../Helpers/NavMobile/NavMobile\";\r\nimport DesktopNav from \"../../Helpers/DesktopNav/DesktopNav\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport { getNotification } from '../../../Redux/DispatchFuncitons/NotificationFunctions'\r\nexport default function InvitaionRSVP(props) {\r\n  const dispatch = useDispatch();\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  const Next = async (i) => {\r\n    console.log(i, props.Eventdata.length);\r\n    if (i < props.Eventdata.length) {\r\n      props.setevno(i);\r\n      setindex(i);\r\n      setdirection(\"next\");\r\n    } else {\r\n      props.sethasallrsvps(true);\r\n      await dispatch(GetInvitations());\r\n      await dispatch(GetEvents());\r\n      await dispatch(getNotification())\r\n    }\r\n  };\r\n\r\n  const [index, setindex] = useState(0);\r\n  const [direction, setdirection] = useState(\"\");\r\n\r\n  const handleSelect = (index) => {\r\n    let newIndex = index + 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n     {/*  <div className=\"desktop-only w-100\" >\r\n        <Header className=\"desktop-only\" />\r\n      </div>\r\n      <DesktopNav id={props.id} base={props.base} />\r\n      <Toggler id={props.id} /> */}\r\n      <Carousel\r\n        controls={false}\r\n        direction={direction}\r\n        onSelect={(i) => {\r\n          handleSelect(i);\r\n        }}\r\n        activeIndex={index}\r\n        interval={99999999999999}\r\n      >\r\n        {props.Eventdata && props.Eventdata.length > 0 &&\r\n          props.Eventdata.map((eve, index) => (\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block fullimage\"\r\n                src={eve.file}\r\n                alt=\"First slide\"\r\n              />\r\n              <div className=\"rsvp-buttons\">\r\n                <center>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(rsvp_event(eve._id, \"Accept\", Auth.Phone));\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CheckIcon />\r\n                    Accept\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(rsvp_event(eve._id, \"May Be\", Auth.Phone));\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <ErrorIcon />\r\n                    Maybe\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-weddingmain\"\r\n                    onClick={async () => {\r\n                      await dispatch(\r\n                        rsvp_event(eve._id, \"Decline\", Auth.Phone)\r\n                      );\r\n                      Next(index + 1);\r\n                    }}\r\n                  >\r\n                    <CancelIcon />\r\n                    Decline\r\n                  </Button>\r\n                </center>\r\n              </div>\r\n              <Carousel.Caption></Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n      </Carousel>\r\n      {/* <NavMobile className=\"footnavmobile\" id={props.id} base={props.base} /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Invitations\\Invitation.js",["2404","2405","2406","2407","2408","2409","2410","2411","2412","2413","2414","2415","2416","2417","2418","2419","2420"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Invitations.css\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport NotificationsOffIcon from \"@material-ui/icons/NotificationsOff\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport history from \"../../Utils/History\";\r\nimport Notifications from \"../Notifications/Notification\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UserProfile from \"../UserPorfile/UserProfile\";\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nexport default function Invitation(props) {\r\n  const [data, setData] = useState(props.data);\r\n  const [show, setshow] = useState(false);\r\n  const [MainCode, setmaincode] = useState(\"\");\r\n  const Auth = useSelector(state => state.Auth)\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  useEffect(async () => {\r\n    console.log(props.data);\r\n    let datacpy = [...props.data];\r\n\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={0} className=\"mb-100 invitation_mobile\" >\r\n      <Popup\r\n        component={UserProfile}\r\n        setuserInfopopup={setuserInfopopup}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n        url={\"MyEvents/add-event\"}\r\n      />\r\n      <Popup\r\n        component={Notifications}\r\n        setuserInfopopup={setshow}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={MainCode}\r\n        showinvitaions={true}\r\n\r\n      />\r\n      {data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={6}\r\n          className=\"InvitationCard\"\r\n          key={\"InvitationCard\" + index}\r\n\r\n        >\r\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\r\n            src={inv[0].file}\r\n            className=\"inv-img\"\r\n            onClick={() => {\r\n              console.log(Auth.Name)\r\n              Auth.Name == \"\" || Auth.Name == undefined ?\r\n                setuserInfopopup(true)\r\n                :\r\n                history.push(\"/inv/eventpage/\" + index);\r\n            }}\r\n          />) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                inv[0].file\r\n              }\r\n              onClick={() => {\r\n                console.log(Auth.Name)\r\n                Auth.Name == \"\" || Auth.Name == undefined ?\r\n                  setuserInfopopup(true)\r\n                  :\r\n                  history.push(\"/inv/eventpage/\" + index);\r\n              }}\r\n              preload=\"none\"\r\n              className='w-100 inv-img'\r\n            />\r\n          )}\r\n\r\n          <NotificationsNoneIcon\r\n            className=\"card-button Notifyme t-white\"\r\n            onClick={async () => {\r\n              if (Auth.Name !== \"\" || Auth.Name !== undefined) {\r\n                await setmaincode(inv[0].MainCode)\r\n                await setshow(true)\r\n              } else {\r\n                setuserInfopopup(true)\r\n              }\r\n            }}\r\n          />\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\">\r\n                    {inv[0].Name}\r\n                  </Grid>\r\n                  <Grid item xs={12} className=\"fs-small t-white \">\r\n                    <Dateformatter Date={inv[0].Date + \" \" + inv[0].Time} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <button\r\n                  className=\"card-button rsvp-button \"\r\n                  onClick={(e) => {\r\n                    console.log(Auth.Name)\r\n                    Auth.Name == \"\" || Auth.Name == undefined ?\r\n                      setuserInfopopup(true)\r\n                      :\r\n                      history.push(\"/inv/rsvp/\" + index);\r\n                    e.preventDefault();\r\n                  }}\r\n                >\r\n                  RSVP\r\n                </button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js",["2421","2422","2423","2424","2425","2426","2427","2428","2429","2430","2431","2432","2433","2434"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  FormControl,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\nimport EventNameBox from \"./EventNameBox\";\r\nimport AddImg from \"../../../Assets/AddImage.svg\";\r\nimport Uploading from \"../../../Assets/Uploading.svg\";\r\nimport EventDetails from \"./EventDetails\";\r\nimport ImageSelectionModal from \"./ImageSelectionModal\";\r\nimport \"./CreateEvent.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nexport default function CreateEvent(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"#3897f1 !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const [disablesave, setDisablesave] = useState(false);\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  const [erroring, seterroring] = useState(false);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [url, seturl] = useState(AddImg);\r\n  useEffect(() => {\r\n    if (\r\n      props.Events[props.SelectedEvent] !== undefined &&\r\n      props.Events[props.SelectedEvent].file !== \"\"\r\n    ) {\r\n      if (props.Events[props.SelectedEvent].file === \"uploading\") {\r\n        seturl(Uploading);\r\n      } else {\r\n        seturl(props.Events[props.SelectedEvent].file);\r\n      }\r\n    } else {\r\n      seturl(AddImg);\r\n    }\r\n  }, [\r\n    props.Events[props.SelectedEvent] !== undefined\r\n      ? props.Events[props.SelectedEvent].file\r\n      : \"\",\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={0} className=\"m-0  p-15px pt-0 pb-0\">\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className=\"w-100-p  m-b-10 \"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            <Select\r\n              native\r\n              value={props.Type}\r\n              onChange={props.handleChange}\r\n              error={erroring}\r\n              className=\"selectboxblue\"\r\n              displayEmpty\r\n            >\r\n              <option value=\"Wedding\">Wedding</option>\r\n              <option value=\"Birthday\">Birthday</option>\r\n              <option value=\"Wedding Anniversary\">Wedding Anniversary</option>\r\n              <option value=\"Get Together\">Get Together</option>\r\n              <option value=\"Formal Event\">Formal Event</option>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <div className=\"noe\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={false} sm={1} md={2} />\r\n              <Grid item xs={7} sm={6} md={6} className=\"tal  mfs-12\">\r\n                Number Of Events\r\n              </Grid>\r\n              <Grid item xs={5} sm={5} md={4}>\r\n                <Grid container spacing={0}>\r\n                  <Grid item xs={12}>\r\n                    <div className=\"Cirlce tar  fl\">\r\n                      <RemoveCircleOutlineIcon\r\n                        className=\"l-blue-t \"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.removeAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"white box  fl\">{props.Events.length}</div>\r\n                    <div className=\"Cirlce tal  fl\">\r\n\r\n                      <AddCircleOutlineIcon\r\n                        className=\"l-blue-t\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.addAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"event-Names m-b-10 p-15px pb-0 pt-0\">\r\n        <EventNameBox\r\n          data={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectEvent={props.SelectEvent}\r\n          SelectedEvent={props.SelectedEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n        />\r\n      </div>\r\n\r\n      <Grid item xs={12}>\r\n        <EventDetails\r\n          Events={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectedEvent={props.SelectedEvent}\r\n          SelectEvent={props.SelectEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n          setDisablesave={setDisablesave}\r\n          disablesave={disablesave}\r\n          albumdata={props.albumdata}\r\n          setStory={props.setStory}\r\n          setalbumdata={props.setalbumdata}\r\n          Story={props.Story}\r\n          template={props.template}\r\n          handleNext={props.handleNext}\r\n          Type={props.Type}\r\n          seterroring={seterroring}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <button\r\n          className={\r\n            disablesave === false ? \"save-events disabled\" : \"save-events \"\r\n          }\r\n          onClick={() => {\r\n            if (disablesave === true) {\r\n              props.handleNext();\r\n            }\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\VideoOne.js",["2435"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Testimonials.js",["2436","2437","2438"],"C:\\Projects\\MobillyInvite\\src\\Components\\Events\\Eventlist.js",["2439","2440","2441","2442","2443"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Eventlist.css\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport Notifications from \"../Notifications/Notification\";\r\nimport Popup from \"../Helpers/Popups/Popup\";\r\nimport history from \"../../Utils/History\";\r\nimport Dateformatter from '../Helpers/DateFormatter/Dateformatter'\r\nexport default function EventList(props) {\r\n  const [show, setshow] = useState(false);\r\n  const [MainCode, setmaincode] = useState(\"\");\r\n\r\n  const [data, setData] = useState(props.data);\r\n  useEffect(async () => {\r\n    console.log(props.data);\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n  return (\r\n    <Grid container className=\"mb-100 contain-main\" >\r\n      <Popup\r\n        component={Notifications}\r\n        toggleShowPopup={setshow}\r\n        showPopup={show}\r\n        MainCode={MainCode}\r\n        showinvitaions={true}\r\n      // eventCode={eventCode}\r\n      />\r\n      {data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={6}\r\n          className=\"InvitationCard\"\r\n          key={\"invContainer\" + index}\r\n\r\n\r\n        >\r\n\r\n          {inv[0].filetype === \"png\" || inv[0].filetype === \"jpg\" || inv[0].filetype === \"jpeg\" ? (<img\r\n            src={inv[0].file}\r\n            className=\"inv-img\"\r\n            onClick={() => {\r\n              history.push(\"/MyEvents/eventpage/\" + index);\r\n            }}\r\n          />) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                inv[0].file\r\n              }\r\n              onClick={() => {\r\n                history.push(\"/MyEvents/eventpage/\" + index);\r\n              }}\r\n              preload=\"none\"\r\n              className='w-100 inv-img'\r\n            />\r\n          )}\r\n          <NotificationsNoneIcon\r\n            className=\"card-button Notifyme t-white\"\r\n            onClick={async () => {\r\n              await setmaincode(inv[0].MainCode);\r\n              // await seteventcode(inv[index].eventCode);\r\n              await setshow(true);\r\n            }}\r\n          />\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\">\r\n                    {inv[0].Name}\r\n                  </Grid>\r\n                  <Grid item xs={12} className=\"fs-small t-white \">\r\n                    <Dateformatter Date={inv[0].Date + \" \" + inv[0].Time} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Services.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\MobileMenu.js",["2444","2445","2446","2447","2448"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Layout.js",["2449"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Pricing.js",["2450","2451","2452","2453","2454","2455"],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\FootMenu\\FootMenu.js",["2456","2457","2458","2459","2460","2461"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Header.js",["2462"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Footer.js",["2463","2464","2465","2466","2467","2468","2469","2470","2471","2472","2473","2474","2475"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\FAQ.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\CTATwo.js",["2476"],"C:\\Projects\\MobillyInvite\\src\\Components\\Plan\\Plan.js",["2477","2478","2479","2480","2481"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\CTAOne.js",["2482"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Banner.js",["2483"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Contact.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\Clients.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\NewAddParticipants.js",["2484","2485","2486","2487","2488","2489","2490","2491","2492","2493","2494","2495","2496","2497","2498","2499","2500","2501","2502","2503","2504","2505","2506","2507","2508","2509","2510","2511","2512","2513","2514"],"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Access from \"../../../Assets/AddAccess.svg\";\r\nimport \"../AddEvent.css\";\r\nimport { Grid, Switch, Modal } from \"@material-ui/core\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveEvent } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { uploadString } from \"../../../Utils/FileUpload_Download\";\r\nimport EventNameBox from \"../CreateEvent/EventNameBox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AddCode from \"./AddCode\";\r\nimport { ReactExcel, readFile, generateObjects } from \"@ramonak/react-excel\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Button,\r\n    ListGroup,\r\n    Tabs,\r\n    Tab,\r\n    Col,\r\n    Spinner,\r\n} from \"react-bootstrap\";\r\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\r\n\r\nimport * as XLSX from \"xlsx\";\r\nimport { json } from \"body-parser\";\r\nimport Addformultiple from './Addformultiple'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"solid 1px grey\",\r\n    },\r\n}));\r\nexport default function NewAddParticipants(props) {\r\n    const classes = useStyles();\r\n    const [eventKey, setKey] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const Eventdata = useSelector((state) => state.Eventdata);\r\n    let supported = \"\";\r\n    let attribute = [\"name\", \"tel\"];\r\n    const opts = { multiple: true };\r\n    let Eventscpy = [...props.Events];\r\n    const [EntryWay, setEntryWay] = useState(\"Contact\");\r\n    const [code, setCodes] = useState([]);\r\n    const [isMobile, SetIsMobile] = useState(false);\r\n    const [isSaving, setisSaving] = useState(false);\r\n    const [openModal, setopenModal] = useState(false);\r\n    const [participants, setParticipants] = useState([]);\r\n    let Albumcpy = [];\r\n    let Storycpy = [];\r\n    useEffect(async () => {\r\n        supported = \"contacts\" in navigator && \"ContactsManager\" in window;\r\n        if (supported === true) {\r\n            SetIsMobile(true);\r\n        } else {\r\n            SetIsMobile(false);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const readExcel = async (file) => {\r\n        const fileReader = new FileReader();\r\n        await fileReader.readAsArrayBuffer(file);\r\n        fileReader.onload = async (e) => {\r\n            const bufferArray = e.target.result;\r\n            const wb = await XLSX.read(bufferArray, { type: \"buffer\" });\r\n            const wsname = await wb.SheetNames[0];\r\n            const ws = await wb.Sheets[wsname];\r\n            const data = await XLSX.utils.sheet_to_json(ws);\r\n            await saveparticipantsfromexcel(data)\r\n        };\r\n        fileReader.onerror = (error) => {\r\n            console.log(error);\r\n        };\r\n    };\r\n\r\n    const saveparticipantsfromexcel = async (d) => {\r\n        let result = d.map((cdata) => {\r\n            if (cdata.Contact) {\r\n                return cdata.Contact\r\n            } else {\r\n                return (cdata)\r\n            }\r\n        });\r\n        for (let i = 0; i < result.length; i++) {\r\n            if (typeof result[i] === \"string\") {\r\n                if (result[i].startsWith(\"+\")) {\r\n                } else {\r\n                    result[i] = \"+91\" + result[i];\r\n                }\r\n            } else {\r\n                result[i] = \"+91\" + result[i];\r\n            }\r\n\r\n        }\r\n        let particpantscpy = [...participants];\r\n        particpantscpy[eventKey] = [...result];\r\n        await setParticipants([...particpantscpy]);\r\n        return 1;\r\n    }\r\n    const openContactPicker = async () => {\r\n        try {\r\n            let ldata = [];\r\n            let number = \"\";\r\n            const contacts = await navigator.contacts.select(attribute, opts);\r\n            contacts.map(async (contact) => {\r\n                await ldata.push(contact.tel[0])\r\n            });\r\n            await saverecipeients(ldata);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    const saverecipeients = async (data) => {\r\n        let particpantscpy = [...participants];\r\n        let contactlist = [];\r\n        let clist = [];\r\n        data.map(contact => {\r\n            clist.push(contact)\r\n            if (typeof contact === \"string\") {\r\n                if (contact.startsWith(\"+\")) {\r\n                } else {\r\n                    contact = \"+91\" + contact;\r\n                }\r\n            } else {\r\n                contact = \"+91\" + contact;\r\n            }\r\n            contact = contact.replaceAll(' ', '');\r\n            contactlist.push(contact)\r\n        })\r\n\r\n        particpantscpy[eventKey] = [...contactlist];\r\n        await setParticipants([...particpantscpy]);\r\n    };\r\n    const save = async () => {\r\n        setisSaving(true);\r\n        let EventCpy = [...props.Events];\r\n        if (participants.length === 0 && EntryWay !== 'Code') {\r\n            setisSaving(false);\r\n            return false;\r\n        }\r\n        let particpantsCpy = [...participants];\r\n        particpantsCpy.map((listdata, index) => {\r\n            if (listdata.length === 0) {\r\n                alert(\"Please Add Guests to Event no \" + (index + 1));\r\n                setisSaving(false);\r\n                return false;\r\n            } else {\r\n                EventCpy[index].Participants = listdata;\r\n            }\r\n        });\r\n        await create_event();\r\n    };\r\n    const create_event = async () => {\r\n        let uniqueurl =\r\n            props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\";\r\n        let EventCpy = [...props.Events];\r\n        let MainCode = \"\";\r\n        for (let i = 0; i < EventCpy.length; i++) {\r\n            let furl =\r\n                uniqueurl + \"Event_image/\" + i + EventCpy[i].Name.replaceAll(\" \", \"\");\r\n            let url = await uploadString(EventCpy[i].file, furl);\r\n            EventCpy[i].file = url;\r\n        }\r\n        await props.setEvents(EventCpy);\r\n        if (Eventdata && Eventdata.ALBUM && Eventdata.ALBUM.length > 0) {\r\n            Albumcpy = [];\r\n            for (let i = 0; i < Eventdata.ALBUM.length; i++) {\r\n                let shurl = uniqueurl + \"Album/\" + i + \".\" + Eventdata.ALBUM[i].type;\r\n\r\n                let url = await uploadString(Eventdata.ALBUM[i].data, shurl);\r\n                Eventdata.ALBUM[i].file = url;\r\n                await Albumcpy.push({ file: url, type: Eventdata.ALBUM[i].type });\r\n            }\r\n        }\r\n        if (Eventdata && Eventdata.STORY && Eventdata.STORY.length > 0) {\r\n            Storycpy = [];\r\n            for (let i = 0; i < Eventdata.STORY.length; i++) {\r\n                let shurl = uniqueurl + \"Story/\" + i + \".\" + Eventdata.STORY[i].type;\r\n\r\n                let url = await uploadString(Eventdata.STORY[i].file, shurl);\r\n                Eventdata.STORY[i].file = url;\r\n                await Storycpy.push({\r\n                    ...Eventdata.STORY[i],\r\n                    file: url,\r\n                    type: Eventdata.STORY[i].type,\r\n                });\r\n            }\r\n        }\r\n        await dispatch(\r\n            saveEvent({\r\n                Type: props.Type,\r\n                Events: EventCpy,\r\n                Album: Albumcpy,\r\n                Story: Storycpy,\r\n                code: code,\r\n                EntryWay: EntryWay,\r\n            })\r\n        );\r\n        setisSaving(false);\r\n    };\r\n    return (<>\r\n        <Modal\r\n\r\n            className=\"f-s-modal\"\r\n            open={openModal}\r\n        >\r\n            <div className=\"f-s-modal-card\">\r\n                <Addformultiple\r\n                    Name=\"Schedule\"\r\n                    className=\"modal-component\"\r\n                    open={setopenModal}\r\n                    participants={participants}\r\n                    eventKey={eventKey}\r\n                    setParticipants={setParticipants}\r\n                    setKey={setKey}\r\n                    Events={props.Events}\r\n                    isMobile={isMobile}\r\n                    openContactPicker={openContactPicker}\r\n                    saveparticipantsfromexcel={saveparticipantsfromexcel}\r\n                    isSaving={isSaving}\r\n\r\n                />\r\n            </div>\r\n\r\n        </Modal>\r\n        <Grid container spacing={0}>\r\n\r\n            {isSaving === true ? <CircularProgress className=\"Progress\" /> : <></>}\r\n            <img src={Access} className=\"access-logo \" />\r\n            <b className=\"tac w-100 b theme-font \">\r\n                Give access to your guest or Upload CSV with for group access\r\n            </b>\r\n            <Grid item xs={12}>\r\n                <p className=\"w-100 tac theme-font\">\r\n                    <b>\r\n                        <u>Note</u>\r\n                    </b>\r\n                    :{\"CSV can only be accessed by using website \"}\r\n                </p>\r\n            </Grid>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <button\r\n                        className=\" btn custom-file-upload t-white l-blue mt-5px\"\r\n                        style={{ display: isMobile === true ? \"block\" : \"none\" }}\r\n                        onClick={() => {\r\n                            if (props.Events.length === 1) {\r\n                                openContactPicker();\r\n                            } else {\r\n                                setopenModal(true)\r\n                            }\r\n\r\n                        }}\r\n                    >\r\n                        PhoneBook\r\n                    </button>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <label\r\n                        htmlfor=\"input1\"\r\n                        className=\"btn excel-file-upload  t-white l-blue mt-5px\"\r\n                        style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n                        onClick={(e) => {\r\n                            if (props.Events.length > 1) {\r\n                                alert(\"clicked>\")\r\n                                console.log(\"done 2\")\r\n                                e.preventDefault();\r\n                                setopenModal(true);\r\n                            } else {\r\n                                alert(\"clicked<\")\r\n                            }\r\n                        }}\r\n                    >\r\n                        {props.Events.length === 1 ? \" Upload Excel\" : \"Add Participants\"}\r\n\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"input1\"\r\n                        className=\"upload-excel mt-10px\"\r\n\r\n                        onChange={(e) => {\r\n                            if (props.Events.length < 2) {\r\n                                readExcel(e.target.files[0]);\r\n                                console.log(\"done 1\")\r\n                            }\r\n                        }}\r\n                        style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n                        multiple={false}\r\n                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <AddCode\r\n                    Events={props.Events}\r\n                    code={code}\r\n                    setCodes={setCodes}\r\n                    setEntryWay={setEntryWay}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <button\r\n                    className=\"btn next mt-10px t-blue\"\r\n                    onClick={() => {\r\n                        props.handleBack();\r\n                    }}\r\n                >\r\n                    Back\r\n                </button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <button\r\n                    className=\"btn next mt-10px l-blue t-white p-5px\"\r\n                    onClick={() => {\r\n                        save();\r\n                    }}\r\n                >\r\n                    Next\r\n                </button>\r\n            </Grid>\r\n        </Grid ></>\r\n    )\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Stepper\\Stepper.js",["2515","2516","2517","2518","2519","2520","2521","2522"],"C:\\Projects\\MobillyInvite\\src\\Components\\Chat\\SelectParticipant.js",["2523","2524","2525","2526","2527","2528","2529","2530","2531","2532","2533","2534"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  List,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  TextField,\r\n  Avatar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Userurl from \"../Helpers/UserData/UserDatajustUrl\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport AddImg from \"../../Assets/AddImage.svg\";\r\nimport { creategroup } from \"../../Redux/DispatchFuncitons/Chatgroupfunctions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nexport function Participant(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  return (\r\n    <Grid container spacing={2} className=\"mt-10px ofh\">\r\n      <Grid item xs={12}>\r\n        <h5>Select Contact</h5>\r\n      </Grid>\r\n      <List>\r\n        {props.url.map((grp) =>\r\n          grp !== Auth.Phone ? (\r\n            <ListItem\r\n              onClick={async () => {\r\n                await props.setParticipants([grp]);\r\n                console.log([grp]);\r\n                await props.setgroupName(grp + \"\");\r\n                await props.create();\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Userurl\r\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                  showIcon={true}\r\n                />\r\n              </ListItemAvatar>\r\n              <Userurl\r\n                Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                showName={true}\r\n              />\r\n            </ListItem>\r\n          ) : (\r\n            <></>\r\n          )\r\n        )}\r\n      </List>\r\n    </Grid>\r\n  );\r\n}\r\nexport function CreateGroup(props) {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    props.setgroupImagetype(type);\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let fileurl = reader.result;\r\n      props.setgroupImage(fileurl);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  const [groupName, setgroupName] = useState(\"\");\r\n  const [participants, setparticipants] = useState([...props.url]);\r\n  function filterparticipant(grp) {\r\n    let Participantcopy = [];\r\n    Participantcopy = participants.filter((sParticipant, i) => {\r\n      return sParticipant !== grp;\r\n    });\r\n    setparticipants(Participantcopy);\r\n  }\r\n  const Auth = useSelector((state) => state.Auth);\r\n\r\n  return (\r\n    <div>\r\n      <h5> Create Group</h5>\r\n\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <img\r\n          src={props.groupImage === \"\" ? AddImg : props.groupImage}\r\n          style={{\r\n            width: \"200px\",\r\n            objectFit: \"cover\",\r\n            height: \"200px\",\r\n            borderRadius: \"100%\",\r\n            margin: \"10px\",\r\n            marginLeft: \"50px\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        label=\"Group Name\"\r\n        size=\"small\"\r\n        className=\"w-100 mt-10px\"\r\n        value={props.groupName}\r\n        onChange={(e) => {\r\n          props.setgroupName(e.target.value);\r\n        }}\r\n      />\r\n      <Grid container spacing={2} className=\"mt-10px ofh\">\r\n        <List>\r\n          {props.url.map((grp) =>\r\n            grp !== Auth.Phone ? (\r\n              <ListItem\r\n                onClick={async () => {\r\n                  await props.setParticipants([...props.Participants, grp]);\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Userurl\r\n                    Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                    showIcon={true}\r\n                  />\r\n                </ListItemAvatar>\r\n                <Userurl\r\n                  Phone={grp.includes(\"+\") ? grp : \"+91\" + grp}\r\n                  showName={true}\r\n                />\r\n              </ListItem>\r\n            ) : (\r\n              <></>\r\n            )\r\n          )}\r\n        </List>\r\n      </Grid>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"w-100\"\r\n        onClick={async () => {\r\n          await props.create();\r\n          props.show(false);\r\n        }}\r\n      >\r\n        Create Group\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function SelectParticipant(props) {\r\n  const [createGroup, setcreateGroup] = useState(props.showall);\r\n  const [Participants, setParticipants] = useState([]);\r\n  const [groupName, setgroupName] = useState(\"\");\r\n  const [groupImage, setgroupImage] = useState(\"\");\r\n  const [groupImagetype, setgroupImagetype] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const create = async () => {\r\n    let fileurl = \"\";\r\n    if (Participants.length > 0 && groupName !== \"\") {\r\n      let participants = [...new Set(Participants)];\r\n      await setParticipants(participants);\r\n      console.log(\r\n        groupName,\r\n        props.MainCode + groupName,\r\n        groupImage,\r\n        createGroup === 0 ? \"INDV\" : \"GRP\"\r\n      );\r\n      if (groupImage !== \"\") {\r\n        fileurl = await uploadString(\r\n          groupImage,\r\n          \"Groups/\" + props.MainCode + \"/\" + groupName + \".\" + groupImagetype\r\n        );\r\n        await setgroupImage(fileurl);\r\n      }\r\n      await dispatch(\r\n        creategroup(\r\n          groupName,\r\n          props.MainCode + groupName,\r\n          Participants,\r\n          fileurl,\r\n          createGroup === 0 ? \"INDV\" : \"GRP\"\r\n        )\r\n      );\r\n      props.hide(false);\r\n    } else {\r\n      console.log(groupName);\r\n      console.log(Participants);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {createGroup === 0 ? (\r\n        <>\r\n          <Participant\r\n            url={props.url}\r\n            setParticipants={setParticipants}\r\n            setgroupName={setgroupName}\r\n            create={create}\r\n            show={props.hide}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CreateGroup\r\n            url={props.url}\r\n            Participants={Participants}\r\n            setParticipants={setParticipants}\r\n            setgroupImage={setgroupImage}\r\n            setgroupName={setgroupName}\r\n            groupName={groupName}\r\n            groupImage={groupImage}\r\n            create={create}\r\n            show={props.hide}\r\n            setgroupImagetype={setgroupImagetype}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\BlockTitle.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js",["2535","2536","2537","2538","2539"],"import React, { useState, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport Tenmplate from \"../../../Assets/TemplateNone.svg\";\r\nexport default function ImageSelectionModal(props) {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 10259265) {\r\n      alert(\"Max file size 10 mb\");\r\n      return false;\r\n    }\r\n\r\n    console.log(props.data);\r\n\r\n    let EventsCpy = await { ...props.CurrentEventDetails };\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    EventsCpy.filetype = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      EventsCpy.file = reader.result;\r\n      await props.SetCurrentEventDetails(EventsCpy);\r\n      props.show(false);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4\",\r\n  });\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <h2 className=\"tac\">Upload Your Picture</h2>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          <img src={Gallery} className=\"w-100\" />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <img src={Tenmplate} className=\"w-100\" />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js",["2540","2541","2542","2543","2544","2545","2546","2547","2548","2549","2550","2551","2552","2553","2554","2555","2556","2557","2558","2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569","2570","2571","2572","2573","2574","2575","2576","2577","2578","2579"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControl,\r\n  Paper,\r\n  Modal,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./CreateEvent.css\";\r\nimport AddImg from \"../../../Assets/AddImage.svg\";\r\nimport Scehedule from \"../../../Assets/schedule.svg\";\r\nimport Storyimg from \"../../../Assets/AddStory.svg\";\r\nimport Albumsimg from \"../../../Assets/gallery.svg\";\r\nimport Map from \"../../Helpers/Maps/Maps\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport Album from \"../Extras/Album\";\r\nimport Story from \"../Extras/Story\";\r\nimport AddSchedule from \"../Extras/Schedule\";\r\nimport ImageSelectionModal from \"./ImageSelectionModal\";\r\nimport AddDetails from \"../AddDetails/AddDetails\";\r\nimport { editform } from \"../../../Redux/DispatchFuncitons/EventCreationFormFunction\";\r\nimport { SAVEFORM } from \"../../../Redux/Actions/EventCreationFormActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nexport default function EventDetails(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      // borderColor: \"#3897f1 !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n      fontSize: \"12px !important\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [processing, setProcessing] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [CurrentEventDetails, SetCurrentEventDetails] = useState({\r\n    ...props.Events[props.SelectedEvent],\r\n  });\r\n  const [IsSubmitted, setSubmit] = useState(false);\r\n  const [shedulevisible, SetScheduleVisible] = useState(false);\r\n  const [storyvisible, SetStoryVisible] = useState(false);\r\n  const [albumvisible, SetAlbumVisible] = useState(false);\r\n  const [Link, setLink] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  const [isEditLocation, setisEditLocation] = useState(false);\r\n  const [address, setaddress] = useState(\"\");\r\n  useEffect(() => {\r\n    if (props.Events[props.SelectedEvent] !== undefined) {\r\n      SetCurrentEventDetails(props.Events[props.SelectedEvent]);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    props.setDisablesave(false);\r\n    if (props.Events[props.SelectedEvent] !== undefined) {\r\n      SetCurrentEventDetails(props.Events[props.SelectedEvent]);\r\n    }\r\n\r\n    if (\r\n      CurrentEventDetails !== {} &&\r\n      CurrentEventDetails.Location !== undefined\r\n    ) {\r\n      if (CurrentEventDetails.Location === \"\") {\r\n        setaddress(\"\");\r\n      } else {\r\n        try {\r\n          if (JSON.parse(CurrentEventDetails.Location === {})) {\r\n            throw \"unwanted\";\r\n          } else {\r\n            setaddress(JSON.parse(CurrentEventDetails.Location).address);\r\n            setLocation(JSON.parse(CurrentEventDetails.Location).address);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    } else {\r\n      setaddress(\"\");\r\n    }\r\n  }, [props.SelectedEvent]);\r\n\r\n  var gapi = window.gapi;\r\n  /* \r\n    Update with your own Client Id and Api key \r\n  */\r\n  var CLIENT_ID =\r\n    \"271872414479-lumfn9dkcqh1k1et8dfau81dkcng81s4.apps.googleusercontent.com\";\r\n  var API_KEY = \"AIzaSyCdk1XolxNow08BXLxbzCeDReSrNTTlXCo\";\r\n  var clientSecret = \"GpxXOinOWEyYdsbnVjolU9is\";\r\n  var DISCOVERY_DOCS = [\r\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\r\n  ];\r\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\r\n\r\n  const save = async () => {\r\n    let eventscpy = props.Events;\r\n    let currentEvent = props.SelectedEvent;\r\n    console.log(CurrentEventDetails);\r\n    eventscpy[props.SelectedEvent] = CurrentEventDetails;\r\n\r\n    await props.setEvents(eventscpy);\r\n    // await props.SelectEvent(0);\r\n\r\n    let result = await props.checkIfEventEmpty(\r\n      eventscpy,\r\n      props.Type,\r\n      props.seterroring,\r\n      props.SelectedEvent\r\n    );\r\n    await setSubmit(true);\r\n    if (result.status === true && props.Type !== \"\") {\r\n      let EventsCopy = [...props.Events];\r\n      await props.setDisablesave(true);\r\n\r\n      props.handleNext();\r\n    } else {\r\n      console.log(\"result false\");\r\n      console.log(IsSubmitted);\r\n      await props.SelectEvent(result.index);\r\n      console.log(result.index);\r\n    }\r\n  };\r\n\r\n  const changevenue = () => {\r\n    if (\r\n      CurrentEventDetails.VenueType === \"Online\" ||\r\n      CurrentEventDetails.VenueType === \"Both\"\r\n    ) {\r\n      // CreateMeeting();\r\n      SetCurrentEventDetails({\r\n        ...CurrentEventDetails,\r\n        Location: \"\",\r\n      });\r\n    }\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  // const updatereduxform = async (data) => {\r\n  //   await dispatch({\r\n  //     type: SAVEFORM,\r\n  //     payload: data,\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <Grid container spacing={1} className=\"p-15px pt-0\">\r\n      <Grid item xs={12} sm={12}>\r\n        {CurrentEventDetails !== undefined &&\r\n          CurrentEventDetails.file === \"\" ? (\r\n          <center>\r\n            <img\r\n              src={AddImg}\r\n              className={\r\n                IsSubmitted === true ? \"add-Img error-box\" : \"add-Img \"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            />\r\n          </center>\r\n        ) : CurrentEventDetails !== undefined &&\r\n          CurrentEventDetails.filetype !== undefined ? (\r\n          CurrentEventDetails.filetype === \"png\" ||\r\n            CurrentEventDetails.filetype === \"jpg\" ||\r\n            CurrentEventDetails.filetype === \"jpeg\" ? (\r\n            <img\r\n              src={\r\n                CurrentEventDetails !== undefined\r\n                  ? CurrentEventDetails.file\r\n                  : \" \"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n              className={\r\n                processing === true\r\n                  ? \"transparent uploaded-file w-100 \"\r\n                  : \"notTransparent uploaded-file w-100 \"\r\n              }\r\n            />\r\n          ) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                CurrentEventDetails !== undefined\r\n                  ? CurrentEventDetails.file\r\n                  : \" \"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n              preload=\"none\"\r\n              className={\r\n                processing === true\r\n                  ? \" transparent w-100 \"\r\n                  : \"notTransparent w-100 \"\r\n              }\r\n            />\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className=\"modal\"\r\n            open={showPopup}\r\n            onClose={() => {\r\n              toggleShowPopup(false);\r\n            }}\r\n          >\r\n            <div className=\"modal-card\">\r\n              <CancelIcon\r\n                onClick={() => {\r\n                  toggleShowPopup(false);\r\n                }}\r\n                color=\"secondary\"\r\n                className=\"popup-close\"\r\n                fontSize=\"large\"\r\n                style={{ bottom: \"10px\", position: \"inherit\" }}\r\n              />\r\n\r\n              <ImageSelectionModal\r\n                className=\"modal-component\"\r\n                data={props.Events}\r\n                setEvents={props.setEvents}\r\n                SelectEvent={props.SelectEvent}\r\n                SelectedEvent={props.SelectedEvent}\r\n                processing={processing}\r\n                setDisablesave={props.setDisablesave}\r\n                CurrentEventDetails={CurrentEventDetails}\r\n                SetCurrentEventDetails={SetCurrentEventDetails}\r\n                show={toggleShowPopup}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <span className=\"label\">Enter Event Name</span>\r\n        <TextField\r\n          placeholder=\"Name\"\r\n          id=\"outlined-basics\"\r\n          variant=\"outlined\"\r\n          className=\"w-100-p \"\r\n          size=\"small\"\r\n          value={CurrentEventDetails.Name}\r\n          onChange={async (e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Name: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Name === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={5}>\r\n        <span className=\"label\">Time</span>\r\n        <TextField\r\n          id=\"time\"\r\n          // label=\"Time\"\r\n          variant=\"outlined\"\r\n          type=\"time\"\r\n          size=\"small\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          className=\"w-100-p \"\r\n          inputProps={{\r\n            step: 300, // 5 min\r\n          }}\r\n          ampm={false}\r\n          value={CurrentEventDetails.Time}\r\n          onChange={(e) => {\r\n            console.log(e.target.value);\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Time: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Time === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <span className=\"label\">Date</span>\r\n        <TextField\r\n          id=\"date\"\r\n          // label=\"Date\"\r\n          type=\"date\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          size=\"small\"\r\n          className=\"w-100-p \"\r\n          value={\r\n            CurrentEventDetails.Date === \"\"\r\n              ? \"01-01/2020\"\r\n              : CurrentEventDetails.Date\r\n          }\r\n          placeholder=\"DD-MM-YY\"\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Date: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Date === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          style={{ fontSize: \"12px\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className=\"w-100-p \"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        >\r\n          <span className=\"label\">Type</span>\r\n          <Select\r\n            className=\"w-100-p selectboxblue\"\r\n            value={CurrentEventDetails.VenueType}\r\n            error={\r\n              IsSubmitted === true && CurrentEventDetails.VenueType === \"\"\r\n                ? true\r\n                : false\r\n            }\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              classes: {\r\n                notchedOutline: classes.notchedOutline,\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          >\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Online-Inapp\",\r\n                });\r\n              }}\r\n              value=\"Online-Inapp\"\r\n            >\r\n              Online-Inapp\r\n            </MenuItem>\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Online\",\r\n                });\r\n              }}\r\n              value=\"Online\"\r\n            >\r\n              Online\r\n            </MenuItem>\r\n\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Offline\",\r\n                });\r\n              }}\r\n              value=\"Offline\"\r\n            >\r\n              Offline\r\n            </MenuItem>\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Both\",\r\n                });\r\n              }}\r\n              value=\"Both\"\r\n            >\r\n              Both\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <>\r\n        <Grid\r\n          item\r\n          xs={7}\r\n          className={\r\n            CurrentEventDetails.VenueType === \"Offline\" ? \"hide\" : \"show\"\r\n          }\r\n        >\r\n          <span className=\"label \"> Link </span>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            className=\"w-100-p \"\r\n            placeholder=\"Add Link Below\"\r\n            value={\r\n              CurrentEventDetails.VenueType === \"Online\" ||\r\n                CurrentEventDetails.VenueType === \"Both\"\r\n                ? CurrentEventDetails.Link\r\n                : \"Meeting Created\"\r\n            }\r\n            disabled={\r\n              CurrentEventDetails.VenueType === \"Online\" ||\r\n                CurrentEventDetails.VenueType === \"Both\"\r\n                ? false\r\n                : true\r\n            }\r\n            onChange={(e) => {\r\n              SetCurrentEventDetails({\r\n                ...CurrentEventDetails,\r\n                Link: e.target.value,\r\n                Location: \"\",\r\n              });\r\n            }}\r\n            error={\r\n              IsSubmitted === true && CurrentEventDetails.Link === \"\"\r\n                ? true\r\n                : false\r\n            }\r\n            InputProps={{\r\n              classes: {\r\n                notchedOutline: classes.notchedOutline,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={CurrentEventDetails.VenueType === \"Offline\" ? 7 : 12}\r\n          sm={CurrentEventDetails.VenueType === \"Offline\" ? 7 : 12}\r\n          className={\r\n            CurrentEventDetails.VenueType === \"Online\" ||\r\n              CurrentEventDetails.VenueType === \"Online-Inapp\"\r\n              ? \"hide\"\r\n              : \"show\"\r\n          }\r\n        >\r\n          {isEditLocation}\r\n          {isEditLocation === true ? (\r\n            <>\r\n              <Map\r\n                SetCurrentEventDetails={SetCurrentEventDetails}\r\n                CurrentEventDetails={CurrentEventDetails}\r\n                center={{ lat: 20.5937, lng: 78.9629 }}\r\n                height=\"300px\"\r\n                zoom={12}\r\n                setLocation={setLocation}\r\n                Location={Location}\r\n                type={\"Offline\"}\r\n                setisEditLocation={setisEditLocation}\r\n                setaddress={setaddress}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Grid container spacing={0} style={{ width: \"100%\" }}>\r\n              <Grid xs={12}>\r\n                <span className=\"label \" style={{ width: \"100%\" }}>\r\n                  Location\r\n                </span>\r\n              </Grid>\r\n              <Grid xs={12}>\r\n                <div\r\n                  className=\"fs-14\"\r\n                  onClick={() => setisEditLocation(true)}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    border: \"Solid 2px #3897f1\",\r\n                    borderRadius: \"150px\",\r\n                    padding: \"8px\",\r\n                    position: 'relative',\r\n                    bottom: '6px'\r\n                  }}\r\n                >\r\n                  {Location === \"\"\r\n                    ? \"Please Enter A location\"\r\n                    : Location.length > 25\r\n                      ? Location.substring(0, 25)\r\n                      : Location}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <span\r\n            className={\r\n              IsSubmitted === true && CurrentEventDetails.Location === \"\"\r\n                ? \"error\"\r\n                : \"hide\"\r\n            }\r\n            style={{ width: '100%' }}\r\n          >\r\n            Please add Location\r\n          </span>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={isEditLocation === true ? 1 : false}\r\n          sm={isEditLocation === true ? 1 : false}\r\n          className={\r\n            CurrentEventDetails.VenueType === \"Online\" ||\r\n              CurrentEventDetails.VenueType === \"Online-Inapp\"\r\n              ? \"hide\"\r\n              : \"show\"\r\n          }\r\n        >\r\n          {isEditLocation === true ? (\r\n\r\n            <p style={{ display: 'flex', justifyContent: 'left' }}>   <SaveIcon\r\n              onClick={() => {\r\n                setisEditLocation(false);\r\n              }}\r\n              style={{ position: \"relative\", color: \"green\" }}\r\n            />Save</p>\r\n\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Grid>\r\n      </>\r\n\r\n      <Grid item xs={12}>\r\n        <span className=\"label\">Description</span>\r\n        {/* <TextField\r\n          id=\"standard-name\"\r\n          label=\"Name\"\r\n          className={classes.textField}\r\n          value={this.state.name}\r\n          onChange={this.handleChange('name')}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            classes: {\r\n              root: classes.cssLabel,\r\n              focused: classes.cssFocused,\r\n            },\r\n          }}\r\n          InputProps={{\r\n            classes: {\r\n              root: classes.cssOutlinedInput,\r\n              focused: classes.cssFocused,\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n            inputMode: \"numeric\"\r\n          }}\r\n        /> */}\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          // label=\"Description\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          className=\"w-100-p   \"\r\n          value={CurrentEventDetails.Description}\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Description: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Description === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          // InputProps={{\r\n          //   classes: {\r\n          //     notchedOutline: classes.notchedOutline,\r\n          //   },\r\n          // }}\r\n          multiline={true}\r\n          rows={2}\r\n        />\r\n      </Grid>\r\n\r\n      {/* <Grid item xs={8} className=\"talc fs-bold m-b-25px label\">\r\n        Guest can Invite (max 3)\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Switch\r\n          checked={CurrentEventDetails.GuestInvite}\r\n          color=\"primary\"\r\n          name=\"checkedB\"\r\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          className=\"fr\"\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              GuestInvite: !CurrentEventDetails.GuestInvite,\r\n            });\r\n          }}\r\n        />\r\n      </Grid> */}\r\n\r\n\r\n      {/* Album, Schdedule and Story Commented Below */}\r\n\r\n\r\n      {/*      <Grid\r\n        item\r\n        xs={props.SelectedEvent === 0 ? 4 : 12}\r\n        md={props.SelectedEvent === 0 ? 4 : 12}\r\n      >\r\n        <Paper\r\n          elevation={3}\r\n          className=\"schedule-card\"\r\n          onClick={() => {\r\n            SetScheduleVisible(true);\r\n          }}\r\n        >\r\n          <center>\r\n            <img src={Scehedule} alt=\"schedule\" className=\"schedule-icon\" />\r\n\r\n            <button className=\"add-schedule theme-font\">Schedule</button>\r\n          </center>\r\n        </Paper>\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className=\"f-s-modal\"\r\n            open={shedulevisible}\r\n            onClose={() => {\r\n              SetScheduleVisible(false);\r\n            }}\r\n          >\r\n            <div className=\"f-s-modal-card\">\r\n              <AddDetails\r\n                Name=\"Schedule\"\r\n                className=\"modal-component\"\r\n                data={props.Events}\r\n                setEvents={props.setEvents}\r\n                SelectEvent={props.SelectEvent}\r\n                SelectedEvent={props.SelectedEvent}\r\n                CurrentEventDetails={CurrentEventDetails}\r\n                Events={props.Events}\r\n                SelectedEvent={props.SelectedEvent}\r\n                SetCurrentEventDetails={SetCurrentEventDetails}\r\n                SetScheduleVisible={SetScheduleVisible}\r\n                open={SetScheduleVisible}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Grid>\r\n      {props.SelectedEvent === 0 ? (\r\n        <>\r\n          <Grid item xs={4} md={4}>\r\n            <Paper\r\n              elevation={3}\r\n              className=\"schedule-card\"\r\n              onClick={() => {\r\n                SetStoryVisible(true);\r\n              }}\r\n            >\r\n              <center>\r\n                <img src={Storyimg} alt=\"schedule\" className=\"schedule-icon\" />\r\n\r\n                <button className=\"add-schedule theme-font\">Story</button>\r\n              </center>\r\n            </Paper>\r\n            <div>\r\n              <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"f-s-modal\"\r\n                open={storyvisible}\r\n                onClose={() => {\r\n                  SetStoryVisible(false);\r\n                }}\r\n              >\r\n                <div className=\"f-s-modal-card\">\r\n                  <AddDetails\r\n                    Name=\"Story\"\r\n                    className=\"modal-component\"\r\n                    data={props.Events}\r\n                    setEvents={props.setEvents}\r\n                    SelectEvent={props.SelectEvent}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    CurrentEventDetails={CurrentEventDetails}\r\n                    Events={props.Events}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    SetCurrentEventDetails={SetCurrentEventDetails}\r\n                    SetScheduleVisible={SetScheduleVisible}\r\n                    open={SetStoryVisible}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Paper\r\n              elevation={3}\r\n              className=\"schedule-card\"\r\n              onClick={() => {\r\n                SetAlbumVisible(true);\r\n              }}\r\n            >\r\n              <center>\r\n                <img src={Albumsimg} alt=\"schedule\" className=\"schedule-icon\" />\r\n\r\n                <button className=\"add-schedule theme-font\">Albums</button>\r\n              </center>\r\n            </Paper>\r\n            <div>\r\n              <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"f-s-modal\"\r\n                open={albumvisible}\r\n                onClose={() => {\r\n                  SetAlbumVisible(false);\r\n                }}\r\n              >\r\n                <div className=\"f-s-modal-card\">\r\n                  <AddDetails\r\n                    Name=\"Album\"\r\n                    className=\"modal-component\"\r\n                    data={props.Events}\r\n                    setEvents={props.setEvents}\r\n                    SelectEvent={props.SelectEvent}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    CurrentEventDetails={CurrentEventDetails}\r\n                    Events={props.Events}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    SetCurrentEventDetails={SetCurrentEventDetails}\r\n                    SetScheduleVisible={SetScheduleVisible}\r\n                    open={SetAlbumVisible}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )} */}\r\n\r\n      <Grid item xs={12}>\r\n        <button\r\n          className={\r\n            props.disablesave === false\r\n              ? \"btn save-event \"\r\n              : \"btn save-event  disabled\"\r\n          }\r\n          onClick={() => {\r\n            if (props.disablesave === false) {\r\n              save();\r\n            }\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\UserPorfile\\UserProfile.js",["2580","2581","2582","2583","2584"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\NavLinks.js",["2585","2586","2587"],"C:\\Projects\\MobillyInvite\\src\\Components\\LandingPage\\AccordionItem.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\Addformultiple.js",["2588","2589","2590","2591","2592","2593","2594","2595"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Container,\r\n    Row,\r\n    Button,\r\n    ListGroup,\r\n    Tabs,\r\n    Tab,\r\n    Col,\r\n    Spinner,\r\n} from \"react-bootstrap\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { BsFillPeopleFill } from \"react-icons/bs\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport default function Addformultiple(props) {\r\n    const [participants, setparticipants] = useState([])\r\n    const [width, setwidth] = useState('100%')\r\n    useEffect(async () => {\r\n        console.log(props)\r\n        await setparticipants(props.participants)\r\n        await setwidth(100 / props.Events.length + \"vw\")\r\n    }, [props.participants])\r\n    const readExcel = async (file) => {\r\n        const fileReader = new FileReader();\r\n        await fileReader.readAsArrayBuffer(file);\r\n        fileReader.onload = async (e) => {\r\n            const bufferArray = e.target.result;\r\n            const wb = await XLSX.read(bufferArray, { type: \"buffer\" });\r\n            const wsname = await wb.SheetNames[0];\r\n            const ws = await wb.Sheets[wsname];\r\n            const data = await XLSX.utils.sheet_to_json(ws);\r\n            await props.saveparticipantsfromexcel(data)\r\n        };\r\n        fileReader.onerror = (error) => {\r\n            console.log(error);\r\n        };\r\n    };\r\n    const DeleteThisContact = (index) => {\r\n        let particpantscpy = [...props.participants];\r\n        let NexteventKey = parseInt(props.eventKey) + 1;\r\n        particpantscpy[props.eventKey] = particpantscpy[props.eventKey].filter((word, i) => index !== i);\r\n        props.setParticipants(particpantscpy);\r\n    };\r\n\r\n    const copyToNext = () => {\r\n        let particpantscpy = [...props.participants];\r\n        if (particpantscpy.length === 0) {\r\n            alert(\"Please add contacts to this event Firts\");\r\n        } else {\r\n            if (props.eventKey < 3 && props.eventKey < props.Events.length - 1) {\r\n\r\n                let NexteventKey = parseInt(props.eventKey) + 1;\r\n                particpantscpy[NexteventKey] = particpantscpy[props.eventKey];\r\n                console.log(particpantscpy);\r\n                props.setParticipants(particpantscpy);\r\n            } else {\r\n                alert(\"No more Events to copy\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className=\"p-0\">\r\n                <h3 className=\"p-15px\">Add Guests</h3>\r\n\r\n                <Tabs\r\n                    activeKey={props.eventKey}\r\n                    onSelect={(k) => {\r\n                        console.log(k);\r\n                        props.setKey(k);\r\n                    }}\r\n                >\r\n                    {props.Events &&\r\n                        props.Events.map((eve, index) => (\r\n                            <Tab eventKey={index} title={eve.Name.substring(1, 4) + \"...\"} style={{ width: width }}>\r\n                                <ListGroup style={{ margin: \"auto\" }} className=\"listitems_box\">\r\n                                    {participants && participants[props.eventKey] && participants[props.eventKey].map((listdata, i) => (\r\n                                        <ListGroup.Item>\r\n                                            {listdata}\r\n                                            <AiFillCloseCircle\r\n                                                size=\"25\"\r\n                                                style={{ float: \"right\", color: \"red\" }}\r\n                                                onClick={() => {\r\n                                                    DeleteThisContact(i);\r\n                                                }}\r\n                                            />\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            </Tab>\r\n                        ))}\r\n                </Tabs>\r\n                <Row>\r\n                    {\r\n                        props.isMobile === true ? (\r\n                            <Button\r\n                                variant=\"outline-primary\"\r\n                                className=\"addcontacts_btn\"\r\n                                style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\r\n                                onClick={() => {\r\n                                    props.openContactPicker();\r\n                                }}\r\n                            >\r\n                                <BsFillPeopleFill /> Add Contacts mob\r\n                            </Button>\r\n                        ) : (\r\n                            <>\r\n                                <label\r\n                                    htmlFor=\"input2\"\r\n                                    className=\"addcontacts_btn btn btn-outline-primary\"\r\n                                    style={{ display: props.isMobile === false ? \"block\" : \"none\" }}\r\n                                    style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\r\n                                    onClick={() => { console.log(\"done 3\") }}\r\n                                >\r\n                                    <BsFillPeopleFill /> Add Contacts\r\n                                </label>\r\n                                <input\r\n                                    id=\"input2\"\r\n                                    type=\"file\"\r\n                                    accept=\".xlsx\"\r\n                                    onChange={(e) => {\r\n                                        console.log(\"done 4\")\r\n                                        const file = e.target.files[0];\r\n                                        readExcel(file);\r\n\r\n                                    }}\r\n                                    placeholder=\"Add Participants\"\r\n                                    style={{ display: \"none\" }}\r\n                                />\r\n                            </>\r\n                        )\r\n\r\n                    }\r\n                    <Button\r\n                        variant=\"outline-primary\"\r\n                        style={{ margin: \"auto\", width: \"30%\", borderRadius: 20 }}\r\n\r\n                        onClick={() => {\r\n                            copyToNext();\r\n                        }}\r\n                        style={{ display: props.eventKey == props.Events.length - 1 ? 'none' : 'block' }}\r\n                        className=\"addcontacts_btn\"\r\n                    >\r\n                        {props.eventKey}  Copy to Next Event{props.Events.length - 1}\r\n                        <FaArrowRight />\r\n                    </Button>\r\n                </Row>\r\n                <Button\r\n                    variant=\"outline-primary\"\r\n                    style={{\r\n                        float: \"right\",\r\n                        width: \"20%\",\r\n                        borderRadius: 20,\r\n                        marginTop: 50,\r\n                    }}\r\n                    className=\"addcontacts_btn\"\r\n                    onClick={() => { props.open(false) }}\r\n                >Close</Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    style={{\r\n                        float: \"right\",\r\n                        width: \"20%\",\r\n                        borderRadius: 20,\r\n                        marginTop: 50,\r\n                    }}\r\n                    className=\"addcontacts_btn\"\r\n                    onClick={() => {\r\n                        props.eventKey == props.Events.length - 1\r\n                            ? props.open(false)\r\n                            : props.setKey(parseInt(props.eventKey) + 1);\r\n                    }}\r\n                    disabled={props.isSaving}\r\n                >\r\n                    {props.isSaving === true ? (\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Saving...</span>\r\n                        </Spinner>\r\n                    ) : (\r\n                        <>\r\n                            {props.eventKey === props.Events.length - 1 ? (\r\n                                \"Save\"\r\n                            ) : (\r\n                                <>\r\n                                    Save\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </Button>\r\n            </Container>\r\n        </>\r\n    );\r\n}","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddParticipants\\AddCode.js",["2596"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button, Modal, Container, Row, Col, Form } from \"react-bootstrap\";\r\nexport default function AddCode(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [codes, setCodes] = useState([]);\r\n  const [usercode, setusercode] = useState([]);\r\n  var codescpy = [];\r\n  var usercodecpy = [];\r\n  function randomString(length, chars) {\r\n    var result = \"\";\r\n    for (var i = length; i > 0; --i)\r\n      result += chars[Math.floor(Math.random() * chars.length)];\r\n    return result;\r\n  }\r\n  useEffect(() => {\r\n    if (show === true && props.code.length !== props.Events.length) {\r\n      for (var i = 0; i < props.Events.length; i++) {\r\n        codescpy.push({\r\n          Name: props.Events[i].Name,\r\n          code: randomString(\r\n            8,\r\n            \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n          ),\r\n        });\r\n        usercodecpy.push(codescpy[i].code);\r\n      }\r\n      console.log(codescpy);\r\n      setCodes(codescpy);\r\n      setusercode(usercodecpy);\r\n    }\r\n  }, [show]);\r\n  return (\r\n    <div>\r\n      <button className=\" next btn btn-dark mt-10px\" onClick={handleShow}>\r\n        Use Code\r\n      </button>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        style={{ position: \"absolute\", top: \"0vh\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Code For Events</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container fluid style={{ padding: '5px' }}>\r\n            <Row className=\"m-0 m-5px\">\r\n              <Col xs={5} md={3}>\r\n                <b>Name</b>\r\n              </Col>\r\n              <Col xs={7} md={9}>\r\n                <b>Code</b>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            {codes.map((code, index) => (\r\n              <Row className=\"m-0 mt-5px\" key={code.code}>\r\n                <Col xs={5} md={3} className=\"m-0 mt-5px\">\r\n                  {code.Name + \":\"}\r\n                </Col>\r\n                <Col xs={7} md={9} className=\"m-0 mt-5px\"  style={{paddingBottom: '10px'}}>\r\n                  <Form.Control\r\n                    disabled={true}\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    style={{ borderRadius: 20 }}\r\n                    value={usercode[index]}\r\n                    onChange={(e) => {\r\n                      usercodecpy[index] = e.target.value;\r\n                      setusercode(usercodecpy);\r\n                    }}\r\n                    maxLength={4}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n            <br />\r\n            <Row className=\"m-0\">\r\n              <Button\r\n                variant=\"success\"\r\n                style={{ borderRadius: 20, backgroundColor: \"#3897f1\" }}\r\n                className=\"w-100 mt-10px\"\r\n                onClick={() => {\r\n                  props.setEntryWay(\"Code\");\r\n                  props.setCodes(usercode);\r\n                  handleClose(false);\r\n                }}\r\n              >\r\n                Done\r\n              </Button>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Redux\\Actions\\EventCreationFormActions.js",[],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Schedule.js",["2597","2598","2599","2600","2601","2602","2603","2604","2605","2606","2607","2608","2609"],"C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\Maps\\Maps.js",["2610","2611","2612","2613","2614"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport { formatRelative } from \"date-fns\";\r\nimport \"./Maps.css\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Geocode from \"react-geocode\";\r\nlet mapStyles = [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        weight: \"2.00\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#9c9c9c\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#f2f2f2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape.man_made\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        saturation: -100,\r\n      },\r\n      {\r\n        lightness: 45,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#eeeeee\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#7b7b7b\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#46bcec\",\r\n      },\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#c8d7d4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#070707\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"400px\",\r\n  width: \"100%\",\r\n  border: \"solid\",\r\n  display: \"none\",\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  gestureHandling: \"cooperative\",\r\n};\r\nconst center = {\r\n  lat: 20.5937,\r\n  lng: 78.9629,\r\n};\r\n\r\nexport default function Map(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\",\r\n    libraries,\r\n  });\r\n\r\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\r\n\r\n  Geocode.setLanguage(\"en\");\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [adderss, setAddress] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  useEffect(() => {\r\n    try {\r\n      let data = JSON.parse(props.CurrentEventDetails.location);\r\n      setAddress(data.Location);\r\n      setLocation(data.Location);\r\n    } catch (err) {\r\n      setLocation(\"\");\r\n    }\r\n  }, []);\r\n\r\n  const onMapClick = useCallback(async (e) => {\r\n    let lat = e.latLng.lat();\r\n    let long = e.latLng.lng();\r\n    setMarkers((current) => [\r\n      {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ]);\r\n    Geocode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(\r\n      (response) => {\r\n        const faddress = response.results[0].formatted_address;\r\n\r\n        setAddress(faddress);\r\n\r\n        let location = JSON.stringify({ lat, long, faddress });\r\n        console.log({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n        // props.setLocation(location);\r\n        // if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //     Link: \"\",\r\n        //   });\r\n        // } else {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //   });\r\n        // }\r\n\r\n        console.log(faddress);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    let location = JSON.stringify({ lat, lng });\r\n    console.log(location);\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(20);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <h1></h1>\r\n\r\n      <Search\r\n        panTo={panTo}\r\n        Location={Location}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n        setLocation={props.setLocation}\r\n      />\r\n\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={5}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n        options={{ scrollwheel: false }}\r\n        style={{ display: \"none\" }}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={`${marker.lat}-${marker.lng}`}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{adderss}</h2>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  console.log(props);\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\r\n      radius: 100 * 1000,\r\n    },\r\n  });\r\n\r\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\r\n\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setValue(address, false);\r\n    clearSuggestions();\r\n\r\n    try {\r\n      const results = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n      props.panTo({ lat, lng });\r\n      console.log(results);\r\n      let location = await JSON.stringify({ lat, lng, address });\r\n\r\n      if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n          Link: \"\",\r\n        });\r\n      } else {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n      }\r\n      props.setisEditLocation(false)\r\n    } catch (error) {\r\n      console.log(\"😱 Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-90\">\r\n      <Combobox\r\n        onSelect={async (address) => { await handleSelect(address); await props.setLocation(address) }}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        setCurrentEventDetails={props.setCurrentEventDetails}\r\n      >\r\n        <span\r\n          className={\r\n            props.CurrentEventDetails.VenueType === \"Offline\"\r\n              ? \"label top-5\"\r\n              : \"label\"\r\n          }\r\n        >\r\n          Location\r\n        </span>\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={handleInput}\r\n          disabled={!ready}\r\n          Placeholder=\"Search your location\"\r\n          className={\"locationSearch\"}\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div >\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Story.js",["2615","2616","2617","2618","2619","2620","2621","2622"],"import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport { Grid, TextField, IconButton } from \"@material-ui/core\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SAVESTORY, DELETESTORY } from \"../../../Redux/Actions/EventActions\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport Dateformatter from \"../../Helpers/DateFormatter/Dateformatter\";\r\nexport default function Story(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const Eventdata = useSelector((state) => state.Eventdata);\r\n  const [subStory, setsubStory] = useState(Eventdata.STORY);\r\n  const [subname, setsubname] = useState(\"\");\r\n  const [file, setfile] = useState(\"\");\r\n  const [filetype, setfiletype] = useState(\"\");\r\n  const [datetime, setdatetime] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [currentedited, setcurrentedited] = useState(null);\r\n  const [add, setadd] = useState(true);\r\n  const [edit, setedit] = useState(false);\r\n  const [isError, setError] = useState(false);\r\n  const save = async () => {\r\n    if (\r\n      subname !== \"\" &&\r\n      datetime !== \"\" &&\r\n      description !== \"\" &&\r\n      file !== \"\"\r\n    ) {\r\n      setError(false);\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        file: file,\r\n        filetype: filetype,\r\n      };\r\n      console.log([...subStory, data]);\r\n      await setsubStory([...subStory, data]);\r\n\r\n      dispatch({\r\n        type: SAVESTORY,\r\n        payload: [...subStory, data],\r\n      });\r\n      Delete();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    let dataurl = \"\";\r\n\r\n    if (acceptedFiles[0].size > 5259265) {\r\n    } else {\r\n      let type = acceptedFiles[0].type.split(\"/\");\r\n      await getBase64(acceptedFiles[0]).then(async (data) => {\r\n        setfile(data);\r\n        setfiletype(type[1]);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n  });\r\n\r\n  const Delete = () => {\r\n    setsubname(\"\");\r\n    setfile(\"\");\r\n    setfiletype(\"\");\r\n    setdatetime(\"\");\r\n    setdescription(\"\");\r\n    setadd(false);\r\n  };\r\n  const Deletesingle = (i) => {\r\n    let subStorycpy = [...subStory];\r\n\r\n    subStorycpy = subStorycpy.filter((eventdata, index) => {\r\n      return index !== i;\r\n    });\r\n    dispatch({\r\n      type: SAVESTORY,\r\n      payload: subStorycpy,\r\n    });\r\n    setsubStory(subStorycpy);\r\n    setedit(false);\r\n    setcurrentedited(null);\r\n  };\r\n  const settoedit = (i) => {\r\n    let data = { ...subStory[i] };\r\n    setsubname(data.Name);\r\n    setfile(data.file);\r\n    setfiletype(data.filetype);\r\n    setdatetime(data.datetime);\r\n    setdescription(data.description);\r\n  };\r\n  const saveedit = async () => {\r\n    let subStorycpy = [...subStory];\r\n    if (\r\n      subname !== \"\" &&\r\n      datetime !== \"\" &&\r\n      description !== \"\" &&\r\n      file !== \"\"\r\n    ) {\r\n      setError(false);\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        file: file,\r\n        filetype: filetype,\r\n      };\r\n      subStorycpy[currentedited] = data;\r\n      await setsubStory([...subStorycpy]);\r\n      dispatch({\r\n        type: SAVESTORY,\r\n        payload: subStory,\r\n      });\r\n      Delete();\r\n      setedit(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12}></Grid>\r\n      <Grid item xs={12}>\r\n        {subStory.map((eve, index) => (\r\n          <Grid\r\n            key={eve.Name + index}\r\n            container\r\n            spacing={0}\r\n            className=\"card-shadow  m-b-10  \"\r\n          >\r\n            <Grid item xs={4} md={3}>\r\n              {edit === true && currentedited === index ? (\r\n                <div {...getRootProps()} className=\"w-100\">\r\n                  <input {...getInputProps()} className=\"w-100\" />\r\n                  {eve.filetype === \"png\" ||\r\n                    eve.filetype === \"jpg\" ||\r\n                    eve.filetype === \"jpeg\" ? (\r\n                    <img\r\n                      src={eve.file === undefined ? \" \" : eve.file}\r\n                      className=\"w-100 story-image\"\r\n                    />\r\n                  ) : (\r\n                    <video\r\n                      src={eve.file === undefined ? \" \" : eve.file}\r\n                      className=\"w-100 story-image\"\r\n                    />\r\n                  )}\r\n                  {isError === true && file === \"\" ? (\r\n                    <span className=\"error\">please add valid image</span>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              ) : eve.filetype === \"png\" ||\r\n                eve.filetype === \"jpg\" ||\r\n                eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  src={eve.file === undefined ? \" \" : eve.file}\r\n                  className=\"w-100  story-image\"\r\n                />\r\n              ) : (\r\n                <video\r\n                  src={eve.file === undefined ? \" \" : eve.file}\r\n                  className=\"w-100  story-image\"\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={8} md={7}>\r\n              <Grid container spacing={0} className=\"m-5px\">\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <TextField\r\n                      className=\"w-100\"\r\n                      label=\"Event Name\"\r\n                      onChange={(e) => {\r\n                        setsubname(e.target.value);\r\n                      }}\r\n                      value={subname}\r\n                      error={isError === true && subname === \"\" ? true : false}\r\n                    />\r\n                  ) : (\r\n                    <h2 className=\"m-0\">{eve.Name}</h2>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <TextField\r\n                      className=\"w-100 m-b-5px \"\r\n                      label=\"Event description\"\r\n                      onChange={(e) => {\r\n                        setdescription(e.target.value);\r\n                      }}\r\n                      value={description}\r\n                      error={\r\n                        isError === true && description === \"\" ? true : false\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <p> {eve.description}</p>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <form noValidate>\r\n                      <TextField\r\n                        id=\"datetime-local\"\r\n                        label=\"Schedule timing\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        className=\"w-100 \"\r\n                        onChange={(e) => {\r\n                          setdatetime(e.target.value);\r\n                        }}\r\n                        value={datetime}\r\n                        error={\r\n                          isError === true && datetime === \"\" ? true : false\r\n                        }\r\n                      />\r\n                    </form>\r\n                  ) : (\r\n                    <Dateformatter Date={eve.datetime} />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <center>\r\n                {edit === true && currentedited === index ? (\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      saveedit();\r\n                    }}\r\n                  >\r\n                    <CheckCircleOutlineIcon color=\"success\" />\r\n                  </IconButton>\r\n                ) : (\r\n                  <>\r\n                    <IconButton\r\n                      onClick={async () => {\r\n                        setedit(true);\r\n                        setadd(false);\r\n                        Delete();\r\n                        await setcurrentedited(index);\r\n                        await settoedit(index);\r\n                      }}\r\n                    >\r\n                      <CreateIcon\r\n                        color=\"inherit\"\r\n                        fontSize={\"large\"}\r\n                        style={{ color: \"green\" }}\r\n                      />\r\n                    </IconButton>\r\n                  </>\r\n                )}\r\n                <IconButton\r\n                  onClick={() => {\r\n                    Deletesingle(index);\r\n                  }}\r\n                >\r\n                  <DeleteForeverIcon color=\"error\" fontSize={\"large\"} />\r\n                </IconButton>\r\n              </center>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={add === false ? \"hide\" : \"show card-shadow m-b-10 \"}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4} md={2}>\r\n            {file === \"\" ? (\r\n              <div {...getRootProps()} className=\"w-100\">\r\n                <input {...getInputProps()} className=\"w-100\" />\r\n                <img\r\n                  src={Gallery}\r\n                  className=\"w-100 uploadhere\"\r\n                  className=\"w-100\"\r\n                />\r\n              </div>\r\n            ) : filetype === \"png\" ||\r\n              filetype === \"jpg\" ||\r\n              filetype === \"jpeg\" ? (\r\n              <img src={file} className=\"w-100 story-image\" />\r\n            ) : (\r\n              <div {...getRootProps()} className=\"w-100\">\r\n                <input {...getInputProps()} className=\"w-100\" />\r\n                <video src={file} className=\"w-100  story-image\" />\r\n              </div>\r\n            )}\r\n            {isError === true && file === \"\" ? (\r\n              <span className=\"error\">please add valid image</span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={8} md={8} className=\"\">\r\n            <TextField\r\n              className=\"w-100\"\r\n              label=\"Event Name\"\r\n              onChange={(e) => {\r\n                setsubname(e.target.value);\r\n              }}\r\n              value={subname}\r\n              error={isError === true && subname === \"\" ? true : false}\r\n            />\r\n\r\n            <TextField\r\n              className=\"w-100 m-b-5px \"\r\n              label=\"Event description\"\r\n              onChange={(e) => {\r\n                setdescription(e.target.value);\r\n              }}\r\n              value={description}\r\n              error={isError === true && description === \"\" ? true : false}\r\n              inputProps={{ maxLength: 120 }}\r\n            />\r\n\r\n            <form noValidate>\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                label=\"Schedule timing\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24T10:30\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                className=\"w-100 \"\r\n                onChange={(e) => {\r\n                  setdatetime(e.target.value);\r\n                }}\r\n                error={isError === true && datetime === \"\" ? true : false}\r\n                value={datetime}\r\n              />\r\n            </form>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <center>\r\n              <IconButton\r\n                onClick={() => {\r\n                  save();\r\n                }}\r\n              >\r\n                <CheckCircleOutlineIcon\r\n                  color=\"inherit\"\r\n                  fontSize={\"large\"}\r\n                  style={{ color: \"green\" }}\r\n                />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => {\r\n                  Delete();\r\n                }}\r\n              >\r\n                <DeleteForeverIcon color=\"error\" fontSize={\"large\"} />\r\n              </IconButton>\r\n            </center>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <button\r\n          class=\"btn save-event m-5px\"\r\n          onClick={() => {\r\n            props.SetName(\"Album\");\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <center>\r\n          <AddCircleRoundedIcon\r\n            fontSize=\"large\"\r\n            className=\"add-button bottom\"\r\n            onClick={() => {\r\n              Delete();\r\n              setcurrentedited(\"\");\r\n              setedit(false);\r\n              setadd(true);\r\n            }}\r\n          />\r\n        </center>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\Extras\\Album.js",["2623","2624","2625","2626","2627","2628","2629","2630"],"C:\\Projects\\MobillyInvite\\src\\Redux\\DispatchFuncitons\\EventCreationFormFunction.js",["2631"],"C:\\Projects\\MobillyInvite\\src\\Components\\AddEvent\\AddDetails\\AddDetails.js",["2632","2633","2634","2635","2636","2637"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddDetails.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport Back from \"../../../Assets/Back.svg\";\r\nimport BackNavBar from \"../../Helpers/BackNavbar/BackNavBar\";\r\nimport AddSchedule from \"../Extras/Schedule\";\r\nimport Album from \"../Extras/Album\";\r\nimport Story from \"../Extras/Story\";\r\nimport history from \"../../../Utils/History\";\r\nexport default function AddDetails(props) {\r\n  const [Name, SetName] = useState(props.Name);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\r\n\r\n      <BackNavBar\r\n        logo={<img src={Back} />}\r\n        Name={\"Add \" + Name}\r\n        functionality={() => {\r\n          props.open(false);\r\n        }}\r\n        icon={\r\n          <button\r\n            className=\"Skip-button\"\r\n            onClick={() => {\r\n              props.open(false);\r\n            }}\r\n          >\r\n            Skip\r\n          </button>\r\n        }\r\n      />\r\n      <Grid container spacing={0} style={{ marginTop: 10 }}>\r\n        <Grid item xs={12} className=\"tab-header\"></Grid>\r\n        <Grid item xs={false} sm={2} md={2} />\r\n\r\n        <Grid item xs={12} sm={8} md={8} className=\"p-15px pt-0\">\r\n          <Grid container spacing={0} className=\"DetailHeader\">\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Schedule\");\r\n              }}\r\n              className={\r\n                Name === \"Schedule\" ? \"l-blue-t tac u theme-font\" : \"tac\"\r\n              }\r\n            >\r\n              Schedule\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Story\");\r\n              }}\r\n              className={\r\n                props.SelectedEvent === 0\r\n                  ? Name === \"Story\"\r\n                    ? \"tac show l-blue-t u theme-font\"\r\n                    : \"tac show theme-font\"\r\n                  : \"tac hide\"\r\n              }\r\n            >\r\n              Our Story\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Album\");\r\n              }}\r\n              className={\r\n                props.SelectedEvent === 0\r\n                  ? Name === \"Album\"\r\n                    ? \"tac show l-blue-t u theme-font\"\r\n                    : \"tac show theme-font\"\r\n                  : \"tac hide\"\r\n              }\r\n            >\r\n              Album\r\n            </Grid>\r\n          </Grid>\r\n          {Name === \"Schedule\" ? (\r\n            <AddSchedule\r\n              data={props.data}\r\n              setEvents={props.setEvents}\r\n              SelectEvent={props.SelectEvent}\r\n              SelectedEvent={props.SelectedEvent}\r\n              CurrentEventDetails={props.CurrentEventDetails}\r\n              Events={props.Events}\r\n              SelectedEvent={props.SelectedEvent}\r\n              SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n              SetScheduleVisible={props.SetScheduleVisible}\r\n              SetName={SetName}\r\n            />\r\n          ) : (\r\n            <>\r\n              {Name === \"Story\" ? (\r\n                <Story\r\n                  data={props.data}\r\n                  setEvents={props.setEvents}\r\n                  SelectEvent={props.SelectEvent}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  CurrentEventDetails={props.CurrentEventDetails}\r\n                  Events={props.Events}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n                  SetScheduleVisible={props.SetScheduleVisible}\r\n                  SetName={SetName}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {Name === \"Album\" ? (\r\n                <Album\r\n                  data={props.data}\r\n                  setEvents={props.setEvents}\r\n                  SelectEvent={props.SelectEvent}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  CurrentEventDetails={props.CurrentEventDetails}\r\n                  Events={props.Events}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n                  open={props.open}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={false} sm={2} md={2} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\MobillyInvite\\src\\Components\\Helpers\\DateFormatter\\Dateformatter.js",["2638","2639"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport default function Dateformatter(props) {\r\n    const [FormattedDate, setFormattedDate] = useState(\"\")\r\n    const [Months, setMonths] = useState(['NIL', 'Jan', 'Feb', 'March'\r\n        , 'April', 'May', 'June', 'July', 'August', 'Sept', 'Oct', 'Nov', 'Dec'])\r\n    useEffect(() => {\r\n\r\n        if (props.Date !== \"\") {\r\n            //  2021 - 07 - 23 21: 06\r\n            let type = \"am\"\r\n            let hour = props.Date.split(\" \")[1].split(\":\")[0]\r\n            if (parseInt(hour) > 12) {\r\n                hour = hour - 12;\r\n                type = \"pm\"\r\n            }\r\n            let time = hour + \":\" + props.Date.split(\" \")[1].split(\":\")[1]\r\n            let date = props.Date.split(\" \")[0]\r\n            date = date.split(\"-\")\r\n            date = date[2] + \" \" + Months[parseInt(date[1])] + \" \" + date[0]\r\n            setFormattedDate(date + \" \" + time + \" \" + type)\r\n        }\r\n    }, [props.Date])\r\n    return (\r\n        <>\r\n            {FormattedDate}\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"2640","replacedBy":"2641"},{"ruleId":"2642","replacedBy":"2643"},{"ruleId":"2644","severity":1,"message":"2645","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2648","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2649","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2650","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2651","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2652","line":20,"column":8,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2653","line":24,"column":8,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2654","line":27,"column":8,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2655","line":38,"column":8,"nodeType":"2646","messageId":"2647","endLine":38,"endColumn":10},{"ruleId":"2656","severity":1,"message":"2657","line":17,"column":13,"nodeType":"2658","endLine":30,"endColumn":4},{"ruleId":"2644","severity":1,"message":"2659","line":22,"column":9,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2660","line":30,"column":6,"nodeType":"2661","endLine":30,"endColumn":8,"suggestions":"2662"},{"ruleId":"2656","severity":1,"message":"2657","line":31,"column":13,"nodeType":"2658","endLine":41,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2660","line":41,"column":6,"nodeType":"2661","endLine":41,"endColumn":23,"suggestions":"2663"},{"ruleId":"2644","severity":1,"message":"2664","line":13,"column":10,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2657","line":22,"column":13,"nodeType":"2658","endLine":43,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2665","line":43,"column":6,"nodeType":"2661","endLine":43,"endColumn":8,"suggestions":"2666"},{"ruleId":"2656","severity":1,"message":"2657","line":44,"column":13,"nodeType":"2658","endLine":52,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2660","line":52,"column":6,"nodeType":"2661","endLine":52,"endColumn":8,"suggestions":"2667"},{"ruleId":"2644","severity":1,"message":"2668","line":1,"column":10,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2669","line":1,"column":18,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2670","line":2,"column":17,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2671","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2672","line":4,"column":18,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2673","line":7,"column":8,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2674","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":21},{"ruleId":"2675","severity":1,"message":"2676","line":16,"column":29,"nodeType":"2658","messageId":"2677","endLine":16,"endColumn":31},{"ruleId":"2656","severity":1,"message":"2678","line":19,"column":6,"nodeType":"2661","endLine":19,"endColumn":8,"suggestions":"2679"},{"ruleId":"2680","severity":1,"message":"2681","line":43,"column":98,"nodeType":"2682","messageId":"2683","endLine":43,"endColumn":99},{"ruleId":"2684","severity":1,"message":"2685","line":49,"column":11,"nodeType":"2686","endLine":49,"endColumn":56},{"ruleId":"2644","severity":1,"message":"2687","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2688","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2689","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2690","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2691","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2692","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2668","line":20,"column":8,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2693","line":25,"column":20,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":31},{"ruleId":"2644","severity":1,"message":"2694","line":27,"column":10,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2695","line":57,"column":6,"nodeType":"2661","endLine":57,"endColumn":8,"suggestions":"2696"},{"ruleId":"2684","severity":1,"message":"2685","line":84,"column":15,"nodeType":"2686","endLine":84,"endColumn":54},{"ruleId":"2684","severity":1,"message":"2685","line":152,"column":17,"nodeType":"2686","endLine":152,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2697","line":17,"column":9,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2698","line":77,"column":9,"nodeType":"2646","messageId":"2647","endLine":77,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2699","line":121,"column":7,"nodeType":"2646","messageId":"2647","endLine":121,"endColumn":28},{"ruleId":"2675","severity":1,"message":"2676","line":169,"column":33,"nodeType":"2658","messageId":"2677","endLine":169,"endColumn":35},{"ruleId":"2680","severity":1,"message":"2681","line":177,"column":29,"nodeType":"2682","messageId":"2683","endLine":177,"endColumn":30},{"ruleId":"2656","severity":1,"message":"2657","line":185,"column":13,"nodeType":"2658","endLine":187,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2700","line":187,"column":6,"nodeType":"2661","endLine":187,"endColumn":8,"suggestions":"2701"},{"ruleId":"2684","severity":1,"message":"2685","line":245,"column":15,"nodeType":"2686","endLine":245,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2702","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2703","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2704","line":8,"column":10,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2705","line":8,"column":16,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2706","line":9,"column":10,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2707","line":9,"column":19,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2708","line":10,"column":9,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":17},{"ruleId":"2684","severity":1,"message":"2685","line":13,"column":7,"nodeType":"2686","endLine":17,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2709","line":33,"column":9,"nodeType":"2646","messageId":"2647","endLine":33,"endColumn":13},{"ruleId":"2656","severity":1,"message":"2660","line":46,"column":6,"nodeType":"2661","endLine":46,"endColumn":8,"suggestions":"2710"},{"ruleId":"2656","severity":1,"message":"2657","line":20,"column":13,"nodeType":"2658","endLine":43,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2711","line":43,"column":6,"nodeType":"2661","endLine":43,"endColumn":31,"suggestions":"2712"},{"ruleId":"2644","severity":1,"message":"2713","line":49,"column":10,"nodeType":"2646","messageId":"2647","endLine":49,"endColumn":20},{"ruleId":"2656","severity":1,"message":"2714","line":73,"column":6,"nodeType":"2661","endLine":73,"endColumn":17,"suggestions":"2715"},{"ruleId":"2644","severity":1,"message":"2716","line":7,"column":8,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":11},{"ruleId":"2644","severity":1,"message":"2717","line":15,"column":10,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2657","line":24,"column":13,"nodeType":"2658","endLine":43,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2718","line":43,"column":6,"nodeType":"2661","endLine":43,"endColumn":8,"suggestions":"2719"},{"ruleId":"2684","severity":1,"message":"2685","line":112,"column":13,"nodeType":"2686","endLine":112,"endColumn":62},{"ruleId":"2644","severity":1,"message":"2720","line":1,"column":38,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2721","line":4,"column":3,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2687","line":5,"column":3,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":7},{"ruleId":"2644","severity":1,"message":"2688","line":6,"column":3,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":11},{"ruleId":"2644","severity":1,"message":"2722","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2689","line":8,"column":3,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2723","line":9,"column":3,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2724","line":10,"column":3,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2725","line":11,"column":3,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":10},{"ruleId":"2644","severity":1,"message":"2672","line":12,"column":3,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2726","line":13,"column":3,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2727","line":26,"column":9,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2728","line":32,"column":10,"nodeType":"2646","messageId":"2647","endLine":32,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2729","line":44,"column":10,"nodeType":"2646","messageId":"2647","endLine":44,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2657","line":58,"column":13,"nodeType":"2658","endLine":88,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2730","line":68,"column":21,"nodeType":"2731","endLine":68,"endColumn":52},{"ruleId":"2675","severity":1,"message":"2676","line":78,"column":35,"nodeType":"2658","messageId":"2677","endLine":78,"endColumn":37},{"ruleId":"2675","severity":1,"message":"2676","line":79,"column":52,"nodeType":"2658","messageId":"2677","endLine":79,"endColumn":54},{"ruleId":"2644","severity":1,"message":"2732","line":95,"column":9,"nodeType":"2646","messageId":"2647","endLine":95,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2733","line":96,"column":9,"nodeType":"2646","messageId":"2647","endLine":96,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2720","line":1,"column":38,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2668","line":3,"column":31,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2734","line":4,"column":10,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2735","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2736","line":15,"column":10,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2737","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2738","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2739","line":24,"column":12,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":22},{"ruleId":"2656","severity":1,"message":"2657","line":61,"column":15,"nodeType":"2658","endLine":96,"endColumn":6},{"ruleId":"2656","severity":1,"message":"2740","line":96,"column":8,"nodeType":"2661","endLine":96,"endColumn":33,"suggestions":"2741"},{"ruleId":"2675","severity":1,"message":"2676","line":102,"column":31,"nodeType":"2658","messageId":"2677","endLine":102,"endColumn":33},{"ruleId":"2656","severity":1,"message":"2742","line":115,"column":8,"nodeType":"2661","endLine":115,"endColumn":19,"suggestions":"2743"},{"ruleId":"2644","severity":1,"message":"2744","line":116,"column":11,"nodeType":"2646","messageId":"2647","endLine":116,"endColumn":15},{"ruleId":"2680","severity":1,"message":"2681","line":119,"column":76,"nodeType":"2682","messageId":"2683","endLine":119,"endColumn":77},{"ruleId":"2684","severity":1,"message":"2685","line":164,"column":43,"nodeType":"2686","endLine":164,"endColumn":92},{"ruleId":"2644","severity":1,"message":"2745","line":15,"column":8,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2746","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2747","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":12},{"ruleId":"2656","severity":1,"message":"2657","line":35,"column":13,"nodeType":"2658","endLine":55,"endColumn":4},{"ruleId":"2675","severity":1,"message":"2676","line":46,"column":41,"nodeType":"2658","messageId":"2677","endLine":46,"endColumn":43},{"ruleId":"2656","severity":1,"message":"2748","line":55,"column":6,"nodeType":"2661","endLine":55,"endColumn":23,"suggestions":"2749"},{"ruleId":"2656","severity":1,"message":"2657","line":56,"column":13,"nodeType":"2658","endLine":92,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2750","line":92,"column":6,"nodeType":"2661","endLine":92,"endColumn":8,"suggestions":"2751"},{"ruleId":"2752","severity":1,"message":"2753","line":209,"column":19,"nodeType":"2686","endLine":209,"endColumn":63},{"ruleId":"2644","severity":1,"message":"2754","line":5,"column":21,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2668","line":5,"column":27,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2755","line":5,"column":45,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":51},{"ruleId":"2644","severity":1,"message":"2756","line":6,"column":22,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2757","line":16,"column":12,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2758","line":16,"column":20,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":29},{"ruleId":"2656","severity":1,"message":"2657","line":21,"column":15,"nodeType":"2658","endLine":44,"endColumn":6},{"ruleId":"2656","severity":1,"message":"2711","line":44,"column":8,"nodeType":"2661","endLine":44,"endColumn":33,"suggestions":"2759"},{"ruleId":"2684","severity":1,"message":"2685","line":64,"column":53,"nodeType":"2686","endLine":64,"endColumn":105},{"ruleId":"2684","severity":1,"message":"2685","line":91,"column":25,"nodeType":"2686","endLine":91,"endColumn":74},{"ruleId":"2644","severity":1,"message":"2760","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2761","line":4,"column":46,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2762","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2763","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2764","line":10,"column":10,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2765","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2766","line":13,"column":19,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2767","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2756","line":18,"column":10,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2768","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2769","line":20,"column":10,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2770","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2771","line":23,"column":8,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2772","line":28,"column":8,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2773","line":29,"column":10,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2774","line":30,"column":8,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2672","line":31,"column":10,"nodeType":"2646","messageId":"2647","endLine":31,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2775","line":43,"column":7,"nodeType":"2646","messageId":"2647","endLine":43,"endColumn":12},{"ruleId":"2656","severity":1,"message":"2657","line":67,"column":13,"nodeType":"2658","endLine":95,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2776","line":95,"column":6,"nodeType":"2661","endLine":95,"endColumn":31,"suggestions":"2777"},{"ruleId":"2644","severity":1,"message":"2778","line":136,"column":11,"nodeType":"2646","messageId":"2647","endLine":136,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2779","line":136,"column":25,"nodeType":"2646","messageId":"2647","endLine":136,"endColumn":38},{"ruleId":"2644","severity":1,"message":"2780","line":136,"column":40,"nodeType":"2646","messageId":"2647","endLine":136,"endColumn":52},{"ruleId":"2644","severity":1,"message":"2781","line":176,"column":9,"nodeType":"2646","messageId":"2647","endLine":176,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2782","line":186,"column":11,"nodeType":"2646","messageId":"2647","endLine":186,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2783","line":223,"column":6,"nodeType":"2661","endLine":223,"endColumn":17,"suggestions":"2784"},{"ruleId":"2656","severity":1,"message":"2785","line":228,"column":6,"nodeType":"2661","endLine":228,"endColumn":14,"suggestions":"2786"},{"ruleId":"2644","severity":1,"message":"2787","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2788","line":14,"column":10,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2789","line":27,"column":10,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":15},{"ruleId":"2656","severity":1,"message":"2790","line":54,"column":6,"nodeType":"2661","endLine":54,"endColumn":8,"suggestions":"2791"},{"ruleId":"2656","severity":1,"message":"2657","line":66,"column":13,"nodeType":"2658","endLine":93,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2730","line":74,"column":21,"nodeType":"2731","endLine":74,"endColumn":59},{"ruleId":"2656","severity":1,"message":"2792","line":75,"column":16,"nodeType":"2793","endLine":75,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2717","line":80,"column":9,"nodeType":"2646","messageId":"2647","endLine":80,"endColumn":13},{"ruleId":"2656","severity":1,"message":"2794","line":114,"column":6,"nodeType":"2661","endLine":114,"endColumn":26,"suggestions":"2795"},{"ruleId":"2656","severity":1,"message":"2796","line":214,"column":6,"nodeType":"2661","endLine":214,"endColumn":8,"suggestions":"2797"},{"ruleId":"2644","severity":1,"message":"2798","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2799","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":17},{"ruleId":"2656","severity":1,"message":"2657","line":28,"column":13,"nodeType":"2658","endLine":36,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2800","line":36,"column":6,"nodeType":"2661","endLine":36,"endColumn":8,"suggestions":"2801"},{"ruleId":"2644","severity":1,"message":"2802","line":59,"column":9,"nodeType":"2646","messageId":"2647","endLine":59,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2803","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2804","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2746","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2747","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2805","line":16,"column":9,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2745","line":20,"column":8,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2806","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2807","line":26,"column":18,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":32},{"ruleId":"2644","severity":1,"message":"2808","line":26,"column":34,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":43},{"ruleId":"2644","severity":1,"message":"2809","line":31,"column":8,"nodeType":"2646","messageId":"2647","endLine":31,"endColumn":15},{"ruleId":"2656","severity":1,"message":"2657","line":61,"column":13,"nodeType":"2658","endLine":88,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2810","line":88,"column":6,"nodeType":"2661","endLine":88,"endColumn":23,"suggestions":"2811"},{"ruleId":"2812","severity":1,"message":"2813","line":235,"column":45,"nodeType":"2682","messageId":"2814","endLine":235,"endColumn":47},{"ruleId":"2752","severity":1,"message":"2753","line":313,"column":19,"nodeType":"2686","endLine":313,"endColumn":63},{"ruleId":"2656","severity":1,"message":"2815","line":354,"column":6,"nodeType":"2661","endLine":354,"endColumn":22,"suggestions":"2816"},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2668","line":10,"column":27,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2818","line":10,"column":35,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2819","line":10,"column":46,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2820","line":16,"column":23,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2821","line":17,"column":10,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2717","line":64,"column":5,"nodeType":"2646","messageId":"2647","endLine":64,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2822","line":95,"column":18,"nodeType":"2646","messageId":"2647","endLine":95,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2823","line":97,"column":19,"nodeType":"2646","messageId":"2647","endLine":97,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2824","line":98,"column":10,"nodeType":"2646","messageId":"2647","endLine":98,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2825","line":98,"column":20,"nodeType":"2646","messageId":"2647","endLine":98,"endColumn":31},{"ruleId":"2644","severity":1,"message":"2826","line":105,"column":9,"nodeType":"2646","messageId":"2647","endLine":105,"endColumn":14},{"ruleId":"2684","severity":1,"message":"2685","line":132,"column":7,"nodeType":"2686","endLine":144,"endColumn":9},{"ruleId":"2827","severity":1,"message":"2828","line":153,"column":9,"nodeType":"2829","endLine":153,"endColumn":41},{"ruleId":"2830","severity":1,"message":"2831","line":199,"column":19,"nodeType":"2832","messageId":"2814","endLine":199,"endColumn":24},{"ruleId":"2830","severity":1,"message":"2831","line":243,"column":17,"nodeType":"2832","messageId":"2814","endLine":243,"endColumn":22},{"ruleId":"2830","severity":1,"message":"2831","line":291,"column":17,"nodeType":"2832","messageId":"2814","endLine":291,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2833","line":6,"column":3,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2834","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":6},{"ruleId":"2644","severity":1,"message":"2835","line":8,"column":3,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":7},{"ruleId":"2644","severity":1,"message":"2836","line":14,"column":8,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2837","line":22,"column":3,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2838","line":26,"column":10,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2839","line":26,"column":22,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":30},{"ruleId":"2644","severity":1,"message":"2840","line":26,"column":32,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":47},{"ruleId":"2644","severity":1,"message":"2841","line":34,"column":10,"nodeType":"2646","messageId":"2647","endLine":34,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2717","line":36,"column":10,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2842","line":47,"column":9,"nodeType":"2646","messageId":"2647","endLine":47,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2657","line":52,"column":13,"nodeType":"2658","endLine":59,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2843","line":53,"column":17,"nodeType":"2844","endLine":53,"endColumn":71},{"ruleId":"2656","severity":1,"message":"2657","line":111,"column":13,"nodeType":"2658","endLine":182,"endColumn":4},{"ruleId":"2675","severity":1,"message":"2676","line":141,"column":25,"nodeType":"2658","messageId":"2677","endLine":141,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2845","line":155,"column":9,"nodeType":"2646","messageId":"2647","endLine":155,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2846","line":178,"column":7,"nodeType":"2646","messageId":"2647","endLine":178,"endColumn":12},{"ruleId":"2656","severity":1,"message":"2847","line":182,"column":6,"nodeType":"2661","endLine":182,"endColumn":16,"suggestions":"2848"},{"ruleId":"2812","severity":1,"message":"2813","line":188,"column":17,"nodeType":"2682","messageId":"2814","endLine":188,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2849","line":201,"column":11,"nodeType":"2646","messageId":"2647","endLine":201,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2850","line":238,"column":11,"nodeType":"2646","messageId":"2647","endLine":238,"endColumn":23},{"ruleId":"2675","severity":1,"message":"2676","line":246,"column":26,"nodeType":"2658","messageId":"2677","endLine":246,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2833","line":2,"column":31,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2851","line":12,"column":10,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2657","line":29,"column":13,"nodeType":"2658","endLine":134,"endColumn":4},{"ruleId":"2675","severity":1,"message":"2676","line":87,"column":27,"nodeType":"2658","messageId":"2677","endLine":87,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2845","line":105,"column":11,"nodeType":"2646","messageId":"2647","endLine":105,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2846","line":127,"column":9,"nodeType":"2646","messageId":"2647","endLine":127,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2852","line":134,"column":6,"nodeType":"2661","endLine":134,"endColumn":31,"suggestions":"2853"},{"ruleId":"2644","severity":1,"message":"2854","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2855","line":12,"column":10,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2717","line":20,"column":10,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2657","line":28,"column":13,"nodeType":"2658","endLine":59,"endColumn":4},{"ruleId":"2856","severity":1,"message":"2857","line":49,"column":13,"nodeType":"2646","messageId":"2858","endLine":49,"endColumn":17},{"ruleId":"2856","severity":1,"message":"2859","line":50,"column":18,"nodeType":"2646","messageId":"2858","endLine":50,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2860","line":59,"column":6,"nodeType":"2661","endLine":59,"endColumn":31,"suggestions":"2861"},{"ruleId":"2752","severity":1,"message":"2862","line":88,"column":9,"nodeType":"2686","endLine":93,"endColumn":10},{"ruleId":"2680","severity":1,"message":"2681","line":91,"column":32,"nodeType":"2682","messageId":"2683","endLine":91,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2862","line":131,"column":11,"nodeType":"2686","endLine":136,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2681","line":134,"column":41,"nodeType":"2682","messageId":"2683","endLine":134,"endColumn":42},{"ruleId":"2752","severity":1,"message":"2862","line":182,"column":9,"nodeType":"2686","endLine":182,"endColumn":36},{"ruleId":"2752","severity":1,"message":"2862","line":198,"column":9,"nodeType":"2686","endLine":198,"endColumn":75},{"ruleId":"2644","severity":1,"message":"2863","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2864","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2865","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2760","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2691","line":11,"column":16,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2821","line":17,"column":10,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2866","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2717","line":32,"column":10,"nodeType":"2646","messageId":"2647","endLine":32,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2867","line":35,"column":10,"nodeType":"2646","messageId":"2647","endLine":35,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2868","line":36,"column":10,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2869","line":45,"column":10,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2870","line":45,"column":15,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2871","line":58,"column":10,"nodeType":"2646","messageId":"2647","endLine":58,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2698","line":76,"column":9,"nodeType":"2646","messageId":"2647","endLine":76,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2699","line":116,"column":7,"nodeType":"2646","messageId":"2647","endLine":116,"endColumn":28},{"ruleId":"2656","severity":1,"message":"2657","line":170,"column":13,"nodeType":"2658","endLine":172,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2872","line":172,"column":6,"nodeType":"2661","endLine":172,"endColumn":8,"suggestions":"2873"},{"ruleId":"2656","severity":1,"message":"2874","line":227,"column":6,"nodeType":"2661","endLine":227,"endColumn":21,"suggestions":"2875"},{"ruleId":"2644","severity":1,"message":"2780","line":370,"column":40,"nodeType":"2646","messageId":"2647","endLine":370,"endColumn":52},{"ruleId":"2675","severity":1,"message":"2676","line":380,"column":33,"nodeType":"2658","messageId":"2677","endLine":380,"endColumn":35},{"ruleId":"2644","severity":1,"message":"2876","line":386,"column":7,"nodeType":"2646","messageId":"2647","endLine":386,"endColumn":12},{"ruleId":"2656","severity":1,"message":"2657","line":395,"column":13,"nodeType":"2658","endLine":397,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2877","line":397,"column":6,"nodeType":"2661","endLine":397,"endColumn":15,"suggestions":"2878"},{"ruleId":"2827","severity":1,"message":"2828","line":419,"column":15,"nodeType":"2829","endLine":419,"endColumn":33},{"ruleId":"2684","severity":1,"message":"2685","line":518,"column":21,"nodeType":"2686","endLine":524,"endColumn":23},{"ruleId":"2684","severity":1,"message":"2685","line":533,"column":21,"nodeType":"2686","endLine":536,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2820","line":3,"column":23,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2668","line":5,"column":31,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2854","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":19},{"ruleId":"2752","severity":1,"message":"2862","line":48,"column":13,"nodeType":"2686","endLine":55,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2809","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2807","line":12,"column":21,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":35},{"ruleId":"2644","severity":1,"message":"2879","line":17,"column":19,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2717","line":23,"column":10,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2880","line":23,"column":16,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2881","line":26,"column":10,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2657","line":32,"column":13,"nodeType":"2658","endLine":101,"endColumn":4},{"ruleId":"2675","severity":1,"message":"2676","line":50,"column":32,"nodeType":"2658","messageId":"2677","endLine":50,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2846","line":87,"column":11,"nodeType":"2646","messageId":"2647","endLine":87,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2882","line":101,"column":6,"nodeType":"2661","endLine":101,"endColumn":16,"suggestions":"2883"},{"ruleId":"2752","severity":1,"message":"2753","line":99,"column":15,"nodeType":"2686","endLine":99,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2884","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2772","line":7,"column":8,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2885","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2886","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2887","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2888","line":15,"column":8,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2660","line":54,"column":6,"nodeType":"2661","endLine":54,"endColumn":22,"suggestions":"2889"},{"ruleId":"2644","severity":1,"message":"2723","line":2,"column":16,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2890","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2891","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2892","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2884","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2893","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2894","line":21,"column":21,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":36},{"ruleId":"2656","severity":1,"message":"2657","line":23,"column":13,"nodeType":"2658","endLine":28,"endColumn":4},{"ruleId":"2644","severity":1,"message":"2895","line":25,"column":9,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":16},{"ruleId":"2684","severity":1,"message":"2685","line":32,"column":12,"nodeType":"2686","endLine":32,"endColumn":50},{"ruleId":"2684","severity":1,"message":"2685","line":61,"column":100,"nodeType":"2686","endLine":71,"endColumn":13},{"ruleId":"2812","severity":1,"message":"2896","line":66,"column":25,"nodeType":"2682","messageId":"2814","endLine":66,"endColumn":27},{"ruleId":"2812","severity":1,"message":"2896","line":66,"column":44,"nodeType":"2682","messageId":"2814","endLine":66,"endColumn":46},{"ruleId":"2812","severity":1,"message":"2896","line":81,"column":27,"nodeType":"2682","messageId":"2814","endLine":81,"endColumn":29},{"ruleId":"2812","severity":1,"message":"2896","line":81,"column":46,"nodeType":"2682","messageId":"2814","endLine":81,"endColumn":48},{"ruleId":"2812","severity":1,"message":"2896","line":119,"column":31,"nodeType":"2682","messageId":"2814","endLine":119,"endColumn":33},{"ruleId":"2812","severity":1,"message":"2896","line":119,"column":50,"nodeType":"2682","messageId":"2814","endLine":119,"endColumn":52},{"ruleId":"2644","severity":1,"message":"2897","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2898","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2899","line":5,"column":21,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":29},{"ruleId":"2900","severity":1,"message":"2901","line":15,"column":7,"nodeType":"2902","messageId":"2903","endLine":15,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2904","line":73,"column":19,"nodeType":"2646","messageId":"2647","endLine":73,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2905","line":4,"column":3,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2906","line":5,"column":3,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":16},{"ruleId":"2900","severity":1,"message":"2901","line":12,"column":7,"nodeType":"2902","messageId":"2903","endLine":12,"endColumn":24},{"ruleId":"2900","severity":1,"message":"2901","line":10,"column":13,"nodeType":"2907","messageId":"2903","endLine":10,"endColumn":19},{"ruleId":"2900","severity":1,"message":"2901","line":13,"column":13,"nodeType":"2907","messageId":"2903","endLine":13,"endColumn":19},{"ruleId":"2675","severity":1,"message":"2676","line":20,"column":27,"nodeType":"2658","messageId":"2677","endLine":20,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2908","line":1,"column":10,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2909","line":47,"column":7,"nodeType":"2646","messageId":"2647","endLine":47,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2890","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2891","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2656","severity":1,"message":"2657","line":16,"column":13,"nodeType":"2658","endLine":19,"endColumn":4},{"ruleId":"2684","severity":1,"message":"2685","line":23,"column":12,"nodeType":"2686","endLine":23,"endColumn":50},{"ruleId":"2684","severity":1,"message":"2685","line":46,"column":100,"nodeType":"2686","endLine":52,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2910","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2911","line":48,"column":10,"nodeType":"2646","messageId":"2647","endLine":48,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2912","line":48,"column":16,"nodeType":"2646","messageId":"2647","endLine":48,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2893","line":51,"column":10,"nodeType":"2646","messageId":"2647","endLine":51,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2894","line":51,"column":21,"nodeType":"2646","messageId":"2647","endLine":51,"endColumn":36},{"ruleId":"2827","severity":1,"message":"2828","line":57,"column":7,"nodeType":"2829","endLine":57,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2913","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2914","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2915","line":3,"column":10,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2916","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2917","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2918","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":17},{"ruleId":"2684","severity":1,"message":"2685","line":19,"column":19,"nodeType":"2686","endLine":22,"endColumn":21},{"ruleId":"2684","severity":1,"message":"2685","line":45,"column":19,"nodeType":"2686","endLine":48,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2919","line":13,"column":10,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2908","line":14,"column":10,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2898","line":15,"column":8,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2920","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2708","line":21,"column":9,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2818","line":7,"column":10,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2919","line":10,"column":10,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2708","line":13,"column":9,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2921","line":10,"column":10,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2922","line":4,"column":10,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2915","line":4,"column":34,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2923","line":4,"column":46,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":57},{"ruleId":"2752","severity":1,"message":"2753","line":22,"column":13,"nodeType":"2686","endLine":22,"endColumn":48},{"ruleId":"2752","severity":1,"message":"2753","line":28,"column":13,"nodeType":"2686","endLine":28,"endColumn":48},{"ruleId":"2644","severity":1,"message":"2924","line":11,"column":18,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2925","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2709","line":30,"column":9,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":13},{"ruleId":"2656","severity":1,"message":"2660","line":43,"column":6,"nodeType":"2661","endLine":43,"endColumn":8,"suggestions":"2926"},{"ruleId":"2684","severity":1,"message":"2685","line":54,"column":11,"nodeType":"2686","endLine":54,"endColumn":56},{"ruleId":"2684","severity":1,"message":"2685","line":116,"column":13,"nodeType":"2686","endLine":116,"endColumn":62},{"ruleId":"2684","severity":1,"message":"2685","line":181,"column":13,"nodeType":"2686","endLine":181,"endColumn":62},{"ruleId":"2644","severity":1,"message":"2927","line":1,"column":8,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2928","line":2,"column":10,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2898","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":15},{"ruleId":"2656","severity":1,"message":"2929","line":44,"column":6,"nodeType":"2661","endLine":44,"endColumn":8,"suggestions":"2930"},{"ruleId":"2644","severity":1,"message":"2780","line":46,"column":40,"nodeType":"2646","messageId":"2647","endLine":46,"endColumn":52},{"ruleId":"2812","severity":1,"message":"2896","line":66,"column":18,"nodeType":"2682","messageId":"2814","endLine":66,"endColumn":20},{"ruleId":"2684","severity":1,"message":"2685","line":67,"column":13,"nodeType":"2686","endLine":67,"endColumn":51},{"ruleId":"2684","severity":1,"message":"2685","line":69,"column":13,"nodeType":"2686","endLine":69,"endColumn":52},{"ruleId":"2656","severity":1,"message":"2931","line":57,"column":6,"nodeType":"2661","endLine":57,"endColumn":39,"suggestions":"2932"},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2933","line":5,"column":21,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":32},{"ruleId":"2644","severity":1,"message":"2672","line":3,"column":18,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2934","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2935","line":8,"column":10,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2708","line":11,"column":9,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":17},{"ruleId":"2656","severity":1,"message":"2936","line":26,"column":6,"nodeType":"2661","endLine":26,"endColumn":8,"suggestions":"2937"},{"ruleId":"2644","severity":1,"message":"2938","line":3,"column":10,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2820","line":8,"column":23,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2939","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2940","line":12,"column":25,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2941","line":15,"column":9,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2942","line":30,"column":6,"nodeType":"2661","endLine":30,"endColumn":23,"suggestions":"2943"},{"ruleId":"2752","severity":1,"message":"2862","line":43,"column":11,"nodeType":"2686","endLine":43,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2940","line":4,"column":25,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2939","line":5,"column":10,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2818","line":10,"column":10,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2819","line":10,"column":21,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2716","line":10,"column":26,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2944","line":10,"column":31,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":39},{"ruleId":"2644","severity":1,"message":"2945","line":10,"column":41,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":55},{"ruleId":"2644","severity":1,"message":"2946","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2820","line":13,"column":23,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2947","line":18,"column":10,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2693","line":18,"column":20,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":31},{"ruleId":"2644","severity":1,"message":"2948","line":19,"column":21,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2949","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":16},{"ruleId":"2675","severity":1,"message":"2676","line":25,"column":48,"nodeType":"2658","messageId":"2677","endLine":25,"endColumn":50},{"ruleId":"2656","severity":1,"message":"2810","line":32,"column":6,"nodeType":"2661","endLine":32,"endColumn":23,"suggestions":"2950"},{"ruleId":"2680","severity":1,"message":"2681","line":60,"column":61,"nodeType":"2682","messageId":"2683","endLine":60,"endColumn":62},{"ruleId":"2644","severity":1,"message":"2670","line":1,"column":17,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2760","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2833","line":4,"column":31,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2668","line":4,"column":38,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2761","line":4,"column":46,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2806","line":5,"column":10,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2820","line":6,"column":23,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2951","line":7,"column":8,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2763","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2927","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2952","line":13,"column":10,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2766","line":13,"column":19,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2953","line":14,"column":10,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2767","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2756","line":18,"column":10,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2768","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2769","line":20,"column":10,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2770","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2898","line":22,"column":8,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2771","line":23,"column":8,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2928","line":24,"column":10,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2669","line":25,"column":10,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2954","line":26,"column":8,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2799","line":27,"column":8,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2772","line":28,"column":8,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2773","line":29,"column":10,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2955","line":32,"column":8,"nodeType":"2646","messageId":"2647","endLine":32,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2738","line":33,"column":8,"nodeType":"2646","messageId":"2647","endLine":33,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2808","line":35,"column":5,"nodeType":"2646","messageId":"2647","endLine":35,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2807","line":36,"column":5,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2956","line":61,"column":8,"nodeType":"2661","endLine":61,"endColumn":10,"suggestions":"2957"},{"ruleId":"2644","severity":1,"message":"2780","line":63,"column":42,"nodeType":"2646","messageId":"2647","endLine":63,"endColumn":54},{"ruleId":"2752","severity":1,"message":"2862","line":120,"column":21,"nodeType":"2686","endLine":120,"endColumn":53},{"ruleId":"2752","severity":1,"message":"2862","line":125,"column":21,"nodeType":"2686","endLine":130,"endColumn":22},{"ruleId":"2684","severity":1,"message":"2685","line":142,"column":33,"nodeType":"2686","endLine":146,"endColumn":35},{"ruleId":"2644","severity":1,"message":"2725","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2721","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2762","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2958","line":29,"column":8,"nodeType":"2661","endLine":29,"endColumn":19,"suggestions":"2959"},{"ruleId":"2812","severity":1,"message":"2813","line":37,"column":25,"nodeType":"2682","messageId":"2814","endLine":37,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2720","line":2,"column":38,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2760","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2668","line":5,"column":38,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2761","line":5,"column":46,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2806","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2951","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2764","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2765","line":12,"column":10,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2927","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2952","line":14,"column":10,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2953","line":15,"column":10,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2736","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2767","line":17,"column":10,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2769","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2898","line":23,"column":8,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2928","line":25,"column":10,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2669","line":26,"column":10,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2954","line":27,"column":8,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2799","line":28,"column":8,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2772","line":29,"column":8,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2773","line":30,"column":10,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2774","line":31,"column":8,"nodeType":"2646","messageId":"2647","endLine":31,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2672","line":32,"column":10,"nodeType":"2646","messageId":"2647","endLine":32,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2955","line":33,"column":8,"nodeType":"2646","messageId":"2647","endLine":33,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2738","line":34,"column":8,"nodeType":"2646","messageId":"2647","endLine":34,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2808","line":36,"column":5,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2807","line":37,"column":5,"nodeType":"2646","messageId":"2647","endLine":37,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2960","line":39,"column":8,"nodeType":"2646","messageId":"2647","endLine":39,"endColumn":24},{"ruleId":"2752","severity":1,"message":"2862","line":119,"column":37,"nodeType":"2686","endLine":124,"endColumn":38},{"ruleId":"2752","severity":1,"message":"2862","line":137,"column":37,"nodeType":"2686","endLine":153,"endColumn":38},{"ruleId":"2675","severity":1,"message":"2676","line":187,"column":39,"nodeType":"2658","messageId":"2677","endLine":187,"endColumn":41},{"ruleId":"2656","severity":1,"message":"2961","line":193,"column":8,"nodeType":"2661","endLine":193,"endColumn":10,"suggestions":"2962"},{"ruleId":"2644","severity":1,"message":"2671","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2716","line":4,"column":26,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2833","line":4,"column":31,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2668","line":4,"column":38,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2761","line":4,"column":46,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2963","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2964","line":9,"column":12,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2965","line":9,"column":22,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":33},{"ruleId":"2656","severity":1,"message":"2657","line":10,"column":15,"nodeType":"2658","endLine":27,"endColumn":6},{"ruleId":"2656","severity":1,"message":"2966","line":27,"column":8,"nodeType":"2661","endLine":27,"endColumn":10,"suggestions":"2967"},{"ruleId":"2684","severity":1,"message":"2685","line":45,"column":29,"nodeType":"2686","endLine":45,"endColumn":128},{"ruleId":"2684","severity":1,"message":"2685","line":62,"column":29,"nodeType":"2686","endLine":62,"endColumn":135},{"ruleId":"2644","severity":1,"message":"2833","line":2,"column":31,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2668","line":2,"column":38,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2761","line":2,"column":46,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2968","line":3,"column":10,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2969","line":34,"column":6,"nodeType":"2661","endLine":34,"endColumn":18,"suggestions":"2970"},{"ruleId":"2644","severity":1,"message":"2934","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2935","line":8,"column":10,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2708","line":11,"column":9,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2817","line":2,"column":27,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2919","line":13,"column":10,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2780","line":46,"column":42,"nodeType":"2646","messageId":"2647","endLine":46,"endColumn":54},{"ruleId":"2644","severity":1,"message":"2971","line":50,"column":11,"nodeType":"2646","messageId":"2647","endLine":50,"endColumn":17},{"ruleId":"2680","severity":1,"message":"2681","line":62,"column":76,"nodeType":"2682","messageId":"2683","endLine":62,"endColumn":77},{"ruleId":"2684","severity":1,"message":"2685","line":91,"column":25,"nodeType":"2686","endLine":91,"endColumn":75},{"ruleId":"2684","severity":1,"message":"2685","line":105,"column":41,"nodeType":"2686","endLine":105,"endColumn":91},{"ruleId":"2644","severity":1,"message":"2820","line":15,"column":23,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2972","line":25,"column":10,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2973","line":86,"column":6,"nodeType":"2661","endLine":86,"endColumn":8,"suggestions":"2974"},{"ruleId":"2644","severity":1,"message":"2780","line":87,"column":40,"nodeType":"2646","messageId":"2647","endLine":87,"endColumn":52},{"ruleId":"2656","severity":1,"message":"2657","line":92,"column":13,"nodeType":"2658","endLine":99,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2975","line":99,"column":6,"nodeType":"2661","endLine":99,"endColumn":8,"suggestions":"2976"},{"ruleId":"2656","severity":1,"message":"2657","line":100,"column":13,"nodeType":"2658","endLine":102,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2977","line":102,"column":6,"nodeType":"2661","endLine":102,"endColumn":49,"suggestions":"2978"},{"ruleId":"2684","severity":1,"message":"2685","line":200,"column":21,"nodeType":"2686","endLine":200,"endColumn":68},{"ruleId":"2684","severity":1,"message":"2685","line":219,"column":23,"nodeType":"2686","endLine":219,"endColumn":70},{"ruleId":"2644","severity":1,"message":"2722","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2898","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2979","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":24},{"ruleId":"2675","severity":1,"message":"2676","line":61,"column":28,"nodeType":"2658","messageId":"2677","endLine":61,"endColumn":30},{"ruleId":"2656","severity":1,"message":"2980","line":67,"column":6,"nodeType":"2661","endLine":67,"endColumn":8,"suggestions":"2981"},{"ruleId":"2675","severity":1,"message":"2676","line":70,"column":28,"nodeType":"2658","messageId":"2677","endLine":70,"endColumn":30},{"ruleId":"2656","severity":1,"message":"2958","line":76,"column":6,"nodeType":"2661","endLine":76,"endColumn":17,"suggestions":"2982"},{"ruleId":"2752","severity":1,"message":"2862","line":38,"column":9,"nodeType":"2686","endLine":38,"endColumn":51},{"ruleId":"2752","severity":1,"message":"2753","line":21,"column":15,"nodeType":"2686","endLine":27,"endColumn":16},{"ruleId":"2752","severity":1,"message":"2753","line":43,"column":15,"nodeType":"2686","endLine":49,"endColumn":16},{"ruleId":"2752","severity":1,"message":"2753","line":73,"column":23,"nodeType":"2686","endLine":73,"endColumn":72},{"ruleId":"2752","severity":1,"message":"2753","line":96,"column":23,"nodeType":"2686","endLine":96,"endColumn":72},{"ruleId":"2752","severity":1,"message":"2753","line":117,"column":23,"nodeType":"2686","endLine":117,"endColumn":72},{"ruleId":"2752","severity":1,"message":"2753","line":137,"column":23,"nodeType":"2686","endLine":137,"endColumn":72},{"ruleId":"2983","severity":1,"message":"2984","line":56,"column":21,"nodeType":"2686","endLine":56,"endColumn":68},{"ruleId":"2983","severity":1,"message":"2984","line":61,"column":21,"nodeType":"2686","endLine":61,"endColumn":68},{"ruleId":"2983","severity":1,"message":"2984","line":66,"column":21,"nodeType":"2686","endLine":66,"endColumn":70},{"ruleId":"2752","severity":1,"message":"2753","line":14,"column":11,"nodeType":"2686","endLine":14,"endColumn":75},{"ruleId":"2752","severity":1,"message":"2753","line":36,"column":13,"nodeType":"2686","endLine":36,"endColumn":25},{"ruleId":"2752","severity":1,"message":"2753","line":39,"column":13,"nodeType":"2686","endLine":39,"endColumn":25},{"ruleId":"2752","severity":1,"message":"2753","line":42,"column":13,"nodeType":"2686","endLine":42,"endColumn":25},{"ruleId":"2752","severity":1,"message":"2753","line":45,"column":13,"nodeType":"2686","endLine":45,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2898","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2799","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2802","line":38,"column":9,"nodeType":"2646","messageId":"2647","endLine":38,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2985","line":3,"column":47,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":53},{"ruleId":"2752","severity":1,"message":"2862","line":65,"column":11,"nodeType":"2686","endLine":70,"endColumn":12},{"ruleId":"2752","severity":1,"message":"2753","line":31,"column":25,"nodeType":"2686","endLine":31,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":34,"column":25,"nodeType":"2686","endLine":34,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":37,"column":25,"nodeType":"2686","endLine":37,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":45,"column":25,"nodeType":"2686","endLine":45,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":48,"column":25,"nodeType":"2686","endLine":48,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":51,"column":25,"nodeType":"2686","endLine":51,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":59,"column":25,"nodeType":"2686","endLine":59,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":62,"column":25,"nodeType":"2686","endLine":62,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":65,"column":25,"nodeType":"2686","endLine":65,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":74,"column":21,"nodeType":"2686","endLine":74,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2753","line":77,"column":21,"nodeType":"2686","endLine":77,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2753","line":80,"column":21,"nodeType":"2686","endLine":80,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2753","line":83,"column":21,"nodeType":"2686","endLine":83,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2753","line":45,"column":15,"nodeType":"2686","endLine":45,"endColumn":60},{"ruleId":"2752","severity":1,"message":"2753","line":45,"column":15,"nodeType":"2686","endLine":45,"endColumn":60},{"ruleId":"2752","severity":1,"message":"2753","line":74,"column":15,"nodeType":"2686","endLine":74,"endColumn":63},{"ruleId":"2644","severity":1,"message":"2687","line":6,"column":3,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":7},{"ruleId":"2644","severity":1,"message":"2688","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":11},{"ruleId":"2644","severity":1,"message":"2722","line":8,"column":3,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2689","line":9,"column":3,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2986","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2987","line":5,"column":16,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2836","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2988","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2687","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2688","line":14,"column":8,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2689","line":15,"column":8,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2726","line":16,"column":8,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2721","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2989","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2838","line":20,"column":10,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2839","line":20,"column":22,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":30},{"ruleId":"2644","severity":1,"message":"2840","line":20,"column":32,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":47},{"ruleId":"2644","severity":1,"message":"2818","line":22,"column":5,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2819","line":23,"column":5,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2668","line":24,"column":5,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":11},{"ruleId":"2644","severity":1,"message":"2990","line":25,"column":5,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2835","line":26,"column":5,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2834","line":27,"column":5,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2716","line":28,"column":5,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2991","line":29,"column":5,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2806","line":31,"column":10,"nodeType":"2646","messageId":"2647","endLine":31,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2821","line":34,"column":10,"nodeType":"2646","messageId":"2647","endLine":34,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2992","line":45,"column":11,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2993","line":52,"column":9,"nodeType":"2646","messageId":"2647","endLine":52,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2657","line":61,"column":15,"nodeType":"2658","endLine":68,"endColumn":6},{"ruleId":"2656","severity":1,"message":"2843","line":62,"column":21,"nodeType":"2844","endLine":62,"endColumn":75},{"ruleId":"2644","severity":1,"message":"2849","line":116,"column":17,"nodeType":"2646","messageId":"2647","endLine":116,"endColumn":23},{"ruleId":"2675","severity":1,"message":"2676","line":130,"column":26,"nodeType":"2658","messageId":"2677","endLine":130,"endColumn":28},{"ruleId":"2675","severity":1,"message":"2994","line":156,"column":46,"nodeType":"2658","messageId":"2995","endLine":156,"endColumn":48},{"ruleId":"2644","severity":1,"message":"2996","line":171,"column":13,"nodeType":"2646","messageId":"2647","endLine":171,"endColumn":21},{"ruleId":"2684","severity":1,"message":"2685","line":243,"column":13,"nodeType":"2686","endLine":243,"endColumn":58},{"ruleId":"2644","severity":1,"message":"2691","line":4,"column":3,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2669","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2671","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2997","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2992","line":29,"column":9,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2778","line":36,"column":11,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2779","line":36,"column":25,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":38},{"ruleId":"2644","severity":1,"message":"2780","line":36,"column":40,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":52},{"ruleId":"2644","severity":1,"message":"2893","line":41,"column":10,"nodeType":"2646","messageId":"2647","endLine":41,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2894","line":41,"column":21,"nodeType":"2646","messageId":"2647","endLine":41,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2998","line":42,"column":10,"nodeType":"2646","messageId":"2647","endLine":42,"endColumn":13},{"ruleId":"2656","severity":1,"message":"2999","line":56,"column":6,"nodeType":"2661","endLine":60,"endColumn":4,"suggestions":"3000"},{"ruleId":"2656","severity":1,"message":"3001","line":57,"column":5,"nodeType":"3002","endLine":59,"endColumn":11},{"ruleId":"2827","severity":1,"message":"2828","line":70,"column":13,"nodeType":"2829","endLine":70,"endColumn":31},{"ruleId":"2644","severity":1,"message":"2670","line":1,"column":17,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":25},{"ruleId":"2644","severity":1,"message":"3003","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":15},{"ruleId":"2644","severity":1,"message":"3004","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":12},{"ruleId":"2644","severity":1,"message":"3005","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":17},{"ruleId":"2644","severity":1,"message":"3006","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3007","line":25,"column":10,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2992","line":39,"column":9,"nodeType":"2646","messageId":"2647","endLine":39,"endColumn":16},{"ruleId":"2644","severity":1,"message":"3008","line":41,"column":9,"nodeType":"2646","messageId":"2647","endLine":41,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2722","line":6,"column":3,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2689","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2721","line":10,"column":3,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2671","line":14,"column":8,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2956","line":75,"column":6,"nodeType":"2661","endLine":75,"endColumn":8,"suggestions":"3009"},{"ruleId":"2644","severity":1,"message":"2780","line":76,"column":40,"nodeType":"2646","messageId":"2647","endLine":76,"endColumn":52},{"ruleId":"2644","severity":1,"message":"3010","line":81,"column":10,"nodeType":"2646","messageId":"2647","endLine":81,"endColumn":19},{"ruleId":"2644","severity":1,"message":"3011","line":81,"column":21,"nodeType":"2646","messageId":"2647","endLine":81,"endColumn":33},{"ruleId":"2644","severity":1,"message":"3012","line":83,"column":12,"nodeType":"2646","messageId":"2647","endLine":83,"endColumn":29},{"ruleId":"2684","severity":1,"message":"2685","line":98,"column":9,"nodeType":"2686","endLine":108,"endColumn":11},{"ruleId":"2644","severity":1,"message":"3013","line":164,"column":23,"nodeType":"2646","messageId":"2647","endLine":164,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2985","line":3,"column":47,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":53},{"ruleId":"2644","severity":1,"message":"3014","line":7,"column":9,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2670","line":1,"column":17,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":25},{"ruleId":"2656","severity":1,"message":"2956","line":28,"column":6,"nodeType":"2661","endLine":28,"endColumn":8,"suggestions":"3015"},{"ruleId":"2644","severity":1,"message":"2780","line":30,"column":40,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":52},{"ruleId":"2684","severity":1,"message":"2685","line":44,"column":11,"nodeType":"2686","endLine":44,"endColumn":50},{"ruleId":"2684","severity":1,"message":"2685","line":48,"column":9,"nodeType":"2686","endLine":48,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2691","line":5,"column":3,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2987","line":8,"column":3,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2668","line":12,"column":3,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":9},{"ruleId":"2644","severity":1,"message":"3016","line":22,"column":8,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":13},{"ruleId":"2644","severity":1,"message":"3017","line":23,"column":8,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":13},{"ruleId":"2644","severity":1,"message":"3018","line":24,"column":8,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":19},{"ruleId":"2644","severity":1,"message":"3019","line":27,"column":10,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3020","line":28,"column":10,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3021","line":30,"column":8,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3022","line":45,"column":22,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":35},{"ruleId":"2644","severity":1,"message":"3023","line":54,"column":10,"nodeType":"2646","messageId":"2647","endLine":54,"endColumn":14},{"ruleId":"2644","severity":1,"message":"3024","line":54,"column":16,"nodeType":"2646","messageId":"2647","endLine":54,"endColumn":23},{"ruleId":"2644","severity":1,"message":"3025","line":57,"column":10,"nodeType":"2646","messageId":"2647","endLine":57,"endColumn":17},{"ruleId":"2656","severity":1,"message":"3026","line":62,"column":6,"nodeType":"2661","endLine":62,"endColumn":8,"suggestions":"3027"},{"ruleId":"3028","severity":1,"message":"3029","line":79,"column":13,"nodeType":"3030","messageId":"3031","endLine":79,"endColumn":30},{"ruleId":"2656","severity":1,"message":"3032","line":91,"column":6,"nodeType":"2661","endLine":91,"endColumn":27,"suggestions":"3033"},{"ruleId":"2644","severity":1,"message":"3034","line":93,"column":7,"nodeType":"2646","messageId":"2647","endLine":93,"endColumn":11},{"ruleId":"2644","severity":1,"message":"3035","line":97,"column":7,"nodeType":"2646","messageId":"2647","endLine":97,"endColumn":16},{"ruleId":"2644","severity":1,"message":"3036","line":99,"column":7,"nodeType":"2646","messageId":"2647","endLine":99,"endColumn":14},{"ruleId":"2644","severity":1,"message":"3037","line":100,"column":7,"nodeType":"2646","messageId":"2647","endLine":100,"endColumn":19},{"ruleId":"2644","severity":1,"message":"3038","line":101,"column":7,"nodeType":"2646","messageId":"2647","endLine":101,"endColumn":21},{"ruleId":"2644","severity":1,"message":"3039","line":104,"column":7,"nodeType":"2646","messageId":"2647","endLine":104,"endColumn":13},{"ruleId":"2644","severity":1,"message":"3040","line":108,"column":9,"nodeType":"2646","messageId":"2647","endLine":108,"endColumn":21},{"ruleId":"2644","severity":1,"message":"3041","line":123,"column":11,"nodeType":"2646","messageId":"2647","endLine":123,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2708","line":147,"column":9,"nodeType":"2646","messageId":"2647","endLine":147,"endColumn":17},{"ruleId":"2684","severity":1,"message":"2685","line":162,"column":13,"nodeType":"2686","endLine":170,"endColumn":15},{"ruleId":"2684","severity":1,"message":"2685","line":177,"column":13,"nodeType":"2686","endLine":191,"endColumn":15},{"ruleId":"2827","severity":1,"message":"2828","line":351,"column":11,"nodeType":"2829","endLine":353,"endColumn":13},{"ruleId":"2827","severity":1,"message":"2828","line":362,"column":11,"nodeType":"2829","endLine":362,"endColumn":29},{"ruleId":"2827","severity":1,"message":"2828","line":693,"column":17,"nodeType":"2829","endLine":693,"endColumn":52},{"ruleId":"2827","severity":1,"message":"2828","line":738,"column":21,"nodeType":"2829","endLine":738,"endColumn":56},{"ruleId":"2827","severity":1,"message":"2828","line":781,"column":21,"nodeType":"2829","endLine":781,"endColumn":56},{"ruleId":"2656","severity":1,"message":"3042","line":34,"column":6,"nodeType":"2661","endLine":34,"endColumn":12,"suggestions":"3043"},{"ruleId":"2644","severity":1,"message":"2716","line":9,"column":5,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":8},{"ruleId":"2656","severity":1,"message":"2657","line":20,"column":15,"nodeType":"2658","endLine":24,"endColumn":6},{"ruleId":"2656","severity":1,"message":"3044","line":24,"column":8,"nodeType":"2661","endLine":24,"endColumn":28,"suggestions":"3045"},{"ruleId":"2644","severity":1,"message":"3046","line":43,"column":13,"nodeType":"2646","messageId":"2647","endLine":43,"endColumn":25},{"ruleId":"2827","severity":1,"message":"2828","line":116,"column":37,"nodeType":"2829","endLine":116,"endColumn":95},{"ruleId":"2827","severity":1,"message":"2828","line":145,"column":25,"nodeType":"2829","endLine":145,"endColumn":106},{"ruleId":"2812","severity":1,"message":"2896","line":145,"column":58,"nodeType":"2682","messageId":"2814","endLine":145,"endColumn":60},{"ruleId":"2812","severity":1,"message":"2896","line":173,"column":40,"nodeType":"2682","messageId":"2814","endLine":173,"endColumn":42},{"ruleId":"2644","severity":1,"message":"2720","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":38},{"ruleId":"2644","severity":1,"message":"2736","line":2,"column":10,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":21},{"ruleId":"2644","severity":1,"message":"3047","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":15},{"ruleId":"2644","severity":1,"message":"3048","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":29},{"ruleId":"2644","severity":1,"message":"3049","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2867","line":37,"column":10,"nodeType":"2646","messageId":"2647","endLine":37,"endColumn":17},{"ruleId":"2812","severity":1,"message":"2896","line":263,"column":12,"nodeType":"2682","messageId":"2814","endLine":263,"endColumn":14},{"ruleId":"2644","severity":1,"message":"3050","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":24},{"ruleId":"2656","severity":1,"message":"3051","line":233,"column":6,"nodeType":"2661","endLine":233,"endColumn":8,"suggestions":"3052"},{"ruleId":"2656","severity":1,"message":"3053","line":276,"column":6,"nodeType":"2661","endLine":276,"endColumn":8,"suggestions":"3054"},{"ruleId":"3055","severity":1,"message":"3056","line":296,"column":7,"nodeType":"2686","endLine":296,"endColumn":11},{"ruleId":"2827","severity":1,"message":"2828","line":314,"column":9,"nodeType":"2829","endLine":314,"endColumn":41},{"ruleId":"2644","severity":1,"message":"3057","line":8,"column":21,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":32},{"ruleId":"2644","severity":1,"message":"2971","line":24,"column":9,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":15},{"ruleId":"2656","severity":1,"message":"3058","line":28,"column":16,"nodeType":"2661","endLine":28,"endColumn":18},{"ruleId":"2656","severity":1,"message":"3059","line":29,"column":16,"nodeType":"2661","endLine":29,"endColumn":18},{"ruleId":"3060","severity":1,"message":"3061","line":36,"column":48,"nodeType":"2658","messageId":"3062","endLine":39,"endColumn":10},{"ruleId":"2644","severity":1,"message":"2780","line":55,"column":40,"nodeType":"2646","messageId":"2647","endLine":55,"endColumn":52},{"ruleId":"2684","severity":1,"message":"2685","line":70,"column":11,"nodeType":"2686","endLine":70,"endColumn":61},{"ruleId":"2684","severity":1,"message":"2685","line":85,"column":17,"nodeType":"2686","endLine":85,"endColumn":67},{"ruleId":"2644","severity":1,"message":"3020","line":1,"column":10,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3063","line":8,"column":21,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":32},{"ruleId":"2644","severity":1,"message":"3064","line":53,"column":9,"nodeType":"2646","messageId":"2647","endLine":53,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2780","line":73,"column":40,"nodeType":"2646","messageId":"2647","endLine":73,"endColumn":52},{"ruleId":"2684","severity":1,"message":"2685","line":155,"column":21,"nodeType":"2686","endLine":158,"endColumn":23},{"ruleId":"2684","severity":1,"message":"2685","line":174,"column":17,"nodeType":"2686","endLine":177,"endColumn":19},{"ruleId":"2684","severity":1,"message":"2685","line":297,"column":17,"nodeType":"2686","endLine":301,"endColumn":19},{"ruleId":"2827","severity":1,"message":"2828","line":300,"column":19,"nodeType":"2829","endLine":300,"endColumn":36},{"ruleId":"2684","severity":1,"message":"2685","line":306,"column":15,"nodeType":"2686","endLine":306,"endColumn":63},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2898","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":15},{"ruleId":"2684","severity":1,"message":"2685","line":21,"column":15,"nodeType":"2686","endLine":21,"endColumn":33},{"ruleId":"2827","severity":1,"message":"2828","line":99,"column":15,"nodeType":"2829","endLine":99,"endColumn":50},{"ruleId":"2827","severity":1,"message":"2828","line":114,"column":19,"nodeType":"2829","endLine":114,"endColumn":54},{"ruleId":"2827","severity":1,"message":"2828","line":130,"column":19,"nodeType":"2829","endLine":130,"endColumn":54},{"ruleId":"2640","replacedBy":"3065"},{"ruleId":"2642","replacedBy":"3066"},{"ruleId":"2640","replacedBy":"3067"},{"ruleId":"2642","replacedBy":"3068"},{"ruleId":"2644","severity":1,"message":"2645","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2648","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2649","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2650","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2651","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2652","line":20,"column":8,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2653","line":24,"column":8,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2654","line":27,"column":8,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2655","line":38,"column":8,"nodeType":"2646","messageId":"2647","endLine":38,"endColumn":10},{"ruleId":"2656","severity":1,"message":"3069","line":52,"column":6,"nodeType":"2661","endLine":52,"endColumn":8,"suggestions":"3070"},{"ruleId":"2656","severity":1,"message":"2657","line":17,"column":13,"nodeType":"2658","endLine":28,"endColumn":4},{"ruleId":"2644","severity":1,"message":"2659","line":20,"column":9,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2660","line":28,"column":6,"nodeType":"2661","endLine":28,"endColumn":8,"suggestions":"3071"},{"ruleId":"2656","severity":1,"message":"2657","line":29,"column":13,"nodeType":"2658","endLine":39,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2660","line":39,"column":6,"nodeType":"2661","endLine":39,"endColumn":23,"suggestions":"3072"},{"ruleId":"2644","severity":1,"message":"2668","line":1,"column":10,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2669","line":1,"column":18,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2670","line":2,"column":17,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2817","line":2,"column":27,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2671","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2672","line":4,"column":18,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2673","line":7,"column":8,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2674","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":21},{"ruleId":"2684","severity":1,"message":"2685","line":43,"column":11,"nodeType":"2686","endLine":43,"endColumn":56},{"ruleId":"2644","severity":1,"message":"2702","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2703","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2704","line":8,"column":10,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2705","line":8,"column":16,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2706","line":9,"column":10,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2707","line":9,"column":19,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2708","line":10,"column":9,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":17},{"ruleId":"2684","severity":1,"message":"2685","line":13,"column":7,"nodeType":"2686","endLine":17,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2687","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2688","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2689","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2690","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2691","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2692","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2668","line":20,"column":8,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2693","line":37,"column":20,"nodeType":"2646","messageId":"2647","endLine":37,"endColumn":31},{"ruleId":"2644","severity":1,"message":"2694","line":39,"column":10,"nodeType":"2646","messageId":"2647","endLine":39,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2695","line":68,"column":6,"nodeType":"2661","endLine":68,"endColumn":8,"suggestions":"3073"},{"ruleId":"2684","severity":1,"message":"2685","line":95,"column":15,"nodeType":"2686","endLine":95,"endColumn":54},{"ruleId":"2684","severity":1,"message":"2685","line":163,"column":17,"nodeType":"2686","endLine":163,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2709","line":33,"column":9,"nodeType":"2646","messageId":"2647","endLine":33,"endColumn":13},{"ruleId":"2656","severity":1,"message":"2660","line":46,"column":6,"nodeType":"2661","endLine":46,"endColumn":8,"suggestions":"3074"},{"ruleId":"2644","severity":1,"message":"2697","line":17,"column":9,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2698","line":77,"column":9,"nodeType":"2646","messageId":"2647","endLine":77,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2699","line":121,"column":7,"nodeType":"2646","messageId":"2647","endLine":121,"endColumn":28},{"ruleId":"2675","severity":1,"message":"2676","line":169,"column":33,"nodeType":"2658","messageId":"2677","endLine":169,"endColumn":35},{"ruleId":"2680","severity":1,"message":"2681","line":177,"column":29,"nodeType":"2682","messageId":"2683","endLine":177,"endColumn":30},{"ruleId":"2656","severity":1,"message":"2657","line":185,"column":13,"nodeType":"2658","endLine":187,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2700","line":187,"column":6,"nodeType":"2661","endLine":187,"endColumn":8,"suggestions":"3075"},{"ruleId":"2684","severity":1,"message":"2685","line":245,"column":15,"nodeType":"2686","endLine":245,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2664","line":13,"column":10,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2657","line":22,"column":13,"nodeType":"2658","endLine":43,"endColumn":4},{"ruleId":"2656","severity":1,"message":"3076","line":43,"column":6,"nodeType":"2661","endLine":43,"endColumn":8,"suggestions":"3077"},{"ruleId":"2656","severity":1,"message":"2657","line":44,"column":13,"nodeType":"2658","endLine":52,"endColumn":4},{"ruleId":"2644","severity":1,"message":"3078","line":45,"column":11,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2660","line":52,"column":6,"nodeType":"2661","endLine":52,"endColumn":8,"suggestions":"3079"},{"ruleId":"2644","severity":1,"message":"3080","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2716","line":7,"column":8,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":11},{"ruleId":"2644","severity":1,"message":"3081","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2717","line":17,"column":10,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2657","line":27,"column":13,"nodeType":"2658","endLine":51,"endColumn":4},{"ruleId":"2656","severity":1,"message":"3082","line":51,"column":6,"nodeType":"2661","endLine":51,"endColumn":31,"suggestions":"3083"},{"ruleId":"2644","severity":1,"message":"2745","line":15,"column":8,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2746","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2747","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":12},{"ruleId":"2656","severity":1,"message":"2657","line":36,"column":13,"nodeType":"2658","endLine":55,"endColumn":4},{"ruleId":"2675","severity":1,"message":"2676","line":46,"column":41,"nodeType":"2658","messageId":"2677","endLine":46,"endColumn":43},{"ruleId":"2656","severity":1,"message":"2748","line":55,"column":6,"nodeType":"2661","endLine":55,"endColumn":23,"suggestions":"3084"},{"ruleId":"2656","severity":1,"message":"2657","line":56,"column":13,"nodeType":"2658","endLine":91,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2750","line":91,"column":6,"nodeType":"2661","endLine":91,"endColumn":8,"suggestions":"3085"},{"ruleId":"2752","severity":1,"message":"2753","line":208,"column":19,"nodeType":"2686","endLine":208,"endColumn":63},{"ruleId":"2656","severity":1,"message":"2657","line":20,"column":13,"nodeType":"2658","endLine":42,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2711","line":42,"column":6,"nodeType":"2661","endLine":42,"endColumn":31,"suggestions":"3086"},{"ruleId":"2644","severity":1,"message":"2713","line":48,"column":10,"nodeType":"2646","messageId":"2647","endLine":48,"endColumn":20},{"ruleId":"2656","severity":1,"message":"2714","line":72,"column":6,"nodeType":"2661","endLine":72,"endColumn":17,"suggestions":"3087"},{"ruleId":"2644","severity":1,"message":"2720","line":1,"column":38,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2721","line":4,"column":3,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2687","line":5,"column":3,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":7},{"ruleId":"2644","severity":1,"message":"2688","line":6,"column":3,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":11},{"ruleId":"2644","severity":1,"message":"2722","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2689","line":8,"column":3,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2723","line":9,"column":3,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2724","line":10,"column":3,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2725","line":11,"column":3,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":10},{"ruleId":"2644","severity":1,"message":"2672","line":12,"column":3,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2726","line":13,"column":3,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2727","line":26,"column":9,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2728","line":32,"column":10,"nodeType":"2646","messageId":"2647","endLine":32,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2729","line":44,"column":10,"nodeType":"2646","messageId":"2647","endLine":44,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2657","line":58,"column":13,"nodeType":"2658","endLine":88,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2730","line":68,"column":21,"nodeType":"2731","endLine":68,"endColumn":52},{"ruleId":"2675","severity":1,"message":"2676","line":78,"column":35,"nodeType":"2658","messageId":"2677","endLine":78,"endColumn":37},{"ruleId":"2675","severity":1,"message":"2676","line":79,"column":52,"nodeType":"2658","messageId":"2677","endLine":79,"endColumn":54},{"ruleId":"2644","severity":1,"message":"2732","line":95,"column":9,"nodeType":"2646","messageId":"2647","endLine":95,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2733","line":96,"column":9,"nodeType":"2646","messageId":"2647","endLine":96,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2754","line":5,"column":21,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2668","line":5,"column":27,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2755","line":5,"column":45,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":51},{"ruleId":"2644","severity":1,"message":"2756","line":6,"column":22,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2757","line":17,"column":12,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2758","line":17,"column":20,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":29},{"ruleId":"2656","severity":1,"message":"2657","line":22,"column":15,"nodeType":"2658","endLine":44,"endColumn":6},{"ruleId":"2656","severity":1,"message":"2711","line":44,"column":8,"nodeType":"2661","endLine":44,"endColumn":33,"suggestions":"3088"},{"ruleId":"2684","severity":1,"message":"2685","line":64,"column":53,"nodeType":"2686","endLine":64,"endColumn":105},{"ruleId":"2684","severity":1,"message":"2685","line":92,"column":25,"nodeType":"2686","endLine":92,"endColumn":74},{"ruleId":"2644","severity":1,"message":"2760","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2761","line":4,"column":46,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2762","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2763","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2764","line":10,"column":10,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2765","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2766","line":13,"column":19,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2767","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2756","line":18,"column":10,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2768","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2769","line":20,"column":10,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2770","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2771","line":23,"column":8,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2772","line":28,"column":8,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2773","line":29,"column":10,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2774","line":30,"column":8,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2672","line":31,"column":10,"nodeType":"2646","messageId":"2647","endLine":31,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2775","line":43,"column":7,"nodeType":"2646","messageId":"2647","endLine":43,"endColumn":12},{"ruleId":"2656","severity":1,"message":"2657","line":67,"column":13,"nodeType":"2658","endLine":97,"endColumn":4},{"ruleId":"2656","severity":1,"message":"3089","line":97,"column":6,"nodeType":"2661","endLine":97,"endColumn":31,"suggestions":"3090"},{"ruleId":"2644","severity":1,"message":"2778","line":137,"column":11,"nodeType":"2646","messageId":"2647","endLine":137,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2779","line":137,"column":25,"nodeType":"2646","messageId":"2647","endLine":137,"endColumn":38},{"ruleId":"2644","severity":1,"message":"2780","line":137,"column":40,"nodeType":"2646","messageId":"2647","endLine":137,"endColumn":52},{"ruleId":"2644","severity":1,"message":"2781","line":176,"column":9,"nodeType":"2646","messageId":"2647","endLine":176,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2782","line":185,"column":11,"nodeType":"2646","messageId":"2647","endLine":185,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2783","line":222,"column":6,"nodeType":"2661","endLine":222,"endColumn":17,"suggestions":"3091"},{"ruleId":"2656","severity":1,"message":"2785","line":227,"column":6,"nodeType":"2661","endLine":227,"endColumn":14,"suggestions":"3092"},{"ruleId":"2644","severity":1,"message":"2865","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2720","line":1,"column":38,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2668","line":3,"column":31,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2734","line":4,"column":10,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2735","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2736","line":15,"column":10,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2737","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2738","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2739","line":24,"column":12,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":22},{"ruleId":"2656","severity":1,"message":"2657","line":61,"column":15,"nodeType":"2658","endLine":95,"endColumn":6},{"ruleId":"2656","severity":1,"message":"2740","line":95,"column":8,"nodeType":"2661","endLine":95,"endColumn":33,"suggestions":"3093"},{"ruleId":"2675","severity":1,"message":"2676","line":101,"column":31,"nodeType":"2658","messageId":"2677","endLine":101,"endColumn":33},{"ruleId":"2656","severity":1,"message":"2742","line":114,"column":8,"nodeType":"2661","endLine":114,"endColumn":19,"suggestions":"3094"},{"ruleId":"2644","severity":1,"message":"2744","line":115,"column":11,"nodeType":"2646","messageId":"2647","endLine":115,"endColumn":15},{"ruleId":"2680","severity":1,"message":"2681","line":118,"column":76,"nodeType":"2682","messageId":"2683","endLine":118,"endColumn":77},{"ruleId":"2684","severity":1,"message":"2685","line":163,"column":43,"nodeType":"2686","endLine":163,"endColumn":92},{"ruleId":"2644","severity":1,"message":"2760","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2798","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2799","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":17},{"ruleId":"2644","severity":1,"message":"3095","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2809","line":14,"column":8,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":15},{"ruleId":"2656","severity":1,"message":"2657","line":28,"column":13,"nodeType":"2658","endLine":36,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2800","line":36,"column":6,"nodeType":"2661","endLine":36,"endColumn":8,"suggestions":"3096"},{"ruleId":"2644","severity":1,"message":"2802","line":58,"column":9,"nodeType":"2646","messageId":"2647","endLine":58,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2668","line":10,"column":27,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2818","line":10,"column":35,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2819","line":10,"column":46,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2820","line":16,"column":23,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2821","line":17,"column":10,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2717","line":64,"column":5,"nodeType":"2646","messageId":"2647","endLine":64,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2822","line":95,"column":18,"nodeType":"2646","messageId":"2647","endLine":95,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2823","line":97,"column":19,"nodeType":"2646","messageId":"2647","endLine":97,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2824","line":98,"column":10,"nodeType":"2646","messageId":"2647","endLine":98,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2825","line":98,"column":20,"nodeType":"2646","messageId":"2647","endLine":98,"endColumn":31},{"ruleId":"2644","severity":1,"message":"2826","line":105,"column":9,"nodeType":"2646","messageId":"2647","endLine":105,"endColumn":14},{"ruleId":"2684","severity":1,"message":"2685","line":132,"column":7,"nodeType":"2686","endLine":144,"endColumn":9},{"ruleId":"2827","severity":1,"message":"2828","line":153,"column":9,"nodeType":"2829","endLine":153,"endColumn":41},{"ruleId":"2830","severity":1,"message":"2831","line":199,"column":19,"nodeType":"2832","messageId":"2814","endLine":199,"endColumn":24},{"ruleId":"2830","severity":1,"message":"2831","line":243,"column":17,"nodeType":"2832","messageId":"2814","endLine":243,"endColumn":22},{"ruleId":"2830","severity":1,"message":"2831","line":291,"column":17,"nodeType":"2832","messageId":"2814","endLine":291,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2854","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2855","line":12,"column":10,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2717","line":20,"column":10,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2657","line":28,"column":13,"nodeType":"2658","endLine":59,"endColumn":4},{"ruleId":"2856","severity":1,"message":"2857","line":49,"column":13,"nodeType":"2646","messageId":"2858","endLine":49,"endColumn":17},{"ruleId":"2856","severity":1,"message":"2859","line":50,"column":18,"nodeType":"2646","messageId":"2858","endLine":50,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2860","line":59,"column":6,"nodeType":"2661","endLine":59,"endColumn":31,"suggestions":"3097"},{"ruleId":"2752","severity":1,"message":"2862","line":89,"column":9,"nodeType":"2686","endLine":94,"endColumn":10},{"ruleId":"2680","severity":1,"message":"2681","line":92,"column":32,"nodeType":"2682","messageId":"2683","endLine":92,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2862","line":110,"column":9,"nodeType":"2686","endLine":115,"endColumn":10},{"ruleId":"2752","severity":1,"message":"2862","line":132,"column":11,"nodeType":"2686","endLine":137,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2681","line":135,"column":41,"nodeType":"2682","messageId":"2683","endLine":135,"endColumn":42},{"ruleId":"2752","severity":1,"message":"2862","line":183,"column":9,"nodeType":"2686","endLine":183,"endColumn":36},{"ruleId":"2752","severity":1,"message":"2862","line":199,"column":9,"nodeType":"2686","endLine":199,"endColumn":75},{"ruleId":"2644","severity":1,"message":"2820","line":3,"column":23,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2668","line":5,"column":31,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2854","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":19},{"ruleId":"2752","severity":1,"message":"2862","line":55,"column":13,"nodeType":"2686","endLine":62,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2833","line":2,"column":31,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2851","line":12,"column":10,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2657","line":29,"column":13,"nodeType":"2658","endLine":133,"endColumn":4},{"ruleId":"2675","severity":1,"message":"2676","line":86,"column":27,"nodeType":"2658","messageId":"2677","endLine":86,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2845","line":104,"column":11,"nodeType":"2646","messageId":"2647","endLine":104,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2846","line":126,"column":9,"nodeType":"2646","messageId":"2647","endLine":126,"endColumn":14},{"ruleId":"2656","severity":1,"message":"2852","line":133,"column":6,"nodeType":"2661","endLine":133,"endColumn":31,"suggestions":"3098"},{"ruleId":"2644","severity":1,"message":"2809","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2668","line":4,"column":31,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2761","line":4,"column":39,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":43},{"ruleId":"2644","severity":1,"message":"2807","line":12,"column":21,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":35},{"ruleId":"2644","severity":1,"message":"2879","line":17,"column":19,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2717","line":23,"column":10,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2880","line":23,"column":16,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2881","line":26,"column":10,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2657","line":32,"column":13,"nodeType":"2658","endLine":100,"endColumn":4},{"ruleId":"2675","severity":1,"message":"2676","line":49,"column":32,"nodeType":"2658","messageId":"2677","endLine":49,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2846","line":86,"column":11,"nodeType":"2646","messageId":"2647","endLine":86,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2882","line":100,"column":6,"nodeType":"2661","endLine":100,"endColumn":16,"suggestions":"3099"},{"ruleId":"2644","severity":1,"message":"3100","line":101,"column":9,"nodeType":"2646","messageId":"2647","endLine":101,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2833","line":6,"column":3,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2834","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":6},{"ruleId":"2644","severity":1,"message":"2835","line":8,"column":3,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":7},{"ruleId":"2644","severity":1,"message":"2836","line":14,"column":8,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2837","line":22,"column":3,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2838","line":26,"column":10,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2839","line":26,"column":22,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":30},{"ruleId":"2644","severity":1,"message":"2840","line":26,"column":32,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":47},{"ruleId":"2644","severity":1,"message":"2841","line":34,"column":10,"nodeType":"2646","messageId":"2647","endLine":34,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2717","line":36,"column":10,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2842","line":47,"column":9,"nodeType":"2646","messageId":"2647","endLine":47,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2657","line":52,"column":13,"nodeType":"2658","endLine":59,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2843","line":53,"column":17,"nodeType":"2844","endLine":53,"endColumn":71},{"ruleId":"2656","severity":1,"message":"2657","line":111,"column":13,"nodeType":"2658","endLine":181,"endColumn":4},{"ruleId":"2675","severity":1,"message":"2676","line":140,"column":25,"nodeType":"2658","messageId":"2677","endLine":140,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2845","line":154,"column":9,"nodeType":"2646","messageId":"2647","endLine":154,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2846","line":177,"column":7,"nodeType":"2646","messageId":"2647","endLine":177,"endColumn":12},{"ruleId":"2656","severity":1,"message":"2847","line":181,"column":6,"nodeType":"2661","endLine":181,"endColumn":16,"suggestions":"3101"},{"ruleId":"2812","severity":1,"message":"2813","line":187,"column":17,"nodeType":"2682","messageId":"2814","endLine":187,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2849","line":200,"column":11,"nodeType":"2646","messageId":"2647","endLine":200,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2850","line":237,"column":11,"nodeType":"2646","messageId":"2647","endLine":237,"endColumn":23},{"ruleId":"2675","severity":1,"message":"2676","line":245,"column":26,"nodeType":"2658","messageId":"2677","endLine":245,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2787","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2788","line":14,"column":10,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2789","line":27,"column":10,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":15},{"ruleId":"2656","severity":1,"message":"2790","line":55,"column":6,"nodeType":"2661","endLine":55,"endColumn":8,"suggestions":"3102"},{"ruleId":"2656","severity":1,"message":"2657","line":67,"column":13,"nodeType":"2658","endLine":94,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2730","line":75,"column":21,"nodeType":"2731","endLine":75,"endColumn":59},{"ruleId":"2656","severity":1,"message":"2792","line":76,"column":16,"nodeType":"2793","endLine":76,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2717","line":81,"column":9,"nodeType":"2646","messageId":"2647","endLine":81,"endColumn":13},{"ruleId":"2656","severity":1,"message":"2794","line":115,"column":6,"nodeType":"2661","endLine":115,"endColumn":26,"suggestions":"3103"},{"ruleId":"2656","severity":1,"message":"2796","line":215,"column":6,"nodeType":"2661","endLine":215,"endColumn":8,"suggestions":"3104"},{"ruleId":"2644","severity":1,"message":"2760","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2691","line":11,"column":16,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2821","line":17,"column":10,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2866","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2717","line":32,"column":10,"nodeType":"2646","messageId":"2647","endLine":32,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2867","line":35,"column":10,"nodeType":"2646","messageId":"2647","endLine":35,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2868","line":36,"column":10,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2869","line":45,"column":10,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2870","line":45,"column":15,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2871","line":58,"column":10,"nodeType":"2646","messageId":"2647","endLine":58,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2698","line":76,"column":9,"nodeType":"2646","messageId":"2647","endLine":76,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2699","line":116,"column":7,"nodeType":"2646","messageId":"2647","endLine":116,"endColumn":28},{"ruleId":"2656","severity":1,"message":"2657","line":170,"column":13,"nodeType":"2658","endLine":172,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2872","line":172,"column":6,"nodeType":"2661","endLine":172,"endColumn":8,"suggestions":"3105"},{"ruleId":"2656","severity":1,"message":"2874","line":227,"column":6,"nodeType":"2661","endLine":227,"endColumn":21,"suggestions":"3106"},{"ruleId":"2644","severity":1,"message":"2780","line":369,"column":40,"nodeType":"2646","messageId":"2647","endLine":369,"endColumn":52},{"ruleId":"2675","severity":1,"message":"2676","line":378,"column":33,"nodeType":"2658","messageId":"2677","endLine":378,"endColumn":35},{"ruleId":"2644","severity":1,"message":"2876","line":384,"column":7,"nodeType":"2646","messageId":"2647","endLine":384,"endColumn":12},{"ruleId":"2656","severity":1,"message":"2657","line":393,"column":13,"nodeType":"2658","endLine":395,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2877","line":395,"column":6,"nodeType":"2661","endLine":395,"endColumn":15,"suggestions":"3107"},{"ruleId":"2827","severity":1,"message":"2828","line":417,"column":15,"nodeType":"2829","endLine":417,"endColumn":33},{"ruleId":"2684","severity":1,"message":"2685","line":516,"column":21,"nodeType":"2686","endLine":522,"endColumn":23},{"ruleId":"2684","severity":1,"message":"2685","line":531,"column":21,"nodeType":"2686","endLine":534,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2803","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2804","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2746","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2747","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2805","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2745","line":20,"column":8,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2806","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2807","line":28,"column":3,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2808","line":29,"column":3,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2809","line":34,"column":8,"nodeType":"2646","messageId":"2647","endLine":34,"endColumn":15},{"ruleId":"2656","severity":1,"message":"2657","line":65,"column":13,"nodeType":"2658","endLine":92,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2810","line":92,"column":6,"nodeType":"2661","endLine":92,"endColumn":23,"suggestions":"3108"},{"ruleId":"2812","severity":1,"message":"2813","line":239,"column":45,"nodeType":"2682","messageId":"2814","endLine":239,"endColumn":47},{"ruleId":"2752","severity":1,"message":"2753","line":323,"column":21,"nodeType":"2686","endLine":323,"endColumn":130},{"ruleId":"2656","severity":1,"message":"2815","line":365,"column":6,"nodeType":"2661","endLine":365,"endColumn":22,"suggestions":"3109"},{"ruleId":"2644","severity":1,"message":"2863","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2864","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":20},{"ruleId":"2752","severity":1,"message":"2753","line":99,"column":15,"nodeType":"2686","endLine":99,"endColumn":27},{"ruleId":"2900","severity":1,"message":"2901","line":10,"column":13,"nodeType":"2907","messageId":"2903","endLine":10,"endColumn":19},{"ruleId":"2900","severity":1,"message":"2901","line":13,"column":13,"nodeType":"2907","messageId":"2903","endLine":13,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2908","line":1,"column":10,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":27},{"ruleId":"2675","severity":1,"message":"2676","line":20,"column":27,"nodeType":"2658","messageId":"2677","endLine":20,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2897","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2898","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2899","line":5,"column":21,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":29},{"ruleId":"2900","severity":1,"message":"2901","line":15,"column":7,"nodeType":"2902","messageId":"2903","endLine":15,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2905","line":4,"column":3,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2906","line":5,"column":3,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":16},{"ruleId":"2900","severity":1,"message":"2901","line":12,"column":7,"nodeType":"2902","messageId":"2903","endLine":12,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2904","line":73,"column":19,"nodeType":"2646","messageId":"2647","endLine":73,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2915","line":3,"column":10,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2917","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2918","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":17},{"ruleId":"2684","severity":1,"message":"2685","line":19,"column":19,"nodeType":"2686","endLine":22,"endColumn":21},{"ruleId":"2684","severity":1,"message":"2685","line":45,"column":19,"nodeType":"2686","endLine":48,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2916","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2818","line":7,"column":10,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2919","line":10,"column":10,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2708","line":13,"column":9,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2919","line":13,"column":10,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2908","line":14,"column":10,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2898","line":15,"column":8,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2920","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2708","line":21,"column":9,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2921","line":10,"column":10,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2922","line":4,"column":10,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2915","line":4,"column":34,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2923","line":4,"column":46,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":57},{"ruleId":"2752","severity":1,"message":"2753","line":22,"column":13,"nodeType":"2686","endLine":22,"endColumn":48},{"ruleId":"2752","severity":1,"message":"2753","line":28,"column":13,"nodeType":"2686","endLine":28,"endColumn":48},{"ruleId":"2644","severity":1,"message":"2924","line":11,"column":18,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2925","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2709","line":30,"column":9,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":13},{"ruleId":"2656","severity":1,"message":"2660","line":43,"column":6,"nodeType":"2661","endLine":43,"endColumn":8,"suggestions":"3110"},{"ruleId":"2684","severity":1,"message":"2685","line":54,"column":11,"nodeType":"2686","endLine":54,"endColumn":56},{"ruleId":"2684","severity":1,"message":"2685","line":116,"column":13,"nodeType":"2686","endLine":116,"endColumn":62},{"ruleId":"2684","severity":1,"message":"2685","line":181,"column":13,"nodeType":"2686","endLine":181,"endColumn":62},{"ruleId":"2644","severity":1,"message":"2909","line":47,"column":7,"nodeType":"2646","messageId":"2647","endLine":47,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2673","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2898","line":20,"column":8,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":15},{"ruleId":"2656","severity":1,"message":"2660","line":49,"column":6,"nodeType":"2661","endLine":49,"endColumn":22,"suggestions":"3111"},{"ruleId":"2644","severity":1,"message":"3112","line":3,"column":10,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2855","line":4,"column":10,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2940","line":4,"column":25,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2939","line":5,"column":10,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":16},{"ruleId":"2644","severity":1,"message":"3113","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2818","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2819","line":11,"column":21,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2716","line":11,"column":26,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2944","line":11,"column":31,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":39},{"ruleId":"2644","severity":1,"message":"2945","line":11,"column":41,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":55},{"ruleId":"2644","severity":1,"message":"2946","line":12,"column":10,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2820","line":14,"column":23,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2947","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2693","line":19,"column":20,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":31},{"ruleId":"2644","severity":1,"message":"2948","line":20,"column":21,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2949","line":22,"column":10,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":16},{"ruleId":"2675","severity":1,"message":"2676","line":26,"column":42,"nodeType":"2658","messageId":"2677","endLine":26,"endColumn":44},{"ruleId":"2656","severity":1,"message":"2810","line":33,"column":6,"nodeType":"2661","endLine":33,"endColumn":23,"suggestions":"3114"},{"ruleId":"2680","severity":1,"message":"2681","line":80,"column":61,"nodeType":"2682","messageId":"2683","endLine":80,"endColumn":62},{"ruleId":"2644","severity":1,"message":"2672","line":3,"column":18,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2934","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2935","line":8,"column":10,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2708","line":11,"column":9,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":17},{"ruleId":"2656","severity":1,"message":"2936","line":26,"column":6,"nodeType":"2661","endLine":26,"endColumn":8,"suggestions":"3115"},{"ruleId":"2644","severity":1,"message":"2938","line":3,"column":10,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2939","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2940","line":12,"column":25,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2941","line":18,"column":9,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2942","line":32,"column":6,"nodeType":"2661","endLine":32,"endColumn":23,"suggestions":"3116"},{"ruleId":"2752","severity":1,"message":"2862","line":45,"column":11,"nodeType":"2686","endLine":45,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2913","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2914","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2931","line":57,"column":6,"nodeType":"2661","endLine":57,"endColumn":39,"suggestions":"3117"},{"ruleId":"2644","severity":1,"message":"3118","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2933","line":5,"column":21,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":32},{"ruleId":"2644","severity":1,"message":"2927","line":1,"column":8,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2928","line":2,"column":10,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2898","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2817","line":2,"column":27,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2919","line":13,"column":10,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2780","line":45,"column":42,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":54},{"ruleId":"2644","severity":1,"message":"2971","line":49,"column":11,"nodeType":"2646","messageId":"2647","endLine":49,"endColumn":17},{"ruleId":"2680","severity":1,"message":"2681","line":60,"column":76,"nodeType":"2682","messageId":"2683","endLine":60,"endColumn":77},{"ruleId":"2684","severity":1,"message":"2685","line":89,"column":25,"nodeType":"2686","endLine":89,"endColumn":75},{"ruleId":"2684","severity":1,"message":"2685","line":103,"column":41,"nodeType":"2686","endLine":103,"endColumn":91},{"ruleId":"2644","severity":1,"message":"2670","line":1,"column":17,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2760","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2833","line":4,"column":31,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2668","line":4,"column":38,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2761","line":4,"column":46,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2806","line":5,"column":10,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2820","line":6,"column":23,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2951","line":7,"column":8,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2763","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2927","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2952","line":13,"column":10,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2766","line":13,"column":19,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2953","line":14,"column":10,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2767","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2756","line":18,"column":10,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2768","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":26},{"ruleId":"2644","severity":1,"message":"2769","line":20,"column":10,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2770","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2898","line":22,"column":8,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2771","line":23,"column":8,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2928","line":24,"column":10,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2669","line":25,"column":10,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2954","line":26,"column":8,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2799","line":27,"column":8,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2772","line":28,"column":8,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2773","line":29,"column":10,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2955","line":32,"column":8,"nodeType":"2646","messageId":"2647","endLine":32,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2738","line":33,"column":8,"nodeType":"2646","messageId":"2647","endLine":33,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2808","line":35,"column":5,"nodeType":"2646","messageId":"2647","endLine":35,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2807","line":36,"column":5,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2956","line":61,"column":8,"nodeType":"2661","endLine":61,"endColumn":10,"suggestions":"3119"},{"ruleId":"2644","severity":1,"message":"2780","line":63,"column":42,"nodeType":"2646","messageId":"2647","endLine":63,"endColumn":54},{"ruleId":"2752","severity":1,"message":"2862","line":120,"column":21,"nodeType":"2686","endLine":120,"endColumn":53},{"ruleId":"2752","severity":1,"message":"2862","line":125,"column":21,"nodeType":"2686","endLine":130,"endColumn":22},{"ruleId":"2684","severity":1,"message":"2685","line":142,"column":33,"nodeType":"2686","endLine":146,"endColumn":35},{"ruleId":"2644","severity":1,"message":"2725","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2721","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2762","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2958","line":29,"column":8,"nodeType":"2661","endLine":29,"endColumn":19,"suggestions":"3120"},{"ruleId":"2812","severity":1,"message":"2813","line":37,"column":25,"nodeType":"2682","messageId":"2814","endLine":37,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2720","line":2,"column":38,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":49},{"ruleId":"2644","severity":1,"message":"2760","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2668","line":5,"column":38,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2761","line":5,"column":46,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2806","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2951","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2764","line":11,"column":10,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2765","line":12,"column":10,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2927","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2952","line":14,"column":10,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2953","line":15,"column":10,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2736","line":16,"column":10,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2767","line":17,"column":10,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2769","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2898","line":23,"column":8,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2928","line":25,"column":10,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2669","line":26,"column":10,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2954","line":27,"column":8,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2799","line":28,"column":8,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2772","line":29,"column":8,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2773","line":30,"column":10,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2774","line":31,"column":8,"nodeType":"2646","messageId":"2647","endLine":31,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2672","line":32,"column":10,"nodeType":"2646","messageId":"2647","endLine":32,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2955","line":33,"column":8,"nodeType":"2646","messageId":"2647","endLine":33,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2738","line":34,"column":8,"nodeType":"2646","messageId":"2647","endLine":34,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2808","line":36,"column":5,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2807","line":37,"column":5,"nodeType":"2646","messageId":"2647","endLine":37,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2960","line":39,"column":8,"nodeType":"2646","messageId":"2647","endLine":39,"endColumn":24},{"ruleId":"2752","severity":1,"message":"2862","line":119,"column":37,"nodeType":"2686","endLine":124,"endColumn":38},{"ruleId":"2752","severity":1,"message":"2862","line":137,"column":37,"nodeType":"2686","endLine":153,"endColumn":38},{"ruleId":"2675","severity":1,"message":"2676","line":187,"column":39,"nodeType":"2658","messageId":"2677","endLine":187,"endColumn":41},{"ruleId":"2656","severity":1,"message":"2961","line":193,"column":8,"nodeType":"2661","endLine":193,"endColumn":10,"suggestions":"3121"},{"ruleId":"2644","severity":1,"message":"2671","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2716","line":4,"column":26,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2833","line":4,"column":31,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2668","line":4,"column":38,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2761","line":4,"column":46,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2963","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2964","line":9,"column":12,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2965","line":9,"column":22,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":33},{"ruleId":"2656","severity":1,"message":"2657","line":10,"column":15,"nodeType":"2658","endLine":26,"endColumn":6},{"ruleId":"2656","severity":1,"message":"2966","line":26,"column":8,"nodeType":"2661","endLine":26,"endColumn":10,"suggestions":"3122"},{"ruleId":"2684","severity":1,"message":"2685","line":44,"column":29,"nodeType":"2686","endLine":44,"endColumn":128},{"ruleId":"2684","severity":1,"message":"2685","line":61,"column":29,"nodeType":"2686","endLine":61,"endColumn":135},{"ruleId":"2644","severity":1,"message":"2833","line":2,"column":31,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2668","line":2,"column":38,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":44},{"ruleId":"2644","severity":1,"message":"2761","line":2,"column":46,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2968","line":3,"column":10,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":19},{"ruleId":"2656","severity":1,"message":"2969","line":34,"column":6,"nodeType":"2661","endLine":34,"endColumn":18,"suggestions":"3123"},{"ruleId":"2644","severity":1,"message":"2934","line":6,"column":10,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2935","line":8,"column":10,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2708","line":11,"column":9,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2820","line":15,"column":23,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2972","line":25,"column":10,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2973","line":86,"column":6,"nodeType":"2661","endLine":86,"endColumn":8,"suggestions":"3124"},{"ruleId":"2644","severity":1,"message":"2780","line":87,"column":40,"nodeType":"2646","messageId":"2647","endLine":87,"endColumn":52},{"ruleId":"2656","severity":1,"message":"2657","line":92,"column":13,"nodeType":"2658","endLine":99,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2975","line":99,"column":6,"nodeType":"2661","endLine":99,"endColumn":8,"suggestions":"3125"},{"ruleId":"2656","severity":1,"message":"2657","line":100,"column":13,"nodeType":"2658","endLine":102,"endColumn":4},{"ruleId":"2656","severity":1,"message":"2977","line":102,"column":6,"nodeType":"2661","endLine":102,"endColumn":49,"suggestions":"3126"},{"ruleId":"2684","severity":1,"message":"2685","line":200,"column":21,"nodeType":"2686","endLine":200,"endColumn":68},{"ruleId":"2684","severity":1,"message":"2685","line":219,"column":23,"nodeType":"2686","endLine":219,"endColumn":70},{"ruleId":"2644","severity":1,"message":"2722","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2898","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2979","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":24},{"ruleId":"2675","severity":1,"message":"2676","line":61,"column":28,"nodeType":"2658","messageId":"2677","endLine":61,"endColumn":30},{"ruleId":"2656","severity":1,"message":"2980","line":67,"column":6,"nodeType":"2661","endLine":67,"endColumn":8,"suggestions":"3127"},{"ruleId":"2675","severity":1,"message":"2676","line":70,"column":28,"nodeType":"2658","messageId":"2677","endLine":70,"endColumn":30},{"ruleId":"2656","severity":1,"message":"2958","line":76,"column":6,"nodeType":"2661","endLine":76,"endColumn":17,"suggestions":"3128"},{"ruleId":"2644","severity":1,"message":"2760","line":2,"column":8,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2898","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2799","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":17},{"ruleId":"2644","severity":1,"message":"3095","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2809","line":14,"column":8,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2802","line":38,"column":9,"nodeType":"2646","messageId":"2647","endLine":38,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2723","line":2,"column":16,"nodeType":"2646","messageId":"2647","endLine":2,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2890","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2891","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2892","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":28},{"ruleId":"2644","severity":1,"message":"2884","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2893","line":21,"column":10,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2894","line":21,"column":21,"nodeType":"2646","messageId":"2647","endLine":21,"endColumn":36},{"ruleId":"2656","severity":1,"message":"2657","line":23,"column":13,"nodeType":"2658","endLine":28,"endColumn":4},{"ruleId":"2644","severity":1,"message":"2895","line":25,"column":9,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":16},{"ruleId":"2684","severity":1,"message":"2685","line":32,"column":12,"nodeType":"2686","endLine":32,"endColumn":50},{"ruleId":"2684","severity":1,"message":"2685","line":62,"column":100,"nodeType":"2686","endLine":72,"endColumn":13},{"ruleId":"2812","severity":1,"message":"2896","line":67,"column":25,"nodeType":"2682","messageId":"2814","endLine":67,"endColumn":27},{"ruleId":"2812","severity":1,"message":"2896","line":67,"column":44,"nodeType":"2682","messageId":"2814","endLine":67,"endColumn":46},{"ruleId":"2812","severity":1,"message":"2896","line":82,"column":27,"nodeType":"2682","messageId":"2814","endLine":82,"endColumn":29},{"ruleId":"2812","severity":1,"message":"2896","line":82,"column":46,"nodeType":"2682","messageId":"2814","endLine":82,"endColumn":48},{"ruleId":"2812","severity":1,"message":"2896","line":120,"column":31,"nodeType":"2682","messageId":"2814","endLine":120,"endColumn":33},{"ruleId":"2812","severity":1,"message":"2896","line":120,"column":50,"nodeType":"2682","messageId":"2814","endLine":120,"endColumn":52},{"ruleId":"2644","severity":1,"message":"2691","line":4,"column":3,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2669","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2671","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2997","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":27},{"ruleId":"2644","severity":1,"message":"2992","line":29,"column":9,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2778","line":36,"column":11,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2779","line":36,"column":25,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":38},{"ruleId":"2644","severity":1,"message":"2780","line":36,"column":40,"nodeType":"2646","messageId":"2647","endLine":36,"endColumn":52},{"ruleId":"2644","severity":1,"message":"2893","line":41,"column":10,"nodeType":"2646","messageId":"2647","endLine":41,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2894","line":41,"column":21,"nodeType":"2646","messageId":"2647","endLine":41,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2998","line":42,"column":10,"nodeType":"2646","messageId":"2647","endLine":42,"endColumn":13},{"ruleId":"2656","severity":1,"message":"2999","line":56,"column":6,"nodeType":"2661","endLine":60,"endColumn":4,"suggestions":"3129"},{"ruleId":"2656","severity":1,"message":"3001","line":57,"column":5,"nodeType":"3002","endLine":59,"endColumn":11},{"ruleId":"2827","severity":1,"message":"2828","line":70,"column":13,"nodeType":"2829","endLine":70,"endColumn":31},{"ruleId":"2752","severity":1,"message":"2862","line":38,"column":9,"nodeType":"2686","endLine":38,"endColumn":51},{"ruleId":"2983","severity":1,"message":"2984","line":56,"column":21,"nodeType":"2686","endLine":56,"endColumn":68},{"ruleId":"2983","severity":1,"message":"2984","line":61,"column":21,"nodeType":"2686","endLine":61,"endColumn":68},{"ruleId":"2983","severity":1,"message":"2984","line":66,"column":21,"nodeType":"2686","endLine":66,"endColumn":70},{"ruleId":"2644","severity":1,"message":"2890","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2891","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2656","severity":1,"message":"2657","line":17,"column":13,"nodeType":"2658","endLine":20,"endColumn":4},{"ruleId":"2684","severity":1,"message":"2685","line":24,"column":12,"nodeType":"2686","endLine":24,"endColumn":50},{"ruleId":"2684","severity":1,"message":"2685","line":47,"column":100,"nodeType":"2686","endLine":53,"endColumn":13},{"ruleId":"2752","severity":1,"message":"2753","line":14,"column":11,"nodeType":"2686","endLine":14,"endColumn":75},{"ruleId":"2752","severity":1,"message":"2753","line":36,"column":13,"nodeType":"2686","endLine":36,"endColumn":25},{"ruleId":"2752","severity":1,"message":"2753","line":39,"column":13,"nodeType":"2686","endLine":39,"endColumn":25},{"ruleId":"2752","severity":1,"message":"2753","line":42,"column":13,"nodeType":"2686","endLine":42,"endColumn":25},{"ruleId":"2752","severity":1,"message":"2753","line":45,"column":13,"nodeType":"2686","endLine":45,"endColumn":25},{"ruleId":"2644","severity":1,"message":"2985","line":3,"column":47,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":53},{"ruleId":"2752","severity":1,"message":"2753","line":21,"column":15,"nodeType":"2686","endLine":27,"endColumn":16},{"ruleId":"2752","severity":1,"message":"2753","line":43,"column":15,"nodeType":"2686","endLine":49,"endColumn":16},{"ruleId":"2752","severity":1,"message":"2753","line":73,"column":23,"nodeType":"2686","endLine":73,"endColumn":72},{"ruleId":"2752","severity":1,"message":"2753","line":96,"column":23,"nodeType":"2686","endLine":96,"endColumn":72},{"ruleId":"2752","severity":1,"message":"2753","line":117,"column":23,"nodeType":"2686","endLine":117,"endColumn":72},{"ruleId":"2752","severity":1,"message":"2753","line":137,"column":23,"nodeType":"2686","endLine":137,"endColumn":72},{"ruleId":"2644","severity":1,"message":"2910","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":17},{"ruleId":"2644","severity":1,"message":"2911","line":48,"column":10,"nodeType":"2646","messageId":"2647","endLine":48,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2912","line":48,"column":16,"nodeType":"2646","messageId":"2647","endLine":48,"endColumn":23},{"ruleId":"2644","severity":1,"message":"2893","line":51,"column":10,"nodeType":"2646","messageId":"2647","endLine":51,"endColumn":19},{"ruleId":"2644","severity":1,"message":"2894","line":51,"column":21,"nodeType":"2646","messageId":"2647","endLine":51,"endColumn":36},{"ruleId":"2827","severity":1,"message":"2828","line":57,"column":7,"nodeType":"2829","endLine":57,"endColumn":22},{"ruleId":"2752","severity":1,"message":"2862","line":65,"column":11,"nodeType":"2686","endLine":70,"endColumn":12},{"ruleId":"2752","severity":1,"message":"2753","line":31,"column":25,"nodeType":"2686","endLine":31,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":34,"column":25,"nodeType":"2686","endLine":34,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":37,"column":25,"nodeType":"2686","endLine":37,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":45,"column":25,"nodeType":"2686","endLine":45,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":48,"column":25,"nodeType":"2686","endLine":48,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":51,"column":25,"nodeType":"2686","endLine":51,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":59,"column":25,"nodeType":"2686","endLine":59,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":62,"column":25,"nodeType":"2686","endLine":62,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":65,"column":25,"nodeType":"2686","endLine":65,"endColumn":37},{"ruleId":"2752","severity":1,"message":"2753","line":74,"column":21,"nodeType":"2686","endLine":74,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2753","line":77,"column":21,"nodeType":"2686","endLine":77,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2753","line":80,"column":21,"nodeType":"2686","endLine":80,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2753","line":83,"column":21,"nodeType":"2686","endLine":83,"endColumn":33},{"ruleId":"2752","severity":1,"message":"2753","line":45,"column":15,"nodeType":"2686","endLine":45,"endColumn":60},{"ruleId":"2644","severity":1,"message":"2687","line":6,"column":3,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":7},{"ruleId":"2644","severity":1,"message":"2688","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":11},{"ruleId":"2644","severity":1,"message":"2722","line":8,"column":3,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2689","line":9,"column":3,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2986","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":29},{"ruleId":"2752","severity":1,"message":"2753","line":45,"column":15,"nodeType":"2686","endLine":45,"endColumn":60},{"ruleId":"2752","severity":1,"message":"2753","line":74,"column":15,"nodeType":"2686","endLine":74,"endColumn":63},{"ruleId":"2644","severity":1,"message":"2987","line":5,"column":16,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2836","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2988","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2687","line":13,"column":8,"nodeType":"2646","messageId":"2647","endLine":13,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2688","line":14,"column":8,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2689","line":15,"column":8,"nodeType":"2646","messageId":"2647","endLine":15,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2726","line":16,"column":8,"nodeType":"2646","messageId":"2647","endLine":16,"endColumn":22},{"ruleId":"2644","severity":1,"message":"2721","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2989","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":33},{"ruleId":"2644","severity":1,"message":"2838","line":20,"column":10,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":20},{"ruleId":"2644","severity":1,"message":"2839","line":20,"column":22,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":30},{"ruleId":"2644","severity":1,"message":"2840","line":20,"column":32,"nodeType":"2646","messageId":"2647","endLine":20,"endColumn":47},{"ruleId":"2644","severity":1,"message":"2818","line":22,"column":5,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2819","line":23,"column":5,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2668","line":24,"column":5,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":11},{"ruleId":"2644","severity":1,"message":"2990","line":25,"column":5,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2835","line":26,"column":5,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2834","line":27,"column":5,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2716","line":28,"column":5,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2991","line":29,"column":5,"nodeType":"2646","messageId":"2647","endLine":29,"endColumn":12},{"ruleId":"2644","severity":1,"message":"2806","line":31,"column":10,"nodeType":"2646","messageId":"2647","endLine":31,"endColumn":34},{"ruleId":"2644","severity":1,"message":"2821","line":34,"column":10,"nodeType":"2646","messageId":"2647","endLine":34,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2992","line":45,"column":11,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2993","line":52,"column":9,"nodeType":"2646","messageId":"2647","endLine":52,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2657","line":61,"column":15,"nodeType":"2658","endLine":68,"endColumn":6},{"ruleId":"2656","severity":1,"message":"2843","line":62,"column":21,"nodeType":"2844","endLine":62,"endColumn":75},{"ruleId":"2644","severity":1,"message":"2849","line":114,"column":17,"nodeType":"2646","messageId":"2647","endLine":114,"endColumn":23},{"ruleId":"2675","severity":1,"message":"2676","line":128,"column":26,"nodeType":"2658","messageId":"2677","endLine":128,"endColumn":28},{"ruleId":"2675","severity":1,"message":"2994","line":153,"column":46,"nodeType":"2658","messageId":"2995","endLine":153,"endColumn":48},{"ruleId":"2644","severity":1,"message":"2996","line":168,"column":13,"nodeType":"2646","messageId":"2647","endLine":168,"endColumn":21},{"ruleId":"2684","severity":1,"message":"2685","line":240,"column":13,"nodeType":"2686","endLine":240,"endColumn":58},{"ruleId":"2644","severity":1,"message":"2670","line":1,"column":17,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":25},{"ruleId":"2644","severity":1,"message":"3003","line":3,"column":8,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":15},{"ruleId":"2644","severity":1,"message":"3004","line":4,"column":8,"nodeType":"2646","messageId":"2647","endLine":4,"endColumn":12},{"ruleId":"2644","severity":1,"message":"3005","line":5,"column":8,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":17},{"ruleId":"2644","severity":1,"message":"3006","line":6,"column":8,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3007","line":25,"column":10,"nodeType":"2646","messageId":"2647","endLine":25,"endColumn":24},{"ruleId":"2644","severity":1,"message":"2992","line":39,"column":9,"nodeType":"2646","messageId":"2647","endLine":39,"endColumn":16},{"ruleId":"2644","severity":1,"message":"3008","line":41,"column":9,"nodeType":"2646","messageId":"2647","endLine":41,"endColumn":14},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2722","line":6,"column":3,"nodeType":"2646","messageId":"2647","endLine":6,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2689","line":7,"column":3,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2721","line":10,"column":3,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2671","line":14,"column":8,"nodeType":"2646","messageId":"2647","endLine":14,"endColumn":18},{"ruleId":"2656","severity":1,"message":"2956","line":75,"column":6,"nodeType":"2661","endLine":75,"endColumn":8,"suggestions":"3130"},{"ruleId":"2644","severity":1,"message":"2780","line":76,"column":40,"nodeType":"2646","messageId":"2647","endLine":76,"endColumn":52},{"ruleId":"2644","severity":1,"message":"3010","line":81,"column":10,"nodeType":"2646","messageId":"2647","endLine":81,"endColumn":19},{"ruleId":"2644","severity":1,"message":"3011","line":81,"column":21,"nodeType":"2646","messageId":"2647","endLine":81,"endColumn":33},{"ruleId":"2644","severity":1,"message":"3012","line":83,"column":12,"nodeType":"2646","messageId":"2647","endLine":83,"endColumn":29},{"ruleId":"2684","severity":1,"message":"2685","line":98,"column":9,"nodeType":"2686","endLine":108,"endColumn":11},{"ruleId":"2644","severity":1,"message":"3013","line":164,"column":23,"nodeType":"2646","messageId":"2647","endLine":164,"endColumn":37},{"ruleId":"2644","severity":1,"message":"2670","line":1,"column":17,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":25},{"ruleId":"2656","severity":1,"message":"2956","line":28,"column":6,"nodeType":"2661","endLine":28,"endColumn":8,"suggestions":"3131"},{"ruleId":"2644","severity":1,"message":"2780","line":30,"column":40,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":52},{"ruleId":"2684","severity":1,"message":"2685","line":44,"column":11,"nodeType":"2686","endLine":44,"endColumn":50},{"ruleId":"2684","severity":1,"message":"2685","line":48,"column":9,"nodeType":"2686","endLine":48,"endColumn":50},{"ruleId":"2644","severity":1,"message":"2691","line":5,"column":3,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":13},{"ruleId":"2644","severity":1,"message":"2987","line":8,"column":3,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":9},{"ruleId":"2644","severity":1,"message":"2723","line":10,"column":3,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":8},{"ruleId":"2644","severity":1,"message":"2668","line":12,"column":3,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":9},{"ruleId":"2644","severity":1,"message":"3132","line":17,"column":8,"nodeType":"2646","messageId":"2647","endLine":17,"endColumn":17},{"ruleId":"2644","severity":1,"message":"3133","line":18,"column":8,"nodeType":"2646","messageId":"2647","endLine":18,"endColumn":16},{"ruleId":"2644","severity":1,"message":"3134","line":19,"column":8,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":17},{"ruleId":"2644","severity":1,"message":"3016","line":22,"column":8,"nodeType":"2646","messageId":"2647","endLine":22,"endColumn":13},{"ruleId":"2644","severity":1,"message":"3017","line":23,"column":8,"nodeType":"2646","messageId":"2647","endLine":23,"endColumn":13},{"ruleId":"2644","severity":1,"message":"3018","line":24,"column":8,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":19},{"ruleId":"2644","severity":1,"message":"3135","line":26,"column":8,"nodeType":"2646","messageId":"2647","endLine":26,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3019","line":27,"column":10,"nodeType":"2646","messageId":"2647","endLine":27,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3020","line":28,"column":10,"nodeType":"2646","messageId":"2647","endLine":28,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3021","line":30,"column":8,"nodeType":"2646","messageId":"2647","endLine":30,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3022","line":45,"column":22,"nodeType":"2646","messageId":"2647","endLine":45,"endColumn":35},{"ruleId":"2644","severity":1,"message":"3136","line":51,"column":10,"nodeType":"2646","messageId":"2647","endLine":51,"endColumn":24},{"ruleId":"2644","severity":1,"message":"3137","line":51,"column":26,"nodeType":"2646","messageId":"2647","endLine":51,"endColumn":44},{"ruleId":"2644","severity":1,"message":"3138","line":52,"column":10,"nodeType":"2646","messageId":"2647","endLine":52,"endColumn":22},{"ruleId":"2644","severity":1,"message":"3139","line":52,"column":24,"nodeType":"2646","messageId":"2647","endLine":52,"endColumn":39},{"ruleId":"2644","severity":1,"message":"3140","line":53,"column":10,"nodeType":"2646","messageId":"2647","endLine":53,"endColumn":22},{"ruleId":"2644","severity":1,"message":"3141","line":53,"column":24,"nodeType":"2646","messageId":"2647","endLine":53,"endColumn":39},{"ruleId":"2644","severity":1,"message":"3023","line":54,"column":10,"nodeType":"2646","messageId":"2647","endLine":54,"endColumn":14},{"ruleId":"2644","severity":1,"message":"3024","line":54,"column":16,"nodeType":"2646","messageId":"2647","endLine":54,"endColumn":23},{"ruleId":"2644","severity":1,"message":"3025","line":57,"column":10,"nodeType":"2646","messageId":"2647","endLine":57,"endColumn":17},{"ruleId":"2656","severity":1,"message":"3026","line":62,"column":6,"nodeType":"2661","endLine":62,"endColumn":8,"suggestions":"3142"},{"ruleId":"3028","severity":1,"message":"3029","line":78,"column":13,"nodeType":"3030","messageId":"3031","endLine":78,"endColumn":30},{"ruleId":"2656","severity":1,"message":"3032","line":90,"column":6,"nodeType":"2661","endLine":90,"endColumn":27,"suggestions":"3143"},{"ruleId":"2644","severity":1,"message":"3034","line":92,"column":7,"nodeType":"2646","messageId":"2647","endLine":92,"endColumn":11},{"ruleId":"2644","severity":1,"message":"3035","line":96,"column":7,"nodeType":"2646","messageId":"2647","endLine":96,"endColumn":16},{"ruleId":"2644","severity":1,"message":"3036","line":98,"column":7,"nodeType":"2646","messageId":"2647","endLine":98,"endColumn":14},{"ruleId":"2644","severity":1,"message":"3037","line":99,"column":7,"nodeType":"2646","messageId":"2647","endLine":99,"endColumn":19},{"ruleId":"2644","severity":1,"message":"3038","line":100,"column":7,"nodeType":"2646","messageId":"2647","endLine":100,"endColumn":21},{"ruleId":"2644","severity":1,"message":"3039","line":103,"column":7,"nodeType":"2646","messageId":"2647","endLine":103,"endColumn":13},{"ruleId":"2644","severity":1,"message":"3040","line":107,"column":9,"nodeType":"2646","messageId":"2647","endLine":107,"endColumn":21},{"ruleId":"2644","severity":1,"message":"3041","line":122,"column":11,"nodeType":"2646","messageId":"2647","endLine":122,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2708","line":146,"column":9,"nodeType":"2646","messageId":"2647","endLine":146,"endColumn":17},{"ruleId":"2684","severity":1,"message":"2685","line":161,"column":13,"nodeType":"2686","endLine":169,"endColumn":15},{"ruleId":"2684","severity":1,"message":"2685","line":176,"column":13,"nodeType":"2686","endLine":190,"endColumn":15},{"ruleId":"2827","severity":1,"message":"2828","line":350,"column":11,"nodeType":"2829","endLine":352,"endColumn":13},{"ruleId":"2827","severity":1,"message":"2828","line":361,"column":11,"nodeType":"2829","endLine":361,"endColumn":29},{"ruleId":"2656","severity":1,"message":"2929","line":44,"column":6,"nodeType":"2661","endLine":44,"endColumn":8,"suggestions":"3144"},{"ruleId":"2644","severity":1,"message":"2780","line":46,"column":40,"nodeType":"2646","messageId":"2647","endLine":46,"endColumn":52},{"ruleId":"2812","severity":1,"message":"2896","line":66,"column":18,"nodeType":"2682","messageId":"2814","endLine":66,"endColumn":20},{"ruleId":"2684","severity":1,"message":"2685","line":67,"column":13,"nodeType":"2686","endLine":67,"endColumn":51},{"ruleId":"2684","severity":1,"message":"2685","line":69,"column":13,"nodeType":"2686","endLine":69,"endColumn":52},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2985","line":3,"column":47,"nodeType":"2646","messageId":"2647","endLine":3,"endColumn":53},{"ruleId":"2644","severity":1,"message":"3014","line":7,"column":9,"nodeType":"2646","messageId":"2647","endLine":7,"endColumn":29},{"ruleId":"2644","severity":1,"message":"2716","line":9,"column":5,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":8},{"ruleId":"2656","severity":1,"message":"2657","line":20,"column":15,"nodeType":"2658","endLine":24,"endColumn":6},{"ruleId":"2656","severity":1,"message":"3044","line":24,"column":8,"nodeType":"2661","endLine":24,"endColumn":28,"suggestions":"3145"},{"ruleId":"2644","severity":1,"message":"3046","line":42,"column":13,"nodeType":"2646","messageId":"2647","endLine":42,"endColumn":25},{"ruleId":"2827","severity":1,"message":"2828","line":115,"column":37,"nodeType":"2829","endLine":115,"endColumn":95},{"ruleId":"2827","severity":1,"message":"2828","line":144,"column":25,"nodeType":"2829","endLine":144,"endColumn":106},{"ruleId":"2812","severity":1,"message":"2896","line":144,"column":58,"nodeType":"2682","messageId":"2814","endLine":144,"endColumn":60},{"ruleId":"2812","severity":1,"message":"2896","line":172,"column":40,"nodeType":"2682","messageId":"2814","endLine":172,"endColumn":42},{"ruleId":"2656","severity":1,"message":"3042","line":34,"column":6,"nodeType":"2661","endLine":34,"endColumn":12,"suggestions":"3146"},{"ruleId":"2644","severity":1,"message":"3147","line":8,"column":8,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":17},{"ruleId":"2644","severity":1,"message":"3148","line":9,"column":8,"nodeType":"2646","messageId":"2647","endLine":9,"endColumn":24},{"ruleId":"2644","severity":1,"message":"3149","line":10,"column":8,"nodeType":"2646","messageId":"2647","endLine":10,"endColumn":24},{"ruleId":"2644","severity":1,"message":"3006","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":18},{"ruleId":"2644","severity":1,"message":"3150","line":12,"column":8,"nodeType":"2646","messageId":"2647","endLine":12,"endColumn":22},{"ruleId":"2644","severity":1,"message":"3151","line":33,"column":10,"nodeType":"2646","messageId":"2647","endLine":33,"endColumn":15},{"ruleId":"2644","severity":1,"message":"2867","line":37,"column":10,"nodeType":"2646","messageId":"2647","endLine":37,"endColumn":17},{"ruleId":"2644","severity":1,"message":"3041","line":73,"column":11,"nodeType":"2646","messageId":"2647","endLine":73,"endColumn":21},{"ruleId":"2644","severity":1,"message":"2992","line":81,"column":9,"nodeType":"2646","messageId":"2647","endLine":81,"endColumn":16},{"ruleId":"2644","severity":1,"message":"3041","line":95,"column":9,"nodeType":"2646","messageId":"2647","endLine":95,"endColumn":19},{"ruleId":"2752","severity":1,"message":"2753","line":188,"column":31,"nodeType":"2686","endLine":188,"endColumn":140},{"ruleId":"2684","severity":1,"message":"2685","line":247,"column":21,"nodeType":"2686","endLine":247,"endColumn":48},{"ruleId":"2812","severity":1,"message":"2896","line":250,"column":12,"nodeType":"2682","messageId":"2814","endLine":250,"endColumn":14},{"ruleId":"2644","severity":1,"message":"3050","line":19,"column":10,"nodeType":"2646","messageId":"2647","endLine":19,"endColumn":24},{"ruleId":"2656","severity":1,"message":"3051","line":233,"column":6,"nodeType":"2661","endLine":233,"endColumn":8,"suggestions":"3152"},{"ruleId":"2656","severity":1,"message":"3053","line":276,"column":6,"nodeType":"2661","endLine":276,"endColumn":8,"suggestions":"3153"},{"ruleId":"3055","severity":1,"message":"3056","line":296,"column":7,"nodeType":"2686","endLine":296,"endColumn":11},{"ruleId":"2827","severity":1,"message":"2828","line":314,"column":9,"nodeType":"2829","endLine":314,"endColumn":41},{"ruleId":"2644","severity":1,"message":"3063","line":8,"column":21,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":32},{"ruleId":"2644","severity":1,"message":"3064","line":54,"column":9,"nodeType":"2646","messageId":"2647","endLine":54,"endColumn":16},{"ruleId":"2644","severity":1,"message":"2780","line":74,"column":40,"nodeType":"2646","messageId":"2647","endLine":74,"endColumn":52},{"ruleId":"2684","severity":1,"message":"2685","line":156,"column":21,"nodeType":"2686","endLine":159,"endColumn":23},{"ruleId":"2684","severity":1,"message":"2685","line":175,"column":17,"nodeType":"2686","endLine":178,"endColumn":19},{"ruleId":"2684","severity":1,"message":"2685","line":298,"column":17,"nodeType":"2686","endLine":302,"endColumn":19},{"ruleId":"2827","severity":1,"message":"2828","line":301,"column":19,"nodeType":"2829","endLine":301,"endColumn":36},{"ruleId":"2684","severity":1,"message":"2685","line":307,"column":15,"nodeType":"2686","endLine":307,"endColumn":63},{"ruleId":"2644","severity":1,"message":"3057","line":8,"column":21,"nodeType":"2646","messageId":"2647","endLine":8,"endColumn":32},{"ruleId":"2644","severity":1,"message":"2971","line":24,"column":9,"nodeType":"2646","messageId":"2647","endLine":24,"endColumn":15},{"ruleId":"2656","severity":1,"message":"3058","line":28,"column":16,"nodeType":"2661","endLine":28,"endColumn":18},{"ruleId":"2656","severity":1,"message":"3059","line":29,"column":16,"nodeType":"2661","endLine":29,"endColumn":18},{"ruleId":"3060","severity":1,"message":"3061","line":36,"column":48,"nodeType":"2658","messageId":"3062","endLine":39,"endColumn":10},{"ruleId":"2644","severity":1,"message":"2780","line":55,"column":40,"nodeType":"2646","messageId":"2647","endLine":55,"endColumn":52},{"ruleId":"2684","severity":1,"message":"2685","line":70,"column":11,"nodeType":"2686","endLine":70,"endColumn":61},{"ruleId":"2684","severity":1,"message":"2685","line":85,"column":17,"nodeType":"2686","endLine":85,"endColumn":67},{"ruleId":"2644","severity":1,"message":"3020","line":1,"column":10,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":18},{"ruleId":"2644","severity":1,"message":"2817","line":1,"column":27,"nodeType":"2646","messageId":"2647","endLine":1,"endColumn":36},{"ruleId":"2644","severity":1,"message":"2898","line":11,"column":8,"nodeType":"2646","messageId":"2647","endLine":11,"endColumn":15},{"ruleId":"2684","severity":1,"message":"2685","line":21,"column":15,"nodeType":"2686","endLine":21,"endColumn":33},{"ruleId":"2827","severity":1,"message":"2828","line":99,"column":15,"nodeType":"2829","endLine":99,"endColumn":50},{"ruleId":"2827","severity":1,"message":"2828","line":114,"column":19,"nodeType":"2829","endLine":114,"endColumn":54},{"ruleId":"2827","severity":1,"message":"2828","line":130,"column":19,"nodeType":"2829","endLine":130,"endColumn":54},{"ruleId":"2644","severity":1,"message":"3154","line":5,"column":20,"nodeType":"2646","messageId":"2647","endLine":5,"endColumn":29},{"ruleId":"2656","severity":1,"message":"3155","line":23,"column":8,"nodeType":"2661","endLine":23,"endColumn":20,"suggestions":"3156"},"no-native-reassign",["3157"],"no-negated-in-lhs",["3158"],"no-unused-vars","'MobileAuth' is defined but never used.","Identifier","unusedVar","'Landingpage' is defined but never used.","'Notification' is defined but never used.","'EventDone' is defined but never used.","'AlertNotif' is defined but never used.","'EnterCode' is defined but never used.","'Blankpages' is defined but never used.","'InvitaionMain' is defined but never used.","'FD' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["3159"],["3160"],"'getposts' is defined but never used.","React Hook useEffect has missing dependencies: 'CodeEvent.Code', 'CodeEvent.Maincode', 'dispatch', and 'props.location.pathname'. Either include them or remove the dependency array.",["3161"],["3162"],"'Button' is defined but never used.","'Modal' is defined but never used.","'useState' is defined but never used.","'CancelIcon' is defined but never used.","'IconButton' is defined but never used.","'InfoOutlinedIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'Notifications' and 'props'. Either include them or remove the dependency array.",["3163"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'setmaincode' is assigned a value but never used.","'mode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Name', 'maincode', and 'props.match.params.id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setcodesharelink' needs the current value of 'maincode'.",["3164"],"'CreateEventForm' is assigned a value but never used.","'result' is assigned a value but never used.","'incompleteeventnumber' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addAnEvent'. Either include it or remove the dependency array.",["3165"],"'check' is defined but never used.","'addme' is defined but never used.","'code' is assigned a value but never used.","'setcode' is assigned a value but never used.","'iserror' is assigned a value but never used.","'setiserror' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Auth' is assigned a value but never used.",["3166"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3167"],"'rsvpnumber' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'evno', and 'props'. Either include them or remove the dependency array.",["3168"],"'Col' is defined but never used.","'base' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MyEvents', 'dispatch', 'myInvitations', 'props.location.pathname', 'props.match.params.event', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3169"],"'useCallback' is defined but never used.","'Avatar' is defined but never used.","'ListItemIcon' is defined but never used.","'Paper' is defined but never used.","'InputBase' is defined but never used.","'Divider' is defined but never used.","'ListItemAvatar' is defined but never used.","'AllGroups' is assigned a value but never used.","'windowwidth' is assigned a value but never used.","'IndvName' is assigned a value but never used.","Assignments to the 'Eventdata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'selectedgrpcpr' is assigned a value but never used.","'chat' is assigned a value but never used.","'IoChevronBackCircleOutline' is defined but never used.","'ImageGallery' is defined but never used.","'useDropzone' is defined but never used.","'SaveIcon' is defined but never used.","'Popup' is defined but never used.","'isUploaded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3170"],"React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["3171"],"'save' is assigned a value but never used.","'Location' is defined but never used.","'LIKE' is defined but never used.","'RSVP' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'myInvitations', 'props.match.params.Code', and 'props.match.params.maincode'. Either include them or remove the dependency array.",["3172"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.match.params.Code', 'props.match.params.Name', and 'props.match.params.maincode'. Either include them or remove the dependency array.",["3173"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Card' is defined but never used.","'Figure' is defined but never used.","'FcLike' is defined but never used.","'images' is assigned a value but never used.","'setimages' is assigned a value but never used.",["3174"],"'Header' is defined but never used.","'Form' is defined but never used.","'UserData' is defined but never used.","'UserDataUrl' is defined but never used.","'IoCameraOutline' is defined but never used.","'FaTag' is defined but never used.","'likepost' is defined but never used.","'InputTags' is defined but never used.","'FaRegCommentDots' is defined but never used.","'IoMdSend' is defined but never used.","'FcLikePlaceholder' is defined but never used.","'FeedComments' is defined but never used.","'Badge' is defined but never used.","'Multiselect' is defined but never used.","'SendIcon' is defined but never used.","'Posts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getposts', 'guestlist', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3175"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'ParticipantsCPY' is assigned a value but never used.","'Phone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getposts'. Either include it or remove the dependency array.",["3176"],"React Hook useEffect has a missing dependency: 'admins'. Either include it or remove the dependency array.",["3177"],"'CommentAvt' is defined but never used.","'FaUserFriends' is defined but never used.","'eveid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getcomments'. Either include it or remove the dependency array.",["3178"],"Assignments to the 'base' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.id'. Either include them or remove the dependency array.",["3179"],"React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.likeby'. Either include them or remove the dependency array. If 'setisliked' needs the current value of 'props.likeby', you can also switch to useReducer instead of useState and read 'props.likeby' in the reducer.",["3180"],"'eventimg' is defined but never used.","'NavMobile' is defined but never used.","React Hook useEffect has missing dependencies: 'Eventdata1', 'Eventdata2', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array.",["3181"],"'newIndex' is assigned a value but never used.","'CalendarIcon' is defined but never used.","'GrSync' is defined but never used.","'AiFillHome' is defined but never used.","'IoArrowBackCircleOutline' is defined but never used.","'GetInvitations' is defined but never used.","'GetEvents' is defined but never used.","'Toggler' is defined but never used.","React Hook useEffect has a missing dependency: 'Auth.Phone'. Either include it or remove the dependency array.",["3182"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'showicon'. Either include them or remove the dependency array.",["3183"],"'useEffect' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'useDispatch' is defined but never used.","'json' is defined but never used.","'setMarker' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'Location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'panTo' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'Image' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'readXlsxFile' is defined but never used.","'change_event' is defined but never used.","'ReactExcel' is defined but never used.","'readFile' is defined but never used.","'generateObjects' is defined but never used.","'Eventdata' is assigned a value but never used.","'handleShow' is assigned a value but never used.","Assignments to the 'supported' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression","'Status' is assigned a value but never used.","'found' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myInvitations', 'props.location.pathname', 'props.match.params.id', and 'props.match.params.invno'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3184"],"'number' is assigned a value but never used.","'participants' is assigned a value but never used.","'Events' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'props.location.pathname', 'props.match.params.id', and 'props.match.params.invno'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3185"],"'Component' is defined but never used.","'IoImagesSharp' is defined but never used.","no-redeclare","'Host' is already defined.","redeclared","'i' is already defined.","React Hook useEffect has missing dependencies: 'Auth.Phone', 'Eventdata', 'dispatch', 'ishost', 'props.location.pathname', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3186"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Testimonials' is defined but never used.","'CompanySlide' is defined but never used.","'Jitsi' is defined but never used.","'deletefile' is defined but never used.","'isError' is assigned a value but never used.","'isfileChanged' is assigned a value but never used.","'_id' is assigned a value but never used.","'Set_id' is assigned a value but never used.","'datacopy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'grabdata'. Either include it or remove the dependency array.",["3187"],"React Hook useEffect has a missing dependency: 'Eventdata'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setName' needs the current value of 'Eventdata'.",["3188"],"'unuls' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Filetype', 'selectedEvent', and 'uploadfile'. Either include them or remove the dependency array.",["3189"],"'setoptions' is assigned a value but never used.","'setbase' is assigned a value but never used.","'Rsvplist' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.match.params.eid', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3190"],"'InfoIcon' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'MailIcon' is defined but never used.","'MoreIcon' is defined but never used.",["3191"],"'LocationOnIcon' is defined but never used.","'LanguageIcon' is defined but never used.","'NotificationsOffIcon' is defined but never used.","'showPopup' is assigned a value but never used.","'toggleShowPopup' is assigned a value but never used.","'datacpy' is assigned a value but never used.","Expected '===' and instead saw '=='.","'jwt_decode' is defined but never used.","'history' is defined but never used.","'GOTCHATS' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'decoded' is assigned a value but never used.","'EVENTSAVED' is defined but never used.","'EVENTSAVEFAIL' is defined but never used.","BreakStatement","'reactLocalStorage' is defined but never used.","'fileRef' is assigned a value but never used.","'Entercode' is defined but never used.","'menu' is assigned a value but never used.","'setMenu' is assigned a value but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'FaWhatsapp' is defined but never used.","'ZoomIcon' is defined but never used.","'DanceIcon' is defined but never used.","'HappyIcon' is defined but never used.","'useSelector' is defined but never used.","'loginuser' is defined but never used.","'loader' is assigned a value but never used.","'FaTwitter' is defined but never used.","'FaInstagram' is defined but never used.","'Autoplay' is defined but never used.","'DancingImg' is defined but never used.",["3192"],"'axios' is defined but never used.","'url' is defined but never used.","React Hook useCallback has a missing dependency: 'Auth.Phone'. Either include it or remove the dependency array.",["3193"],"React Hook useEffect has missing dependencies: 'Phone' and 'dispatch'. Either include them or remove the dependency array.",["3194"],"'setdatetime' is assigned a value but never used.","'getuserdata' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'props.Phone'. Either include it or remove the dependency array.",["3195"],"'IoChatbubbleEllipsesOutline' is defined but never used.","'GoBook' is defined but never used.","'IoPowerSharp' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.base'. Either include them or remove the dependency array.",["3196"],"'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'BiChevronDown' is defined but never used.","'maincode' is assigned a value but never used.","'seteventcode' is assigned a value but never used.","'ishost' is assigned a value but never used.",["3197"],"'zoomicon' is defined but never used.","'addpost' is defined but never used.","'uploadString' is defined but never used.","'Media' is defined but never used.","'AddTags' is defined but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["3198"],"React Hook useEffect has a missing dependency: 'props.MainCode'. Either include it or remove the dependency array.",["3199"],"'CircularProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'props.LikeList'. Either include them or remove the dependency array.",["3200"],"'HorizontalSlider' is defined but never used.","'allmedia' is assigned a value but never used.","'setallmedia' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.currentPosts' and 'props.popuptype'. Either include them or remove the dependency array.",["3201"],"'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setcomments' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.",["3202"],"'cancel' is assigned a value but never used.","'getChats' is defined but never used.","React Hook useCallback has missing dependencies: 'Auth.Phone' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["3203"],"React Hook useEffect has a missing dependency: 'props.SelectedGroup._id'. Either include it or remove the dependency array.",["3204"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["3205"],"'ArrowBackIosIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'AllGroups' and 'props.MainCode'. Either include them or remove the dependency array.",["3206"],["3207"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'scroll' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","'Switch' is defined but never used.","'EventNameBox' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used.","'ListGroup' is defined but never used.","'Spinner' is defined but never used.","'classes' is assigned a value but never used.","'Eventscpy' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'MainCode' is assigned a value but never used.","'ImageSelectionModal' is defined but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'seturl' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["3208"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Typography' is defined but never used.","'getStepContent' is defined but never used.","'steps' is assigned a value but never used.",["3209"],"'groupName' is assigned a value but never used.","'setgroupName' is assigned a value but never used.","'filterparticipant' is defined but never used.","'setcreateGroup' is assigned a value but never used.","'handleDropdownStatus' is assigned a value but never used.",["3210"],"'Album' is defined but never used.","'Story' is defined but never used.","'AddSchedule' is defined but never used.","'editform' is defined but never used.","'SAVEFORM' is defined but never used.","'CreateIcon' is defined but never used.","'setProcessing' is assigned a value but never used.","'Link' is assigned a value but never used.","'setLink' is assigned a value but never used.","'address' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'SetCurrentEventDetails' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["3211"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has missing dependencies: 'CurrentEventDetails' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["3212"],"'gapi' is assigned a value but never used.","'CLIENT_ID' is assigned a value but never used.","'API_KEY' is assigned a value but never used.","'clientSecret' is assigned a value but never used.","'DISCOVERY_DOCS' is assigned a value but never used.","'SCOPES' is assigned a value but never used.","'currentEvent' is assigned a value but never used.","'EventsCopy' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'codescpy', 'props.Events', 'props.code.length', and 'usercodecpy'. Either include them or remove the dependency array.",["3213"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["3214"],"'NexteventKey' is assigned a value but never used.","'Gallery' is defined but never used.","'LocationOnRoundedIcon' is defined but never used.","'ControlPointIcon' is defined but never used.","'formatRelative' is defined but never used.","React Hook useEffect has a missing dependency: 'props.CurrentEventDetails.location'. Either include it or remove the dependency array.",["3215"],"React Hook useCallback has a missing dependency: 'props.CurrentEventDetails'. Either include it or remove the dependency array.",["3216"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'DELETEALBUM' is defined but never used.","Assignments to the 'bkpalbum' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","Assignments to the 'filetype' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'bkpalbum', 'filetype'.","unsafeRefs","'DELETESTORY' is defined but never used.","'dataurl' is assigned a value but never used.",["3157"],["3158"],["3157"],["3158"],"React Hook useEffect has a missing dependency: 'OneSignal'. Either include it or remove the dependency array.",["3217"],["3218"],["3219"],["3220"],["3221"],["3222"],"React Hook useEffect has missing dependencies: 'CodeEvent.Code', 'CodeEvent.Name', 'dispatch', and 'props.location.pathname'. Either include them or remove the dependency array.",["3223"],"'interval' is assigned a value but never used.",["3224"],"'BlankSchedule' is defined but never used.","'Dateformatter' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.location.pathname', 'props.match.params.event', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3225"],["3226"],["3227"],["3228"],["3229"],["3230"],"React Hook useEffect has missing dependencies: 'dispatch', 'getposts', 'guestlist', 'props.location.pathname', 'props.match.params.MainCode', and 'props.match.params.id'. Either include them or remove the dependency array. If 'setEventdata' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["3231"],["3232"],["3233"],["3234"],["3235"],"'DesktopNav' is defined but never used.",["3236"],["3237"],["3238"],["3239"],"'submit' is assigned a value but never used.",["3240"],["3241"],["3242"],["3243"],["3244"],["3245"],["3246"],["3247"],["3248"],["3249"],["3250"],"'MdEvent' is defined but never used.","'GrGallery' is defined but never used.",["3251"],["3252"],["3253"],["3254"],"'Logo' is defined but never used.",["3255"],["3256"],["3257"],["3258"],["3259"],["3260"],["3261"],["3262"],["3263"],["3264"],["3265"],["3266"],["3267"],"'Scehedule' is defined but never used.","'Storyimg' is defined but never used.","'Albumsimg' is defined but never used.","'AddDetails' is defined but never used.","'shedulevisible' is assigned a value but never used.","'SetScheduleVisible' is assigned a value but never used.","'storyvisible' is assigned a value but never used.","'SetStoryVisible' is assigned a value but never used.","'albumvisible' is assigned a value but never used.","'SetAlbumVisible' is assigned a value but never used.",["3268"],["3269"],["3270"],["3271"],["3272"],"'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'venue' is assigned a value but never used.",["3273"],["3274"],"'setMonths' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Months'. Either include it or remove the dependency array.",["3275"],"no-global-assign","no-unsafe-negation",{"desc":"3276","fix":"3277"},{"desc":"3278","fix":"3279"},{"desc":"3280","fix":"3281"},{"desc":"3276","fix":"3282"},{"desc":"3283","fix":"3284"},{"desc":"3285","fix":"3286"},{"desc":"3287","fix":"3288"},{"desc":"3276","fix":"3289"},{"desc":"3290","fix":"3291"},{"desc":"3292","fix":"3293"},{"desc":"3294","fix":"3295"},{"desc":"3296","fix":"3297"},{"desc":"3298","fix":"3299"},{"desc":"3300","fix":"3301"},{"desc":"3302","fix":"3303"},{"desc":"3290","fix":"3304"},{"desc":"3305","fix":"3306"},{"desc":"3307","fix":"3308"},{"desc":"3309","fix":"3310"},{"desc":"3311","fix":"3312"},{"desc":"3313","fix":"3314"},{"desc":"3315","fix":"3316"},{"desc":"3317","fix":"3318"},{"desc":"3319","fix":"3320"},{"desc":"3321","fix":"3322"},{"desc":"3323","fix":"3324"},{"desc":"3325","fix":"3326"},{"desc":"3327","fix":"3328"},{"desc":"3329","fix":"3330"},{"desc":"3331","fix":"3332"},{"desc":"3333","fix":"3334"},{"desc":"3335","fix":"3336"},{"desc":"3337","fix":"3338"},{"desc":"3276","fix":"3339"},{"desc":"3340","fix":"3341"},{"desc":"3342","fix":"3343"},{"desc":"3344","fix":"3345"},{"desc":"3346","fix":"3347"},{"desc":"3319","fix":"3348"},{"desc":"3349","fix":"3350"},{"desc":"3351","fix":"3352"},{"desc":"3353","fix":"3354"},{"desc":"3355","fix":"3356"},{"desc":"3357","fix":"3358"},{"desc":"3359","fix":"3360"},{"desc":"3361","fix":"3362"},{"desc":"3363","fix":"3364"},{"desc":"3365","fix":"3366"},{"desc":"3365","fix":"3367"},{"desc":"3368","fix":"3369"},{"desc":"3349","fix":"3370"},{"desc":"3349","fix":"3371"},{"desc":"3368","fix":"3372"},{"desc":"3373","fix":"3374"},{"desc":"3375","fix":"3376"},{"desc":"3377","fix":"3378"},{"desc":"3379","fix":"3380"},{"desc":"3381","fix":"3382"},{"desc":"3383","fix":"3384"},{"desc":"3276","fix":"3385"},{"desc":"3278","fix":"3386"},{"desc":"3285","fix":"3387"},{"desc":"3276","fix":"3388"},{"desc":"3287","fix":"3389"},{"desc":"3390","fix":"3391"},{"desc":"3276","fix":"3392"},{"desc":"3393","fix":"3394"},{"desc":"3300","fix":"3395"},{"desc":"3302","fix":"3396"},{"desc":"3290","fix":"3397"},{"desc":"3292","fix":"3398"},{"desc":"3290","fix":"3399"},{"desc":"3400","fix":"3401"},{"desc":"3307","fix":"3402"},{"desc":"3309","fix":"3403"},{"desc":"3296","fix":"3404"},{"desc":"3298","fix":"3405"},{"desc":"3317","fix":"3406"},{"desc":"3327","fix":"3407"},{"desc":"3325","fix":"3408"},{"desc":"3335","fix":"3409"},{"desc":"3323","fix":"3410"},{"desc":"3311","fix":"3411"},{"desc":"3313","fix":"3412"},{"desc":"3315","fix":"3413"},{"desc":"3329","fix":"3414"},{"desc":"3331","fix":"3415"},{"desc":"3333","fix":"3416"},{"desc":"3319","fix":"3417"},{"desc":"3321","fix":"3418"},{"desc":"3276","fix":"3419"},{"desc":"3337","fix":"3420"},{"desc":"3319","fix":"3421"},{"desc":"3344","fix":"3422"},{"desc":"3346","fix":"3423"},{"desc":"3342","fix":"3424"},{"desc":"3349","fix":"3425"},{"desc":"3351","fix":"3426"},{"desc":"3353","fix":"3427"},{"desc":"3355","fix":"3428"},{"desc":"3357","fix":"3429"},{"desc":"3359","fix":"3430"},{"desc":"3361","fix":"3431"},{"desc":"3363","fix":"3432"},{"desc":"3365","fix":"3433"},{"desc":"3365","fix":"3434"},{"desc":"3368","fix":"3435"},{"desc":"3349","fix":"3436"},{"desc":"3349","fix":"3437"},{"desc":"3368","fix":"3438"},{"desc":"3373","fix":"3439"},{"desc":"3340","fix":"3440"},{"desc":"3377","fix":"3441"},{"desc":"3375","fix":"3442"},{"desc":"3379","fix":"3443"},{"desc":"3381","fix":"3444"},{"desc":"3445","fix":"3446"},"Update the dependencies array to be: [dispatch]",{"range":"3447","text":"3448"},"Update the dependencies array to be: [Auth.isLoggedIn, dispatch]",{"range":"3449","text":"3450"},"Update the dependencies array to be: [CodeEvent.Code, CodeEvent.Maincode, dispatch, props.location.pathname]",{"range":"3451","text":"3452"},{"range":"3453","text":"3448"},"Update the dependencies array to be: [Notifications, props]",{"range":"3454","text":"3455"},"Update the dependencies array to be: [Auth.Name, maincode, props.match.params.id]",{"range":"3456","text":"3457"},"Update the dependencies array to be: [addAnEvent]",{"range":"3458","text":"3459"},{"range":"3460","text":"3448"},"Update the dependencies array to be: [MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",{"range":"3461","text":"3462"},"Update the dependencies array to be: [Auth.Phone, Eventdata, evno, props]",{"range":"3463","text":"3464"},"Update the dependencies array to be: [MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.event, props.match.params.id]",{"range":"3465","text":"3466"},"Update the dependencies array to be: [Auth.Phone, Eventdata, MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",{"range":"3467","text":"3468"},"Update the dependencies array to be: [Eventdata, images]",{"range":"3469","text":"3470"},"Update the dependencies array to be: [Auth.isLoggedIn, dispatch, myInvitations, props.match.params.Code, props.match.params.maincode]",{"range":"3471","text":"3472"},"Update the dependencies array to be: [dispatch, props.match.params.Code, props.match.params.Name, props.match.params.maincode]",{"range":"3473","text":"3474"},{"range":"3475","text":"3462"},"Update the dependencies array to be: [MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.id]",{"range":"3476","text":"3477"},"Update the dependencies array to be: [Eventdata, getposts]",{"range":"3478","text":"3479"},"Update the dependencies array to be: [admins, filter]",{"range":"3480","text":"3481"},"Update the dependencies array to be: [getcomments]",{"range":"3482","text":"3483"},"Update the dependencies array to be: [Auth.Phone, props.id, props.showcommment]",{"range":"3484","text":"3485"},"Update the dependencies array to be: [Auth.Phone, props.likeby]",{"range":"3486","text":"3487"},"Update the dependencies array to be: [Eventdata1, Eventdata2, props.location.pathname, props.match.params.id]",{"range":"3488","text":"3489"},"Update the dependencies array to be: [Auth.Phone, props.Eventdata]",{"range":"3490","text":"3491"},"Update the dependencies array to be: [Auth.Phone, props.RSVPList, showicon]",{"range":"3492","text":"3493"},"Update the dependencies array to be: [MyEvents, myInvitations, props.location.pathname, props.match.params.id, props.match.params.invno]",{"range":"3494","text":"3495"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.invno, Eventdata, Auth.Phone]",{"range":"3496","text":"3497"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Eventdata, Auth.Phone, ishost]",{"range":"3498","text":"3499"},"Update the dependencies array to be: [grabdata]",{"range":"3500","text":"3501"},"Update the dependencies array to be: [Eventdata, selectedEvent]",{"range":"3502","text":"3503"},"Update the dependencies array to be: [Filetype, Fileurl, selectedEvent, uploadfile]",{"range":"3504","text":"3505"},"Update the dependencies array to be: [MyEvents, dispatch, props.match.params.eid, props.match.params.id]",{"range":"3506","text":"3507"},"Update the dependencies array to be: [Auth.isExpired, dispatch]",{"range":"3508","text":"3509"},{"range":"3510","text":"3448"},"Update the dependencies array to be: [Auth.Phone]",{"range":"3511","text":"3512"},"Update the dependencies array to be: [Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",{"range":"3513","text":"3514"},"Update the dependencies array to be: [props.Phone]",{"range":"3515","text":"3516"},"Update the dependencies array to be: [Auth.Phone, props.Eventdata, props.base]",{"range":"3517","text":"3518"},{"range":"3519","text":"3491"},"Update the dependencies array to be: [props]",{"range":"3520","text":"3521"},"Update the dependencies array to be: [props.MainCode, props.url]",{"range":"3522","text":"3523"},"Update the dependencies array to be: [Auth.Phone, props.LikeList]",{"range":"3524","text":"3525"},"Update the dependencies array to be: [props.currentPosts, props.popuptype]",{"range":"3526","text":"3527"},"Update the dependencies array to be: [props.data, props.post]",{"range":"3528","text":"3529"},"Update the dependencies array to be: [Auth.Phone, props]",{"range":"3530","text":"3531"},"Update the dependencies array to be: [props.SelectedGroup._id]",{"range":"3532","text":"3533"},"Update the dependencies array to be: [props.SelectedGroup.chats, props.IsSubmit, props]",{"range":"3534","text":"3535"},"Update the dependencies array to be: [AllGroups, props.MainCode]",{"range":"3536","text":"3537"},{"range":"3538","text":"3537"},"Update the dependencies array to be: [props.Events, props.SelectedEvent]",{"range":"3539","text":"3540"},{"range":"3541","text":"3521"},{"range":"3542","text":"3521"},{"range":"3543","text":"3540"},"Update the dependencies array to be: [CurrentEventDetails, props, props.SelectedEvent]",{"range":"3544","text":"3545"},"Update the dependencies array to be: [codescpy, props.Events, props.code.length, show, usercodecpy]",{"range":"3546","text":"3547"},"Update the dependencies array to be: [props, props.participants]",{"range":"3548","text":"3549"},"Update the dependencies array to be: [props.CurrentEventDetails.location]",{"range":"3550","text":"3551"},"Update the dependencies array to be: [props.CurrentEventDetails]",{"range":"3552","text":"3553"},"Update the dependencies array to be: [OneSignal]",{"range":"3554","text":"3555"},{"range":"3556","text":"3448"},{"range":"3557","text":"3450"},{"range":"3558","text":"3457"},{"range":"3559","text":"3448"},{"range":"3560","text":"3459"},"Update the dependencies array to be: [CodeEvent.Code, CodeEvent.Name, dispatch, props.location.pathname]",{"range":"3561","text":"3562"},{"range":"3563","text":"3448"},"Update the dependencies array to be: [myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.event]",{"range":"3564","text":"3565"},{"range":"3566","text":"3472"},{"range":"3567","text":"3474"},{"range":"3568","text":"3462"},{"range":"3569","text":"3464"},{"range":"3570","text":"3462"},"Update the dependencies array to be: [MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",{"range":"3571","text":"3572"},{"range":"3573","text":"3479"},{"range":"3574","text":"3481"},{"range":"3575","text":"3468"},{"range":"3576","text":"3470"},{"range":"3577","text":"3489"},{"range":"3578","text":"3499"},{"range":"3579","text":"3497"},{"range":"3580","text":"3507"},{"range":"3581","text":"3495"},{"range":"3582","text":"3483"},{"range":"3583","text":"3485"},{"range":"3584","text":"3487"},{"range":"3585","text":"3501"},{"range":"3586","text":"3503"},{"range":"3587","text":"3505"},{"range":"3588","text":"3491"},{"range":"3589","text":"3493"},{"range":"3590","text":"3448"},{"range":"3591","text":"3509"},{"range":"3592","text":"3491"},{"range":"3593","text":"3516"},{"range":"3594","text":"3518"},{"range":"3595","text":"3514"},{"range":"3596","text":"3521"},{"range":"3597","text":"3523"},{"range":"3598","text":"3525"},{"range":"3599","text":"3527"},{"range":"3600","text":"3529"},{"range":"3601","text":"3531"},{"range":"3602","text":"3533"},{"range":"3603","text":"3535"},{"range":"3604","text":"3537"},{"range":"3605","text":"3537"},{"range":"3606","text":"3540"},{"range":"3607","text":"3521"},{"range":"3608","text":"3521"},{"range":"3609","text":"3540"},{"range":"3610","text":"3545"},{"range":"3611","text":"3512"},{"range":"3612","text":"3549"},{"range":"3613","text":"3547"},{"range":"3614","text":"3551"},{"range":"3615","text":"3553"},"Update the dependencies array to be: [Months, props.Date]",{"range":"3616","text":"3617"},[1202,1204],"[dispatch]",[1512,1529],"[Auth.isLoggedIn, dispatch]",[1466,1468],"[CodeEvent.Code, CodeEvent.Maincode, dispatch, props.location.pathname]",[1726,1728],[753,755],"[Notifications, props]",[2501,2503],"[Auth.Name, maincode, props.match.params.id]",[7245,7247],"[addAnEvent]",[1742,1744],[1487,1512],"[MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",[2336,2347],"[Auth.Phone, Eventdata, evno, props]",[1526,1528],"[MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.event, props.match.params.id]",[4033,4058],"[Auth.Phone, Eventdata, MyEvents, dispatch, myInvitations, props.location.pathname, props.match.params.id]",[4530,4541],"[Eventdata, images]",[2305,2322],"[Auth.isLoggedIn, dispatch, myInvitations, props.match.params.Code, props.match.params.maincode]",[3387,3389],"[dispatch, props.match.params.Code, props.match.params.Name, props.match.params.maincode]",[1842,1867],[4291,4316],"[MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.id]",[7927,7938],"[Eventdata, getposts]",[8041,8049],"[admins, filter]",[1937,1939],"[getcomments]",[3535,3555],"[Auth.Phone, props.id, props.showcommment]",[6274,6276],"[Auth.Phone, props.likeby]",[1577,1579],"[Eventdata1, Eventdata2, props.location.pathname, props.match.params.id]",[3428,3445],"[Auth.Phone, props.Eventdata]",[12551,12567],"[Auth.Phone, props.RSVPList, showicon]",[5414,5424],"[MyEvents, myInvitations, props.location.pathname, props.match.params.id, props.match.params.invno]",[4837,4862],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.invno, Eventdata, Auth.Phone]",[2386,2411],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, Eventdata, Auth.Phone, ishost]",[5918,5920],"[grabdata]",[7681,7696],"[Eventdata, selectedEvent]",[13068,13077],"[Filetype, Fileurl, selectedEvent, uploadfile]",[3927,3937],"[MyEvents, dispatch, props.match.params.eid, props.match.params.id]",[2137,2153],"[Auth.isExpired, dispatch]",[1489,1491],[1694,1696],"[Auth.Phone]",[1611,1644],"[Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",[884,886],"[props.Phone]",[1210,1227],"[Auth.Phone, props.Eventdata, props.base]",[1291,1308],[2540,2542],"[props]",[1050,1061],"[props.MainCode, props.url]",[8881,8883],"[Auth.Phone, props.LikeList]",[1149,1151],"[props.currentPosts, props.popuptype]",[1290,1302],"[props.data, props.post]",[2385,2387],"[Auth.Phone, props]",[2772,2774],"[props.SelectedGroup._id]",[2838,2881],"[props.SelectedGroup.chats, props.IsSubmit, props]",[1933,1935],"[AllGroups, props.MainCode]",[2150,2161],[1863,1979],"[props.Events, props.SelectedEvent]",[2224,2226],[993,995],[2263,2265],[3061,3082],"[CurrentEventDetails, props, props.SelectedEvent]",[1124,1130],"[codescpy, props.Events, props.code.length, show, usercodecpy]",[680,700],"[props, props.participants]",[4009,4011],"[props.CurrentEventDetails.location]",[5168,5170],"[props.CurrentEventDetails]",[2415,2417],"[OneSignal]",[1215,1217],[1522,1539],[2808,2810],[1742,1744],[7245,7247],[1500,1502],"[CodeEvent.Code, CodeEvent.Name, dispatch, props.location.pathname]",[1728,1730],[2027,2052],"[myInvitations, MyEvents, dispatch, props.location.pathname, props.match.params.id, props.match.params.event]",[2413,2430],[3511,3513],[1515,1540],[2394,2405],[1935,1960],[4447,4472],"[MyEvents, dispatch, getposts, guestlist, myInvitations, props.location.pathname, props.match.params.MainCode, props.match.params.id]",[8165,8176],[8284,8292],[4110,4135],[4626,4637],[1612,1614],[2461,2486],[4940,4965],[4013,4023],[5580,5590],[2008,2010],[3666,3686],[6505,6507],[6076,6078],[7894,7909],[13411,13420],[3677,3694],[13570,13586],[1531,1533],[2067,2083],[1380,1397],[909,911],[1334,1351],[1611,1644],[2600,2602],[1078,1089],[9047,9049],[1157,1159],[1323,1335],[2470,2472],[2870,2872],[2939,2982],[1999,2001],[2225,2236],[1918,2038],[2298,2300],[1020,1022],[2324,2326],[3136,3157],[1694,1696],[703,723],[1157,1163],[4241,4243],[5443,5445],[945,957],"[Months, props.Date]"]